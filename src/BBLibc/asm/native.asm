; This file was automatically generated by process_asm.py
; and should not be edited.
;File: BBLibc.dll
;Path: Bin
;Size: 311 336
;Type: PE
;Base Of Code: 00001000, Code Size: 00041000
;Base Of Data: 00042000, Data Size: 0000C000
;Image Base: 10000000
;Entry Point: 1004175F
;
;Sections:
;
;   Name   | VirtAddr | VirtSize |  Offset  | PhysSize |  Flags   | Code
;----------+----------+----------+----------+----------+----------+------
; .text    | 10001000 | 000408E2 | 00001000 | 00041000 | 60000020 |  Yes
; .rdata   | 10042000 | 0000459D | 00042000 | 00005000 | 40000040 |  
; .data    | 10047000 | 00004F88 | 00047000 | 00003000 | C0000040 |  
; .reloc   | 1004C000 | 0000159A | 0004A000 | 00002000 | 42000040 |  
;
;Section .text
;
;* Call:
; 100020DA 
;
;* Export: ?ResetnOpenedFiles@B_IDataFile@@SAXXZ, 0100
;
           call l10001000; Implemented in c++ code
;
;* Call:
; 100020C6 
;
;* Export: ?GetnOpenedFiles@B_IDataFile@@SAHXZ, 00D2
;
           call l1000100F; Implemented in c++ code
;
;* Call:
; 100020D0 
;
;* Export: ?GetnOpenFiles@B_IDataFile@@SAHXZ, 00D0
;
           call l10001019; Implemented in c++ code
;
;* Call:
; 100020E8 
;
;* Export: ?SetOnOpenFunc@B_IDataFile@@SAHPAUPyObject@@@Z, 0112
;
           call l10001023; Implemented in c++ code
;
;* Call:
; 100020F5 
;
;* Export: ?RemoveOnOpenFunc@B_IDataFile@@SAXXZ, 00FE
;
           call l10001096; Implemented in c++ code
;
l100010E4 PROC
           push ebp
           mov ebp, esp
           call l100010F3
           call l10001205
           pop ebp
           ret
l100010E4 ENDP
;
;* Call:
; 100010E7 
;
l100010F3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
;
;* String: "../../anm/"
;
           mov dword ptr [g10049EF4], offset g10047040
           mov dword ptr [g10049EEC], 0FFFFFFFFh
           push 000008000h
;
;* String: "../anm/anm.bld"
;
           push offset g1004704C
           call [__imp__open]; [BICRT._open].
           add esp, 000000008h
           mov dword ptr [g10049EE8], eax
           cmp dword ptr [g10049EE8], 0FFFFFFFFh
           jne l10001133
           jmp near ptr l10001201
;
;* Jump:
; 1000112C(C) 
;
l10001133: push 000000012h
           lea eax, [ebp-014h]
           push eax
           mov ecx, dword ptr [g10049EE8]
           push ecx
           call [__imp__read]; [BICRT._read].
           add esp, 00000000Ch
;
;* String: "Blade Pack File"
;
           mov dword ptr [ebp-018h], offset g100471F8
           lea edx, [ebp-014h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10001188(C) 
;
l10001156: mov eax, dword ptr [ebp-01Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-01Dh], cl
           mov edx, dword ptr [ebp-018h]
           cmp cl, byte ptr [edx]
           jne l10001193
           cmp byte ptr [ebp-01Dh], 000h
           je l1000118A
           mov eax, dword ptr [ebp-01Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-01Eh], cl
           mov edx, dword ptr [ebp-018h]
           cmp cl, byte ptr [edx+001h]
           jne l10001193
           add dword ptr [ebp-01Ch], 000000002h
           add dword ptr [ebp-018h], 000000002h
           cmp byte ptr [ebp-01Eh], 000h
           jne l10001156
;
;* Jump:
; 10001169(C) 
;
l1000118A: mov dword ptr [ebp-024h], 000000000h
           jmp l1000119B
;
;* Jump:
; 10001163(C), 1000117A(C) 
;
l10001193: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10001191(U) 
;
l1000119B: mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000000h
           je l100011BC
           push 000000052h
;
;* String: "C:\code\GDS\../pak/pak.h"
;
           push offset g100471DC
;
;* String: "strcmp(ph.MagicWord,PAK_MAGIC_WORD)==0"
;
           push offset g100471B4
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 100011A5(C) 
;
l100011BC: mov eax, dword ptr [ebp-004h]
           and eax, 00000FFFFh
           mov dword ptr [g10049EE0], eax
           mov ecx, dword ptr [g10049EE0]
           imul ecx, ecx, 000000048h
           push ecx
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           mov dword ptr [g10049EE4], eax
           mov edx, dword ptr [g10049EE0]
           imul edx, edx, 000000048h
           push edx
           mov eax, dword ptr [g10049EE4]
           push eax
           mov ecx, dword ptr [g10049EE8]
           push ecx
           call [__imp__read]; [BICRT._read].
           add esp, 00000000Ch
;
;* Jump:
; 1000112E(U) 
;
l10001201: mov esp, ebp
           pop ebp
           ret
l100010F3 ENDP
;
;* Call:
; 100010EC 
;
l10001205 PROC
           push ebp
           mov ebp, esp
           push offset l10001217
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l10001205 ENDP
;
l10001217 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], 000000001h
           mov dword ptr [ebp-008h], 00000001Ch
           mov dword ptr [ebp-004h], offset g10049EE0
           mov eax, dword ptr [ebp-008h]
           imul eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10001282(U) 
;
l10001241: mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l10001284
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+008h], 0FFFFFFFFh
           je l10001282
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           push eax
           call [__imp__close]; [BICRT._close].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_free]; [BICRT.free].
           add esp, 000000004h
;
;* Jump:
; 10001260(C) 
;
l10001282: jmp l10001241
;
;* Jump:
; 1000124E(C) 
;
l10001284: mov esp, ebp
           pop ebp
           ret
l10001217 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push edi
           mov edi, dword ptr [ebp+008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l100012B3
;
;* Jump:
; 100014C6(U) 
;
l100012AA: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100012A8(U) 
;
l100012B3: cmp dword ptr [ebp-004h], 000000001h
           jnl l100014CB
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 00000001Ch
           add ecx, offset g10049EE0
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov edi, dword ptr [edx+014h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-010h]
           jle l100014C6
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           call [__imp__memicmp]; [BICRT._memicmp].
           add esp, 00000000Ch
           test eax, eax
           jne l100014C6
           mov edx, dword ptr [ebp+008h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], edx
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+008h], 0FFFFFFFFh
           jne l10001331
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 0FFFFFFFFh
           jmp near ptr l10001421
;
;* Jump:
; 10001320(C) 
;
l10001331: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           sub ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           cmp dword ptr [ebp-020h], 000000000h
           jnl l1000134E
           mov dword ptr [ebp-024h], 0FFFFFFFFh
           jmp near ptr l10001418
;
;* Jump:
; 10001340(C) 
;
l1000134E: mov eax, dword ptr [ebp-020h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           imul ecx, ecx, 000000048h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           push edx
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000048h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           add edx, eax
           push edx
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           test eax, eax
           jne l100013A6
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-024h], eax
           jmp l10001418
;
;* Jump:
; 1000139C(C) 
;
l100013A6: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           push edx
           xor eax, eax
           imul eax, eax, 000000048h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           add edx, eax
           push edx
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           test eax, eax
           jne l100013D1
           mov dword ptr [ebp-024h], 000000000h
           jmp l10001418
;
;* Jump:
; 100013C6(C) 
;
l100013D1: cmp dword ptr [ebp-018h], 000000000h
           jne l100013DF
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-024h], eax
           jmp l10001418
;
;* Jump:
; 100013D5(C) 
;
l100013DF: cmp dword ptr [ebp-018h], 000000000h
           jle l100013FF
           mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           push ecx
           xor edx, edx
           add edx, 000000001h
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10002100
           mov dword ptr [ebp-024h], eax
           jmp l10001418
;
;* Jump:
; 100013E3(C) 
;
l100013FF: mov eax, dword ptr [ebp-020h]
           sub eax, 000000001h
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10002100
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10001349(U), 100013A4(U), 100013CF(U), 100013DD(U), 100013FD(U) 
;
l10001418: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 1000132C(U) 
;
l10001421: mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+00Ch], 0FFFFFFFFh
           jne l1000143C
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx], 0FFFFFFFFh
           mov dword ptr [ebp-014h], 0FFFFFFFFh
           jmp l100014B3
;
;* Jump:
; 10001428(C) 
;
l1000143C: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000048h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000048h
           mov edx, dword ptr [ebp-008h]
           mov edx, dword ptr [edx+004h]
           mov eax, dword ptr [edx+eax+040h]
           lea ecx, [ecx+eax+012h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+00Ch], 0FFFFFFFFh
           jne l10001473
           mov dword ptr [ebp-028h], 000000000h
           jmp l10001495
;
;* Jump:
; 10001468(C) 
;
l10001473: push 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           call [__imp__lseek]; [BICRT._lseek].
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10001471(U) 
;
l10001495: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           imul ecx, ecx, 000000048h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [eax+ecx+044h]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1000143A(U) 
;
l100014B3: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx], eax
           cmp dword ptr [ebp-014h], 0FFFFFFFFh
           je l100014C6
           mov eax, dword ptr [ebp-008h]
           jmp l100014CD
;
;* Jump:
; 100012E7(C), 10001307(C), 100014BF(C) 
;
l100014C6: jmp near ptr l100012AA
;
;* Jump:
; 100012B7(C) 
;
l100014CB: xor eax, eax
;
;* Jump:
; 100014C4(U) 
;
l100014CD: pop edi
           mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 10001C3B 
;
;* Export: ?Close@B_IDataFile@@QAEXXZ, 00A7
;
           call l100014D2; Implemented in c++ code
;
;* Call:
; 100017B4 
;
;* Export: ?Open@B_IDataFile@@QAEXPBDH@Z, 00F0
;
           call l100015E2; Implemented in c++ code
;
;* Export: ??0B_IDataFile@@QAE@XZ, 000E
;
l10001740 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00000400Ch], 0FFFFC000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+000004010h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000004014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10001740 ENDP
;
;* Call:
; 1000447E, 10004E5F, 10006490, 10027DA8 
;
;* Export: ??0B_IDataFile@@QAE@PBDH@Z, 000D
;
l10001788 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00000400Ch], 0FFFFC000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000004010h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l100015E2
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10001788 ENDP
;
;* Call:
; 10001735, 10001992, 10001B31 
;
;* Export: ?ReadCacheBlock@B_IDataFile@@AAEIXZ, 00F7
;
l100017C2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           cmp dword ptr [eax], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           je l1000187C
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00000400Ch]
           add eax, 000004000h
           mov ecx, dword ptr [ebp-004h]
           cmp eax, dword ptr [ecx+008h]
           jnb l1000187C
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           sub ecx, dword ptr [eax+00000400Ch]
           sub ecx, 000004000h
           cmp ecx, 000004000h
           jbe l1000181E
           mov dword ptr [ebp-008h], 000004000h
           jmp l10001836
;
;* Jump:
; 10001813(C) 
;
l1000181E: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           sub ecx, dword ptr [eax+00000400Ch]
           sub ecx, 000004000h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000181C(U) 
;
l10001836: mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__read]; [BICRT._read].
           add esp, 00000000Ch
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00000400Ch]
           add ecx, 000004000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00000400Ch], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+000004010h], 000000000h
           mov eax, 000000001h
           jmp l1000187E
;
;* Jump:
; 100017D8(C), 100017F2(C) 
;
l1000187C: xor eax, eax
;
;* Jump:
; 1000187A(U) 
;
l1000187E: mov esp, ebp
           pop ebp
           ret
l100017C2 ENDP
;
;* Export: ?Length@B_IDataFile@@QBEJXZ, 00DC
;
           call l10001882; Implemented in c++ code
;
;* Call:
; 100019FD, 1000451E, 100057F1, 10028087, 100289D7, 10028BD3, 10028D8C, 10028E9E, 
; 10028FAF, 10029118, 1002946A, 100294E1 
;
;* Export: ?Seek@B_IDataFile@@QAEJJH@Z, 010B
;
l100018A6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l100018C9
           cmp dword ptr [ebp-010h], 000000001h
           je l100018D1
           cmp dword ptr [ebp-010h], 000000002h
           je l100018E3
           jmp l100018EF
;
;* Jump:
; 100018B9(C) 
;
l100018C9: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], ecx
           jmp l100018EF
;
;* Jump:
; 100018BF(C) 
;
l100018D1: mov ecx, dword ptr [ebp-00Ch]
           call l100019AF
           mov edx, dword ptr [ebp+008h]
           add edx, eax
           mov dword ptr [ebp-004h], edx
           jmp l100018EF
;
;* Jump:
; 100018C5(C) 
;
l100018E3: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100018C7(U), 100018CF(U), 100018E1(U) 
;
l100018EF: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00000400Ch]
           jbe l10001928
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00000400Ch]
           add edx, 000004000h
           cmp dword ptr [ebp-004h], edx
           jnb l10001928
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [eax+00000400Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+000004010h], ecx
           jmp l10001997
;
;* Jump:
; 100018FB(C), 1000190F(C) 
;
l10001928: mov eax, dword ptr [ebp-004h]
           sub eax, 000004000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00000400Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+000004014h], 000000000h
           je l1000197A
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+000004014h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+00Ch], 0FFFFFFFFh
           jne l1000195C
           jmp l10001978
;
;* Jump:
; 10001958(C) 
;
l1000195C: push 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           add ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           push eax
           call [__imp__lseek]; [BICRT._lseek].
           add esp, 00000000Ch
;
;* Jump:
; 1000195A(U) 
;
l10001978: jmp l1000198F
;
;* Jump:
; 10001943(C) 
;
l1000197A: push 000000000h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           push eax
           call [__imp__lseek]; [BICRT._lseek].
           add esp, 00000000Ch
;
;* Jump:
; 10001978(U) 
;
l1000198F: mov ecx, dword ptr [ebp-00Ch]
           call l100017C2
;
;* Jump:
; 10001926(U) 
;
l10001997: mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+00000400Ch]
           mov edx, dword ptr [ebp-00Ch]
           add eax, dword ptr [edx+000004010h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100018A6 ENDP
;
;* Call:
; 100018D4, 10005591, 100057E5, 10028066, 10029403 
;
;* Export: ?Tell@B_IDataFile@@QAEJXZ, 011A
;
l100019AF PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+00000400Ch]
           mov ecx, dword ptr [ebp-004h]
           add eax, dword ptr [ecx+000004010h]
           mov esp, ebp
           pop ebp
           ret
l100019AF ENDP
;
;* Export: ?Peek@B_IDataFile@@QAEEXZ, 00F4
;
l100019CC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__eof]; [BICRT._eof].
           add esp, 000000004h
           test eax, eax
           jne l10001A07
           push 000000001h
           lea edx, [ebp-004h]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10001A33
           push 000000001h
           push 0FFFFFFFFh
           mov ecx, dword ptr [ebp-008h]
           call l100018A6
           mov al, byte ptr [ebp-004h]
           jmp l10001A09
;
;* Jump:
; 100019E6(C) 
;
l10001A07: xor al, al
;
;* Jump:
; 10001A05(U) 
;
l10001A09: mov esp, ebp
           pop ebp
           ret
l100019CC ENDP
;
;* Export: ?Eof@B_IDataFile@@QAEHXZ, 00B2
;
           call l10001A0D; Implemented in c++ code
;
;* Call:
; 100019F1, 10001B48, 10001B61, 10001B77, 10001B8D, 10001BA3, 10001BB9, 10001BCF, 
; 10001BE5, 10001BFB, 10001C11, 10001C27, 1000396F, 10008E07, 10008E8C, 10008ED4, 
; 10008F5F, 10008FA6, 10009670, 10029022, 10030228, 10031E79, 100413D3 
;
;* Export: ?Read@B_IDataFile@@QAEXPAXI@Z, 00F5
;
l10001A33 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           push edi
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+008h]
           sub edx, dword ptr [ecx+000004010h]
           mov eax, dword ptr [ebp-008h]
           sub edx, dword ptr [eax+00000400Ch]
           cmp dword ptr [ebp+00Ch], edx
           jnb l10001A63
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10001A7E
;
;* Jump:
; 10001A59(C) 
;
l10001A63: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+008h]
           sub ecx, dword ptr [eax+000004010h]
           mov edx, dword ptr [ebp-008h]
           sub ecx, dword ptr [edx+00000400Ch]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10001A61(U) 
;
l10001A7E: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp+00Ch], eax
           cmp dword ptr [ebp+00Ch], 000000000h
           jne l10001A8F
           jmp near ptr l10001B4D
;
;* Jump:
; 10001A88(C) 
;
l10001A8F: mov ecx, dword ptr [ebp-008h]
           mov edx, 000004000h
           sub edx, dword ptr [ecx+000004010h]
           cmp dword ptr [ebp+00Ch], edx
           jnb l10001ADD
           mov ecx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+000004010h]
           mov eax, dword ptr [ebp-008h]
           lea esi, [eax+edx+00Ch]
           mov edi, dword ptr [ebp+008h]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+000004010h]
           add ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+000004010h], ecx
           jmp l10001B4D
;
;* Jump:
; 10001AA0(C) 
;
l10001ADD: mov eax, dword ptr [ebp-008h]
           mov ecx, 000004000h
           sub ecx, dword ptr [eax+000004010h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-004h], 000000000h
           je l10001B2E
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+000004010h]
           mov edx, dword ptr [ebp-008h]
           lea esi, [edx+eax+00Ch]
           mov edi, dword ptr [ebp+008h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+000004010h], 000004000h
           mov edx, dword ptr [ebp+00Ch]
           sub edx, dword ptr [ebp-004h]
           mov dword ptr [ebp+00Ch], edx
;
;* Jump:
; 10001AF2(C) 
;
l10001B2E: mov ecx, dword ptr [ebp-008h]
           call l100017C2
           test eax, eax
           je l10001B4D
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [ebp-004h]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10001A33
;
;* Jump:
; 10001A8A(U), 10001ADB(U), 10001B38(C) 
;
l10001B4D: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10001A33 ENDP
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAD@Z, 0050
;
           call l10001B55; Implemented in c++ code
;
;* Call:
; 100091C0, 100091C9, 100091D2, 100289FD, 10028A06, 10028A0F, 10028B03, 10028C9B, 
; 10028E18, 10028F0C, 10028F2A, 100293F6, 10038FF1, 1003D2C4 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAE@Z, 0051
;
           call l10001B6B; Implemented in c++ code
;
;* Call:
; 100285D9, 100285E2, 100286FD 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAF@Z, 0052
;
           call l10001B81; Implemented in c++ code
;
;* Call:
; 10004058, 100055A1, 10028076, 100285C7, 10028645, 100286A3, 1002872B, 1002886D, 
; 1002889B, 100288C9, 100288F7 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAG@Z, 0053
;
           call l10001B97; Implemented in c++ code
;
;* Call:
; 10031F63, 10032180, 10032189, 100325A1, 1003281C, 1003289E 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAH@Z, 0054
;
           call l10001BAD; Implemented in c++ code
;
;* Call:
; 10028672, 100286CF 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAJ@Z, 0056
;
           call l10001BC3; Implemented in c++ code
;
;* Call:
; 10004068, 100055B1, 10008D07, 100285D0, 100285EB, 10028610, 10028759, 10028787, 
; 100287B5, 100287E3, 10028811, 1002883F, 10028925, 10028953, 1002897E, 100289A9, 
; 100323B7, 10036413, 100390E4, 1003D3BA, 10041272 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAK@Z, 0057
;
           call l10001BD9; Implemented in c++ code
;
;* Call:
; 10003912, 10004078, 10005568, 100055C1, 100064D0, 10006510, 10008D10, 10008D19, 
; 100320AB, 100322E3, 100322EC, 100322F5, 10032307, 10032393, 1003239C, 100323A5, 
; 100323E1, 100323EA, 100323F3, 100324D6, 100324DF, 100325B3, 100325BC, 10032619, 
; 1003291D, 100329C6, 10032A56, 100359A8, 10035B33, 10035BFF, 10035FF8, 10036156, 
; 100362EE, 100364CB, 100389E7, 10038BC0, 10038D00, 10038DF7, 10038F42, 1003902F, 
; 10039173, 1003CAAE, 1003CC8A, 1003CE3A, 1003D08A, 1003D248, 1003D338, 1003D48A, 
; 1003D648, 10041260, 100412A1 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAI@Z, 0055
;
           call l10001BEF; Implemented in c++ code
;
;* Call:
; 10009372, 1003100F, 10031018, 10031021, 1003102A, 10032801, 1003280A, 10040DD8, 
; 10040DE1, 10040DEA, 10040DF3, 10040DFC, 10040E05 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAM@Z, 0058
;
           call l10001C05; Implemented in c++ code
;
;* Call:
; 1002A80D, 100313C4, 100322FE, 10039349 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAN@Z, 0059
;
           call l10001C1B; Implemented in c++ code
;
;* Call:
; 100044FC, 1000455C, 100045A5, 10004EA8, 1000503E, 10005268, 10005317, 10005516, 
; 100064B5, 100065FA, 10027DCD, 10027E00 
;
;* Export: ??1B_IDataFile@@QAE@XZ, 0031
;
           call l10001C31; Implemented in c++ code
;
;* Call:
; 10005C8D, 100062F8, 100273A4, 100277B1, 10029903 
;
;* Export: ??0B_ODataFile@@QAE@PBDH@Z, 0020
;
l10001C44 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+000004008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00000400Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__strdup]; [BICRT._strdup].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], eax
           push 000000180h
           mov edx, dword ptr [ebp+00Ch]
           or edx, 000000301h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp__open]; [BICRT._open].
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx], 0FFFFFFFFh
           jne l10001D68
           mov eax, dword ptr [ebp+008h]
           push eax
;
;* String: "Could not write to the file %s.
;          "
;
           push offset g1004705C
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           call [__imp__errno]; [BICRT._errno].
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000002h
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000016h
           ja l10001D56
           mov ecx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [ecx+offset g10001D89]
           jmp [offset g10001D71+eax*04h]
l10001CF2: push offset g10047080
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10001D68
;
;* String: "_O_CREAT and _O_EXCL flags specified, but filename already exists
;          "
;
l10001D06: push offset g100470E4
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10001D68
;
;* String: "Invalid oflag or pmode argument
;          "
;
l10001D1A: push offset g10047128
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10001D68
;
;* String: "No more file handles available (too many open files)
;          "
;
l10001D2E: push offset g1004714C
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10001D68
;
;* String: "File or path not found
;          "
;
l10001D42: push offset g10047184
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10001D68
;
;* Jump:
; 10001CDE(C) 
;
;* String: "Unknown error!!!!!!!!1
;          "
;
l10001D56: push offset g1004719C
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 10001CA1(C), 10001D04(U), 10001D18(U), 10001D2C(U), 10001D40(U), 
; 10001D54(U) 
;
l10001D68: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
g10001D71  dd l10001D42
           dd l10001CF2
           dd l10001D06
           dd l10001D1A
           dd l10001D2E
           dd l10001D56
g10001D89  dd 005050500h
           dd 005050505h
           dd 001050505h
           dd 002050505h
           dd 005050505h
           db 003h
           db 005h
           db 004h
l10001C44 ENDP
;
;* Call:
; 10001F3E, 1000206A, 100020AB 
;
;* Export: ?WriteCacheBlock@B_ODataFile@@AAEXXZ, 011D
;
l10001DA0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00000400Ch], 000000000h
           jne l10001DB5
           jmp l10001DFD
;
;* Jump:
; 10001DB1(C) 
;
l10001DB5: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00000400Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__write]; [BICRT._write].
           add esp, 00000000Ch
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000004008h]
           mov edx, dword ptr [ebp-004h]
           add ecx, dword ptr [edx+00000400Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+000004008h], ecx
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00000400Ch], 000000000h
;
;* Jump:
; 10001DB3(U) 
;
l10001DFD: mov esp, ebp
           pop ebp
           ret
l10001DA0 ENDP
;
;* Export: ?Seek@B_ODataFile@@QAEJJ@Z, 010C
;
l10001E01 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+000004008h]
           jbe l10001E40
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+000004008h]
           add eax, 000004000h
           cmp dword ptr [ebp+008h], eax
           jnb l10001E40
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           sub edx, dword ptr [ecx+000004008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00000400Ch], edx
           jmp l10001E6E
;
;* Jump:
; 10001E14(C), 10001E27(C) 
;
l10001E40: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000004008h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00000400Ch], 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           push eax
           call [__imp__lseek]; [BICRT._lseek].
           add esp, 00000000Ch
;
;* Jump:
; 10001E3E(U) 
;
l10001E6E: mov ecx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+000004008h]
           mov edx, dword ptr [ebp-004h]
           add eax, dword ptr [edx+00000400Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10001E01 ENDP
;
;* Call:
; 10001F51, 10001F6A, 10001F8F, 10001FA6, 10001FBC, 10001FD2, 10001FE8, 10001FFE, 
; 10002014, 1000202A, 10002040, 10002056, 100039B0, 10008BCE, 10008C03, 10008C24, 
; 10008C59, 10008C7B, 10009689, 10027730, 1002774C, 10027B47, 10027B63, 10027D27, 
; 10027D43, 1002831A, 10028330, 10030241, 10031E8F, 10041480 
;
;* Export: ?Write@B_ODataFile@@QAEXPBXI@Z, 011C
;
l10001E86 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           push edi
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jne l10001E9C
           jmp near ptr l10001F56
;
;* Jump:
; 10001E95(C) 
;
l10001E9C: mov eax, dword ptr [ebp-008h]
           mov ecx, 000004000h
           sub ecx, dword ptr [eax+00000400Ch]
           cmp dword ptr [ebp+00Ch], ecx
           jnb l10001EEA
           mov ecx, dword ptr [ebp+00Ch]
           mov esi, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00000400Ch]
           mov edx, dword ptr [ebp-008h]
           lea edi, [edx+eax+008h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00000400Ch]
           add edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00000400Ch], edx
           jmp l10001F56
;
;* Jump:
; 10001EAD(C) 
;
l10001EEA: mov ecx, dword ptr [ebp-008h]
           mov edx, 000004000h
           sub edx, dword ptr [ecx+00000400Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l10001F3B
           mov ecx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+00000400Ch]
           mov eax, dword ptr [ebp-008h]
           lea edi, [eax+edx+008h]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00000400Ch], 000004000h
           mov ecx, dword ptr [ebp+00Ch]
           sub ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp+00Ch], ecx
;
;* Jump:
; 10001EFF(C) 
;
l10001F3B: mov ecx, dword ptr [ebp-008h]
           call l10001DA0
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           add eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10001E86
;
;* Jump:
; 10001E97(U), 10001EE8(U) 
;
l10001F56: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10001E86 ENDP
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABD@Z, 0062
;
           call l10001F5E; Implemented in c++ code
;
;* Call:
; 10029A3D 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@PBD@Z, 0072
;
l10001F74 PROC
           push ebp
           mov ebp, esp
           push edi
           mov edi, dword ptr [ebp+00Ch]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           push ecx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop ebp
           ret
l10001F74 ENDP
;
;* Call:
; 100091FB, 10009204, 1000920D, 10027523, 1002752C, 10027535, 10027924, 1002792D, 
; 10027936, 100281BF, 100281C8, 100281D1, 10036D51, 10038692 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABE@Z, 0063
;
           call l10001F9A; Implemented in c++ code
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABF@Z, 0064
;
           call l10001FB0; Implemented in c++ code
;
;* Call:
; 10003F43, 10027432, 10027444, 1002744D, 100274CF, 100274D8, 100274E1, 100274EA, 
; 1002783F, 10027851, 1002785A, 100278D0, 100278D9, 100278E2, 100278EB, 1002810A, 
; 1002811C, 10028125, 10028180, 10028189, 10028192, 1002819B 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABG@Z, 0065
;
           call l10001FC6; Implemented in c++ code
;
;* Call:
; 10031F3B, 10031FEB, 10031FF4, 10032767, 10032864, 100328E3 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABH@Z, 0066
;
           call l10001FDC; Implemented in c++ code
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABJ@Z, 0068
;
           call l10001FF2; Implemented in c++ code
;
;* Call:
; 10003F61, 10008B76, 1002743B, 10027456, 100274C6, 10027848, 10027863, 100278C7, 
; 10028113, 1002812E, 10028177, 1003246B, 10036C51, 10036DA5, 100386E6, 10041451 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABK@Z, 0069
;
           call l10002008; Implemented in c++ code
;
;* Call:
; 10003998, 10003F7F, 1000634B, 100063B9, 1000641C, 10008B7F, 10008B88, 10031F9C, 
; 1003233B, 10032344, 1003234D, 1003235F, 10032447, 10032450, 10032459, 10032495, 
; 1003249E, 100324A7, 1003250E, 10032517, 10032779, 10032782, 10032798, 10032975, 
; 10032A0E, 10032A9E, 10036A43, 10036A99, 10036AEF, 10036B5E, 10036BB2, 10036C09, 
; 10036C73, 10036CCA, 10036D1E, 10036D6F, 10036DC6, 1003850B, 1003855F, 100385B5, 
; 1003860B, 1003865F, 100386B0, 10038707, 1003875D, 100387B6, 1003880C, 10038863, 
; 100388BA, 1004143F, 10041464 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABI@Z, 0067
;
           call l1000201E; Implemented in c++ code
;
;* Call:
; 1000939A, 100310CF, 100310D8, 100310E1, 100310EA, 10032849, 10032852, 10040EFD, 
; 10040F06, 10040F0F, 10040F18, 10040F21, 10040F2A 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABM@Z, 006A
;
           call l10002034; Implemented in c++ code
;
;* Call:
; 1002A835, 100313EF, 10032356, 10038940 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABN@Z, 006B
;
           call l1000204A; Implemented in c++ code
;
;* Call:
; 10029A4B 
;
;* Export: ?Flush@B_ODataFile@@QAEXXZ, 00B5
;
l10002060 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10001DA0
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__commit]; [BICRT._commit].
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l10002060 ENDP
;
;* Call:
; 10005CB8, 1000631D, 10006439, 100273C9, 100275AC, 1002777E, 100277D6, 100279A1, 
; 10027D75, 10029980 
;
;* Export: ??1B_ODataFile@@QAE@XZ, 0038
;
l10002082 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           call [__imp_free]; [BICRT.free].
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           cmp dword ptr [edx], 0FFFFFFFFh
           setne al
           test eax, eax
           je l100020BF
           mov ecx, dword ptr [ebp-004h]
           call l10001DA0
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__close]; [BICRT._close].
           add esp, 000000004h
;
;* Jump:
; 100020A6(C) 
;
l100020BF: mov esp, ebp
           pop ebp
           ret
l10002082 ENDP
;
;* Call:
; 1003E982 
;
;* Export: ?GetnOpenedInputFiles@@YAHXZ, 00D3
;
l100020C3 PROC
           push ebp
           mov ebp, esp
           call l1000100F
           pop ebp
           ret
l100020C3 ENDP
;
;* Call:
; 1003E9CC 
;
;* Export: ?GetnOpenInputFiles@@YAHXZ, 00D1
;
l100020CD PROC
           push ebp
           mov ebp, esp
           call l10001019
           pop ebp
           ret
l100020CD ENDP
;
;* Call:
; 1003EA14 
;
;* Export: ?ResetnOpenedInputFiles@@YAXXZ, 0101
;
l100020D7 PROC
           push ebp
           mov ebp, esp
           call l10001000
           pop ebp
           ret
l100020D7 ENDP
;
;* Call:
; 1003EA91 
;
;* Export: ?SetOnOpenInputFileFunc@@YAHPAUPyObject@@@Z, 0113
;
l100020E1 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001023
           add esp, 000000004h
           pop ebp
           ret
l100020E1 ENDP
;
;* Call:
; 1003EADC 
;
;* Export: ?RemoveOnOpenInputFileFunc@@YAXXZ, 00FF
;
l100020F2 PROC
           push ebp
           mov ebp, esp
           call l10001096
           pop ebp
           ret
l100020F2 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100013F5, 10001410, 100021BB, 100021D3 
;
l10002100 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp+008h]
           cmp eax, dword ptr [ebp+00Ch]
           jle l10002119
           or eax, 0FFFFFFFFh
           jmp near ptr l100021D8
;
;* Jump:
; 1000210F(C) 
;
l10002119: mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp+008h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           push edx
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 000000048h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           add edx, eax
           push edx
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           imul edx, edx, 000000048h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           add ecx, edx
           push ecx
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           test eax, eax
           jne l10002171
           mov eax, dword ptr [ebp+00Ch]
           jmp l100021D8
;
;* Jump:
; 1000216A(C) 
;
l10002171: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           imul ecx, ecx, 000000048h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           test eax, eax
           jne l10002199
           mov eax, dword ptr [ebp+008h]
           jmp l100021D8
;
;* Jump:
; 10002192(C) 
;
l10002199: cmp dword ptr [ebp-004h], 000000000h
           jne l100021A4
           mov eax, dword ptr [ebp-008h]
           jmp l100021D8
;
;* Jump:
; 1000219D(C) 
;
l100021A4: cmp dword ptr [ebp-004h], 000000000h
           jle l100021C2
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           push ecx
           mov edx, dword ptr [ebp+008h]
           add edx, 000000001h
           push edx
           mov ecx, dword ptr [ebp-00Ch]
           call l10002100
           jmp l100021D8
;
;* Jump:
; 100021A8(C) 
;
l100021C2: mov eax, dword ptr [ebp+00Ch]
           sub eax, 000000001h
           push eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           push ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10002100
;
;* Jump:
; 10002114(U), 1000216F(U), 10002197(U), 100021A2(U), 100021C0(U) 
;
l100021D8: mov esp, ebp
           pop ebp
           ret 00008h
l10002100 ENDP
;
           int 03h
           int 03h
;
;* Export: ?OK@B_IDataFile@@QBEIXZ, 00EC
;
           call l100021E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetFileName@B_IDataFile@@QBEPBDXZ, 00BE
;
           call l10002200; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_IDataFile@@QAEAAV0@ABV0@@Z, 0041
;
l10002220 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov edi, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000001006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10002220 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?OK@B_ODataFile@@QBEIXZ, 00ED
;
l10002250 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           cmp dword ptr [eax], 0FFFFFFFFh
           setne cl
           mov eax, ecx
           mov esp, ebp
           pop ebp
           ret
l10002250 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetFileName@B_ODataFile@@QBEPBDXZ, 00BF
;
l10002270 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+004h]
           mov esp, ebp
           pop ebp
           ret
l10002270 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_ODataFile@@QAEAAV0@ABV0@@Z, 0049
;
           call l10002290; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?Id@B_Name@@QBEABV1@XZ, 00D4
;
           call l100022C0; Implemented in c++ code
;
           int 03h
           int 03h
;
;* Export: ??BB_Name@@QBEPBDXZ, 007B
;
           call l100022D0; Implemented in c++ code
;
;* Export: ?Length@B_Name@@QBEIXZ, 00DD
;
           call l100022E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??1B_NamedObj@@UAE@XZ, 0037
;
           call l10002300; Implemented in c++ code
;
           int 03h
;
;* Export: ??0B_NamedObj@@QAE@ABV0@@Z, 001D
;
           call l10002320; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_NamedObj@@QAEAAV0@ABV0@@Z, 0048
;
           call l10002350; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100023B1
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100023A3(C) 
;
l100023B1: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l100023C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l10002447
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 00000000Ch
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10002424(U) 
;
l100023F8: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l10002426
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           jmp l100023F8
;
;* Jump:
; 10002405(C) 
;
l10002426: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1000243F
           mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000004h
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000242E(C) 
;
l1000243F: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l10002474
;
;* Jump:
; 100023D1(C) 
;
l10002447: mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx], offset g1004217C
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000004h
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10002471
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10002463(C) 
;
l10002471: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 10002445(U) 
;
l10002474: mov esp, ebp
           pop ebp
           ret 00004h
l100023C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           imul eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           add ecx, eax
           mov dword ptr [ebp+008h], ecx
;
;* Jump:
; 100024B0(U) 
;
l10002492: mov edx, dword ptr [ebp+010h]
           sub edx, 000000001h
           mov dword ptr [ebp+010h], edx
           cmp dword ptr [ebp+010h], 000000000h
           jl l100024B2
           mov eax, dword ptr [ebp+008h]
           sub eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], eax
           mov ecx, dword ptr [ebp+008h]
           call [ebp+014h]
           jmp l10002492
;
;* Jump:
; 1000249F(C) 
;
l100024B2: pop ebp
           ret 00010h
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_MessageChannel@@QAE@AAVB_Name@@@Z, 0015
;
           call l100024C0; Implemented in c++ code
;
           int 03h
;
;* Export: ??0B_MessageChannel@@QAE@XZ, 0017
;
l100024F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           push offset g10049F08
           lea ecx, [ebp-008h]
           call l10003337
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call l10003A07
           lea ecx, [ebp-008h]
           call l100039BA
           mov ecx, dword ptr [ebp-00Ch]
;
;* String: "@&"
;
           mov dword ptr [ecx], offset g10042180
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l100024F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??8B_MessageChannel@@QBEHABV0@@Z, 0075
;
l10002540 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret 00004h
l10002540 ENDP
;
           int 03h
;
;* Export: ??1B_MessageChannel@@UAE@XZ, 0034
;
           call l10002550; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_MessageChannel@@QAE@ABV0@@Z, 0016
;
           call l10002580; Implemented in c++ code
;
;* Export: ??4B_MessageChannel@@QAEAAV0@ABV0@@Z, 0045
;
           call l100025C0; Implemented in c++ code
;
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
;
;* String: "@&"
;
           mov dword ptr [eax], offset g10042180
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l1000262A
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000261C(C) 
;
l1000262A: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10002640 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l100026D0
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000010h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100026AD(U) 
;
l10002678: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l100026AF
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
;
;* String: "@&"
;
           mov dword ptr [edx], offset g10042180
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           jmp l10002678
;
;* Jump:
; 10002685(C) 
;
l100026AF: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100026C8
           mov edx, dword ptr [ebp-010h]
           sub edx, 000000004h
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100026B7(C) 
;
l100026C8: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l10002706
;
;* Jump:
; 10002651(C) 
;
l100026D0: mov eax, dword ptr [ebp-010h]
;
;* String: "@&"
;
           mov dword ptr [eax], offset g10042180
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000004h
           call l100039BA
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l10002703
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100026F5(C) 
;
l10002703: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 100026CE(U) 
;
l10002706: mov esp, ebp
           pop ebp
           ret 00004h
l10002640 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??1B_MessageManager@@QAE@XZ, 0035
;
l10002710 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10002710 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_MessageManager@@QAEAAV0@ABV0@@Z, 0046
;
           call l10002720; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100028F7, 1003EE79 
;
;* Export: ?GetConfigDirectory@@YAPBDXZ, 00BA
;
l10002740 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push edi
           xor eax, eax
           mov al, byte ptr [g1004A110]
           test eax, eax
           jne l10002899
           push 000000104h
           push offset g1004A00C
           call [__imp__getcwd]; [BICRT._getcwd].
           add esp, 000000008h
           mov edi, offset g1004A00C
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           lea ecx, [ecx+offset g1004A00A]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000279F(U) 
;
l10002780: mov edx, dword ptr [ebp-00Ch]
           movsx eax, byte ptr [edx]
           cmp eax, 00000005Ch
           je l10002796
           mov ecx, dword ptr [ebp-00Ch]
           movsx edx, byte ptr [ecx]
           cmp edx, 00000002Fh
           jne l100027A1
;
;* Jump:
; 10002789(C) 
;
l10002796: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp l10002780
;
;* Jump:
; 10002794(C), 100027C0(U) 
;
l100027A1: mov ecx, dword ptr [ebp-00Ch]
           movsx edx, byte ptr [ecx]
           cmp edx, 00000005Ch
           je l100027C2
           mov eax, dword ptr [ebp-00Ch]
           movsx ecx, byte ptr [eax]
           cmp ecx, 00000002Fh
           je l100027C2
           mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           jmp l100027A1
;
;* Jump:
; 100027AA(C), 100027B5(C) 
;
l100027C2: mov eax, dword ptr [ebp-00Ch]
           mov byte ptr [eax+001h], 000h
           mov edi, offset g1004A00C
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "Maps"
;
           mov ecx, dword ptr [g10047208]
           mov dword ptr [edi], ecx
           mov dl, byte ptr [g1004720C]
           mov byte ptr [edi+004h], dl
           push 000000000h
           push offset g1004A00C
           call [__imp__access]; [BICRT._access].
           add esp, 000000008h
           test eax, eax
           je l1000283F
;
;* Jump:
; 1000281C(U) 
;
l100027FD: mov eax, dword ptr [ebp-00Ch]
           movsx ecx, byte ptr [eax]
           cmp ecx, 00000005Ch
           je l10002813
           mov edx, dword ptr [ebp-00Ch]
           movsx eax, byte ptr [edx]
           cmp eax, 00000002Fh
           jne l1000281E
;
;* Jump:
; 10002806(C) 
;
l10002813: mov ecx, dword ptr [ebp-00Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp l100027FD
;
;* Jump:
; 10002811(C), 1000283D(U) 
;
l1000281E: mov edx, dword ptr [ebp-00Ch]
           movsx eax, byte ptr [edx]
           cmp eax, 00000005Ch
           je l1000283F
           mov ecx, dword ptr [ebp-00Ch]
           movsx edx, byte ptr [ecx]
           cmp edx, 00000002Fh
           je l1000283F
           mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp l1000281E
;
;* Jump:
; 100027FB(C), 10002827(C), 10002832(C) 
;
l1000283F: mov ecx, dword ptr [ebp-00Ch]
           mov byte ptr [ecx+001h], 000h
           mov edi, offset g1004A00C
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "Config"
;
           mov edx, dword ptr [g10047210]
           mov dword ptr [edi], edx
;
;* String: "ig"
;
           mov ax, word ptr [g10047214]
           mov word ptr [edi+004h], ax
           mov cl, byte ptr [g10047216]
           mov byte ptr [edi+006h], cl
           push 000000000h
           push offset g1004A00C
           call [__imp__access]; [BICRT._access].
           add esp, 000000008h
           test eax, eax
           je l10002892
           push offset g1004A00C
           call [__imp__mkdir]; [BICRT._mkdir].
           add esp, 000000004h
;
;* Jump:
; 10002882(C) 
;
l10002892: mov byte ptr [g1004A110], 001h
;
;* Jump:
; 10002750(C) 
;
l10002899: mov edi, offset g1004A00C
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l100028BF
;
;* Jump:
; 100028E0(U) 
;
l100028B6: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100028B4(U) 
;
l100028BF: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-004h]
           jnl l100028E2
           mov ecx, dword ptr [ebp-008h]
           movsx edx, byte ptr [ecx+offset g1004A00C]
           cmp edx, 00000005Ch
           jne l100028E0
           mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax+offset g1004A00C], 02Fh
;
;* Jump:
; 100028D4(C) 
;
l100028E0: jmp l100028B6
;
;* Jump:
; 100028C5(C) 
;
l100028E2: mov eax, offset g1004A00C
           pop edi
           mov esp, ebp
           pop ebp
           ret
l10002740 ENDP
;
;* Call:
; 1003EE2F 
;
;* Export: ?GetCurrentLanguage@@YAPBDXZ, 00BB
;
l100028EC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000100h
           push esi
           push edi
           call l10002740
           mov edi, eax
           lea edx, [ebp-000000100h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea edi, [ebp-000000100h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "/Lang.ini"
;
           mov ecx, dword ptr [g10047218]
           mov dword ptr [edi], ecx
;
;* String: "g.ini"
;
           mov edx, dword ptr [g1004721C]
           mov dword ptr [edi+004h], edx
           mov ax, word ptr [g10047220]
           mov word ptr [edi+008h], ax
           lea ecx, [ebp-000000100h]
           push ecx
           push 000000100h
           push offset g10049F0C
;
;* String: "English"
;
           push offset g10047224
;
;* String: "CurrentLanguage"
;
           push offset g1004722C
;
;* String: "Language"
;
           push offset g1004723C
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           mov eax, offset g10049F0C
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l100028EC ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10002FCA, 10003043, 1000306E 
;
;* Export: ??1B_ListElement@@UAE@XZ, 0033
;
           call l10002980; Implemented in c++ code
;
;* Export: ?DeleteList@B_List@@QAEXI@Z, 00AD
;
l100029AE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           je l100029F0
;
;* Jump:
; 100029CE(U) 
;
l100029BB: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l100029D0
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           call l10002CAC
           jmp l100029BB
;
;* Jump:
; 100029C2(C) 
;
l100029D0: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           jmp l10002A0E
;
;* Jump:
; 100029B9(C) 
;
l100029F0: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
;
;* Jump:
; 100029EE(U) 
;
l10002A0E: mov esp, ebp
           pop ebp
           ret 00004h
l100029AE ENDP
;
;* Export: ?Add@B_List@@QAEIPAVB_ListElement@@@Z, 0093
;
l10002A14 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+008h], 000000000h
           je l10002A51
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+008h], eax
           jmp l10002A63
;
;* Jump:
; 10002A22(C) 
;
l10002A51: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+00Ch], ecx
;
;* Jump:
; 10002A4F(U) 
;
l10002A63: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+004h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], eax
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 00004h
l10002A14 ENDP
;
;* Export: ?AddAfter@B_List@@QAEIPAVB_ListElement@@0@Z, 0095
;
l10002A86 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           cmp ecx, dword ptr [ebp-008h]
           jne l10002AAC
;
;* String: "Error -> Adding element twice.
;          "
;
           push offset g10047248
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 10002A98(C) 
;
l10002AAC: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           cmp eax, dword ptr [edx+00Ch]
           jne l10002AE4
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           jmp l10002B11
;
;* Jump:
; 10002AB5(C) 
;
l10002AE4: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], ecx
;
;* Jump:
; 10002AE2(U) 
;
l10002B11: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 00008h
l10002A86 ENDP
;
;* Export: ?AddBefore@B_List@@QAEIPAVB_ListElement@@0@Z, 0097
;
l10002B34 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+00Ch]
           cmp ecx, dword ptr [eax+008h]
           jne l10002B75
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], ecx
           jmp l10002BA2
;
;* Jump:
; 10002B46(C) 
;
l10002B75: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00Ch], edx
;
;* Jump:
; 10002B73(U) 
;
l10002BA2: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], ecx
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 00008h
l10002B34 ENDP
;
;* Call:
; 100029A5 
;
;* Export: ?Remove@B_List@@QAEIPAVB_ListElement@@I@Z, 00FB
;
l10002BC5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+004h], 000000000h
           jne l10002BDE
           xor eax, eax
           jmp near ptr l10002CA6
;
;* Jump:
; 10002BD5(C) 
;
l10002BDE: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+008h]
           jne l10002BFF
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l10002CAC
           mov eax, 000000001h
           jmp near ptr l10002CA6
;
;* Jump:
; 10002BE7(C) 
;
l10002BFF: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+00Ch]
           jne l10002C20
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l10002D5D
           mov eax, 000000001h
           jmp near ptr l10002CA6
;
;* Jump:
; 10002C08(C) 
;
l10002C20: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+004h], 000000000h
           cmp dword ptr [ebp+00Ch], 000000000h
           je l10002C92
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10002C8B
           push 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax]
           mov dword ptr [ebp-018h], eax
           jmp l10002C92
;
;* Jump:
; 10002C78(C) 
;
l10002C8B: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 10002C66(C), 10002C89(U) 
;
l10002C92: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], edx
           mov eax, 000000001h
;
;* Jump:
; 10002BD9(U), 10002BFA(U), 10002C1B(U) 
;
l10002CA6: mov esp, ebp
           pop ebp
           ret 00008h
l10002BC5 ENDP
;
;* Call:
; 100029C9, 10002BF0 
;
;* Export: ?RemoveFirst@B_List@@QAEPAVB_ListElement@@I@Z, 00FC
;
l10002CAC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+004h], 000000000h
           jne l10002CC5
           xor eax, eax
           jmp near ptr l10002D57
;
;* Jump:
; 10002CBC(C) 
;
l10002CC5: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10002D02
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10002CF3(C) 
;
l10002D02: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000000h
           cmp dword ptr [ebp+008h], 000000000h
           je l10002D54
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l10002D49
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-014h], eax
           jmp l10002D50
;
;* Jump:
; 10002D36(C) 
;
l10002D49: mov dword ptr [ebp-014h], 000000000h
;
;* Jump:
; 10002D47(U) 
;
l10002D50: xor eax, eax
           jmp l10002D57
;
;* Jump:
; 10002D24(C) 
;
l10002D54: mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10002CC0(U), 10002D52(U) 
;
l10002D57: mov esp, ebp
           pop ebp
           ret 00004h
l10002CAC ENDP
;
;* Call:
; 10002C11 
;
;* Export: ?RemoveLast@B_List@@QAEPAVB_ListElement@@I@Z, 00FD
;
l10002D5D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+004h], 000000000h
           jne l10002D76
           xor eax, eax
           jmp near ptr l10002E08
;
;* Jump:
; 10002D6D(C) 
;
l10002D76: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+00Ch]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10002DB3
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [eax+008h], 000000000h
;
;* Jump:
; 10002DA4(C) 
;
l10002DB3: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000000h
           cmp dword ptr [ebp+008h], 000000000h
           je l10002E05
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l10002DFA
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-014h], eax
           jmp l10002E01
;
;* Jump:
; 10002DE7(C) 
;
l10002DFA: mov dword ptr [ebp-014h], 000000000h
;
;* Jump:
; 10002DF8(U) 
;
l10002E01: xor eax, eax
           jmp l10002E08
;
;* Jump:
; 10002DD5(C) 
;
l10002E05: mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10002D71(U), 10002E03(U) 
;
l10002E08: mov esp, ebp
           pop ebp
           ret 00004h
l10002D5D ENDP
;
;* Export: ?GetAt@B_List@@QAEPAVB_ListElement@@I@Z, 00B7
;
l10002E0E PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           cmp ecx, dword ptr [ebp+008h]
           jnb l10002E26
           xor eax, eax
           jmp l10002E57
;
;* Jump:
; 10002E20(C) 
;
l10002E26: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002E41
;
;* Jump:
; 10002E52(U) 
;
l10002E38: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10002E36(U) 
;
l10002E41: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp+008h]
           jnb l10002E54
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-008h], ecx
           jmp l10002E38
;
;* Jump:
; 10002E47(C) 
;
l10002E54: mov eax, dword ptr [ebp-008h]
;
;* Jump:
; 10002E24(U) 
;
l10002E57: mov esp, ebp
           pop ebp
           ret 00004h
l10002E0E ENDP
;
;* Export: ?Exists@B_List@@QAEIPBVB_ListElement@@@Z, 00B4
;
l10002E5D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10002E8D(U) 
;
l10002E6F: cmp dword ptr [ebp-004h], 000000000h
           je l10002E8F
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp+008h]
           jne l10002E84
           mov eax, 000000001h
           jmp l10002E91
;
;* Jump:
; 10002E7B(C) 
;
l10002E84: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-004h], ecx
           jmp l10002E6F
;
;* Jump:
; 10002E73(C) 
;
l10002E8F: xor eax, eax
;
;* Jump:
; 10002E82(U) 
;
l10002E91: mov esp, ebp
           pop ebp
           ret 00004h
l10002E5D ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_ListElement@@QAE@XZ, 0012
;
           call l10002EA0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetList@B_ListElement@@QAEPAVB_List@@XZ, 00C4
;
l10002EE0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+004h]
           mov esp, ebp
           pop ebp
           ret
l10002EE0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetNext@B_ListElement@@QAEPAV1@XZ, 00C5
;
           call l10002F00; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetPrev@B_ListElement@@QAEPAV1@XZ, 00C7
;
           call l10002F20; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_ListElement@@QAE@ABV0@@Z, 0011
;
           call l10002F40; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_ListElement@@QAEAAV0@ABV0@@Z, 0043
;
l10002F80 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10002F80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10002980
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10002FE5
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10002FD7(C) 
;
l10002FE5: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
l10002FF0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l1000306B
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000010h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10003048(U) 
;
l10003028: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l1000304A
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10002980
           jmp l10003028
;
;* Jump:
; 10003035(C) 
;
l1000304A: mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l10003063
           mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10003052(C) 
;
l10003063: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l1000308C
;
;* Jump:
; 10003001(C) 
;
l1000306B: mov ecx, dword ptr [ebp-010h]
           call l10002980
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10003089
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000307B(C) 
;
l10003089: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 10003069(U) 
;
l1000308C: mov esp, ebp
           pop ebp
           ret 00004h
l10002FF0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_List@@QAE@PAVB_ListElement@@@Z, 0010
;
l100030A0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
;
;* String: "P2"
;
           mov dword ptr [eax], offset g10042194
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100030A0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??1B_List@@UAE@XZ, 0032
;
           call l100030E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?nElements@B_List@@QAEIXZ, 011F
;
l10003100 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+004h]
           mov esp, ebp
           pop ebp
           ret
l10003100 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetFirst@B_List@@QAEPAVB_ListElement@@XZ, 00C0
;
l10003120 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+008h]
           mov esp, ebp
           pop ebp
           ret
l10003120 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetLast@B_List@@QAEPAVB_ListElement@@XZ, 00C3
;
l10003140 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+00Ch]
           mov esp, ebp
           pop ebp
           ret
l10003140 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_List@@QAE@ABV0@@Z, 000F
;
l10003160 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp-004h]
;
;* String: "P2"
;
           mov dword ptr [eax], offset g10042194
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10003160 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_List@@QAEAAV0@ABV0@@Z, 0042
;
           call l100031A0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??_FB_List@@QAEXXZ, 0092
;
l100031E0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
;
;* String: "P2"
;
           mov dword ptr [eax], offset g10042194
           mov esp, ebp
           pop ebp
           ret
l100031E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
;
;* String: "P2"
;
           mov dword ptr [eax], offset g10042194
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10003246
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10003238(C) 
;
l10003246: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
l10003250 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l100032CC
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000010h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100032A9(U) 
;
l10003288: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l100032AB
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
;
;* String: "P2"
;
           mov dword ptr [edx], offset g10042194
           jmp l10003288
;
;* Jump:
; 10003295(C) 
;
l100032AB: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l100032C4
           mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000004h
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100032B3(C) 
;
l100032C4: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l100032EE
;
;* Jump:
; 10003261(C) 
;
l100032CC: mov edx, dword ptr [ebp-010h]
;
;* String: "P2"
;
           mov dword ptr [edx], offset g10042194
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l100032EB
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100032DD(C) 
;
l100032EB: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 100032CA(U) 
;
l100032EE: mov esp, ebp
           pop ebp
           ret 00004h
l10003250 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100039F2, 10004E46, 10005547, 1003DCBD, 10040D61, 10041245 
;
;* Export: ??0B_Name@@QAE@XZ, 001C
;
           call l10003300; Implemented in c++ code
;
;* Call:
; 10002501, 1000596F, 10005BD7, 10005D29, 10005DCE, 10005FE0, 10005FF0, 100061C7, 
; 100061FD, 1000623D, 10006273, 10027E21, 10027F25, 10032557, 10034F62, 10036600, 
; 100366CB, 10036733, 100367AF, 100393CC, 10039439, 10039539, 1003959E, 1003DCFF, 
; 1003DD40, 10040E91, 10040EB5, 10041424 
;
;* Export: ??0B_Name@@QAE@PBD@Z, 001B
;
           call l10003337; Implemented in c++ code
;
;* Call:
; 10002334, 10002594, 10003882, 100038EE, 10003A18, 10003B07, 10003BB0, 10003C59, 
; 1000438E, 10004CE5, 100066F4, 10029A74 
;
;* Export: ??0B_Name@@QAE@ABV0@@Z, 0019
;
           call l100033A4; Implemented in c++ code
;
;* Call:
; 10003854, 100038CB, 10003A99, 10003B4A, 10003BF3 
;
;* Export: ??0B_Name@@QAE@I@Z, 001A
;
           call l10003410; Implemented in c++ code
;
;* Call:
; 10004C67, 10004E53, 10004E77, 10005E84, 10005EC6, 10040FE1 
;
;* Export: ?String@B_Name@@QBEQADXZ, 0119
;
           call l10003457; Implemented in c++ code
;
;* Export: ??OB_Name@@QBEIABV0@@Z, 0083
;
l10003467 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100034B2(C) 
;
l10003480: mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00Dh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax]
           jne l100034BD
           cmp byte ptr [ebp-00Dh], 000h
           je l100034B4
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00Eh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax+001h]
           jne l100034BD
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l10003480
;
;* Jump:
; 10003493(C) 
;
l100034B4: mov dword ptr [ebp-014h], 000000000h
           jmp l100034C5
;
;* Jump:
; 1000348D(C), 100034A4(C) 
;
l100034BD: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100034BB(U) 
;
l100034C5: mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           xor eax, eax
           cmp dword ptr [ebp-018h], 000000000h
           setg  al
           mov esp, ebp
           pop ebp
           ret 00004h
l10003467 ENDP
;
;* Export: ??MB_Name@@QBEIABV0@@Z, 0082
;
l100034DA PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10003525(C) 
;
l100034F3: mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00Dh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax]
           jne l10003530
           cmp byte ptr [ebp-00Dh], 000h
           je l10003527
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00Eh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax+001h]
           jne l10003530
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l100034F3
;
;* Jump:
; 10003506(C) 
;
l10003527: mov dword ptr [ebp-014h], 000000000h
           jmp l10003538
;
;* Jump:
; 10003500(C), 10003517(C) 
;
l10003530: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1000352E(U) 
;
l10003538: mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           xor eax, eax
           cmp dword ptr [ebp-018h], 000000000h
           setl  al
           mov esp, ebp
           pop ebp
           ret 00004h
l100034DA ENDP
;
;* Call:
; 100048AF, 1000492A, 10004CB9, 10004FF4, 10005025, 100052FE, 10005667, 100058FD, 
; 10005D6C, 10005E11, 10029E5A, 10029EDB, 10029F5E, 1002A1FC, 10034FC2, 1003665D, 
; 1003A21B, 1003A39B 
;
;* Export: ??8B_Name@@QBEIABV0@@Z, 0076
;
l1000354D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           jne l100035CA
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100035A6(C) 
;
l10003574: mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00Dh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax]
           jne l100035B1
           cmp byte ptr [ebp-00Dh], 000h
           je l100035A8
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00Eh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax+001h]
           jne l100035B1
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l10003574
;
;* Jump:
; 10003587(C) 
;
l100035A8: mov dword ptr [ebp-014h], 000000000h
           jmp l100035B9
;
;* Jump:
; 10003581(C), 10003598(C) 
;
l100035B1: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100035AF(U) 
;
l100035B9: mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           xor eax, eax
           cmp dword ptr [ebp-018h], 000000000h
           sete  al
           jmp l100035CC
;
;* Jump:
; 10003562(C) 
;
l100035CA: xor eax, eax
;
;* Jump:
; 100035C8(U) 
;
l100035CC: mov esp, ebp
           pop ebp
           ret 00004h
l1000354D ENDP
;
;* Call:
; 10035C2E 
;
;* Export: ??8B_Name@@QBEIPBD@Z, 0077
;
l100035D2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1000361B(C) 
;
l100035E9: mov eax, dword ptr [ebp-00Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-00Dh], cl
           mov edx, dword ptr [ebp-008h]
           cmp cl, byte ptr [edx]
           jne l10003626
           cmp byte ptr [ebp-00Dh], 000h
           je l1000361D
           mov eax, dword ptr [ebp-00Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00Eh], cl
           mov edx, dword ptr [ebp-008h]
           cmp cl, byte ptr [edx+001h]
           jne l10003626
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l100035E9
;
;* Jump:
; 100035FC(C) 
;
l1000361D: mov dword ptr [ebp-014h], 000000000h
           jmp l1000362E
;
;* Jump:
; 100035F6(C), 1000360D(C) 
;
l10003626: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10003624(U) 
;
l1000362E: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], ecx
           xor eax, eax
           cmp dword ptr [ebp-018h], 000000000h
           sete  al
           mov esp, ebp
           pop ebp
           ret 00004h
l100035D2 ENDP
;
;* Export: ??9B_Name@@QBEIABV0@@Z, 0079
;
l10003643 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           je l10003661
           mov eax, 000000001h
           jmp l100036BF
;
;* Jump:
; 10003658(C) 
;
l10003661: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100036A3(C) 
;
l10003671: mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00Dh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax]
           jne l100036AE
           cmp byte ptr [ebp-00Dh], 000h
           je l100036A5
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00Eh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax+001h]
           jne l100036AE
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l10003671
;
;* Jump:
; 10003684(C) 
;
l100036A5: mov dword ptr [ebp-014h], 000000000h
           jmp l100036B6
;
;* Jump:
; 1000367E(C), 10003695(C) 
;
l100036AE: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100036AC(U) 
;
l100036B6: mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
;
;* Jump:
; 1000365F(U) 
;
l100036BF: mov esp, ebp
           pop ebp
           ret 00004h
l10003643 ENDP
;
;* Export: ??9B_Name@@QBEIPBD@Z, 007A
;
l100036C5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1000370E(C) 
;
l100036DC: mov eax, dword ptr [ebp-00Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-00Dh], cl
           mov edx, dword ptr [ebp-008h]
           cmp cl, byte ptr [edx]
           jne l10003719
           cmp byte ptr [ebp-00Dh], 000h
           je l10003710
           mov eax, dword ptr [ebp-00Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00Eh], cl
           mov edx, dword ptr [ebp-008h]
           cmp cl, byte ptr [edx+001h]
           jne l10003719
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l100036DC
;
;* Jump:
; 100036EF(C) 
;
l10003710: mov dword ptr [ebp-014h], 000000000h
           jmp l10003721
;
;* Jump:
; 100036E9(C), 10003700(C) 
;
l10003719: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10003717(U) 
;
l10003721: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100036C5 ENDP
;
;* Export: ?CompareNoCase@B_Name@@QBEIABV1@@Z, 00AA
;
l10003730 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           jne l10003761
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           push eax
           call [__imp__stricmp]; [BICRT._stricmp].
           add esp, 000000008h
           neg eax
           sbb eax, eax
           inc eax
           jmp l10003763
;
;* Jump:
; 10003743(C) 
;
l10003761: xor eax, eax
;
;* Jump:
; 1000375F(U) 
;
l10003763: mov esp, ebp
           pop ebp
           ret 00004h
l10003730 ENDP
;
;* Call:
; 10027E3C, 10027E74, 10027EC8, 10027F40, 10027F78, 10027FD0 
;
;* Export: ?CompareNoCase@B_Name@@QBEIPBD@Z, 00AB
;
           call l10003769; Implemented in c++ code
;
;* Call:
; 10002364, 100025D4, 1000459A, 10006734, 10027EB3, 10027FBB, 10029AD4, 10032563, 
; 100366E9, 100367C1, 10039448, 100395BF, 1003DD14, 1003DD55 
;
;* Export: ??4B_Name@@QAEAAV0@ABV0@@Z, 0047
;
l1000378E PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           push edi
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           je l100037EF
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           mov edi, dword ptr [eax]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           add ecx, 000000001h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx], eax
;
;* Jump:
; 100037A5(C) 
;
l100037EF: mov ecx, dword ptr [ebp+008h]
           mov edi, dword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [edx]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-00Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1000378E ENDP
;
;* Call:
; 10027E2F, 10027EAA, 10027F33, 10027FB2 
;
;* Export: ?Right@B_Name@@QBE?AV1@I@Z, 0102
;
l10003821 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jnb l10003839
           mov dword ptr [ebp+00Ch], 000000000h
           jmp l1000384D
;
;* Jump:
; 1000382E(C) 
;
l10003839: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           cmp ecx, dword ptr [eax+004h]
           jbe l1000384D
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp+00Ch], eax
;
;* Jump:
; 10003837(U), 10003842(C) 
;
l1000384D: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea ecx, [ebp-008h]
           call l10003410
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           sub ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_strncpy]; [BICRT.strncpy].
           add esp, 00000000Ch
           lea edx, [ebp-008h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100033A4
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10003821 ENDP
;
;* Export: ?Left@B_Name@@QBE?AV1@I@Z, 00DB
;
l10003898 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jnb l100038B0
           mov dword ptr [ebp+00Ch], 000000000h
           jmp l100038C4
;
;* Jump:
; 100038A5(C) 
;
l100038B0: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           cmp ecx, dword ptr [eax+004h]
           jbe l100038C4
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp+00Ch], eax
;
;* Jump:
; 100038AE(U), 100038B9(C) 
;
l100038C4: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea ecx, [ebp-008h]
           call l10003410
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_strncpy]; [BICRT.strncpy].
           add esp, 00000000Ch
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100033A4
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10003898 ENDP
;
;* Call:
; 10003A4E, 10004F6D, 100055D1, 10040D6E, 10041269 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_Name@@@Z, 005D
;
l10003904 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           lea eax, [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+004h]
           je l1000395F
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           add ecx, 000000001h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx], eax
;
;* Jump:
; 10003923(C) 
;
l1000395F: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov byte ptr [eax+edx], 000h
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10003904 ENDP
;
;* Call:
; 10003A66, 10040E9B, 10040EBF, 10041448 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_Name@@@Z, 006F
;
l1000398A PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1000398A ENDP
;
;* Call:
; 10002316, 10002396, 1000241F, 10002456, 10002515, 1000256F, 1000260F, 100026A8, 
; 100026E8, 1000388A, 100038F6, 10003B0F, 10003BB8, 10003C61, 10003F1D, 100043E9, 
; 100043FD, 10004BBB, 10004EB3, 10005049, 10005273, 10005322, 10005521, 1000580B, 
; 1000581F, 100059AF, 10005C05, 10005D89, 10005E2E, 10006134, 1000614A, 100061E4, 
; 10006218, 1000625A, 10006290, 100081D7, 10027E57, 10027E5F, 10027E8F, 10027E97, 
; 10027EBB, 10027EE3, 10027EEB, 10027EFF, 10027F07, 10027F5B, 10027F63, 10027F97, 
; 10027F9F, 10027FC3, 10027FEF, 10027FF7, 1002800B, 10028013, 1002993F, 100299D8, 
; 1003256B, 10034FF1, 10036692, 100366F4, 10036756, 100367CC, 100393EC, 10039450, 
; 10039562, 100395CA, 100397C3, 10039806, 1003D8A6, 1003D8E6, 1003D926, 1003DBD6, 
; 1003DBEA, 1003DD1F, 1003DD60, 10040E55, 10040EA6, 10040ECA, 10041222, 100413E1, 
; 1004148E 
;
;* Export: ??1B_Name@@QAE@XZ, 0036
;
           call l100039BA; Implemented in c++ code
;
;* Call:
; 10003EC4, 10035D62, 1003967C, 10039EAC, 1003CD18, 1003CECD, 1003D11D, 1003D51D, 
; 1003D7CA, 1003D7FC, 1003DCAF 
;
;* Export: ??0B_NamedObj@@QAE@XZ, 001F
;
           call l100039E5; Implemented in c++ code
;
;* Call:
; 100024CE, 1000250D, 10003EE7, 1000437F, 100298C0, 10040F7A 
;
;* Export: ??0B_NamedObj@@QAE@ABVB_Name@@@Z, 001E
;
           call l10003A07; Implemented in c++ code
;
;* Call:
; 100048A6, 10004921, 1000565E, 10005D63, 10005E08, 10029E51, 10029ED2, 10029F55, 
; 1002A1F3, 10034FB6, 10036651, 1003A212, 1003A392 
;
;* Export: ?Id@B_NamedObj@@QBEABVB_Name@@XZ, 00D5
;
           call l10003A2F; Implemented in c++ code
;
;* Call:
; 10004681, 10032545, 1003288C, 10032914, 100329BD, 10032A4D, 1004123A 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_NamedObj@@@Z, 005E
;
l10003A40 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003904
           add esp, 000000008h
           pop ebp
           ret
l10003A40 ENDP
;
;* Call:
; 10004699, 1003272E, 100328D1, 1003296C, 10032A05, 10032A95, 100413FC 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_NamedObj@@@Z, 0070
;
l10003A58 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000398A
           add esp, 000000008h
           pop ebp
           ret
l10003A58 ENDP
;
;* Export: ??H@YA?AVB_Name@@ABV0@0@Z, 007D
;
l10003A70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push ebx
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+001h]
           push eax
           lea ecx, [ebp-008h]
           call l10003410
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-014h], edx
           mov edi, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-018h], edx
           mov edi, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100033A4
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret
l10003A70 ENDP
;
;* Export: ??H@YA?AVB_Name@@ABV0@PBD@Z, 007E
;
l10003B1E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push ebx
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edi, dword ptr [ebp+010h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+001h]
           push eax
           lea ecx, [ebp-008h]
           call l10003410
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-010h], edx
           mov edi, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov edi, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100033A4
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret
l10003B1E ENDP
;
;* Export: ??H@YA?AVB_Name@@PBDABV0@@Z, 007F
;
l10003BC7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push ebx
           push esi
           push edi
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edi, dword ptr [ebp+00Ch]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [ecx+edx+001h]
           push eax
           lea ecx, [ebp-008h]
           call l10003410
           mov edi, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-010h], edx
           mov edi, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100033A4
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret
l10003BC7 ENDP
;
;* Export: ??YB_Name@@QAEABV0@PBD@Z, 0086
;
l10003C70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push ebx
           push esi
           push edi
           mov dword ptr [ebp-010h], ecx
           mov edi, dword ptr [ebp+008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov eax, dword ptr [ebp-010h]
           mov edx, dword ptr [eax+004h]
           add edx, ecx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           add edx, 000000001h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edi, dword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov edi, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax], ecx
           mov eax, dword ptr [ebp-010h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret 00004h
l10003C70 ENDP
;
;* Export: ??YB_Name@@QAEABV0@D@Z, 0085
;
l10003D30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push esi
           push edi
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           add ecx, 000000001h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-010h]
           mov edi, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ebp+008h]
           mov byte ptr [eax+edx-001h], cl
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+eax], 000h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx], eax
           mov eax, dword ptr [ebp-010h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10003D30 ENDP
;
;* Export: ??YB_Name@@QAEABV0@ABV0@@Z, 0084
;
l10003DCE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push ebx
           push esi
           push edi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           add eax, 000000001h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-018h]
           mov edi, dword ptr [edx]
           mov edx, dword ptr [ebp-004h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-014h], edx
           mov edi, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-004h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax], ecx
           mov eax, dword ptr [ebp-018h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret 00004h
l10003DCE ENDP
;
;* Export: ?UpCase@B_Name@@QAEXXZ, 011B
;
           call l10003E91; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003EEC6 
;
           call l10003EB0; Implemented in c++ code
;
;* Call:
; 10004096, 100040F3, 1000429F, 10037F01 
;
;* Export: ??0B_Resource@@QAE@XZ, 002B
;
l10003EBA PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l100039E5
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042198
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10003EBA ENDP
;
;* Call:
; 1000834E, 1000852E 
;
;* Export: ??0B_Resource@@QAE@ABVB_Name@@@Z, 002A
;
l10003ED9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10003A07
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042198
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10003ED9 ENDP
;
;* Call:
; 1000675A, 100067D3, 100067FE, 10006C85, 100079AB, 10007BEB, 100384C1 
;
;* Export: ??1B_Resource@@UAE@XZ, 003B
;
l10003EFE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042198
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov esp, ebp
           pop ebp
           ret
l10003EFE ENDP
;
;* Export: ?Save@B_Resource@@SAXAAVB_ODataFile@@PBV1@@Z, 0103
;
l10003F26 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           call [edx+004h]
           mov word ptr [ebp-004h], ax
           lea eax, [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001FC6
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           call [eax+008h]
           mov dword ptr [ebp-008h], eax
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10002008
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           call [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           lea eax, [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           call [eax+004h]
           and eax, 00000FFFFh
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000001h
           je l10003FA8
           cmp dword ptr [ebp-010h], 000000002h
           je l10003FBA
           jmp l10003FCA
;
;* Jump:
; 10003F9E(C) 
;
l10003FA8: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100369F0
           add esp, 000000008h
           jmp l10003FCA
;
;* Jump:
; 10003FA4(C) 
;
l10003FBA: mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100084D6
           add esp, 000000008h
;
;* Jump:
; 10003FA6(U), 10003FB8(U) 
;
l10003FCA: mov esp, ebp
           pop ebp
           ret
l10003F26 ENDP
;
;* Call:
; 1000452F 
;
;* Export: ?Load@B_Resource@@SAPAV1@AAVB_IDataFile@@G@Z, 00DE
;
l10003FCE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           push esi
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           and eax, 00000FFFFh
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-044h]
           sub ecx, 000000001h
           mov dword ptr [ebp-044h], ecx
           cmp dword ptr [ebp-044h], 000000004h
           ja l1000434E
           mov edx, dword ptr [ebp-044h]
           jmp [offset g1000435D+edx*04h]
l1000400B: push 000000278h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l1000402E
           mov ecx, dword ptr [ebp-010h]
           call l10037EF5
           mov dword ptr [ebp-048h], eax
           jmp l10004035
;
;* Jump:
; 1000401F(C) 
;
l1000402E: mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 1000402C(U) 
;
l10004035: mov eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1003590B
           add esp, 000000008h
           jmp near ptr l10004355
l10004050: lea eax, [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001B97
           add esp, 000000008h
           lea edx, [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BD9
           add esp, 000000008h
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l100040B7
           mov ecx, dword ptr [ebp-014h]
           call l10003EBA
           mov ecx, dword ptr [ebp-014h]
           add ecx, 00000000Ch
           call l100085F0
           mov eax, dword ptr [ebp-014h]
;
;* String: "pl"
;
           mov dword ptr [eax], offset g100421CC
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-04Ch], ecx
           jmp l100040BE
;
;* Jump:
; 10004091(C) 
;
l100040B7: mov dword ptr [ebp-04Ch], 000000000h
;
;* Jump:
; 100040B5(U) 
;
l100040BE: mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100084FB
           add esp, 000000008h
           jmp near ptr l10004355
l100040D9: push 00000001Ch
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l10004263
           mov ecx, dword ptr [ebp-018h]
           call l10003EBA
           mov edx, dword ptr [ebp-018h]
           add edx, 00000000Ch
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-038h]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov ecx, dword ptr [g1004A530]
           cmp ecx, dword ptr [g1004A528]
           jbe l1000413D
           mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
           jmp near ptr l10004201
;
;* Jump:
; 10004116(C) 
;
l1000413D: mov eax, dword ptr [g1004A530]
           add eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           cmp dword ptr [g1004A528], 000000000h
           je l100041C4
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-028h], 000000000h
           jmp l10004183
;
;* Jump:
; 100041A3(U) 
;
l1000417A: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10004178(U) 
;
l10004183: mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [g1004A528]
           jnb l100041A5
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-024h]
           mov esi, dword ptr [ebp-028h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1000417A
;
;* Jump:
; 1000418C(C) 
;
l100041A5: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [g1004A524], edx
           jmp l100041E1
;
;* Jump:
; 10004154(C) 
;
l100041C4: mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [g1004A524], ecx
;
;* Jump:
; 100041C2(U) 
;
l100041E1: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 10004138(U) 
;
l10004201: mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+008h], 000000000h
           xor edx, edx
           test edx, edx
           je l10004248
           xor eax, eax
           test eax, eax
           je l10004248
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ecx+004h]
           imul eax, dword ptr [edx+008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx+00Ch], edx
           jmp l10004252
;
;* Jump:
; 10004219(C), 1000421F(C) 
;
l10004248: mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10004246(U) 
;
l10004252: mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx], offset g100421B8
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-050h], edx
           jmp l1000426A
;
;* Jump:
; 100040EA(C) 
;
l10004263: mov dword ptr [ebp-050h], 000000000h
;
;* Jump:
; 10004261(U) 
;
l1000426A: mov eax, dword ptr [ebp-050h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10008595
           add esp, 000000008h
           jmp near ptr l10004355
l10004285: push 00000001Ch
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l1000432F
           mov ecx, dword ptr [ebp-01Ch]
           call l10003EBA
           mov eax, dword ptr [ebp-01Ch]
           add eax, 00000000Ch
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-040h]
;
;* String: "pt"
;
           mov dword ptr [ecx], offset g100421C8
           mov edx, dword ptr [ebp-040h]
           push edx
           mov ecx, offset g1004A520
           call l10007C10
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx+008h], 000000000h
           xor edx, edx
           test edx, edx
           je l1000430B
           xor eax, eax
           test eax, eax
           je l1000430B
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ecx+004h]
           imul eax, dword ptr [edx+008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx+00Ch], edx
           jmp l10004315
;
;* Jump:
; 100042DC(C), 100042E2(C) 
;
l1000430B: mov eax, dword ptr [ebp-040h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10004309(U) 
;
l10004315: mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx], offset g100421B8
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx], offset g100421A8
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-054h], eax
           jmp l10004336
;
;* Jump:
; 10004296(C) 
;
l1000432F: mov dword ptr [ebp-054h], 000000000h
;
;* Jump:
; 1000432D(U) 
;
l10004336: mov ecx, dword ptr [ebp-054h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100085D4
           add esp, 000000008h
           jmp l10004355
;
;* Jump:
; 10003FFB(C) 
;
l1000434E: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 1000404B(U), 100040D4(U), 10004280(U), 1000434C(U) 
;
l10004355: mov eax, dword ptr [ebp-004h]
           pop esi
           mov esp, ebp
           pop ebp
           ret
;
g1000435D  dd l1000400B
           dd l10004050
           dd l100040D9
           dd l10004285
           dd l1000400B
l10003FCE ENDP
;
;* Call:
; 1000508C, 10005362, 100056B8, 10005987, 1000600C 
;
l10004371 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10003A07
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l100033A4
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100421DC
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00010h
l10004371 ENDP
;
;* Call:
; 1000668A 
;
l100043CB PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g100421DC
           mov ecx, dword ptr [ebp-004h]
           call l10004606
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l100039BA
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov esp, ebp
           pop ebp
           ret
l100043CB ENDP
;
;* Call:
; 10005CFB 
;
l10004406 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+01Ch], 000000000h
           je l1000441D
           mov eax, 000000001h
           jmp l1000441F
;
;* Jump:
; 10004414(C) 
;
l1000441D: xor eax, eax
;
;* Jump:
; 1000441B(U) 
;
l1000441F: mov esp, ebp
           pop ebp
           ret 00004h
l10004406 ENDP
;
;* Call:
; 100048E4, 10005BA7, 10005E7A 
;
l10004425 PROC
           push ebp
           mov ebp, esp
           mov eax, 00000402Ch
           call l10041600
           mov dword ptr [ebp-00000402Ch], ecx
           mov eax, dword ptr [ebp-00000402Ch]
           mov ecx, dword ptr [eax+020h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00000402Ch]
           mov dword ptr [edx+020h], ecx
           mov eax, dword ptr [ebp-00000402Ch]
           cmp dword ptr [eax+01Ch], 000000000h
           jne l100045AA
           mov ecx, dword ptr [ebp-00000402Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-000004024h], edx
           push 000008000h
           mov eax, dword ptr [ebp-000004024h]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001788
           xor ecx, ecx
           cmp dword ptr [ebp-000004018h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l1000450C
;
;* String: "B_ResourceLocation::GetResource -> ERROR: No se ha podido abrir 
;          archivo:
;          "
;
           push offset g10047268
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* String: "  "
;
           push offset g100472B4
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           mov edx, dword ptr [ebp-00000402Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000004028h], eax
           mov ecx, dword ptr [ebp-000004028h]
           push ecx
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           push offset g100472B8
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           mov dword ptr [ebp-00000401Ch], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           mov eax, dword ptr [ebp-00000401Ch]
           jmp near ptr l100045B3
;
;* Jump:
; 10004491(C) 
;
l1000450C: push 000000000h
           mov edx, dword ptr [ebp-00000402Ch]
           mov eax, dword ptr [edx+014h]
           push eax
           lea ecx, [ebp-000004018h]
           call l100018A6
           mov cx, word ptr [ebp+008h]
           push ecx
           lea edx, [ebp-000004018h]
           push edx
           call l10003FCE
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00000402Ch]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-00000402Ch]
           cmp dword ptr [edx+01Ch], 000000000h
           jne l10004569
           mov dword ptr [ebp-000004020h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           mov eax, dword ptr [ebp-000004020h]
           jmp l100045B3
;
;* Jump:
; 1000454A(C) 
;
l10004569: mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           cmp eax, 000000003h
           je l10004584
           mov ecx, dword ptr [ebp+008h]
           and ecx, 00000FFFFh
           cmp ecx, 000000004h
           jne l1000459F
;
;* Jump:
; 10004574(C) 
;
l10004584: mov edx, dword ptr [ebp-00000402Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp-00000402Ch]
           mov ecx, dword ptr [eax+01Ch]
           add ecx, 000000004h
           call l1000378E
;
;* Jump:
; 10004582(C) 
;
l1000459F: lea ecx, [ebp-000004018h]
           call l10001C31
;
;* Jump:
; 10004457(C) 
;
l100045AA: mov ecx, dword ptr [ebp-00000402Ch]
           mov eax, dword ptr [ecx+01Ch]
;
;* Jump:
; 10004507(U), 10004567(U) 
;
l100045B3: mov esp, ebp
           pop ebp
           ret 00004h
l10004425 ENDP
;
;* Call:
; 100049ED 
;
l100045B9 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+01Ch], 000000000h
           je l10004602
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l100045F1
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-004h]
           call [edx]
           mov dword ptr [ebp-010h], eax
           jmp l100045F8
;
;* Jump:
; 100045DE(C) 
;
l100045F1: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 100045EF(U) 
;
l100045F8: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+01Ch], 000000000h
;
;* Jump:
; 100045C9(C) 
;
l10004602: mov esp, ebp
           pop ebp
           ret
l100045B9 ENDP
;
;* Call:
; 100043DE, 100049B0 
;
l10004606 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+020h], 000000000h
           jne l1000461A
           jmp l10004672
;
;* Jump:
; 10004616(C) 
;
l1000461A: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+020h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+020h], edx
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+020h], 000000000h
           jne l10004672
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+01Ch], 000000000h
           je l10004672
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l10004661
           push 000000001h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx]
           mov dword ptr [ebp-010h], eax
           jmp l10004668
;
;* Jump:
; 1000464E(C) 
;
l10004661: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1000465F(U) 
;
l10004668: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+01Ch], 000000000h
;
;* Jump:
; 10004618(U), 10004630(C), 10004639(C) 
;
l10004672: mov esp, ebp
           pop ebp
           ret
l10004606 ENDP
;
;* Call:
; 1000850D, 1003591E, 100389A9 
;
l10004676 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A40
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10004676 ENDP
;
;* Call:
; 100084E8, 10036A24, 100384EF 
;
l1000468E PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A58
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1000468E ENDP
;
;* Call:
; 10004F08, 10005600, 10005895, 10005F96 
;
l100046A6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000010h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100421EC
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g100421E8
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g100421E4
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100421E0
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l100046A6 ENDP
;
;* Call:
; 100066BA 
;
l1000470A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax], offset g100421E0
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1000472A
           jmp near ptr l100047B8
;
;* Jump:
; 10004723(C) 
;
l1000472A: mov edx, 000000001h
           test edx, edx
           je l10004785
           mov dword ptr [ebp-004h], 000000000h
           jmp l10004745
;
;* Jump:
; 10004783(U) 
;
l1000473C: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000473A(U) 
;
l10004745: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10004785
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp-008h], 000000000h
           je l1000477C
           push 000000001h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-008h]
           call [eax]
           mov dword ptr [ebp-02Ch], eax
           jmp l10004783
;
;* Jump:
; 10004769(C) 
;
l1000477C: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1000477A(U) 
;
l10004783: jmp l1000473C
;
;* Jump:
; 10004731(C), 1000474E(C) 
;
l10004785: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10004725(U) 
;
l100047B8: mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx], offset g100421EC
           mov edx, dword ptr [ebp-028h]
           cmp dword ptr [edx+010h], 000000000h
           je l10004870
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-028h]
           cmp dword ptr [edx+010h], 000000000h
           jne l100047E5
           jmp near ptr l10004870
;
;* Jump:
; 100047DE(C) 
;
l100047E5: cmp dword ptr [ebp-024h], 000000000h
           je l1000483D
           mov dword ptr [ebp-014h], 000000000h
           jmp l100047FD
;
;* Jump:
; 1000483B(U) 
;
l100047F4: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100047F2(U) 
;
l100047FD: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1000483D
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], ecx
           cmp dword ptr [ebp-018h], 000000000h
           je l10004834
           push 000000001h
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-018h]
           call [eax]
           mov dword ptr [ebp-030h], eax
           jmp l1000483B
;
;* Jump:
; 10004821(C) 
;
l10004834: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 10004832(U) 
;
l1000483B: jmp l100047F4
;
;* Jump:
; 100047E9(C), 10004806(C) 
;
l1000483D: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 100047C8(C), 100047E0(U) 
;
l10004870: mov esp, ebp
           pop ebp
           ret
l1000470A ENDP
;
;* Call:
; 10005B24, 10005BF4 
;
l10004874 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000488F
;
;* Jump:
; 100048C9(U) 
;
l10004886: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10004884(U) 
;
l1000488F: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+008h]
           jnb l100048CB
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-008h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l100048C9
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-004h], eax
           jmp l100048D2
;
;* Jump:
; 100048B6(C) 
;
l100048C9: jmp l10004886
;
;* Jump:
; 10004898(C) 
;
l100048CB: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 100048C7(U) 
;
l100048D2: cmp dword ptr [ebp-004h], 000000000h
           jne l100048DC
           xor eax, eax
           jmp l100048E9
;
;* Jump:
; 100048D6(C) 
;
l100048DC: mov cx, word ptr [ebp+00Ch]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           call l10004425
;
;* Jump:
; 100048DA(U) 
;
l100048E9: mov esp, ebp
           pop ebp
           ret 00008h
l10004874 ENDP
;
;* Call:
; 10005B64 
;
l100048EF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000490A
;
;* Jump:
; 1000493B(U) 
;
l10004901: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100048FF(U) 
;
l1000490A: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1000493D
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l1000493B
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-008h], eax
           jmp l10004944
;
;* Jump:
; 10004931(C) 
;
l1000493B: jmp l10004901
;
;* Jump:
; 10004913(C) 
;
l1000493D: mov dword ptr [ebp-008h], 0FFFFFFFFh
;
;* Jump:
; 10004939(U) 
;
l10004944: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100048EF ENDP
;
;* Call:
; 10005F27 
;
l1000494D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000496F
;
;* Jump:
; 100049A3(U) 
;
l10004966: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10004964(U) 
;
l1000496F: cmp dword ptr [ebp-008h], 000000000h
           jne l100049A5
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l100049A5
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov ecx, dword ptr [eax+01Ch]
           cmp ecx, dword ptr [ebp+008h]
           jne l100049A3
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10004992(C) 
;
l100049A3: jmp l10004966
;
;* Jump:
; 10004973(C), 1000497E(C) 
;
l100049A5: cmp dword ptr [ebp-008h], 000000000h
           jne l100049AD
           jmp l100049B5
;
;* Jump:
; 100049A9(C) 
;
l100049AD: mov ecx, dword ptr [ebp-008h]
           call l10004606
;
;* Jump:
; 100049AB(U) 
;
l100049B5: mov esp, ebp
           pop ebp
           ret 00004h
l1000494D ENDP
;
;* Call:
; 10004B19 
;
l100049BB PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l100049D6
;
;* Jump:
; 100049F2(U) 
;
l100049CD: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100049CB(U) 
;
l100049D6: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l100049F4
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l100045B9
           jmp l100049CD
;
;* Jump:
; 100049DF(C) 
;
l100049F4: mov esp, ebp
           pop ebp
           ret
l100049BB ENDP
;
;* Call:
; 10006192 
;
;* Export: ??0B_ResourceManager@@QAE@XZ, 002C
;
l100049F8 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10004A13
;
;* Jump:
; 10004A29(U) 
;
l10004A0A: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10004A08(U) 
;
l10004A13: cmp dword ptr [ebp-004h], 000000100h
           jnb l10004A2B
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h], 000000000h
           jmp l10004A0A
;
;* Jump:
; 10004A1A(C) 
;
l10004A2B: push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10004A81
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000010h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], offset g100421F4
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-010h], eax
           jmp l10004A88
;
;* Jump:
; 10004A3C(C) 
;
l10004A81: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 10004A7F(U) 
;
l10004A88: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+000000400h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l100049F8 ENDP
;
;* Call:
; 100061B3 
;
;* Export: ??1B_ResourceManager@@QAE@XZ, 003C
;
l10004A9B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10004AE0
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+000000400h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l10004AD5
           push 000000001h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx]
           mov dword ptr [ebp-010h], eax
           jmp l10004ADC
;
;* Jump:
; 10004AC2(C) 
;
l10004AD5: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 10004AD3(U) 
;
l10004ADC: mov esp, ebp
           pop ebp
           ret
l10004A9B ENDP
;
;* Call:
; 10004AA7 
;
;* Export: ?Clean@B_ResourceManager@@QAEXXZ, 00A3
;
l10004AE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-024h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10004AFB
;
;* Jump:
; 10004B5B(U) 
;
l10004AF2: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10004AF0(U) 
;
l10004AFB: cmp dword ptr [ebp-004h], 000000100h
           jnb l10004B5D
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+ecx*04h], 000000000h
           je l10004B5B
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-024h]
           mov ecx, dword ptr [ecx+eax*04h]
           call l100049BB
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l10004B47
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-028h], eax
           jmp l10004B4E
;
;* Jump:
; 10004B34(C) 
;
l10004B47: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10004B45(U) 
;
l10004B4E: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+eax*04h], 000000000h
;
;* Jump:
; 10004B0E(C) 
;
l10004B5B: jmp l10004AF2
;
;* Jump:
; 10004B02(C) 
;
l10004B5D: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000000400h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10004B77
           jmp near ptr l10004C1C
;
;* Jump:
; 10004B70(C) 
;
l10004B77: mov edx, 000000001h
           test edx, edx
           je l10004BE9
           mov dword ptr [ebp-010h], 000000000h
           jmp l10004B92
;
;* Jump:
; 10004BE7(U) 
;
l10004B89: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10004B87(U) 
;
l10004B92: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10004BE9
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l10004BE0
           mov ecx, dword ptr [ebp-014h]
           call l100039BA
           mov edx, 000000001h
           and edx, 000000001h
           test edx, edx
           je l10004BD8
           mov eax, dword ptr [ebp-014h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10004BCA(C) 
;
l10004BD8: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-02Ch], ecx
           jmp l10004BE7
;
;* Jump:
; 10004BB6(C) 
;
l10004BE0: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 10004BDE(U) 
;
l10004BE7: jmp l10004B89
;
;* Jump:
; 10004B7E(C), 10004B9B(C) 
;
l10004BE9: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10004B72(U) 
;
l10004C1C: mov esp, ebp
           pop ebp
           ret
l10004AE0 ENDP
;
;* Call:
; 10040702 
;
;* Export: ?GetnFiles@B_ResourceManager@@QAEIXZ, 00CF
;
l10004C20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000000400h]
           mov eax, dword ptr [ecx+008h]
           mov esp, ebp
           pop ebp
           ret
l10004C20 ENDP
;
;* Call:
; 1004079B 
;
;* Export: ?GetFile@B_ResourceManager@@QAEPBDI@Z, 00BD
;
l10004C37 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jbe l10004C6E
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000000400h]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10004C6E
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000000400h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003457
           jmp l10004C70
;
;* Jump:
; 10004C42(C), 10004C53(C) 
;
l10004C6E: xor eax, eax
;
;* Jump:
; 10004C6C(U) 
;
l10004C70: mov esp, ebp
           pop ebp
           ret 00004h
l10004C37 ENDP
;
;* Call:
; 10004ECD 
;
;* Export: ?AddFile@B_ResourceManager@@AAEIABVB_Name@@@Z, 0099
;
l10004C76 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push esi
           mov dword ptr [ebp-028h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10004C92
;
;* Jump:
; 10004CC9(U) 
;
l10004C89: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10004C87(U) 
;
l10004C92: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+000000400h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l10004CCB
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000000400h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l1000354D
           test eax, eax
           je l10004CC9
           xor eax, eax
           jmp near ptr l10004E04
;
;* Jump:
; 10004CC0(C) 
;
l10004CC9: jmp l10004C89
;
;* Jump:
; 10004CA1(C) 
;
l10004CCB: push 000000008h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10004CEF
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l100033A4
           mov dword ptr [ebp-024h], eax
           jmp l10004CF6
;
;* Jump:
; 10004CDC(C) 
;
l10004CEF: mov dword ptr [ebp-024h], 000000000h
;
;* Jump:
; 10004CED(U) 
;
l10004CF6: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+000000400h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l10004D36
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10004DFF
;
;* Jump:
; 10004D0E(C) 
;
l10004D36: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10004DC0
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10004D7E
;
;* Jump:
; 10004D9E(U) 
;
l10004D75: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10004D73(U) 
;
l10004D7E: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10004DA0
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-010h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10004D75
;
;* Jump:
; 10004D87(C) 
;
l10004DA0: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], edx
           jmp l10004DDE
;
;* Jump:
; 10004D4F(C) 
;
l10004DC0: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 10004DBE(U) 
;
l10004DDE: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10004D31(U) 
;
l10004DFF: mov eax, 000000001h
;
;* Jump:
; 10004CC4(U) 
;
l10004E04: pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10004C76 ENDP
;
;* Call:
; 100061D9, 1000624F, 10006285 
;
;* Export: ?LocateResourceIn@B_ResourceManager@@QAEIABVB_Name@@PBV2@H@Z, 00E2
;
l10004E0B PROC
           push ebp
           mov ebp, esp
           mov eax, 0000040A0h
           call l10041600
           push esi
           mov dword ptr [ebp-00000409Ch], ecx
           cmp dword ptr [ebp+010h], 000000000h
           jl l10004E2E
           cmp dword ptr [ebp+010h], 000000100h
           jle l10004E35
;
;* Jump:
; 10004E23(C) 
;
l10004E2E: xor eax, eax
           jmp near ptr l1000552C
;
;* Jump:
; 10004E2C(C) 
;
l10004E35: mov ax, word ptr [ebp+010h]
           mov word ptr [ebp-000004024h], ax
           lea ecx, [ebp-000004020h]
           call l10003300
           push 000008000h
           mov ecx, dword ptr [ebp+008h]
           call l10003457
           push eax
           lea ecx, [ebp-000004018h]
           call l10001788
           xor ecx, ecx
           cmp dword ptr [ebp-000004018h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l10004EC3
           mov ecx, dword ptr [ebp+008h]
           call l10003457
           push eax
;
;* String: "B_ResourceManager::LocateResourceIn() -> Error opening file: %s
;          "
;
           push offset g100472BC
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           mov dword ptr [ebp-000004038h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           lea ecx, [ebp-000004020h]
           call l100039BA
           mov eax, dword ptr [ebp-000004038h]
           jmp near ptr l1000552C
;
;* Jump:
; 10004E72(C) 
;
l10004EC3: mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-00000409Ch]
           call l10004C76
           mov eax, dword ptr [ebp-000004024h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-00000409Ch]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10004F3A
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000403Ch], eax
           cmp dword ptr [ebp-00000403Ch], 000000000h
           je l10004F15
           mov ecx, dword ptr [ebp-00000403Ch]
           call l100046A6
           mov dword ptr [ebp-0000040A0h], eax
           jmp l10004F1F
;
;* Jump:
; 10004F00(C) 
;
l10004F15: mov dword ptr [ebp-0000040A0h], 000000000h
;
;* Jump:
; 10004F13(U) 
;
l10004F1F: mov edx, dword ptr [ebp-000004024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-00000409Ch]
           mov ecx, dword ptr [ebp-0000040A0h]
           mov dword ptr [eax+edx*04h], ecx
;
;* Jump:
; 10004EE7(C) 
;
l10004F3A: mov edx, dword ptr [ebp-000004024h]
           and edx, 00000FFFFh
           cmp edx, 000000001h
           je l10004F5F
           mov eax, dword ptr [ebp-000004024h]
           and eax, 00000FFFFh
           cmp eax, 000000005h
           jne l10005236
;
;* Jump:
; 10004F49(C) 
;
l10004F5F: lea ecx, [ebp-000004020h]
           push ecx
           lea edx, [ebp-000004018h]
           push edx
           call l10003904
           add esp, 000000008h
           mov dword ptr [ebp-000004028h], 000000000h
           jmp l10004F90
;
;* Jump:
; 10005059(U) 
;
l10004F81: mov eax, dword ptr [ebp-000004028h]
           add eax, 000000001h
           mov dword ptr [ebp-000004028h], eax
;
;* Jump:
; 10004F7F(U) 
;
l10004F90: mov ecx, dword ptr [ebp-000004024h]
           and ecx, 00000FFFFh
           mov edx, dword ptr [ebp-00000409Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov ecx, dword ptr [ebp-000004028h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000505E
           mov edx, dword ptr [ebp-000004024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-00000409Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00000402Ch], ecx
           mov edx, dword ptr [ebp-00000402Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000004028h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000004058h], edx
           mov eax, dword ptr [ebp-000004058h]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l10005059
           mov ecx, dword ptr [ebp-00000402Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000004028h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00000405Ch], ecx
           mov edx, dword ptr [ebp-00000405Ch]
           add edx, 000000004h
           push edx
           lea ecx, [ebp-000004020h]
           call l1000354D
           test eax, eax
           je l10005059
           mov dword ptr [ebp-000004040h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           lea ecx, [ebp-000004020h]
           call l100039BA
           mov eax, dword ptr [ebp-000004040h]
           jmp near ptr l1000552C
;
;* Jump:
; 10004FFB(C), 1000502C(C) 
;
l10005059: jmp near ptr l10004F81
;
;* Jump:
; 10004FAE(C) 
;
l1000505E: push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004044h], eax
           cmp dword ptr [ebp-000004044h], 000000000h
           je l10005099
           push 000000000h
           lea eax, [ebp-000004020h]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-000004044h]
           call l10004371
           mov dword ptr [ebp-000004078h], eax
           jmp l100050A3
;
;* Jump:
; 10005075(C) 
;
l10005099: mov dword ptr [ebp-000004078h], 000000000h
;
;* Jump:
; 10005097(U) 
;
l100050A3: mov edx, dword ptr [ebp-000004024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-00000409Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-000004074h], ecx
           mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [ebp-000004074h]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l10005107
           mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000004074h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-000004078h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-000004074h]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l10005231
;
;* Jump:
; 100050D0(C) 
;
l10005107: mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-000004074h]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000004074h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-000004074h]
           cmp dword ptr [eax+008h], 000000000h
           je l100051D7
           mov ecx, dword ptr [ebp-000004074h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004068h], eax
           mov eax, dword ptr [ebp-000004068h]
           mov dword ptr [ebp-000004060h], eax
           mov dword ptr [ebp-000004064h], 000000000h
           jmp l10005174
;
;* Jump:
; 100051A6(U) 
;
l10005165: mov ecx, dword ptr [ebp-000004064h]
           add ecx, 000000001h
           mov dword ptr [ebp-000004064h], ecx
;
;* Jump:
; 10005163(U) 
;
l10005174: mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [ebp-000004064h]
           cmp eax, dword ptr [edx+008h]
           jnb l100051A8
           mov ecx, dword ptr [ebp-000004074h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000004064h]
           mov ecx, dword ptr [ebp-000004060h]
           mov esi, dword ptr [ebp-000004064h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10005165
;
;* Jump:
; 10005183(C) 
;
l100051A8: mov eax, dword ptr [ebp-000004074h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000406Ch], ecx
           mov edx, dword ptr [ebp-00000406Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000004074h]
           mov ecx, dword ptr [ebp-000004060h]
           mov dword ptr [eax+004h], ecx
           jmp l10005201
;
;* Jump:
; 1000512C(C) 
;
l100051D7: mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004070h], eax
           mov ecx, dword ptr [ebp-000004074h]
           mov edx, dword ptr [ebp-000004070h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 100051D5(U) 
;
l10005201: mov eax, dword ptr [ebp-000004074h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000004074h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-000004078h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-000004074h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-000004074h]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 10005102(U) 
;
l10005231: jmp near ptr l10005506
;
;* Jump:
; 10004F59(C) 
;
l10005236: mov eax, dword ptr [ebp-000004024h]
           and eax, 00000FFFFh
           cmp eax, 000000002h
           jne l10005283
           lea ecx, [ebp-000004018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-00000409Ch]
           call l10005533
           mov dword ptr [ebp-000004048h], eax
           lea ecx, [ebp-000004018h]
           call l10001C31
           lea ecx, [ebp-000004020h]
           call l100039BA
           mov eax, dword ptr [ebp-000004048h]
           jmp near ptr l1000552C
;
;* Jump:
; 10005244(C) 
;
l10005283: mov dword ptr [ebp-000004030h], 000000000h
           jmp l1000529E
;
;* Jump:
; 10005332(U) 
;
l1000528F: mov eax, dword ptr [ebp-000004030h]
           add eax, 000000001h
           mov dword ptr [ebp-000004030h], eax
;
;* Jump:
; 1000528D(U) 
;
l1000529E: mov ecx, dword ptr [ebp-000004024h]
           and ecx, 00000FFFFh
           mov edx, dword ptr [ebp-00000409Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov ecx, dword ptr [ebp-000004030h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10005337
           mov edx, dword ptr [ebp-000004024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-00000409Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-000004034h], ecx
           mov edx, dword ptr [ebp-000004034h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000004030h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000407Ch], edx
           mov eax, dword ptr [ebp-00000407Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l10005332
           mov dword ptr [ebp-00000404Ch], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           lea ecx, [ebp-000004020h]
           call l100039BA
           mov eax, dword ptr [ebp-00000404Ch]
           jmp near ptr l1000552C
;
;* Jump:
; 10005305(C) 
;
l10005332: jmp near ptr l1000528F
;
;* Jump:
; 100052BC(C) 
;
l10005337: push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004050h], eax
           cmp dword ptr [ebp-000004050h], 000000000h
           je l1000536F
           push 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-000004050h]
           call l10004371
           mov dword ptr [ebp-000004098h], eax
           jmp l10005379
;
;* Jump:
; 1000534E(C) 
;
l1000536F: mov dword ptr [ebp-000004098h], 000000000h
;
;* Jump:
; 1000536D(U) 
;
l10005379: mov eax, dword ptr [ebp-000004024h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-00000409Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-000004094h], edx
           mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [ebp-000004094h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l100053DC
           mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000004094h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-000004098h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-000004094h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10005506
;
;* Jump:
; 100053A5(C) 
;
l100053DC: mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-000004094h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-000004094h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-000004094h]
           cmp dword ptr [ecx+008h], 000000000h
           je l100054AC
           mov edx, dword ptr [ebp-000004094h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004088h], eax
           mov ecx, dword ptr [ebp-000004088h]
           mov dword ptr [ebp-000004080h], ecx
           mov dword ptr [ebp-000004084h], 000000000h
           jmp l10005449
;
;* Jump:
; 1000547B(U) 
;
l1000543A: mov edx, dword ptr [ebp-000004084h]
           add edx, 000000001h
           mov dword ptr [ebp-000004084h], edx
;
;* Jump:
; 10005438(U) 
;
l10005449: mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [ebp-000004084h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000547D
           mov edx, dword ptr [ebp-000004094h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000004084h]
           mov edx, dword ptr [ebp-000004080h]
           mov esi, dword ptr [ebp-000004084h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1000543A
;
;* Jump:
; 10005458(C) 
;
l1000547D: mov ecx, dword ptr [ebp-000004094h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00000408Ch], edx
           mov eax, dword ptr [ebp-00000408Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000004094h]
           mov edx, dword ptr [ebp-000004080h]
           mov dword ptr [ecx+004h], edx
           jmp l100054D6
;
;* Jump:
; 10005401(C) 
;
l100054AC: mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004090h], eax
           mov edx, dword ptr [ebp-000004094h]
           mov eax, dword ptr [ebp-000004090h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 100054AA(U) 
;
l100054D6: mov ecx, dword ptr [ebp-000004094h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000004094h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-000004098h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-000004094h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-000004094h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10005231(U), 100053D7(U) 
;
l10005506: mov dword ptr [ebp-000004054h], 000000001h
           lea ecx, [ebp-000004018h]
           call l10001C31
           lea ecx, [ebp-000004020h]
           call l100039BA
           mov eax, dword ptr [ebp-000004054h]
;
;* Jump:
; 10004E30(U), 10004EBE(U), 10005054(U), 1000527E(U), 1000532D(U) 
;
l1000552C: pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10004E0B ENDP
;
;* Call:
; 10005257 
;
;* Export: ?LocateResourcesIn@B_ResourceManager@@AAEIABVB_Name@@AAVB_IDataFile@@@Z, 00E3
;
l10005533 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
           push esi
           mov dword ptr [ebp-060h], ecx
           mov dword ptr [ebp-004h], 000000000h
           lea ecx, [ebp-01Ch]
           call l10003300
           mov word ptr [ebp-024h], 00000h
           mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           lea eax, [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10005582
;
;* Jump:
; 100057F6(U) 
;
l10005579: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10005577(U) 
;
l10005582: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-010h]
           jnb l100057FB
           mov ecx, dword ptr [ebp+00Ch]
           call l100019AF
           mov dword ptr [ebp-020h], eax
           lea ecx, [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call l10001B97
           add esp, 000000008h
           lea eax, [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l10001BD9
           add esp, 000000008h
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call l10001BEF
           add esp, 000000008h
           lea ecx, [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call l10003904
           add esp, 000000008h
           mov eax, dword ptr [ebp-024h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-060h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005623
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           cmp dword ptr [ebp-028h], 000000000h
           je l1000560A
           mov ecx, dword ptr [ebp-028h]
           call l100046A6
           mov dword ptr [ebp-064h], eax
           jmp l10005611
;
;* Jump:
; 100055FB(C) 
;
l1000560A: mov dword ptr [ebp-064h], 000000000h
;
;* Jump:
; 10005608(U) 
;
l10005611: mov edx, dword ptr [ebp-024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [eax+edx*04h], ecx
;
;* Jump:
; 100055E8(C) 
;
l10005623: mov edx, dword ptr [ebp-024h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-03Ch], ecx
           mov dword ptr [ebp-038h], 000000000h
           jmp l10005647
;
;* Jump:
; 10005681(U) 
;
l1000563E: mov edx, dword ptr [ebp-038h]
           add edx, 000000001h
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 1000563C(U) 
;
l10005647: mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-038h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10005683
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-038h]
           mov ecx, dword ptr [eax+ecx*04h]
           call l10003A2F
           push eax
           lea ecx, [ebp-01Ch]
           call l1000354D
           test eax, eax
           je l10005681
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-040h], edx
           jmp l1000568A
;
;* Jump:
; 1000566E(C) 
;
l10005681: jmp l1000563E
;
;* Jump:
; 10005650(C) 
;
l10005683: mov dword ptr [ebp-040h], 000000000h
;
;* Jump:
; 1000567F(U) 
;
l1000568A: cmp dword ptr [ebp-040h], 000000000h
           jne l100057E0
           push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           cmp dword ptr [ebp-02Ch], 000000000h
           je l100056C2
           push 000000000h
           lea eax, [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-02Ch]
           call l10004371
           mov dword ptr [ebp-05Ch], eax
           jmp l100056C9
;
;* Jump:
; 100056A5(C) 
;
l100056C2: mov dword ptr [ebp-05Ch], 000000000h
;
;* Jump:
; 100056C0(U) 
;
l100056C9: mov eax, dword ptr [ebp-024h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-058h], edx
           mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1000570E
           mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-05Ch]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-058h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l100057D7
;
;* Jump:
; 100056E6(C) 
;
l1000570E: mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-058h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-058h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-058h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10005798
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-044h], ecx
           mov dword ptr [ebp-048h], 000000000h
           jmp l10005756
;
;* Jump:
; 10005776(U) 
;
l1000574D: mov edx, dword ptr [ebp-048h]
           add edx, 000000001h
           mov dword ptr [ebp-048h], edx
;
;* Jump:
; 1000574B(U) 
;
l10005756: mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [ebp-048h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10005778
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ebp-044h]
           mov esi, dword ptr [ebp-048h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1000574D
;
;* Jump:
; 1000575F(C) 
;
l10005778: mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ebp-050h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ecx+004h], edx
           jmp l100057B6
;
;* Jump:
; 10005727(C) 
;
l10005798: mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-054h], eax
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [ebp-054h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 10005796(U) 
;
l100057B6: mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-05Ch]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-058h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10005709(U) 
;
l100057D7: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000568E(C) 
;
l100057E0: push 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           call l100019AF
           add eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l100018A6
           jmp near ptr l10005579
;
;* Jump:
; 10005588(C) 
;
l100057FB: cmp dword ptr [ebp-004h], 000000000h
           je l10005815
           mov dword ptr [ebp-030h], 000000001h
           lea ecx, [ebp-01Ch]
           call l100039BA
           mov eax, dword ptr [ebp-030h]
           jmp l10005827
;
;* Jump:
; 100057FF(C) 
;
l10005815: mov dword ptr [ebp-034h], 000000000h
           lea ecx, [ebp-01Ch]
           call l100039BA
           mov eax, dword ptr [ebp-034h]
;
;* Jump:
; 10005813(U) 
;
l10005827: pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10005533 ENDP
;
;* Call:
; 10006597 
;
;* Export: ?AddAutoResource@B_ResourceManager@@QAEIABVB_Name@@PAVB_Resource@@H@Z, 0096
;
l1000582E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000048h
           push esi
           mov dword ptr [ebp-040h], ecx
           mov dword ptr [ebp-024h], 000000000h
           cmp dword ptr [ebp+00Ch], 000000000h
           jne l1000585D
           push 0000001ECh
;
;* String: "C:\code\GDS\Resource.cpp"
;
           push offset g10047300
;
;* String: "resource"
;
           push offset g1004731C
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 10005843(C) 
;
l1000585D: cmp dword ptr [ebp+010h], 000000000h
           jl l1000586C
           cmp dword ptr [ebp+010h], 000000100h
           jle l10005873
;
;* Jump:
; 10005861(C) 
;
l1000586C: xor eax, eax
           jmp near ptr l10005AE9
;
;* Jump:
; 1000586A(C) 
;
l10005873: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-040h]
           cmp dword ptr [edx+ecx*04h], 000000000h
           jne l100058B2
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l1000589F
           mov ecx, dword ptr [ebp-014h]
           call l100046A6
           mov dword ptr [ebp-044h], eax
           jmp l100058A6
;
;* Jump:
; 10005890(C) 
;
l1000589F: mov dword ptr [ebp-044h], 000000000h
;
;* Jump:
; 1000589D(U) 
;
l100058A6: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ecx+eax*04h], edx
;
;* Jump:
; 1000587D(C) 
;
l100058B2: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l100058D3
;
;* Jump:
; 1000594F(U) 
;
l100058CA: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 100058C8(U) 
;
l100058D3: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-004h]
           jnb l10005954
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000004h
           call l1000354D
           test eax, eax
           je l1000594F
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+01Ch], 000000000h
           je l1000593C
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+008h]
           push eax
           mov ecx, dword ptr [edx+004h]
           push ecx
;
;* String: "B_ResourceManager::AddAutoResource():  Performance Warning.. Loading 
;          resource %s twice.
;          "
;
           push offset g10047328
           call l10029BE0
           add esp, 00000000Ch
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l10005AE9
;
;* Jump:
; 1000590D(C) 
;
l1000593C: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+01Ch], eax
           mov eax, 000000001h
           jmp near ptr l10005AE9
;
;* Jump:
; 10005904(C) 
;
l1000594F: jmp near ptr l100058CA
;
;* Jump:
; 100058D9(C) 
;
l10005954: push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l10005991
;
;* String: "<Blade Internal>"
;
           push offset g10047384
           lea ecx, [ebp-020h]
           call l10003337
           or dword ptr [ebp-024h], 000000001h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           push 000000000h
           lea edx, [ebp-020h]
           push edx
           mov ecx, dword ptr [ebp-018h]
           call l10004371
           mov dword ptr [ebp-048h], eax
           jmp l10005998
;
;* Jump:
; 10005965(C) 
;
l10005991: mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 1000598F(U) 
;
l10005998: mov eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-024h]
           and ecx, 000000001h
           test ecx, ecx
           je l100059B4
           and dword ptr [ebp-024h], 0FFFFFFFEh
           lea ecx, [ebp-020h]
           call l100039BA
;
;* Jump:
; 100059A6(C) 
;
l100059B4: cmp dword ptr [ebp-00Ch], 000000000h
           jne l100059D2
           push 000000206h
;
;* String: "C:\code\GDS\Resource.cpp"
;
           push offset g10047398
;
;* String: "res_loc"
;
           push offset g100473B4
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 100059B8(C) 
;
l100059D2: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l10005A1B
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l10005AE4
;
;* Jump:
; 100059F3(C) 
;
l10005A1B: mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-03Ch]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-03Ch]
           cmp dword ptr [eax+008h], 000000000h
           je l10005AA5
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-030h], eax
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], eax
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10005A63
;
;* Jump:
; 10005A83(U) 
;
l10005A5A: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 10005A58(U) 
;
l10005A63: mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l10005A85
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-028h]
           mov esi, dword ptr [ebp-02Ch]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10005A5A
;
;* Jump:
; 10005A6C(C) 
;
l10005A85: mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+004h], ecx
           jmp l10005AC3
;
;* Jump:
; 10005A34(C) 
;
l10005AA5: mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 10005AA3(U) 
;
l10005AC3: mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 10005A16(U) 
;
l10005AE4: mov eax, 000000001h
;
;* Jump:
; 1000586E(U), 10005937(U), 1000594A(U) 
;
l10005AE9: pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1000582E ENDP
;
;* Call:
; 1000620D 
;
;* Export: ?GetResource@B_ResourceManager@@QAEPAVB_Resource@@GABVB_Name@@@Z, 00C9
;
l10005AF0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005B0C
           xor eax, eax
           jmp l10005B29
;
;* Jump:
; 10005B06(C) 
;
l10005B0C: mov dx, word ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           and ecx, 00000FFFFh
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+ecx*04h]
           call l10004874
;
;* Jump:
; 10005B0A(U) 
;
l10005B29: mov esp, ebp
           pop ebp
           ret 00008h
l10005AF0 ENDP
;
;* Export: ?GetResourceIndex@B_ResourceManager@@QAEIGABVB_Name@@@Z, 00CC
;
l10005B2F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005B4C
           or eax, 0FFFFFFFFh
           jmp l10005B69
;
;* Jump:
; 10005B45(C) 
;
l10005B4C: mov dx, word ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           and ecx, 00000FFFFh
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+ecx*04h]
           call l100048EF
;
;* Jump:
; 10005B4A(U) 
;
l10005B69: mov esp, ebp
           pop ebp
           ret 00008h
l10005B2F ENDP
;
;* Call:
; 10005C63, 100063D3 
;
;* Export: ?GetResource@B_ResourceManager@@QAEPAVB_Resource@@GI@Z, 00CA
;
l10005B6F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005B8B
           xor eax, eax
           jmp l10005BAC
;
;* Jump:
; 10005B85(C) 
;
l10005B8B: mov dx, word ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+ecx*04h]
           call l10004425
;
;* Jump:
; 10005B89(U) 
;
l10005BAC: mov esp, ebp
           pop ebp
           ret 00008h
l10005B6F ENDP
;
;* Call:
; 10006670, 10040670 
;
;* Export: ?LoadResourceToMemory@B_ResourceManager@@QAEIGPBD@Z, 00E1
;
l10005BB2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005BD0
           xor eax, eax
           jmp l10005C0D
;
;* Jump:
; 10005BCA(C) 
;
l10005BD0: mov edx, dword ptr [ebp+00Ch]
           push edx
           lea ecx, [ebp-00Ch]
           call l10003337
           mov ax, word ptr [ebp+008h]
           push eax
           lea ecx, [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+edx*04h]
           call l10004874
           neg eax
           sbb eax, eax
           neg eax
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00Ch]
           call l100039BA
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10005BCE(U) 
;
l10005C0D: mov esp, ebp
           pop ebp
           ret 00008h
l10005BB2 ENDP
;
;* Call:
; 100405CD 
;
;* Export: ?SaveResource@B_ResourceManager@@QAEIGIPBD@Z, 0106
;
l10005C13 PROC
           push ebp
           mov ebp, esp
           mov eax, 000004024h
           call l10041600
           mov dword ptr [ebp-000004020h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           cmp eax, 000000005h
           je l10005C3A
           xor eax, eax
           jmp near ptr l10005CC7
;
;* Jump:
; 10005C31(C) 
;
l10005C3A: mov ecx, dword ptr [ebp+008h]
           and ecx, 00000FFFFh
           mov dword ptr [ebp-000004024h], ecx
           cmp dword ptr [ebp-000004024h], 000000005h
           je l10005C54
           jmp l10005CC5
;
;* Jump:
; 10005C50(C) 
;
l10005C54: mov edx, dword ptr [ebp+00Ch]
           push edx
           mov ax, word ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000004020h]
           call l10005B6F
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l10005C75
           xor eax, eax
           jmp l10005CC7
;
;* Jump:
; 10005C6F(C) 
;
l10005C75: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000004018h], ecx
           push 000008000h
           mov edx, dword ptr [ebp+010h]
           push edx
           lea ecx, [ebp-000004014h]
           call l10001C44
           mov eax, dword ptr [ebp-000004018h]
           push eax
           lea ecx, [ebp-000004014h]
           push ecx
           call l100369F0
           add esp, 000000008h
           mov dword ptr [ebp-00000401Ch], 000000001h
           lea ecx, [ebp-000004014h]
           call l10002082
           mov eax, dword ptr [ebp-00000401Ch]
           jmp l10005CC7
;
;* Jump:
; 10005C52(U) 
;
l10005CC5: xor eax, eax
;
;* Jump:
; 10005C35(U), 10005C73(U), 10005CC3(U) 
;
l10005CC7: mov esp, ebp
           pop ebp
           ret 0000Ch
l10005C13 ENDP
;
;* Call:
; 10005DA3, 10006398, 10040522 
;
;* Export: ?IsResourceLoaded@B_ResourceManager@@QAEHHH@Z, 00D9
;
l10005CCD PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005CE4
           xor eax, eax
           jmp l10005D00
;
;* Jump:
; 10005CDE(C) 
;
l10005CE4: mov dx, word ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+ecx*04h]
           call l10004406
;
;* Jump:
; 10005CE2(U) 
;
l10005D00: mov esp, ebp
           pop ebp
           ret 00008h
l10005CCD ENDP
;
;* Call:
; 10005FB9 
;
;* Export: ?IsResourceLoaded@B_ResourceManager@@QAEHHPBD@Z, 00DA
;
l10005D06 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005D22
           xor eax, eax
           jmp near ptr l10005DA8
;
;* Jump:
; 10005D19(C) 
;
l10005D22: mov edx, dword ptr [ebp+00Ch]
           push edx
           lea ecx, [ebp-00Ch]
           call l10003337
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10005D4C
;
;* Jump:
; 10005D7D(U) 
;
l10005D43: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10005D41(U) 
;
l10005D4C: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10005D7F
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           lea ecx, [ebp-00Ch]
           call l1000354D
           test eax, eax
           je l10005D7D
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           jmp l10005D86
;
;* Jump:
; 10005D73(C) 
;
l10005D7D: jmp l10005D43
;
;* Jump:
; 10005D55(C) 
;
l10005D7F: mov dword ptr [ebp-004h], 0FFFFFFFFh
;
;* Jump:
; 10005D7B(U) 
;
l10005D86: lea ecx, [ebp-00Ch]
           call l100039BA
           cmp dword ptr [ebp-004h], 0FFFFFFFFh
           jne l10005D98
           xor eax, eax
           jmp l10005DA8
;
;* Jump:
; 10005D92(C) 
;
l10005D98: mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-018h]
           call l10005CCD
;
;* Jump:
; 10005D1D(U), 10005D96(U) 
;
l10005DA8: mov esp, ebp
           pop ebp
           ret 00008h
l10005D06 ENDP
;
;* Export: ?IsResourceLinked@B_ResourceManager@@QAEHHPBD@Z, 00D8
;
l10005DAE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005DC7
           xor eax, eax
           jmp l10005E3C
;
;* Jump:
; 10005DC1(C) 
;
l10005DC7: mov edx, dword ptr [ebp+00Ch]
           push edx
           lea ecx, [ebp-00Ch]
           call l10003337
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10005DF1
;
;* Jump:
; 10005E22(U) 
;
l10005DE8: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10005DE6(U) 
;
l10005DF1: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10005E24
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           lea ecx, [ebp-00Ch]
           call l1000354D
           test eax, eax
           je l10005E22
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           jmp l10005E2B
;
;* Jump:
; 10005E18(C) 
;
l10005E22: jmp l10005DE8
;
;* Jump:
; 10005DFA(C) 
;
l10005E24: mov dword ptr [ebp-004h], 0FFFFFFFFh
;
;* Jump:
; 10005E20(U) 
;
l10005E2B: lea ecx, [ebp-00Ch]
           call l100039BA
           xor eax, eax
           cmp dword ptr [ebp-004h], 0FFFFFFFFh
           sete  al
;
;* Jump:
; 10005DC5(U) 
;
l10005E3C: mov esp, ebp
           pop ebp
           ret 00008h
l10005DAE ENDP
;
;* Call:
; 100403DD 
;
;* Export: ?GetResourceName@B_ResourceManager@@QAEPBDGI@Z, 00CD
;
l10005E42 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005E5E
           xor eax, eax
           jmp l10005E89
;
;* Jump:
; 10005E58(C) 
;
l10005E5E: mov dx, word ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+ecx*04h]
           call l10004425
           mov ecx, eax
           add ecx, 000000004h
           call l10003457
;
;* Jump:
; 10005E5C(U) 
;
l10005E89: mov esp, ebp
           pop ebp
           ret 00008h
l10005E42 ENDP
;
;* Call:
; 10040480 
;
;* Export: ?GetResourceFile@B_ResourceManager@@QAEPBDGI@Z, 00CB
;
l10005E8F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005EAB
           xor eax, eax
           jmp l10005ECB
;
;* Jump:
; 10005EA5(C) 
;
l10005EAB: mov edx, dword ptr [ebp+008h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+eax*04h]
           add ecx, 00000000Ch
           call l10003457
;
;* Jump:
; 10005EA9(U) 
;
l10005ECB: mov esp, ebp
           pop ebp
           ret 00008h
l10005E8F ENDP
;
;* Call:
; 100063FD 
;
;* Export: ?FreeResource@B_ResourceManager@@QAEXPAVB_Resource@@@Z, 00B6
;
l10005ED1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jne l10005EF2
;
;* String: "B_ResourceManager::FreeResource() -> Warning, trying to free null 
;          resource.
;          "
;
           push offset g100473BC
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l10005F2C
;
;* Jump:
; 10005EDC(C) 
;
l10005EF2: mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+004h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jne l10005F0D
           jmp l10005F2C
;
;* Jump:
; 10005F09(C) 
;
l10005F0D: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+004h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+eax*04h]
           call l1000494D
;
;* Jump:
; 10005EF0(U), 10005F0B(U) 
;
l10005F2C: mov esp, ebp
           pop ebp
           ret 00004h
l10005ED1 ENDP
;
;* Call:
; 10006338, 1004033A 
;
;* Export: ?NResources@B_ResourceManager@@QAEIG@Z, 00EB
;
l10005F32 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+eax*04h], 000000000h
           je l10005F5E
           mov edx, dword ptr [ebp+008h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h]
           mov eax, dword ptr [ecx+008h]
           jmp l10005F60
;
;* Jump:
; 10005F48(C) 
;
l10005F5E: xor eax, eax
;
;* Jump:
; 10005F5C(U) 
;
l10005F60: mov esp, ebp
           pop ebp
           ret 00004h
l10005F32 ENDP
;
;* Export: ?AddBodLink@B_ResourceManager@@QAEXPBDH0H@Z, 0098
;
l10005F66 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           push esi
           mov dword ptr [ebp-03Ch], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           mov eax, dword ptr [ebp-03Ch]
           cmp dword ptr [eax+004h], 000000000h
           jne l10005FB0
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10005FA0
           mov ecx, dword ptr [ebp-004h]
           call l100046A6
           mov dword ptr [ebp-040h], eax
           jmp l10005FA7
;
;* Jump:
; 10005F91(C) 
;
l10005FA0: mov dword ptr [ebp-040h], 000000000h
;
;* Jump:
; 10005F9E(U) 
;
l10005FA7: mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 10005F7E(C) 
;
l10005FB0: mov eax, dword ptr [ebp+010h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp-03Ch]
           call l10005D06
           test eax, eax
           jne l10006151
           push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10006016
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea ecx, [ebp-010h]
           call l10003337
           or dword ptr [ebp-01Ch], 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           lea ecx, [ebp-018h]
           call l10003337
           or dword ptr [ebp-01Ch], 000000002h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           lea eax, [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10004371
           mov dword ptr [ebp-038h], eax
           jmp l1000601D
;
;* Jump:
; 10005FD7(C) 
;
l10006016: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 10006014(U) 
;
l1000601D: mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1000605A
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10006123
;
;* Jump:
; 10006032(C) 
;
l1000605A: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-034h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-034h]
           cmp dword ptr [ecx+008h], 000000000h
           je l100060E4
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-024h], 000000000h
           jmp l100060A2
;
;* Jump:
; 100060C2(U) 
;
l10006099: mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 10006097(U) 
;
l100060A2: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [eax+008h]
           jnb l100060C4
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-020h]
           mov esi, dword ptr [ebp-024h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10006099
;
;* Jump:
; 100060AB(C) 
;
l100060C4: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx+004h], edx
           jmp l10006102
;
;* Jump:
; 10006073(C) 
;
l100060E4: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-030h], eax
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 100060E2(U) 
;
l10006102: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10006055(U) 
;
l10006123: mov ecx, dword ptr [ebp-01Ch]
           and ecx, 000000002h
           test ecx, ecx
           je l10006139
           and dword ptr [ebp-01Ch], 0FFFFFFFDh
           lea ecx, [ebp-018h]
           call l100039BA
;
;* Jump:
; 1000612B(C) 
;
l10006139: mov edx, dword ptr [ebp-01Ch]
           and edx, 000000001h
           test edx, edx
           je l1000614F
           and dword ptr [ebp-01Ch], 0FFFFFFFEh
           lea ecx, [ebp-010h]
           call l100039BA
;
;* Jump:
; 10006141(C) 
;
l1000614F: jmp l10006174
;
;* Jump:
; 10005FC0(C) 
;
l10006151: mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
;
;* String: "B_ResourceManager::AddBodLink() -> the file %s called %s is duplicated
;          "
;
           push offset g1004740C
           call l10029BE0
           add esp, 00000000Ch
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 1000614F(U) 
;
l10006174: pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l10005F66 ENDP
;
l1000617B PROC
           push ebp
           mov ebp, esp
           call l1000618A
           call l10006199
           pop ebp
           ret
l1000617B ENDP
;
;* Call:
; 1000617E 
;
l1000618A PROC
           push ebp
           mov ebp, esp
           mov ecx, offset g1004A118
           call l100049F8
           pop ebp
           ret
l1000618A ENDP
;
;* Call:
; 10006183 
;
l10006199 PROC
           push ebp
           mov ebp, esp
           push offset l100061AB
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l10006199 ENDP
;
l100061AB PROC
           push ebp
           mov ebp, esp
           mov ecx, offset g1004A118
           call l10004A9B
           pop ebp
           ret
l100061AB ENDP
;
;* Call:
; 1003EB32 
;
l100061BA PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-00Ch]
           call l10003337
           push 000000001h
           push 000000000h
           lea ecx, [ebp-00Ch]
           push ecx
           mov ecx, offset g1004A118
           call l10004E0B
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00Ch]
           call l100039BA
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l100061BA ENDP
;
;* Call:
; 1003EB87 
;
l100061F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-00Ch]
           call l10003337
           lea ecx, [ebp-00Ch]
           push ecx
           push 000000001h
           mov ecx, offset g1004A118
           call l10005AF0
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00Ch]
           call l100039BA
           cmp dword ptr [ebp-004h], 000000000h
           je l1000622A
           mov eax, 000000001h
           jmp l1000622C
;
;* Jump:
; 10006221(C) 
;
l1000622A: xor eax, eax
;
;* Jump:
; 10006228(U) 
;
l1000622C: mov esp, ebp
           pop ebp
           ret
l100061F0 ENDP
;
;* Call:
; 1003EC31 
;
l10006230 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-00Ch]
           call l10003337
           push 000000002h
           push 000000000h
           lea ecx, [ebp-00Ch]
           push ecx
           mov ecx, offset g1004A118
           call l10004E0B
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00Ch]
           call l100039BA
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10006230 ENDP
;
;* Call:
; 1003EBDC 
;
l10006266 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-00Ch]
           call l10003337
           push 000000005h
           push 000000000h
           lea ecx, [ebp-00Ch]
           push ecx
           mov ecx, offset g1004A118
           call l10004E0B
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00Ch]
           call l100039BA
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10006266 ENDP
;
;* Call:
; 10006619, 10006643 
;
;* Export: ?SavePackedData@B_ResourceManager@@QAEHHPBD@Z, 0105
;
l1000629C PROC
           push ebp
           mov ebp, esp
           mov eax, 00000402Ch
           call l10041600
           mov dword ptr [ebp-00000402Ch], ecx
           cmp dword ptr [ebp+008h], 000000001h
           je l100062D3
           cmp dword ptr [ebp+008h], 000000005h
           je l100062D3
           push 0000002BFh
;
;* String: "C:\code\GDS\Resource.cpp"
;
           push offset g10047454
;
;* String: "class_id==B_CID_OBJDSCR || class_id==B_CID_AUTO_OBJDSCR"
;
           push offset g10047470
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 100062B3(C), 100062B9(C) 
;
l100062D3: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000402Ch]
           cmp dword ptr [edx+ecx*04h], 000000000h
           jne l100062E9
           xor eax, eax
           jmp near ptr l10006444
;
;* Jump:
; 100062E0(C) 
;
l100062E9: push 000008000h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-000004014h]
           call l10001C44
           xor ecx, ecx
           cmp dword ptr [ebp-000004014h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l1000632D
           mov dword ptr [ebp-000004024h], 000000000h
           lea ecx, [ebp-000004014h]
           call l10002082
           mov eax, dword ptr [ebp-000004024h]
           jmp near ptr l10006444
;
;* Jump:
; 1000630B(C) 
;
l1000632D: mov dx, word ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-00000402Ch]
           call l10005F32
           mov dword ptr [ebp-004h], eax
           lea eax, [ebp-004h]
           push eax
           lea ecx, [ebp-000004014h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-000004018h], 000000000h
           jmp l1000636E
;
;* Jump:
; 10006424(U) 
;
l1000635F: mov edx, dword ptr [ebp-000004018h]
           add edx, 000000001h
           mov dword ptr [ebp-000004018h], edx
;
;* Jump:
; 1000635D(U) 
;
l1000636E: mov eax, dword ptr [ebp-000004018h]
           cmp eax, dword ptr [ebp-004h]
           jnb l10006429
           mov dword ptr [ebp-00000401Ch], 000000001h
           mov ecx, dword ptr [ebp-000004018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-00000402Ch]
           call l10005CCD
           test eax, eax
           je l10006404
           mov dword ptr [ebp-00000401Ch], 000000001h
           lea eax, [ebp-00000401Ch]
           push eax
           lea ecx, [ebp-000004014h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov edx, dword ptr [ebp-000004018h]
           push edx
           mov ax, word ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00000402Ch]
           call l10005B6F
           mov dword ptr [ebp-000004020h], eax
           lea ecx, [ebp-000004014h]
           push ecx
           mov ecx, dword ptr [ebp-000004020h]
           call l100384CA
           mov edx, dword ptr [ebp-000004020h]
           push edx
           mov ecx, dword ptr [ebp-00000402Ch]
           call l10005ED1
           jmp l10006424
;
;* Jump:
; 1000639F(C) 
;
l10006404: mov dword ptr [ebp-00000401Ch], 000000000h
           lea eax, [ebp-00000401Ch]
           push eax
           lea ecx, [ebp-000004014h]
           push ecx
           call l1000201E
           add esp, 000000008h
;
;* Jump:
; 10006402(U) 
;
l10006424: jmp near ptr l1000635F
;
;* Jump:
; 10006377(C) 
;
l10006429: mov dword ptr [ebp-000004028h], 000000001h
           lea ecx, [ebp-000004014h]
           call l10002082
           mov eax, dword ptr [ebp-000004028h]
;
;* Jump:
; 100062E4(U), 10006328(U) 
;
l10006444: mov esp, ebp
           pop ebp
           ret 00008h
l1000629C ENDP
;
;* Call:
; 1000662E, 10006658 
;
;* Export: ?LoadPackedData@B_ResourceManager@@QAEHHPBD@Z, 00E0
;
l1000644A PROC
           push ebp
           mov ebp, esp
           mov eax, 000004048h
           call l10041600
           mov dword ptr [ebp-000004040h], ecx
           cmp dword ptr [ebp+008h], 000000001h
           je l10006481
           cmp dword ptr [ebp+008h], 000000005h
           je l10006481
           push 0000002E2h
;
;* String: "C:\code\GDS\Resource.cpp"
;
           push offset g100474A8
;
;* String: "class_id==B_CID_OBJDSCR || class_id==B_CID_AUTO_OBJDSCR"
;
           push offset g100474C4
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 10006461(C), 10006467(C) 
;
l10006481: push 000008000h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea ecx, [ebp-00000401Ch]
           call l10001788
           xor edx, edx
           cmp dword ptr [ebp-00000401Ch], 0FFFFFFFFh
           setne dl
           test edx, edx
           jne l100064C5
           mov dword ptr [ebp-00000402Ch], 000000000h
           lea ecx, [ebp-00000401Ch]
           call l10001C31
           mov eax, dword ptr [ebp-00000402Ch]
           jmp near ptr l10006605
;
;* Jump:
; 100064A3(C) 
;
l100064C5: lea eax, [ebp-004h]
           push eax
           lea ecx, [ebp-00000401Ch]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov dword ptr [ebp-000004020h], 000000000h
           jmp l100064F3
;
;* Jump:
; 100065E5(U) 
;
l100064E4: mov edx, dword ptr [ebp-000004020h]
           add edx, 000000001h
           mov dword ptr [ebp-000004020h], edx
;
;* Jump:
; 100064E2(U) 
;
l100064F3: mov eax, dword ptr [ebp-000004020h]
           cmp eax, dword ptr [ebp-004h]
           jnb l100065EA
           lea ecx, [ebp-000004024h]
           push ecx
           lea edx, [ebp-00000401Ch]
           push edx
           call l10001BEF
           add esp, 000000008h
           cmp dword ptr [ebp-000004024h], 000000000h
           je l100065E5
           push 000000278h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004030h], eax
           cmp dword ptr [ebp-000004030h], 000000000h
           je l10006554
           mov ecx, dword ptr [ebp-000004030h]
           call l10037EF5
           mov dword ptr [ebp-000004044h], eax
           jmp l1000655E
;
;* Jump:
; 1000653F(C) 
;
l10006554: mov dword ptr [ebp-000004044h], 000000000h
;
;* Jump:
; 10006552(U) 
;
l1000655E: mov eax, dword ptr [ebp-000004044h]
           mov dword ptr [ebp-000004028h], eax
           lea ecx, [ebp-00000401Ch]
           push ecx
           mov ecx, dword ptr [ebp-000004028h]
           call l1003896F
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-000004028h]
           push eax
           mov ecx, dword ptr [ebp-000004028h]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp-000004040h]
           call l1000582E
           test eax, eax
           jne l100065E5
           mov edx, dword ptr [ebp-000004028h]
           mov dword ptr [ebp-000004038h], edx
           mov eax, dword ptr [ebp-000004038h]
           mov dword ptr [ebp-000004034h], eax
           cmp dword ptr [ebp-000004034h], 000000000h
           je l100065DB
           push 000000001h
           mov ecx, dword ptr [ebp-000004034h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000004034h]
           call [edx]
           mov dword ptr [ebp-000004048h], eax
           jmp l100065E5
;
;* Jump:
; 100065BF(C) 
;
l100065DB: mov dword ptr [ebp-000004048h], 000000000h
;
;* Jump:
; 1000651F(C), 1000659E(C), 100065D9(U) 
;
l100065E5: jmp near ptr l100064E4
;
;* Jump:
; 100064FC(C) 
;
l100065EA: mov dword ptr [ebp-00000403Ch], 000000001h
           lea ecx, [ebp-00000401Ch]
           call l10001C31
           mov eax, dword ptr [ebp-00000403Ch]
;
;* Jump:
; 100064C0(U) 
;
l10006605: mov esp, ebp
           pop ebp
           ret 00008h
l1000644A ENDP
;
;* Call:
; 1003EC86 
;
l1000660B PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           push 000000001h
           mov ecx, offset g1004A118
           call l1000629C
           pop ebp
           ret
l1000660B ENDP
;
;* Call:
; 1003ECDB 
;
l10006620 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           push 000000001h
           mov ecx, offset g1004A118
           call l1000644A
           pop ebp
           ret
l10006620 ENDP
;
;* Call:
; 1003ED30 
;
l10006635 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           push 000000005h
           mov ecx, offset g1004A118
           call l1000629C
           pop ebp
           ret
l10006635 ENDP
;
;* Call:
; 1003ED85 
;
l1000664A PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           push 000000005h
           mov ecx, offset g1004A118
           call l1000644A
           pop ebp
           ret
l1000664A ENDP
;
;* Call:
; 1003EDE2 
;
l1000665F PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov cx, word ptr [ebp+008h]
           push ecx
           mov ecx, offset g1004A118
           call l10005BB2
           pop ebp
           ret
l1000665F ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10006680 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l100043CB
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l100066A5
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10006697(C) 
;
l100066A5: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10006680 ENDP
;
           int 03h
           int 03h
l100066B0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1000470A
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l100066D5
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100066C7(C) 
;
l100066D5: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100066B0 ENDP
;
           int 03h
           int 03h
;
;* Export: ??0B_Resource@@QAE@ABV0@@Z, 0029
;
           call l100066E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_Resource@@QAEAAV0@ABV0@@Z, 004E
;
           call l10006720; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10003EFE
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10006775
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10006767(C) 
;
l10006775: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
l10006780 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l100067FB
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 00000000Ch
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100067D8(U) 
;
l100067B8: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l100067DA
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10003EFE
           jmp l100067B8
;
;* Jump:
; 100067C5(C) 
;
l100067DA: mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l100067F3
           mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100067E2(C) 
;
l100067F3: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l1000681C
;
;* Jump:
; 10006791(C) 
;
l100067FB: mov ecx, dword ptr [ebp-010h]
           call l10003EFE
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10006819
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000680B(C) 
;
l10006819: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 100067F9(U) 
;
l1000681C: mov esp, ebp
           pop ebp
           ret 00004h
l10006780 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_ResourceManager@@QAEAAV0@ABV0@@Z, 004F
;
l10006830 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000101h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10006830 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_Color@@QAE@XZ, 000C
;
           call l10006860; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002C316, 1002C390, 1002C3EA, 1002C457, 1002C4DA, 1002C554, 1002C5AE, 1002C618, 
; 1002CC6D, 1002CCF0, 1002CD4A, 1002CDC0, 1002CE43, 1002CEC6, 1002CF20, 1002CF96, 
; 1002D5E0, 1002D663, 1002D6BD, 1002D733 
;
;* Export: ??0B_Color@@QAE@EEE@Z, 000B
;
           call l10006890; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002D788, 1002D989, 1002D9E5, 1002DBF4, 1002DC50, 1002DE30, 1002DE8C 
;
;* Export: ??HB_Color@@QBE?AV0@ABV0@@Z, 0080
;
l100068D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           add ecx, eax
           mov byte ptr [ebp-00Ch], cl
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           add edx, ecx
           mov byte ptr [ebp-008h], dl
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           add eax, edx
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], offset g100421F0
           mov ecx, dword ptr [ebp+008h]
           call l1000921A
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100068D0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002D75D, 1002D781, 1002D95E, 1002D982, 1002D9BA, 1002D9DE, 1002DBC9, 1002DBED, 
; 1002DC25, 1002DC49, 1002DE05, 1002DE29, 1002DE61, 1002DE85 
;
;* Export: ??DB_Color@@QBE?AV0@M@Z, 007C
;
l10006950 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           fmul dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-00Ch], al
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-018h], eax
           fild dword ptr [ebp-018h]
           fmul dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-008h], al
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           fild dword ptr [ebp-01Ch]
           fmul dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], offset g100421F0
           mov ecx, dword ptr [ebp+008h]
           call l1000921A
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10006950 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002D78F, 1002D990, 1002D9EC, 1002DBFB, 1002DC57, 1002DE37, 1002DE93 
;
;* Export: ??KB_Color@@QBE?AV0@M@Z, 0081
;
l100069E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           fdiv dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-00Ch], al
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-018h], eax
           fild dword ptr [ebp-018h]
           fdiv dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-008h], al
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           fild dword ptr [ebp-01Ch]
           fdiv dword ptr [ebp+00Ch]
           call l10041630; [BICRT._ftol].
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], offset g100421F0
           mov ecx, dword ptr [ebp+008h]
           call l1000921A
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100069E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??8B_Color@@QAEIABV0@@Z, 0073
;
l10006A70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           cmp ecx, eax
           jne l10006ABE
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           cmp edx, ecx
           jne l10006ABE
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           cmp eax, edx
           jne l10006ABE
           mov dword ptr [ebp-008h], 000000001h
           jmp l10006AC5
;
;* Jump:
; 10006A8B(C), 10006A9F(C), 10006AB3(C) 
;
l10006ABE: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10006ABC(U) 
;
l10006AC5: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10006A70 ENDP
;
           int 03h
           int 03h
;
;* Export: ??9B_Color@@QAEIABV0@@Z, 0078
;
l10006AD0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           cmp ecx, eax
           jne l10006B1E
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           cmp edx, ecx
           jne l10006B1E
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           cmp eax, edx
           jne l10006B1E
           mov dword ptr [ebp-008h], 000000000h
           jmp l10006B25
;
;* Jump:
; 10006AEB(C), 10006AFF(C), 10006B13(C) 
;
l10006B1E: mov dword ptr [ebp-008h], 000000001h
;
;* Jump:
; 10006B1C(U) 
;
l10006B25: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10006AD0 ENDP
;
           int 03h
           int 03h
;
;* Export: ?SetColor@B_Color@@QAEXEEE@Z, 0110
;
l10006B30 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ebp+008h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [ebp+010h]
           mov byte ptr [edx+006h], al
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+005h], dl
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10006B30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_Color@@QAE@ABV0@@Z, 000A
;
           call l10006B60; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002C65D, 1002C66C, 1002C67E, 1002C6C9, 1002C6D8, 1002C6ED, 1002CFE1, 1002CFF3, 
; 1002D005, 1002D050, 1002D065, 1002D07A 
;
;* Export: ??4B_Color@@QAEAAV0@ABV0@@Z, 0040
;
           call l10006BA0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_Pal@@QAE@XZ, 0023
;
l10006BE0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10006BE0 ENDP
;
           int 03h
           int 03h
;
;* Export: ??4B_Pal@@QAEAAV0@ABV0@@Z, 004A
;
           call l10006BF0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_BitMap@@QAEAAV0@ABV0@@Z, 003E
;
           call l10006C20; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
l10006C70 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l10008FDA
           mov ecx, dword ptr [ebp-004h]
           call l10003EFE
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10006CA0
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10006C92(C) 
;
l10006CA0: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10006C70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_BitMap24@@QAE@HH@Z, 0003
;
l10006CB0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov ecx, dword ptr [g1004A530]
           cmp ecx, dword ptr [g1004A528]
           jbe l10006CF6
           mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
           jmp near ptr l10006DBA
;
;* Jump:
; 10006CCF(C) 
;
l10006CF6: mov eax, dword ptr [g1004A530]
           add eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           cmp dword ptr [g1004A528], 000000000h
           je l10006D7D
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10006D3C
;
;* Jump:
; 10006D5C(U) 
;
l10006D33: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10006D31(U) 
;
l10006D3C: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [g1004A528]
           jnb l10006D5E
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-00Ch]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10006D33
;
;* Jump:
; 10006D45(C) 
;
l10006D5E: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [g1004A524], edx
           jmp l10006D9A
;
;* Jump:
; 10006D0D(C) 
;
l10006D7D: mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [g1004A524], ecx
;
;* Jump:
; 10006D7B(U) 
;
l10006D9A: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 10006CF1(U) 
;
l10006DBA: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           cmp dword ptr [ebp+008h], 000000000h
           je l10006DFF
           cmp dword ptr [ebp+00Ch], 000000000h
           je l10006DFF
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+004h]
           imul eax, dword ptr [edx+008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], edx
           jmp l10006E09
;
;* Jump:
; 10006DD0(C), 10006DD6(C) 
;
l10006DFF: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10006DFD(U) 
;
l10006E09: mov eax, dword ptr [ebp-01Ch]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10006CB0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?Clear@B_BitMap24@@QAEXXZ, 00A4
;
l10006E20 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l10006E51
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000000h
;
;* Jump:
; 10006E30(C) 
;
l10006E51: mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10006E20 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??1B_BitMap24@@UAE@XZ, 002D
;
l10006E70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           mov dword ptr [ebp-030h], ecx
           mov eax, dword ptr [ebp-030h]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov dword ptr [ebp-008h], 000000000h
           jmp l10006E95
;
;* Jump:
; 10006EB8(U) 
;
l10006E8C: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10006E8A(U) 
;
l10006E95: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [g1004A528]
           jnb l10006EBA
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+ecx*04h]
           cmp edx, dword ptr [ebp-030h]
           jne l10006EB8
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], eax
           jmp l10006EC1
;
;* Jump:
; 10006EAE(C) 
;
l10006EB8: jmp l10006E8C
;
;* Jump:
; 10006E9E(C) 
;
l10006EBA: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 10006EB6(U) 
;
l10006EC1: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [g1004A528]
           jb l10006ED1
           jmp near ptr l1000705F
;
;* Jump:
; 10006ECA(C) 
;
l10006ED1: xor edx, edx
           test edx, edx
           je l10006F09
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10006F02
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-01Ch]
           call [edx]
           mov dword ptr [ebp-034h], eax
           jmp l10006F09
;
;* Jump:
; 10006EEF(C) 
;
l10006F02: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 10006ED5(C), 10006F00(U) 
;
l10006F09: cmp dword ptr [g1004A528], 000000001h
           jne l10006F49
           mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
           jmp near ptr l1000705F
;
;* Jump:
; 10006F10(C) 
;
l10006F49: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A52C]
           lea ecx, [edx+eax-001h]
           cmp dword ptr [g1004A530], ecx
           jb l10007017
           mov edx, dword ptr [g1004A530]
           sub edx, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], edx
           mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10006FA2
;
;* Jump:
; 10006FBF(U) 
;
l10006F99: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10006F97(U) 
;
l10006FA2: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l10006FC1
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10006F99
;
;* Jump:
; 10006FA8(C) 
;
l10006FC1: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           jmp l10006FD5
;
;* Jump:
; 10006FF6(U) 
;
l10006FCC: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10006FCA(U) 
;
l10006FD5: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [g1004A528]
           jnb l10006FF8
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l10006FCC
;
;* Jump:
; 10006FDE(C) 
;
l10006FF8: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [g1004A524], edx
           jmp l10007050
;
;* Jump:
; 10006F5E(C) 
;
l10007017: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           jmp l1000702B
;
;* Jump:
; 1000704E(U) 
;
l10007022: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10007020(U) 
;
l1000702B: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [g1004A528]
           jnb l10007050
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [ecx+edx*04h-004h], eax
           jmp l10007022
;
;* Jump:
; 10007015(U), 10007034(C) 
;
l10007050: mov ecx, dword ptr [g1004A528]
           sub ecx, 000000001h
           mov dword ptr [g1004A528], ecx
;
;* Jump:
; 10006ECC(U), 10006F44(U) 
;
l1000705F: mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+00Ch], 000000000h
           je l1000707D
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007066(C) 
;
l1000707D: pop esi
           mov esp, ebp
           pop ebp
           ret
l10006E70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetDimension@B_BitMap24@@QBEXAAH0@Z, 00BC
;
l10007090 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax], edx
           mov esp, ebp
           pop ebp
           ret 00008h
l10007090 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?GetBits@B_BitMap24@@QBEPBEXZ, 00B8
;
l100070C0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+00Ch]
           mov esp, ebp
           pop ebp
           ret
l100070C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??_FB_BitMap24@@QAEXXZ, 0091
;
           call l100070E0; Implemented in c++ code
;
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           mov dword ptr [ebp-030h], ecx
           mov eax, dword ptr [ebp-030h]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov dword ptr [ebp-008h], 000000000h
           jmp l10007265
;
;* Jump:
; 10007288(U) 
;
l1000725C: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000725A(U) 
;
l10007265: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [g1004A528]
           jnb l1000728A
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+ecx*04h]
           cmp edx, dword ptr [ebp-030h]
           jne l10007288
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], eax
           jmp l10007291
;
;* Jump:
; 1000727E(C) 
;
l10007288: jmp l1000725C
;
;* Jump:
; 1000726E(C) 
;
l1000728A: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 10007286(U) 
;
l10007291: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [g1004A528]
           jb l100072A1
           jmp near ptr l1000742F
;
;* Jump:
; 1000729A(C) 
;
l100072A1: xor edx, edx
           test edx, edx
           je l100072D9
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l100072D2
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-01Ch]
           call [edx]
           mov dword ptr [ebp-034h], eax
           jmp l100072D9
;
;* Jump:
; 100072BF(C) 
;
l100072D2: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 100072A5(C), 100072D0(U) 
;
l100072D9: cmp dword ptr [g1004A528], 000000001h
           jne l10007319
           mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
           jmp near ptr l1000742F
;
;* Jump:
; 100072E0(C) 
;
l10007319: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A52C]
           lea ecx, [edx+eax-001h]
           cmp dword ptr [g1004A530], ecx
           jb l100073E7
           mov edx, dword ptr [g1004A530]
           sub edx, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], edx
           mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10007372
;
;* Jump:
; 1000738F(U) 
;
l10007369: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10007367(U) 
;
l10007372: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l10007391
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10007369
;
;* Jump:
; 10007378(C) 
;
l10007391: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           jmp l100073A5
;
;* Jump:
; 100073C6(U) 
;
l1000739C: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1000739A(U) 
;
l100073A5: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [g1004A528]
           jnb l100073C8
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l1000739C
;
;* Jump:
; 100073AE(C) 
;
l100073C8: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [g1004A524], edx
           jmp l10007420
;
;* Jump:
; 1000732E(C) 
;
l100073E7: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           jmp l100073FB
;
;* Jump:
; 1000741E(U) 
;
l100073F2: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100073F0(U) 
;
l100073FB: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [g1004A528]
           jnb l10007420
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [ecx+edx*04h-004h], eax
           jmp l100073F2
;
;* Jump:
; 100073E5(U), 10007404(C) 
;
l10007420: mov ecx, dword ptr [g1004A528]
           sub ecx, 000000001h
           mov dword ptr [g1004A528], ecx
;
;* Jump:
; 1000729C(U), 10007314(U) 
;
l1000742F: mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+00Ch], 000000000h
           je l1000744D
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007436(C) 
;
l1000744D: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10007463
           mov ecx, dword ptr [ebp-030h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007455(C) 
;
l10007463: mov eax, dword ptr [ebp-030h]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
           int 03h
l10007470 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           push esi
           mov dword ptr [ebp-048h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l10007568
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-018h], edx
           mov dword ptr [ebp-014h], 000000010h
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           imul ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           add edx, ecx
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000753F(U) 
;
l100074AD: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           jl l10007544
           mov ecx, dword ptr [ebp-010h]
           sub ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
;
;* String: "pt"
;
           mov dword ptr [edx], offset g100421C8
           mov dword ptr [ebp-008h], 000000000h
           jmp l100074E4
;
;* Jump:
; 10007508(U) 
;
l100074DB: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 100074D9(U) 
;
l100074E4: mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [g1004A528]
           jnb l1000750A
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           cmp ecx, dword ptr [ebp-010h]
           jne l10007508
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], edx
           jmp l10007511
;
;* Jump:
; 100074FE(C) 
;
l10007508: jmp l100074DB
;
;* Jump:
; 100074ED(C) 
;
l1000750A: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 10007506(U) 
;
l10007511: push 000000000h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, offset g1004A520
           call l10007D30
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+00Ch], 000000000h
           je l1000753F
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007528(C) 
;
l1000753F: jmp near ptr l100074AD
;
;* Jump:
; 100074BA(C) 
;
l10007544: mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l1000755D
           mov eax, dword ptr [ebp-048h]
           sub eax, 000000004h
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000754C(C) 
;
l1000755D: mov eax, dword ptr [ebp-048h]
           sub eax, 000000004h
           jmp near ptr l10007786
;
;* Jump:
; 10007482(C) 
;
l10007568: mov ecx, dword ptr [ebp-048h]
;
;* String: "pt"
;
           mov dword ptr [ecx], offset g100421C8
           mov dword ptr [ebp-020h], 000000000h
           jmp l10007583
;
;* Jump:
; 100075A7(U) 
;
l1000757A: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10007578(U) 
;
l10007583: mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [g1004A528]
           jnb l100075A9
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+edx*04h]
           cmp eax, dword ptr [ebp-048h]
           jne l100075A7
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-024h], ecx
           jmp l100075B0
;
;* Jump:
; 1000759D(C) 
;
l100075A7: jmp l1000757A
;
;* Jump:
; 1000758C(C) 
;
l100075A9: mov dword ptr [ebp-024h], 0FFFFFFFFh
;
;* Jump:
; 100075A5(U) 
;
l100075B0: mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [g1004A528]
           jb l100075C0
           jmp near ptr l1000774F
;
;* Jump:
; 100075B9(C) 
;
l100075C0: xor eax, eax
           test eax, eax
           je l100075F9
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-034h], ecx
           cmp dword ptr [ebp-034h], 000000000h
           je l100075F2
           push 000000001h
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-034h]
           call [eax]
           mov dword ptr [ebp-04Ch], eax
           jmp l100075F9
;
;* Jump:
; 100075DF(C) 
;
l100075F2: mov dword ptr [ebp-04Ch], 000000000h
;
;* Jump:
; 100075C4(C), 100075F0(U) 
;
l100075F9: cmp dword ptr [g1004A528], 000000001h
           jne l1000763A
           mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
           jmp near ptr l1000774F
;
;* Jump:
; 10007600(C) 
;
l1000763A: mov eax, dword ptr [g1004A528]
           mov ecx, dword ptr [g1004A52C]
           lea edx, [eax+ecx-001h]
           cmp dword ptr [g1004A530], edx
           jb l10007706
           mov eax, dword ptr [g1004A530]
           sub eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-040h], eax
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10007692
;
;* Jump:
; 100076AF(U) 
;
l10007689: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10007687(U) 
;
l10007692: mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [ebp-024h]
           jnb l100076B1
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-028h]
           mov esi, dword ptr [ebp-02Ch]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10007689
;
;* Jump:
; 10007698(C) 
;
l100076B1: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           jmp l100076C5
;
;* Jump:
; 100076E5(U) 
;
l100076BC: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 100076BA(U) 
;
l100076C5: mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [g1004A528]
           jnb l100076E7
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-028h]
           mov esi, dword ptr [ebp-02Ch]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h-004h], eax
           jmp l100076BC
;
;* Jump:
; 100076CE(C) 
;
l100076E7: mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [g1004A524], eax
           jmp l10007740
;
;* Jump:
; 1000764F(C) 
;
l10007706: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
           jmp l1000771A
;
;* Jump:
; 1000773E(U) 
;
l10007711: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 1000770F(U) 
;
l1000771A: mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [g1004A528]
           jnb l10007740
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-030h]
           mov esi, dword ptr [ebp-030h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [edx+eax*04h-004h], ecx
           jmp l10007711
;
;* Jump:
; 10007704(U), 10007723(C) 
;
l10007740: mov edx, dword ptr [g1004A528]
           sub edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 100075BB(U), 10007635(U) 
;
l1000774F: mov eax, dword ptr [ebp-048h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l1000776D
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007756(C) 
;
l1000776D: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10007783
           mov edx, dword ptr [ebp-048h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007775(C) 
;
l10007783: mov eax, dword ptr [ebp-048h]
;
;* Jump:
; 10007563(U) 
;
l10007786: pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10007470 ENDP
;
           int 03h
           int 03h
           int 03h
l10007790 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           push esi
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           add eax, 00000000Ch
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
;
;* String: "pt"
;
           mov dword ptr [ecx], offset g100421C8
           mov dword ptr [ebp-008h], 000000000h
           jmp l100077BE
;
;* Jump:
; 100077E2(U) 
;
l100077B5: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100077B3(U) 
;
l100077BE: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [g1004A528]
           jnb l100077E4
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+edx*04h]
           cmp eax, dword ptr [ebp-030h]
           jne l100077E2
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l100077EB
;
;* Jump:
; 100077D8(C) 
;
l100077E2: jmp l100077B5
;
;* Jump:
; 100077C7(C) 
;
l100077E4: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 100077E0(U) 
;
l100077EB: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [g1004A528]
           jb l100077FB
           jmp near ptr l1000798A
;
;* Jump:
; 100077F4(C) 
;
l100077FB: xor eax, eax
           test eax, eax
           je l10007834
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000000h
           je l1000782D
           push 000000001h
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-01Ch]
           call [eax]
           mov dword ptr [ebp-038h], eax
           jmp l10007834
;
;* Jump:
; 1000781A(C) 
;
l1000782D: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 100077FF(C), 1000782B(U) 
;
l10007834: cmp dword ptr [g1004A528], 000000001h
           jne l10007875
           mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
           jmp near ptr l1000798A
;
;* Jump:
; 1000783B(C) 
;
l10007875: mov eax, dword ptr [g1004A528]
           mov ecx, dword ptr [g1004A52C]
           lea edx, [eax+ecx-001h]
           cmp dword ptr [g1004A530], edx
           jb l10007941
           mov eax, dword ptr [g1004A530]
           sub eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-014h], 000000000h
           jmp l100078CD
;
;* Jump:
; 100078EA(U) 
;
l100078C4: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100078C2(U) 
;
l100078CD: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l100078EC
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l100078C4
;
;* Jump:
; 100078D3(C) 
;
l100078EC: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           jmp l10007900
;
;* Jump:
; 10007920(U) 
;
l100078F7: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100078F5(U) 
;
l10007900: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [g1004A528]
           jnb l10007922
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h-004h], eax
           jmp l100078F7
;
;* Jump:
; 10007909(C) 
;
l10007922: mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [g1004A524], eax
           jmp l1000797B
;
;* Jump:
; 1000788A(C) 
;
l10007941: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           jmp l10007955
;
;* Jump:
; 10007979(U) 
;
l1000794C: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1000794A(U) 
;
l10007955: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [g1004A528]
           jnb l1000797B
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [edx+eax*04h-004h], ecx
           jmp l1000794C
;
;* Jump:
; 1000793F(U), 1000795E(C) 
;
l1000797B: mov edx, dword ptr [g1004A528]
           sub edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 100077F6(U), 10007870(U) 
;
l1000798A: mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l100079A8
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007991(C) 
;
l100079A8: mov ecx, dword ptr [ebp-034h]
           call l10003EFE
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100079C6
           mov edx, dword ptr [ebp-034h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100079B8(C) 
;
l100079C6: mov eax, dword ptr [ebp-034h]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10007790 ENDP
;
l100079D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           push esi
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           add eax, 00000000Ch
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
;
;* String: "pt"
;
           mov dword ptr [ecx], offset g100421C8
           mov dword ptr [ebp-008h], 000000000h
           jmp l100079FE
;
;* Jump:
; 10007A22(U) 
;
l100079F5: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100079F3(U) 
;
l100079FE: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [g1004A528]
           jnb l10007A24
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+edx*04h]
           cmp eax, dword ptr [ebp-030h]
           jne l10007A22
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10007A2B
;
;* Jump:
; 10007A18(C) 
;
l10007A22: jmp l100079F5
;
;* Jump:
; 10007A07(C) 
;
l10007A24: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 10007A20(U) 
;
l10007A2B: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [g1004A528]
           jb l10007A3B
           jmp near ptr l10007BCA
;
;* Jump:
; 10007A34(C) 
;
l10007A3B: xor eax, eax
           test eax, eax
           je l10007A74
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10007A6D
           push 000000001h
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-01Ch]
           call [eax]
           mov dword ptr [ebp-038h], eax
           jmp l10007A74
;
;* Jump:
; 10007A5A(C) 
;
l10007A6D: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 10007A3F(C), 10007A6B(U) 
;
l10007A74: cmp dword ptr [g1004A528], 000000001h
           jne l10007AB5
           mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
           jmp near ptr l10007BCA
;
;* Jump:
; 10007A7B(C) 
;
l10007AB5: mov eax, dword ptr [g1004A528]
           mov ecx, dword ptr [g1004A52C]
           lea edx, [eax+ecx-001h]
           cmp dword ptr [g1004A530], edx
           jb l10007B81
           mov eax, dword ptr [g1004A530]
           sub eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10007B0D
;
;* Jump:
; 10007B2A(U) 
;
l10007B04: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10007B02(U) 
;
l10007B0D: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l10007B2C
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10007B04
;
;* Jump:
; 10007B13(C) 
;
l10007B2C: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           jmp l10007B40
;
;* Jump:
; 10007B60(U) 
;
l10007B37: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10007B35(U) 
;
l10007B40: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [g1004A528]
           jnb l10007B62
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h-004h], eax
           jmp l10007B37
;
;* Jump:
; 10007B49(C) 
;
l10007B62: mov ecx, dword ptr [g1004A524]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [g1004A524], eax
           jmp l10007BBB
;
;* Jump:
; 10007ACA(C) 
;
l10007B81: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           jmp l10007B95
;
;* Jump:
; 10007BB9(U) 
;
l10007B8C: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10007B8A(U) 
;
l10007B95: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [g1004A528]
           jnb l10007BBB
           mov ecx, dword ptr [g1004A524]
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [edx+eax*04h-004h], ecx
           jmp l10007B8C
;
;* Jump:
; 10007B7F(U), 10007B9E(C) 
;
l10007BBB: mov edx, dword ptr [g1004A528]
           sub edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 10007A36(U), 10007AB0(U) 
;
l10007BCA: mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l10007BE8
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007BD1(C) 
;
l10007BE8: mov ecx, dword ptr [ebp-034h]
           call l10003EFE
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10007C06
           mov edx, dword ptr [ebp-034h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007BF8(C) 
;
l10007C06: mov eax, dword ptr [ebp-034h]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100079D0 ENDP
;
;* Call:
; 100042BF 
;
l10007C10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l10007C4E
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10007D17
;
;* Jump:
; 10007C26(C) 
;
l10007C4E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10007CD8
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10007C96
;
;* Jump:
; 10007CB6(U) 
;
l10007C8D: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10007C8B(U) 
;
l10007C96: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10007CB8
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10007C8D
;
;* Jump:
; 10007C9F(C) 
;
l10007CB8: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           jmp l10007CF6
;
;* Jump:
; 10007C67(C) 
;
l10007CD8: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 10007CD6(U) 
;
l10007CF6: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10007C49(U) 
;
l10007D17: mov ecx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           sub eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10007C10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000751C 
;
l10007D30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push esi
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+008h]
           jb l10007D4A
           jmp near ptr l10007EDE
;
;* Jump:
; 10007D43(C) 
;
l10007D4A: cmp dword ptr [ebp+00Ch], 000000000h
           je l10007D83
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l10007D7C
           push 000000001h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-010h]
           call [edx]
           mov dword ptr [ebp-028h], eax
           jmp l10007D83
;
;* Jump:
; 10007D69(C) 
;
l10007D7C: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10007D4E(C), 10007D7A(U) 
;
l10007D83: mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+008h], 000000001h
           jne l10007DC4
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+010h], 000000000h
           jmp near ptr l10007EDE
;
;* Jump:
; 10007D8A(C) 
;
l10007DC4: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+00Ch]
           lea edx, [edx+ecx-001h]
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], edx
           jb l10007E95
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ecx+010h]
           sub eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10007E1F
;
;* Jump:
; 10007E3C(U) 
;
l10007E16: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10007E14(U) 
;
l10007E1F: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp+008h]
           jnb l10007E3E
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10007E16
;
;* Jump:
; 10007E25(C) 
;
l10007E3E: mov eax, dword ptr [ebp+008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           jmp l10007E52
;
;* Jump:
; 10007E73(U) 
;
l10007E49: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10007E47(U) 
;
l10007E52: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l10007E75
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l10007E49
;
;* Jump:
; 10007E5B(C) 
;
l10007E75: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], ecx
           jmp l10007ECF
;
;* Jump:
; 10007DDA(C) 
;
l10007E95: mov edx, dword ptr [ebp+008h]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           jmp l10007EA9
;
;* Jump:
; 10007ECD(U) 
;
l10007EA0: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10007E9E(U) 
;
l10007EA9: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l10007ECF
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h-004h], ecx
           jmp l10007EA0
;
;* Jump:
; 10007E93(U), 10007EB2(C) 
;
l10007ECF: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+008h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10007D45(U), 10007DBF(U) 
;
l10007EDE: pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10007D30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_RDataLight@@QAEAAV0@ABV0@@Z, 004B
;
l10007EF0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx], edx
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx+004h], edx
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [eax+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007EF0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_RItem@@QAEAAV0@ABV0@@Z, 004D
;
l10007F20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007F20 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_RDataTriangle@@QAEAAV0@ABV0@@Z, 004C
;
l10007F40 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000007h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10007F40 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_MeshEdge@@QAEAAV0@ABV0@@Z, 0044
;
l10007F70 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10007F70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10007FA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g100421EC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10008061
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10007FD6
           jmp near ptr l10008061
;
;* Jump:
; 10007FCF(C) 
;
l10007FD6: cmp dword ptr [ebp-014h], 000000000h
           je l1000802E
           mov dword ptr [ebp-004h], 000000000h
           jmp l10007FEE
;
;* Jump:
; 1000802C(U) 
;
l10007FE5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10007FE3(U) 
;
l10007FEE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000802E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10008025
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1000802C
;
;* Jump:
; 10008012(C) 
;
l10008025: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 10008023(U) 
;
l1000802C: jmp l10007FE5
;
;* Jump:
; 10007FDA(C), 10007FF7(C) 
;
l1000802E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10007FB9(C), 10007FD1(U) 
;
l10008061: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10008077
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10008069(C) 
;
l10008077: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007FA0 ENDP
;
l10008080 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g100421EC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10008141
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l100080B6
           jmp near ptr l10008141
;
;* Jump:
; 100080AF(C) 
;
l100080B6: cmp dword ptr [ebp-014h], 000000000h
           je l1000810E
           mov dword ptr [ebp-004h], 000000000h
           jmp l100080CE
;
;* Jump:
; 1000810C(U) 
;
l100080C5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100080C3(U) 
;
l100080CE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000810E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10008105
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1000810C
;
;* Jump:
; 100080F2(C) 
;
l10008105: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 10008103(U) 
;
l1000810C: jmp l100080C5
;
;* Jump:
; 100080BA(C), 100080D7(C) 
;
l1000810E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10008099(C), 100080B1(U) 
;
l10008141: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10008157
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10008149(C) 
;
l10008157: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10008080 ENDP
;
l10008160 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g100421F4
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10008238
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10008196
           jmp near ptr l10008238
;
;* Jump:
; 1000818F(C) 
;
l10008196: cmp dword ptr [ebp-014h], 000000000h
           je l10008205
           mov dword ptr [ebp-004h], 000000000h
           jmp l100081AE
;
;* Jump:
; 10008203(U) 
;
l100081A5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100081A3(U) 
;
l100081AE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10008205
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l100081FC
           mov ecx, dword ptr [ebp-008h]
           call l100039BA
           mov ecx, 000000001h
           and ecx, 000000001h
           test ecx, ecx
           je l100081F4
           mov edx, dword ptr [ebp-008h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100081E6(C) 
;
l100081F4: mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-01Ch], eax
           jmp l10008203
;
;* Jump:
; 100081D2(C) 
;
l100081FC: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 100081FA(U) 
;
l10008203: jmp l100081A5
;
;* Jump:
; 1000819A(C), 100081B7(C) 
;
l10008205: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10008179(C), 10008191(U) 
;
l10008238: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1000824E
           mov edx, dword ptr [ebp-018h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10008240(C) 
;
l1000824E: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10008160 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10008260 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g100421EC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10008321
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10008296
           jmp near ptr l10008321
;
;* Jump:
; 1000828F(C) 
;
l10008296: cmp dword ptr [ebp-014h], 000000000h
           je l100082EE
           mov dword ptr [ebp-004h], 000000000h
           jmp l100082AE
;
;* Jump:
; 100082EC(U) 
;
l100082A5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100082A3(U) 
;
l100082AE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l100082EE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l100082E5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l100082EC
;
;* Jump:
; 100082D2(C) 
;
l100082E5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 100082E3(U) 
;
l100082EC: jmp l100082A5
;
;* Jump:
; 1000829A(C), 100082B7(C) 
;
l100082EE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10008279(C), 10008291(U) 
;
l10008321: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10008337
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10008329(C) 
;
l10008337: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10008260 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10003ED9
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l100086E3
           mov edx, dword ptr [ebp-004h]
;
;* String: "pl"
;
           mov dword ptr [edx], offset g100421CC
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
l10008374 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ax, 00002h
           mov esp, ebp
           pop ebp
           ret
l10008374 ENDP
;
l10008383 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-010h]
           add ecx, dword ptr [edx+014h]
           mov eax, dword ptr [ebp-010h]
           add ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000004h
           ja l100083EC
           mov ecx, dword ptr [ebp-014h]
           jmp [offset g1000846F+ecx*04h]
l100083CA: mov dword ptr [ebp-004h], 000000001h
           jmp l100083EC
l100083D3: mov dword ptr [ebp-004h], 000000002h
           jmp l100083EC
l100083DC: mov dword ptr [ebp-004h], 000000003h
           jmp l100083EC
l100083E5: mov dword ptr [ebp-004h], 000000004h
;
;* Jump:
; 100083BE(C), 100083D1(U), 100083DA(U), 100083E3(U) 
;
l100083EC: mov dword ptr [ebp-008h], 000000000h
           jmp l100083FE
;
;* Jump:
; 1000842A(U) 
;
l100083F5: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100083F3(U) 
;
l100083FE: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [eax+014h]
           imul edx, dword ptr [ecx+018h]
           imul edx, dword ptr [ebp-004h]
           cmp dword ptr [ebp-008h], edx
           jnb l1000842C
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+01Ch]
           mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [ecx+edx]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, eax
           mov dword ptr [ebp-00Ch], ecx
           jmp l100083F5
;
;* Jump:
; 10008412(C) 
;
l1000842C: mov edx, dword ptr [ebp-010h]
           cmp dword ptr [edx+020h], 000000000h
           je l10008468
           mov dword ptr [ebp-008h], 000000000h
           jmp l10008447
;
;* Jump:
; 10008466(U) 
;
l1000843E: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000843C(U) 
;
l10008447: cmp dword ptr [ebp-008h], 000000300h
           jnb l10008468
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+020h]
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [edx+eax]
           mov edx, dword ptr [ebp-00Ch]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           jmp l1000843E
;
;* Jump:
; 10008433(C), 1000844E(C) 
;
l10008468: mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
;
g1000846F  dd l100083CA
           dd l100083CA
           dd l100083D3
           dd l100083DC
           dd l100083E5
l10008383 ENDP
l10008483 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 00000000Ch
           call l10008AF0
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+014h]
           imul edx, dword ptr [ecx+018h]
           imul edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           add eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+020h], 000000000h
           je l100084CF
           mov edx, dword ptr [ebp-008h]
           add edx, 000000300h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100084C1(C) 
;
l100084CF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10008483 ENDP
;
;* Call:
; 10003FC2 
;
l100084D6 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000468E
           add esp, 000000008h
           push eax
           call l10008B51
           add esp, 000000008h
           pop ebp
           ret
l100084D6 ENDP
;
;* Call:
; 100040CC 
;
l100084FB PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10004676
           add esp, 000000008h
           push eax
           call l10008C9B
           add esp, 000000008h
           pop ebp
           ret
l100084FB ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10003ED9
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l10026AD5
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100421B8
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
l10008554 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ax, 00003h
           mov esp, ebp
           pop ebp
           ret
l10008554 ENDP
;
l10008563 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l10008563 ENDP
;
l10008570 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l10008570 ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100280CC
           add esp, 000000008h
           pop ebp
           ret
;
;* Call:
; 10004278 
;
l10008595 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10028021
           add esp, 000000008h
           pop ebp
           ret
l10008595 ENDP
;
l100085AD PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ax, 00004h
           mov esp, ebp
           pop ebp
           ret
l100085AD ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100280CC
           add esp, 000000008h
           pop ebp
           ret
;
;* Call:
; 10004344 
;
l100085D4 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10028021
           add esp, 000000008h
           pop ebp
           ret
l100085D4 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100040A1 
;
;* Export: ??0B_BitMap@@QAE@XZ, 0007
;
l100085F0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100421F8
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l100085F0 ENDP
;
;* Export: ??0B_BitMap@@QAE@W4BitMapType@0@IIPBVB_Pal@@@Z, 0006
;
l10008639 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax], offset g100421F8
           mov ecx, dword ptr [ebp-010h]
           call l10008AF0
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           imul ecx, dword ptr [ebp+010h]
           imul ecx, dword ptr [ebp-004h]
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], eax
           cmp dword ptr [ebp+014h], 000000000h
           je l100086D0
           push 000000300h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100086BE
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l100093A7
           mov dword ptr [ebp-014h], eax
           jmp l100086C5
;
;* Jump:
; 100086AB(C) 
;
l100086BE: mov dword ptr [ebp-014h], 000000000h
;
;* Jump:
; 100086BC(U) 
;
l100086C5: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+014h], eax
           jmp l100086DA
;
;* Jump:
; 10008695(C) 
;
l100086D0: mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+014h], 000000000h
;
;* Jump:
; 100086CE(U) 
;
l100086DA: mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret 00010h
l10008639 ENDP
;
;* Call:
; 1000835D 
;
;* Export: ??0B_BitMap@@QAE@ABV0@@Z, 0004
;
l100086E3 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           push esi
           push edi
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax], offset g100421F8
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           sub ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
           cmp dword ptr [ebp-024h], 000000004h
           ja l10008955
           mov edx, dword ptr [ebp-024h]
           jmp [offset g10008960+edx*04h]
l1000874B: push 000000300h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10008775
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           call l100093A7
           mov dword ptr [ebp-028h], eax
           jmp l1000877C
;
;* Jump:
; 1000875F(C) 
;
l10008775: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10008773(U) 
;
l1000877C: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           mov ecx, edx
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp near ptr l10008955
l100087D5: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           mov ecx, edx
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp near ptr l10008955
l10008825: push 000000300h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l1000884F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov ecx, dword ptr [ebp-010h]
           call l100093A7
           mov dword ptr [ebp-02Ch], eax
           jmp l10008856
;
;* Jump:
; 10008839(C) 
;
l1000884F: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1000884D(U) 
;
l10008856: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           shl ecx, 001h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov ecx, dword ptr [ecx+008h]
           imul ecx, dword ptr [edx+00Ch]
           shl ecx, 001h
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp near ptr l10008955
l100088B1: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           imul edx, edx, 000000003h
           mov ecx, edx
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp l10008955
l10008904: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           shl edx, 002h
           mov ecx, edx
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
;
;* Jump:
; 1000873B(C), 100087D0(U), 10008820(U), 100088AC(U), 10008902(U) 
;
l10008955: mov eax, dword ptr [ebp-020h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
g10008960  dd l1000874B
           dd l100087D5
           dd l10008825
           dd l100088B1
           dd l10008904
l100086E3 ENDP
;
;* Export: ??0B_BitMap@@QAE@W4BitMapType@0@ABVB_BitMap24@@@Z, 0005
;
l10008974 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g100421F8
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-01Ch], 000000002h
           je l100089AD
           cmp dword ptr [ebp-01Ch], 000000004h
           je l10008A4A
           jmp near ptr l10008ABD
;
;* Jump:
; 1000899C(C) 
;
l100089AD: mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000002h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10008A15
;
;* Jump:
; 10008A43(U) 
;
l10008A0C: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10008A0A(U) 
;
l10008A15: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           cmp dword ptr [ebp-008h], ecx
           jnb l10008A45
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [eax]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-004h]
           add edx, 000000003h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp l10008A0C
;
;* Jump:
; 10008A25(C) 
;
l10008A45: jmp near ptr l10008AE5
;
;* Jump:
; 100089A2(C) 
;
l10008A4A: mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+004h], 000000004h
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+008h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           imul ecx, ecx, 000000003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+008h]
           imul ecx, dword ptr [edx+00Ch]
           imul ecx, ecx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           mov esi, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-018h]
           mov edi, dword ptr [edx+010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp l10008AE5
;
;* Jump:
; 100089A8(U) 
;
l10008ABD: mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10008A45(U), 10008ABB(U) 
;
l10008AE5: mov eax, dword ptr [ebp-018h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10008974 ENDP
;
;* Call:
; 10008499, 10008669 
;
;* Export: ?BytesPerTexel@B_BitMap@@QBEHXZ, 009D
;
l10008AF0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000004h
           ja l10008B37
           mov eax, dword ptr [ebp-008h]
           jmp [offset g10008B3D+eax*04h]
l10008B1B: mov eax, 000000001h
           jmp l10008B39
l10008B22: mov eax, 000000002h
           jmp l10008B39
l10008B29: mov eax, 000000003h
           jmp l10008B39
l10008B30: mov eax, 000000004h
           jmp l10008B39
;
;* Jump:
; 10008B0F(C) 
;
l10008B37: xor eax, eax
;
;* Jump:
; 10008B20(U), 10008B27(U), 10008B2E(U), 10008B35(U) 
;
l10008B39: mov esp, ebp
           pop ebp
           ret
;
g10008B3D  dd l10008B1B
           dd l10008B1B
           dd l10008B22
           dd l10008B29
           dd l10008B30
l10008AF0 ENDP
;
;* Call:
; 100084F1 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_BitMap@@@Z, 006D
;
l10008B51 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           lea ecx, [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10002008
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000004h
           ja l10008C80
           mov eax, dword ptr [ebp-008h]
           jmp [offset g10008C87+eax*04h]
l10008BB6: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000967A
           add esp, 000000008h
           jmp near ptr l10008C80
l10008BEB: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           jmp l10008C80
l10008C0A: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           shl ecx, 001h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000967A
           add esp, 000000008h
           jmp l10008C80
l10008C3E: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           jmp l10008C80
l10008C60: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           shl edx, 002h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
;
;* Jump:
; 10008BA6(C), 10008BE6(U), 10008C08(U), 10008C3C(U), 10008C5E(U) 
;
l10008C80: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
;
g10008C87  dd l10008BB6
           dd l10008BEB
           dd l10008C0A
           dd l10008C3E
           dd l10008C60
l10008B51 ENDP
;
;* Call:
; 10008516 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_BitMap@@@Z, 005B
;
l10008C9B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l10008CC9
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10008CA8(C) 
;
l10008CC9: mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+014h], 000000000h
           je l10008CF1
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+014h], 000000000h
;
;* Jump:
; 10008CD0(C) 
;
l10008CF1: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           lea eax, [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BD9
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           cmp dword ptr [ebp-02Ch], 000000004h
           ja l10008D7C
           mov ecx, dword ptr [ebp-02Ch]
           jmp [offset g10008FB2+ecx*04h]
l10008D40: mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], 000000001h
           jmp l10008D86
l10008D4C: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], 000000002h
           jmp l10008D86
l10008D58: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000003h
           jmp l10008D86
l10008D64: mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], 000000004h
           jmp l10008D86
l10008D70: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], 000000005h
           jmp l10008D86
;
;* Jump:
; 10008D34(C) 
;
l10008D7C: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
;
;* Jump:
; 10008D4A(U), 10008D56(U), 10008D62(U), 10008D6E(U), 10008D7A(U) 
;
l10008D86: mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l10008DA7
           push 0000000BCh
;
;* String: "C:\code\BITMAP\BITMAP.CPP"
;
           push offset g100474FC
;
;* String: "b.texels==NULL"
;
           push offset g10047518
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 10008D8D(C) 
;
l10008DA7: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           sub eax, 000000001h
           mov dword ptr [ebp-030h], eax
           cmp dword ptr [ebp-030h], 000000004h
           ja l10008FAB
           mov ecx, dword ptr [ebp-030h]
           jmp [offset g10008FC6+ecx*04h]
l10008DCD: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           push 000000300h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l10008E2A
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-034h], eax
           jmp l10008E31
;
;* Jump:
; 10008E20(C) 
;
l10008E2A: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 10008E28(U) 
;
l10008E31: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10009661
           add esp, 000000008h
           jmp near ptr l10008FAB
l10008E52: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           jmp near ptr l10008FAB
l10008E96: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           shl eax, 001h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           shl edx, 001h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           push 000000300h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 000000000h
           je l10008EF7
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-038h], edx
           jmp l10008EFE
;
;* Jump:
; 10008EED(C) 
;
l10008EF7: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 10008EF5(U) 
;
l10008EFE: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10009661
           add esp, 000000008h
           jmp near ptr l10008FAB
l10008F1F: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           imul ecx, ecx, 000000003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           jmp l10008FAB
l10008F66: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           shl ecx, 002h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
;
;* Jump:
; 10008DBD(C), 10008E4D(U), 10008E91(U), 10008F1A(U), 10008F64(U) 
;
l10008FAB: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
;
g10008FB2  dd l10008D40
           dd l10008D4C
           dd l10008D58
           dd l10008D64
           dd l10008D70
g10008FC6  dd l10008DCD
           dd l10008E52
           dd l10008E96
           dd l10008F1F
           dd l10008F66
l10008C9B ENDP
;
;* Call:
; 10006C7D, 1000903A, 100090B3, 100090DE 
;
;* Export: ??1B_BitMap@@UAE@XZ, 002E
;
l10008FDA PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g100421F8
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l1000900A
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10008FF3(C) 
;
l1000900A: mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+014h], 000000000h
           je l10009028
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10009011(C) 
;
l10009028: mov esp, ebp
           pop ebp
           ret
l10008FDA ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10008FDA
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10009055
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10009047(C) 
;
l10009055: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
l10009060 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l100090DB
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000018h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100090B8(U) 
;
l10009098: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l100090BA
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10008FDA
           jmp l10009098
;
;* Jump:
; 100090A5(C) 
;
l100090BA: mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l100090D3
           mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100090C2(C) 
;
l100090D3: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l100090FC
;
;* Jump:
; 10009071(C) 
;
l100090DB: mov ecx, dword ptr [ebp-010h]
           call l10008FDA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100090F9
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100090EB(C) 
;
l100090F9: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 100090D9(U) 
;
l100090FC: mov esp, ebp
           pop ebp
           ret 00004h
l10009060 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ?DistanceTo@B_Color@@QAEMABV1@@Z, 00AF
;
l10009110 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push ebx
           push esi
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           sub ecx, eax
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           mov edx, dword ptr [ebp+008h]
           xor ebx, ebx
           mov bl, byte ptr [edx+004h]
           sub eax, ebx
           imul ecx, eax
           mov eax, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [eax+005h]
           mov eax, dword ptr [ebp+008h]
           xor ebx, ebx
           mov bl, byte ptr [eax+005h]
           sub edx, ebx
           mov eax, dword ptr [ebp-004h]
           xor ebx, ebx
           mov bl, byte ptr [eax+005h]
           mov esi, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [esi+005h]
           sub ebx, eax
           imul edx, ebx
           add ecx, edx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov esi, eax
           mov edx, dword ptr [ebp+008h]
           xor ebx, ebx
           mov bl, byte ptr [edx+006h]
           sub esi, ebx
           mov edx, dword ptr [ebp-004h]
           xor ebx, ebx
           mov bl, byte ptr [edx+006h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           sub ebx, eax
           imul esi, ebx
           add ecx, esi
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret 00004h
l10009110 ENDP
;
;* Call:
; 10009369 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_Color@@@Z, 005C
;
l100091A4 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000006h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000005h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B6B
           add esp, 000000008h
           push eax
           call l10001B6B
           add esp, 000000008h
           push eax
           call l10001B6B
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100091A4 ENDP
;
;* Call:
; 10009391 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_Color@@@Z, 006E
;
l100091DF PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000006h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000005h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100091DF ENDP
;
;* Call:
; 100068BE, 1000693F, 100069CB, 10006A5B 
;
;* Export: ?MakeCons@B_Color@@UAEXXZ, 00E4
;
l1000921A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           cmp ecx, 0000000FFh
           jle l1000923C
           mov dword ptr [ebp-008h], 0000000FFh
           jmp l10009247
;
;* Jump:
; 10009231(C) 
;
l1000923C: mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000923A(U) 
;
l10009247: cmp dword ptr [ebp-008h], 000000000h
           jnl l10009256
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10009280
;
;* Jump:
; 1000924B(C) 
;
l10009256: mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           cmp edx, 0000000FFh
           jle l1000926F
           mov dword ptr [ebp-010h], 0000000FFh
           jmp l1000927A
;
;* Jump:
; 10009264(C) 
;
l1000926F: mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1000926D(U) 
;
l1000927A: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10009254(U) 
;
l10009280: mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ebp-00Ch]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           cmp eax, 0000000FFh
           jle l100092A1
           mov dword ptr [ebp-014h], 0000000FFh
           jmp l100092AC
;
;* Jump:
; 10009296(C) 
;
l100092A1: mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1000929F(U) 
;
l100092AC: cmp dword ptr [ebp-014h], 000000000h
           jnl l100092BB
           mov dword ptr [ebp-018h], 000000000h
           jmp l100092E5
;
;* Jump:
; 100092B0(C) 
;
l100092BB: mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           cmp ecx, 0000000FFh
           jle l100092D4
           mov dword ptr [ebp-01Ch], 0000000FFh
           jmp l100092DF
;
;* Jump:
; 100092C9(C) 
;
l100092D4: mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100092D2(U) 
;
l100092DF: mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100092B9(U) 
;
l100092E5: mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [ebp-018h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           cmp edx, 0000000FFh
           jle l10009307
           mov dword ptr [ebp-020h], 0000000FFh
           jmp l10009312
;
;* Jump:
; 100092FC(C) 
;
l10009307: mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10009305(U) 
;
l10009312: cmp dword ptr [ebp-020h], 000000000h
           jnl l10009321
           mov dword ptr [ebp-024h], 000000000h
           jmp l1000934A
;
;* Jump:
; 10009316(C) 
;
l10009321: mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           cmp eax, 0000000FFh
           jle l10009339
           mov dword ptr [ebp-028h], 0000000FFh
           jmp l10009344
;
;* Jump:
; 1000932E(C) 
;
l10009339: mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 10009337(U) 
;
l10009344: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1000931F(U) 
;
l1000934A: mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp-024h]
           mov byte ptr [ecx+006h], dl
           mov esp, ebp
           pop ebp
           ret
l1000921A ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100091A4
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100091DF
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
;
;* Call:
; 100086B4, 1000876B, 10008845 
;
;* Export: ??0B_Pal@@QAE@ABV0@@Z, 0022
;
l100093A7 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov ecx, 0000000C0h
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100093A7 ENDP
;
;* Call:
; 1000948D, 100094A9, 10009566, 10009582, 10026F9B 
;
;* Export: ?GetRed@B_Pal@@QBEEI@Z, 00C8
;
l100093C8 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov al, byte ptr [ecx+eax]
           mov esp, ebp
           pop ebp
           ret 00004h
l100093C8 ENDP
;
;* Call:
; 100094C8, 100094E4, 100095A1, 100095BD, 10026FC3 
;
;* Export: ?GetGreen@B_Pal@@QBEEI@Z, 00C1
;
l100093E1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov al, byte ptr [ecx+eax+001h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100093E1 ENDP
;
;* Call:
; 10009505, 10009521, 100095DE, 100095FA, 10026FEB 
;
;* Export: ?GetBlue@B_Pal@@QBEEI@Z, 00B9
;
l100093FB PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov al, byte ptr [ecx+eax+002h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100093FB ENDP
;
;* Export: ?SetRed@B_Pal@@QAEXIE@Z, 0114
;
l10009415 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+eax], dl
           mov esp, ebp
           pop ebp
           ret 00008h
l10009415 ENDP
;
;* Export: ?SetGreen@B_Pal@@QAEXIE@Z, 0111
;
l10009431 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+eax+001h], dl
           mov esp, ebp
           pop ebp
           ret 00008h
l10009431 ENDP
;
;* Export: ?SetBlue@B_Pal@@QAEXIE@Z, 010F
;
l1000944E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+eax+002h], dl
           mov esp, ebp
           pop ebp
           ret 00008h
l1000944E ENDP
;
;* Export: ?GetIndex@B_Pal@@QBEIEEEI@Z, 00C2
;
l1000946B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push ebx
           push esi
           push edi
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-010h], eax
           mov esi, dword ptr [ebp+008h]
           and esi, 0000000FFh
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov ecx, dword ptr [ebp-014h]
           call l100093C8
           and eax, 0000000FFh
           sub esi, eax
           mov edi, dword ptr [ebp+008h]
           and edi, 0000000FFh
           mov edx, dword ptr [ebp+014h]
           push edx
           mov ecx, dword ptr [ebp-014h]
           call l100093C8
           and eax, 0000000FFh
           sub edi, eax
           imul esi, edi
           mov edi, dword ptr [ebp+00Ch]
           and edi, 0000000FFh
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l100093E1
           and eax, 0000000FFh
           sub edi, eax
           mov ebx, dword ptr [ebp+00Ch]
           and ebx, 0000000FFh
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov ecx, dword ptr [ebp-014h]
           call l100093E1
           and eax, 0000000FFh
           sub ebx, eax
           imul edi, ebx
           add esi, edi
           mov edi, dword ptr [ebp+010h]
           and edi, 0000000FFh
           mov edx, dword ptr [ebp+014h]
           push edx
           mov ecx, dword ptr [ebp-014h]
           call l100093FB
           and eax, 0000000FFh
           sub edi, eax
           mov ebx, dword ptr [ebp+010h]
           and ebx, 0000000FFh
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l100093FB
           and eax, 0000000FFh
           sub ebx, eax
           imul edi, ebx
           add esi, edi
           mov dword ptr [ebp-004h], esi
           mov ecx, dword ptr [ebp+014h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp l10009549
;
;* Jump:
; 10009622(U) 
;
l10009540: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000953E(U) 
;
l10009549: cmp dword ptr [ebp-008h], 000000100h
           jnb l10009627
           mov esi, dword ptr [ebp+008h]
           and esi, 0000000FFh
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l100093C8
           and eax, 0000000FFh
           sub esi, eax
           mov edi, dword ptr [ebp+008h]
           and edi, 0000000FFh
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov ecx, dword ptr [ebp-014h]
           call l100093C8
           and eax, 0000000FFh
           sub edi, eax
           imul esi, edi
           mov edi, dword ptr [ebp+00Ch]
           and edi, 0000000FFh
           mov edx, dword ptr [ebp-008h]
           push edx
           mov ecx, dword ptr [ebp-014h]
           call l100093E1
           and eax, 0000000FFh
           sub edi, eax
           mov ebx, dword ptr [ebp+00Ch]
           and ebx, 0000000FFh
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l100093E1
           and eax, 0000000FFh
           sub ebx, eax
           imul edi, ebx
           add esi, edi
           mov edi, dword ptr [ebp+010h]
           and edi, 0000000FFh
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov ecx, dword ptr [ebp-014h]
           call l100093FB
           and eax, 0000000FFh
           sub edi, eax
           mov ebx, dword ptr [ebp+010h]
           and ebx, 0000000FFh
           mov edx, dword ptr [ebp-008h]
           push edx
           mov ecx, dword ptr [ebp-014h]
           call l100093FB
           and eax, 0000000FFh
           sub ebx, eax
           imul edi, ebx
           add esi, edi
           mov dword ptr [ebp-00Ch], esi
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-004h]
           jnl l10009622
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10009614(C) 
;
l10009622: jmp near ptr l10009540
;
;* Jump:
; 10009550(C) 
;
l10009627: mov eax, dword ptr [ebp-010h]
           pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret 00010h
l1000946B ENDP
;
;* Export: ?Id@B_Pal@@QAEABV1@XZ, 00D6
;
l10009633 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10009633 ENDP
;
           push ebp
           mov ebp, esp
           push esi
           push edi
           mov ecx, 0000000C0h
           mov edi, dword ptr [ebp+00Ch]
           mov esi, dword ptr [ebp+008h]
           xor eax, eax
           mov eax, 000000000h
           rep cmpsd
           sete  al
           pop edi
           pop esi
           pop ebp
           ret
;
;* Call:
; 10008E45, 10008F12 
;
l10009661 PROC
           push ebp
           mov ebp, esp
           push 000000300h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10009661 ENDP
;
;* Call:
; 10008BDE, 10008C34 
;
l1000967A PROC
           push ebp
           mov ebp, esp
           push 000000300h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1000967A ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10029732 
;
l100096A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push edi
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], 000000000h
           cmp dword ptr [ebp+00Ch], 00000003Eh
           je l100096E8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 00000003Eh
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 100096B5(C) 
;
l100096E8: cmp dword ptr [ebp+010h], 000000164h
           je l10009722
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000015h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 000000164h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+01Ch], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100096EF(C) 
;
l10009722: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, 000000059h
           xor eax, eax
           mov edi, dword ptr [ebp+008h]
           rep stosd
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+010h], 000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100225E0
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           jmp l10009793
;
;* Jump:
; 100097A7(U) 
;
l1000978A: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10009788(U) 
;
l10009793: cmp dword ptr [ebp-004h], 000000004h
           jnl l100097A9
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+edx*04h+044h], 000000000h
           jmp l1000978A
;
;* Jump:
; 10009797(C) 
;
l100097A9: mov dword ptr [ebp-004h], 000000000h
           jmp l100097BB
;
;* Jump:
; 100097DD(U) 
;
l100097B2: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100097B0(U) 
;
l100097BB: cmp dword ptr [ebp-004h], 000000004h
           jnl l100097DF
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+edx*04h+054h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+064h], 000000000h
           jmp l100097B2
;
;* Jump:
; 100097BF(C) 
;
l100097DF: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+00000015Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+02Ch], 000000000h
           mov dword ptr [ecx+030h], 03FF00000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 000000064h
           pop edi
           mov esp, ebp
           pop ebp
           ret
l100096A0 ENDP
;
;* Call:
; 1002988E 
;
l1000980C PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F640
           add esp, 000000004h
           pop ebp
           ret
l1000980C ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F5D0
           add esp, 000000004h
           pop ebp
           ret
;
;* Call:
; 10009C67, 10012C4A 
;
l1000982E PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10009846
;
;* Jump:
; 1000986B(U) 
;
l1000983D: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000983B(U) 
;
l10009846: cmp dword ptr [ebp-00Ch], 000000004h
           jnl l1000986D
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+044h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1000986B
           mov ecx, dword ptr [ebp-008h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+000000080h], dl
;
;* Jump:
; 1000985D(C) 
;
l1000986B: jmp l1000983D
;
;* Jump:
; 1000984A(C) 
;
l1000986D: mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000987F
;
;* Jump:
; 100098C3(U) 
;
l10009876: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10009874(U) 
;
l1000987F: cmp dword ptr [ebp-00Ch], 000000004h
           jnl l100098C5
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+054h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l100098A4
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+000000111h], dl
;
;* Jump:
; 10009896(C) 
;
l100098A4: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+064h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l100098C3
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ebp+00Ch]
           mov byte ptr [eax+000000111h], cl
;
;* Jump:
; 100098B5(C) 
;
l100098C3: jmp l10009876
;
;* Jump:
; 10009883(C) 
;
l100098C5: mov esp, ebp
           pop ebp
           ret
l1000982E ENDP
;
;* Call:
; 1002986F 
;
l100098C9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000065h
           je l100098DF
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 000000066h
           jne l1000991F
;
;* Jump:
; 100098D4(C) 
;
l100098DF: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+0000000CCh]
           cmp ecx, dword ptr [eax+020h]
           jnb l1000990A
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000043h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100098EE(C) 
;
l1000990A: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000138h]
           call [eax+008h]
           add esp, 000000004h
           jmp l10009950
;
;* Jump:
; 100098DD(C) 
;
l1000991F: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 000000067h
           je l10009950
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000991D(U), 10009926(C), 10009A1E(U) 
;
l10009950: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000138h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Dh]
           test ecx, ecx
           jne l10009A23
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           call [ecx]
           add esp, 000000004h
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000998A
;
;* Jump:
; 10009A06(U) 
;
l10009981: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000997F(U) 
;
l1000998A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+0000000DCh]
           jnb l10009A0B
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+008h], 000000000h
           je l100099CE
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000DCh]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000999F(C) 
;
l100099CE: push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000144h]
           call [eax+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l10009A06
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000018h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100099EA(C) 
;
l10009A06: jmp near ptr l10009981
;
;* Jump:
; 10009996(C) 
;
l10009A0B: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000138h]
           call [edx+008h]
           add esp, 000000004h
           jmp near ptr l10009950
;
;* Jump:
; 10009960(C) 
;
l10009A23: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000148h]
           call [edx+00Ch]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           call [edx+010h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F5D0
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l100098C9 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000CCh], 000000000h
           jne l10009A81
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 000000065h
           je l10009AA9
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 000000066h
           je l10009AA9
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000067h
           je l10009AA9
;
;* Jump:
; 10009A64(C) 
;
l10009A81: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009A6D(C), 10009A76(C), 10009A7F(C) 
;
l10009AA9: mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000148h]
           call [edx+014h]
           add esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10009AFE(U) 
;
l10009AD3: mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [ebp+014h]
           sub ecx, 000000001h
           mov dword ptr [ebp+014h], ecx
           test eax, eax
           je l10009B00
           mov edx, dword ptr [ebp+010h]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [ebp-004h]
           add esp, 000000008h
           mov edx, dword ptr [ebp+010h]
           add edx, 000000001h
           mov dword ptr [ebp+010h], edx
           jmp l10009AD3
;
;* Jump:
; 10009AE1(C) 
;
l10009B00: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000CCh], 000000000h
           jne l10009B2E
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 000000065h
           je l10009B56
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 000000066h
           je l10009B56
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000067h
           je l10009B56
;
;* Jump:
; 10009B11(C) 
;
l10009B2E: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009B1A(C), 10009B23(C), 10009B2C(C) 
;
l10009B56: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000148h]
           call [edx+014h]
           add esp, 00000000Ch
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000148h]
           call [eax+018h]
           add esp, 000000008h
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l10009BC3
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009B99(C) 
;
l10009BC3: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+010h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           call [eax+008h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D6A0
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           call [ecx+010h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           call [ecx+010h]
           add esp, 000000004h
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100297F6 
;
l10009C20 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l10009C54
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009C2A(C) 
;
l10009C54: mov ecx, dword ptr [ebp+00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l10009C6F
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000982E
           add esp, 000000008h
;
;* Jump:
; 10009C5F(C) 
;
l10009C6F: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+010h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           call [edx+008h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D320
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000138h]
           call [eax]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000CCh], 000000000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ACh]
           neg eax
           sbb eax, eax
           neg eax
           add eax, 000000065h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], eax
           pop ebp
           ret
l10009C20 ENDP
;
;* Call:
; 1002985E 
;
l10009CD5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000065h
           je l10009D0C
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009CE2(C) 
;
l10009D0C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+0000000CCh]
           cmp eax, dword ptr [edx+020h]
           jb l10009D3A
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000007Bh
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 10009D1B(C) 
;
l10009D3A: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10009D73
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000CCh]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10009D41(C) 
;
l10009D73: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           xor edx, edx
           mov dl, byte ptr [ecx+00Ch]
           test edx, edx
           je l10009D98
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000138h]
           call [edx+004h]
           add esp, 000000004h
;
;* Jump:
; 10009D83(C) 
;
l10009D98: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+020h]
           sub edx, dword ptr [ecx+0000000CCh]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+010h]
           cmp eax, dword ptr [ebp-004h]
           jbe l10009DB8
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp+010h], ecx
;
;* Jump:
; 10009DB0(C) 
;
l10009DB8: mov dword ptr [ebp-008h], 000000000h
           mov edx, dword ptr [ebp+010h]
           push edx
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000013Ch]
           call [ecx+004h]
           add esp, 000000010h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000CCh]
           add eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000CCh], eax
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10009CD5 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000066h
           je l10009E2F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10009E05(C) 
;
l10009E2F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+0000000CCh]
           cmp eax, dword ptr [edx+020h]
           jb l10009E64
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000007Bh
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l10009F2F
;
;* Jump:
; 10009E3E(C) 
;
l10009E64: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10009E9D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000CCh]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10009E6B(C) 
;
l10009E9D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           xor edx, edx
           mov dl, byte ptr [ecx+00Ch]
           test edx, edx
           je l10009EC2
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000138h]
           call [edx+004h]
           add esp, 000000004h
;
;* Jump:
; 10009EAD(C) 
;
l10009EC2: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           shl ecx, 003h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+010h]
           cmp edx, dword ptr [ebp-004h]
           jnb l10009EF3
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000017h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10009ED7(C) 
;
l10009EF3: mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000144h]
           call [edx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l10009F17
           xor eax, eax
           jmp l10009F2F
;
;* Jump:
; 10009F11(C) 
;
l10009F17: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000CCh]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000CCh], ecx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10009E5F(U), 10009F15(U) 
;
l10009F2F: mov esp, ebp
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D3FA 
;
l10009F40 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push 000000068h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000144h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000A05E
           mov eax, dword ptr [ebp+00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l1000A007
           mov dword ptr [ebp-00Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-008h], edx
           jmp l10009FA5
;
;* Jump:
; 1000A003(U) 
;
l10009F93: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000054h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10009F91(U) 
;
l10009FA5: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+038h]
           jnl l1000A005
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+020h]
           push eax
           call l100268B3
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           call l100268B3
           add esp, 000000008h
           push eax
           push 000000000h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+014h]
           add esp, 000000018h
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h+040h], eax
           jmp l10009F93
;
;* Jump:
; 10009FAE(C) 
;
l1000A005: jmp l1000A05A
;
;* Jump:
; 10009F7B(C) 
;
l1000A007: push 000000500h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+004h]
           add esp, 00000000Ch
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l1000A033
;
;* Jump:
; 1000A04E(U) 
;
l1000A02A: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000A028(U) 
;
l1000A033: cmp dword ptr [ebp-010h], 00000000Ah
           jnl l1000A050
           mov eax, dword ptr [ebp-010h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-014h]
           add ecx, eax
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+018h], ecx
           jmp l1000A02A
;
;* Jump:
; 1000A037(C) 
;
l1000A050: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+040h], 000000000h
;
;* Jump:
; 1000A005(U) 
;
l1000A05A: mov esp, ebp
           pop ebp
           ret
l10009F40 ENDP
;
l1000A05E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000A14E
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp-008h], 000000000h
           je l1000A0A3
           cmp dword ptr [ebp-008h], 000000002h
           je l1000A101
           cmp dword ptr [ebp-008h], 000000003h
           je l1000A0D2
           jmp near ptr l1000A130
;
;* Jump:
; 1000A090(C) 
;
l1000A0A3: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+040h], 000000000h
           je l1000A0C6
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000A0AA(C) 
;
l1000A0C6: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1000A1C8
           jmp l1000A14A
;
;* Jump:
; 1000A09C(C) 
;
l1000A0D2: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+040h], 000000000h
           jne l1000A0F5
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000A0D9(C) 
;
l1000A0F5: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000A47B
           jmp l1000A14A
;
;* Jump:
; 1000A096(C) 
;
l1000A101: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+040h], 000000000h
           jne l1000A124
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A108(C) 
;
l1000A124: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1000A72E
           jmp l1000A14A
;
;* Jump:
; 1000A09E(U) 
;
l1000A130: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A0D0(U), 1000A0FF(U), 1000A12E(U) 
;
l1000A14A: mov esp, ebp
           pop ebp
           ret
l1000A05E ENDP
;
;* Call:
; 1000A07E, 1000A46D, 1000A91F 
;
l1000A14E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000E0h], 000000001h
           jle l1000A176
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 000000001h
           jmp l1000A1B0
;
;* Jump:
; 1000A168(C) 
;
l1000A176: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000DCh]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+008h], edx
           jnb l1000A19E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000E4h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+014h], ecx
           jmp l1000A1B0
;
;* Jump:
; 1000A188(C) 
;
l1000A19E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000E4h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+048h]
           mov dword ptr [ecx+014h], edx
;
;* Jump:
; 1000A174(U), 1000A19C(U) 
;
l1000A1B0: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l1000A14E ENDP
;
l1000A1C8 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000F4h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000DCh]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-034h], ecx
           jmp l1000A20C
;
;* Jump:
; 1000A455(U) 
;
l1000A203: mov edx, dword ptr [ebp-034h]
           add edx, 000000001h
           mov dword ptr [ebp-034h], edx
;
;* Jump:
; 1000A201(U) 
;
l1000A20C: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-034h]
           cmp ecx, dword ptr [eax+014h]
           jnl l1000A45A
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-018h], eax
           jmp l1000A22F
;
;* Jump:
; 1000A446(U) 
;
l1000A226: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1000A224(U) 
;
l1000A22F: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-014h]
           ja l1000A44B
           mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           jmp l1000A254
;
;* Jump:
; 1000A408(U) 
;
l1000A24B: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 1000A249(U) 
;
l1000A254: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ecx+0000000E0h]
           jnl l1000A40D
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-014h]
           jnb l1000A289
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+034h]
           mov dword ptr [ebp-038h], edx
           jmp l1000A292
;
;* Jump:
; 1000A27C(C) 
;
l1000A289: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+044h]
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1000A287(U) 
;
l1000A292: mov edx, dword ptr [ebp-038h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-018h]
           imul ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-034h]
           shl edx, 003h
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l1000A2C0
;
;* Jump:
; 1000A403(U) 
;
l1000A2B7: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 1000A2B5(U) 
;
l1000A2C0: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000A408
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp-004h]
           jb l1000A2EC
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-024h]
           cmp edx, dword ptr [eax+048h]
           jnl l1000A395
;
;* Jump:
; 1000A2D8(C) 
;
l1000A2EC: mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+018h]
           push eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000154h]
           call [edx+004h]
           add esp, 00000001Ch
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-020h]
           cmp ecx, dword ptr [eax+034h]
           jnl l1000A393
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+034h]
           sub eax, dword ptr [ebp-020h]
           shl eax, 007h
           push eax
           mov ecx, dword ptr [ebp-030h]
           add ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+018h]
           push eax
           call l10026972
           add esp, 000000008h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], ecx
           jmp l1000A366
;
;* Jump:
; 1000A391(U) 
;
l1000A35D: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1000A35B(U) 
;
l1000A366: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+034h]
           jnl l1000A393
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+014h]
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+edx*04h+018h]
           mov ax, word ptr [ecx]
           mov word ptr [edx], ax
           jmp l1000A35D
;
;* Jump:
; 1000A330(C), 1000A36F(C) 
;
l1000A393: jmp l1000A3EE
;
;* Jump:
; 1000A2E6(C) 
;
l1000A395: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 007h
           push edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+018h]
           push edx
           call l10026972
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1000A3C4
;
;* Jump:
; 1000A3EC(U) 
;
l1000A3BB: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1000A3B9(U) 
;
l1000A3C4: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+034h]
           jnl l1000A3EE
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+014h]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+eax*04h+018h]
           mov cx, word ptr [edx]
           mov word ptr [eax], cx
           jmp l1000A3BB
;
;* Jump:
; 1000A393(U), 1000A3CD(C) 
;
l1000A3EE: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [edx+034h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000008h
           mov dword ptr [ebp-010h], ecx
           jmp near ptr l1000A2B7
;
;* Jump:
; 1000A2C9(C) 
;
l1000A408: jmp near ptr l1000A24B
;
;* Jump:
; 1000A260(C) 
;
l1000A40D: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000158h]
           call [edx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l1000A446
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [edx+00Ch], eax
           xor al, al
           jmp l1000A477
;
;* Jump:
; 1000A42E(C) 
;
l1000A446: jmp near ptr l1000A226
;
;* Jump:
; 1000A235(C) 
;
l1000A44B: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00Ch], 000000000h
           jmp near ptr l1000A203
;
;* Jump:
; 1000A215(C) 
;
l1000A45A: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000A14E
           add esp, 000000004h
           mov al, 001h
;
;* Jump:
; 1000A444(U) 
;
l1000A477: mov esp, ebp
           pop ebp
           ret
l1000A1C8 ENDP
;
l1000A47B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000DCh]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-030h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-028h], edx
           jmp l1000A4C1
;
;* Jump:
; 1000A714(U) 
;
l1000A4AF: mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000054h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1000A4AD(U) 
;
l1000A4C1: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [edx+038h]
           jnl l1000A719
           push 000000001h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+040h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+020h]
           add esp, 000000014h
           mov dword ptr [ebp-024h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp-004h]
           jnb l1000A51B
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-02Ch], eax
           jmp l1000A53B
;
;* Jump:
; 1000A50E(C) 
;
l1000A51B: mov ecx, dword ptr [ebp-028h]
           mov esi, dword ptr [ebp-028h]
           mov eax, dword ptr [ecx+020h]
           xor edx, edx
           div dword ptr [esi+00Ch]
           mov dword ptr [ebp-02Ch], edx
           cmp dword ptr [ebp-02Ch], 000000000h
           jne l1000A53B
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 1000A519(U), 1000A530(C) 
;
l1000A53B: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-020h]
           xor edx, edx
           div dword ptr [ebp-014h]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           jle l1000A567
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000A55C(C) 
;
l1000A567: mov dword ptr [ebp-03Ch], 000000000h
           jmp l1000A579
;
;* Jump:
; 1000A622(U) 
;
l1000A570: mov eax, dword ptr [ebp-03Ch]
           add eax, 000000001h
           mov dword ptr [ebp-03Ch], eax
;
;* Jump:
; 1000A56E(U) 
;
l1000A579: mov ecx, dword ptr [ebp-03Ch]
           cmp ecx, dword ptr [ebp-02Ch]
           jnl l1000A627
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp-03Ch]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp-040h]
           push ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000154h]
           call [edx+004h]
           add esp, 00000001Ch
           cmp dword ptr [ebp-008h], 000000000h
           jle l1000A622
           mov eax, dword ptr [ebp-020h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-040h]
           add ecx, eax
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-008h]
           shl edx, 007h
           push edx
           mov eax, dword ptr [ebp-040h]
           push eax
           call l10026972
           add esp, 000000008h
           mov ecx, dword ptr [ebp-040h]
           mov dx, word ptr [ecx-080h]
           mov word ptr [ebp-038h], dx
           mov dword ptr [ebp-018h], 000000000h
           jmp l1000A607
;
;* Jump:
; 1000A620(U) 
;
l1000A5FE: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1000A5FC(U) 
;
l1000A607: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-008h]
           jnl l1000A622
           mov edx, dword ptr [ebp-018h]
           shl edx, 007h
           mov eax, dword ptr [ebp-040h]
           mov cx, word ptr [ebp-038h]
           mov word ptr [eax+edx], cx
           jmp l1000A5FE
;
;* Jump:
; 1000A5C7(C), 1000A60D(C) 
;
l1000A622: jmp near ptr l1000A570
;
;* Jump:
; 1000A57F(C) 
;
l1000A627: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           cmp eax, dword ptr [ebp-004h]
           jne l1000A714
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           xor edx, edx
           div dword ptr [ebp-014h]
           mov dword ptr [ebp-034h], eax
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-03Ch], edx
           jmp l1000A65B
;
;* Jump:
; 1000A70F(U) 
;
l1000A652: mov eax, dword ptr [ebp-03Ch]
           add eax, 000000001h
           mov dword ptr [ebp-03Ch], eax
;
;* Jump:
; 1000A650(U) 
;
l1000A65B: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-03Ch]
           cmp edx, dword ptr [ecx+00Ch]
           jnl l1000A714
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+eax*04h-004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-020h]
           shl eax, 007h
           push eax
           mov ecx, dword ptr [ebp-040h]
           push ecx
           call l10026972
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1000A6A8
;
;* Jump:
; 1000A70D(U) 
;
l1000A69F: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1000A69D(U) 
;
l1000A6A8: mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-034h]
           jnb l1000A70F
           mov ecx, dword ptr [ebp-014h]
           sub ecx, 000000001h
           shl ecx, 007h
           mov edx, dword ptr [ebp-010h]
           mov ax, word ptr [edx+ecx]
           mov word ptr [ebp-038h], ax
           mov dword ptr [ebp-018h], 000000000h
           jmp l1000A6D6
;
;* Jump:
; 1000A6EF(U) 
;
l1000A6CD: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1000A6CB(U) 
;
l1000A6D6: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-014h]
           jnl l1000A6F1
           mov eax, dword ptr [ebp-018h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-040h]
           mov dx, word ptr [ebp-038h]
           mov word ptr [ecx+eax], dx
           jmp l1000A6CD
;
;* Jump:
; 1000A6DC(C) 
;
l1000A6F1: mov eax, dword ptr [ebp-014h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-040h]
           add ecx, eax
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-014h]
           shl edx, 007h
           mov eax, dword ptr [ebp-010h]
           add eax, edx
           mov dword ptr [ebp-010h], eax
           jmp l1000A69F
;
;* Jump:
; 1000A6AE(C) 
;
l1000A70F: jmp near ptr l1000A652
;
;* Jump:
; 1000A630(C), 1000A664(C) 
;
l1000A714: jmp near ptr l1000A4AF
;
;* Jump:
; 1000A4CA(C) 
;
l1000A719: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000A72E
           add esp, 000000008h
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000A47B ENDP
;
;* Call:
; 1000A721 
;
l1000A72E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-024h], 000000000h
           jmp l1000A752
;
;* Jump:
; 1000A7AC(U) 
;
l1000A749: mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 1000A747(U) 
;
l1000A752: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [eax+0000000E0h]
           jnl l1000A7AE
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-010h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h+040h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+020h]
           add esp, 000000014h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp+edx*04h-020h], eax
           jmp l1000A749
;
;* Jump:
; 1000A75E(C) 
;
l1000A7AE: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-034h], ecx
           jmp l1000A7C2
;
;* Jump:
; 1000A907(U) 
;
l1000A7B9: mov edx, dword ptr [ebp-034h]
           add edx, 000000001h
           mov dword ptr [ebp-034h], edx
;
;* Jump:
; 1000A7B7(U) 
;
l1000A7C2: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-034h]
           cmp ecx, dword ptr [eax+014h]
           jnl l1000A90C
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-008h], eax
           jmp l1000A7E5
;
;* Jump:
; 1000A8F8(U) 
;
l1000A7DC: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000A7DA(U) 
;
l1000A7E5: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+0000000F4h]
           jnb l1000A8FD
           mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l1000A810
;
;* Jump:
; 1000A8BA(U) 
;
l1000A807: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 1000A805(U) 
;
l1000A810: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [edx+0000000E0h]
           jnl l1000A8BF
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+0000000E4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           imul edx, dword ptr [ecx+034h]
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l1000A851
;
;* Jump:
; 1000A8B8(U) 
;
l1000A848: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 1000A846(U) 
;
l1000A851: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000A8BA
           mov eax, dword ptr [ebp-02Ch]
           add eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+ecx*04h-020h]
           mov ecx, dword ptr [ebp-028h]
           shl ecx, 007h
           mov edx, dword ptr [edx+eax*04h]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-038h], 000000000h
           jmp l1000A889
;
;* Jump:
; 1000A8B6(U) 
;
l1000A880: mov eax, dword ptr [ebp-038h]
           add eax, 000000001h
           mov dword ptr [ebp-038h], eax
;
;* Jump:
; 1000A87E(U) 
;
l1000A889: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-038h]
           cmp edx, dword ptr [ecx+034h]
           jnl l1000A8B8
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+eax*04h+018h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000080h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1000A880
;
;* Jump:
; 1000A892(C) 
;
l1000A8B8: jmp l1000A848
;
;* Jump:
; 1000A85A(C) 
;
l1000A8BA: jmp near ptr l1000A807
;
;* Jump:
; 1000A81C(C) 
;
l1000A8BF: mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000158h]
           call [edx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l1000A8F8
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], eax
           xor al, al
           jmp l1000A929
;
;* Jump:
; 1000A8E0(C) 
;
l1000A8F8: jmp near ptr l1000A7DC
;
;* Jump:
; 1000A7F1(C) 
;
l1000A8FD: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], 000000000h
           jmp near ptr l1000A7B9
;
;* Jump:
; 1000A7CB(C) 
;
l1000A90C: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000A14E
           add esp, 000000004h
           mov al, 001h
;
;* Jump:
; 1000A8F6(U) 
;
l1000A929: mov esp, ebp
           pop ebp
           ret
l1000A72E ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D345 
;
l1000A930 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push 00000000Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00000014Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000B2ED
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000004h
           ja l1000A9F2
           mov eax, dword ptr [ebp-008h]
           jmp [offset g1000ACA7+eax*04h]
l1000A983: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000001h
           je l1000A9A6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000009h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A98A(C) 
;
l1000A9A6: jmp l1000AA15
l1000A9A8: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000003h
           je l1000A9CB
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000009h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A9AF(C) 
;
l1000A9CB: jmp l1000AA15
l1000A9CD: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000004h
           je l1000A9F0
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000009h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A9D4(C) 
;
l1000A9F0: jmp l1000AA15
;
;* Jump:
; 1000A977(C) 
;
l1000A9F2: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000001h
           jnl l1000AA15
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000009h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000A9A6(U), 1000A9CB(U), 1000A9F0(U), 1000A9F9(C) 
;
l1000AA15: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+03Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000004h
           ja l1000AC63
           mov ecx, dword ptr [ebp-00Ch]
           jmp [offset g1000ACBB+ecx*04h]
l1000AA3B: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000001h
           je l1000AA5E
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000000Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000AA42(C) 
;
l1000AA5E: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+028h], 000000001h
           jne l1000AA73
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000B1B5
           jmp l1000AAC0
;
;* Jump:
; 1000AA65(C) 
;
l1000AA73: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000002h
           jne l1000AA91
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000ACCF
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000AF44
           jmp l1000AAC0
;
;* Jump:
; 1000AA7A(C) 
;
l1000AA91: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000003h
           jne l1000AAA6
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1000B1B5
           jmp l1000AAC0
;
;* Jump:
; 1000AA98(C) 
;
l1000AAA6: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Bh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000AA71(U), 1000AA8F(U), 1000AAA4(U) 
;
l1000AAC0: jmp near ptr l1000ACA3
l1000AAC5: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000003h
           je l1000AAE8
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000000Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000AACC(C) 
;
l1000AAE8: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+028h], 000000002h
           jne l1000AB06
           mov eax, 000000001h
           test eax, eax
           je l1000AB06
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1000B23C
           jmp l1000AB20
;
;* Jump:
; 1000AAEF(C), 1000AAF8(C) 
;
l1000AB06: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000AB04(U) 
;
l1000AB20: jmp near ptr l1000ACA3
l1000AB25: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+038h], 000000003h
           je l1000AB48
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000AB2C(C) 
;
l1000AB48: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000002h
           jne l1000AB66
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000ACCF
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000ADE0
           jmp l1000AB95
;
;* Jump:
; 1000AB4F(C) 
;
l1000AB66: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000003h
           jne l1000AB7B
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1000B23C
           jmp l1000AB95
;
;* Jump:
; 1000AB6D(C) 
;
l1000AB7B: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Bh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000AB64(U), 1000AB79(U) 
;
l1000AB95: jmp near ptr l1000ACA3
l1000AB9A: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000004h
           je l1000ABBD
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000000Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000ABA1(C) 
;
l1000ABBD: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+028h], 000000004h
           jne l1000ABD2
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000B23C
           jmp l1000ABEC
;
;* Jump:
; 1000ABC4(C) 
;
l1000ABD2: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000ABD0(U) 
;
l1000ABEC: jmp near ptr l1000ACA3
l1000ABF1: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+038h], 000000004h
           je l1000AC14
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Ah
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000ABF8(C) 
;
l1000AC14: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+028h], 000000004h
           jne l1000AC32
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset l1000ACCF
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1000B01F
           jmp l1000AC61
;
;* Jump:
; 1000AC1B(C) 
;
l1000AC32: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+028h], 000000005h
           jne l1000AC47
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1000B23C
           jmp l1000AC61
;
;* Jump:
; 1000AC39(C) 
;
l1000AC47: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000AC30(U), 1000AC45(U) 
;
l1000AC61: jmp l1000ACA3
;
;* Jump:
; 1000AA2B(C) 
;
l1000AC63: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+03Ch]
           cmp eax, dword ptr [edx+028h]
           jne l1000AC7F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+038h]
           cmp eax, dword ptr [edx+024h]
           je l1000AC99
;
;* Jump:
; 1000AC6F(C) 
;
l1000AC7F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000AC7D(C) 
;
l1000AC99: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000B23C
;
;* Jump:
; 1000AAC0(U), 1000AB20(U), 1000AB95(U), 1000ABEC(U), 1000AC61(U) 
;
l1000ACA3: mov esp, ebp
           pop ebp
           ret
;
g1000ACA7  dd l1000A983
           dd l1000A9A8
           dd l1000A9A8
           dd l1000A9CD
           dd l1000A9CD
g1000ACBB  dd l1000AA3B
           dd l1000AAC5
           dd l1000AB25
           dd l1000AB9A
           dd l1000ABF1
l1000A930 ENDP
l1000ACCF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           mov dword ptr [ebp-00Ch], ecx
           push 000002000h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000AD15
;
;* Jump:
; 1000ADD7(U) 
;
l1000AD0C: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000AD0A(U) 
;
l1000AD15: cmp dword ptr [ebp-008h], 0000000FFh
           jg l1000ADDC
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000004C8Bh
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000009646h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000000400h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000001D2Fh
           add edx, 000008000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000000800h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, -000002B33h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000000C00h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, -0000054CDh
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000001000h], edx
           mov edx, dword ptr [ebp-008h]
           shl edx, 00Fh
           add edx, 000807FFFh
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000001400h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, -000006B2Fh
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000001800h], edx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, -0000014D1h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+000001C00h], edx
           jmp near ptr l1000AD0C
;
;* Jump:
; 1000AD1C(C) 
;
l1000ADDC: mov esp, ebp
           pop ebp
           ret
l1000ACCF ENDP
;
l1000ADE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000AF3B(U) 
;
l1000AE04: mov eax, dword ptr [ebp+018h]
           sub eax, 000000001h
           mov dword ptr [ebp+018h], eax
           cmp dword ptr [ebp+018h], 000000000h
           jl l1000AF40
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           mov dword ptr [ebp+00Ch], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, 000000001h
           mov dword ptr [ebp+014h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000AE6F
;
;* Jump:
; 1000AF36(U) 
;
l1000AE66: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000AE64(U) 
;
l1000AE6F: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-010h]
           jnb l1000AF3B
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx+002h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000003h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-02Ch]
           add ecx, dword ptr [eax+edx*04h+000000400h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-02Ch]
           add ecx, dword ptr [eax+edx*04h+000000800h]
           sar ecx, 010h
           mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-004h]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+eax*04h+000000C00h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-02Ch]
           add edx, dword ptr [ecx+eax*04h+000001000h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-02Ch]
           add edx, dword ptr [ecx+eax*04h+000001400h]
           sar edx, 010h
           mov eax, dword ptr [ebp-028h]
           add eax, dword ptr [ebp-004h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+ecx*04h+000001400h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-02Ch]
           add eax, dword ptr [edx+ecx*04h+000001800h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-02Ch]
           add eax, dword ptr [edx+ecx*04h+000001C00h]
           sar eax, 010h
           mov ecx, dword ptr [ebp-018h]
           add ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], al
           jmp near ptr l1000AE66
;
;* Jump:
; 1000AE75(C) 
;
l1000AF3B: jmp near ptr l1000AE04
;
;* Jump:
; 1000AE11(C) 
;
l1000AF40: mov esp, ebp
           pop ebp
           ret
l1000ADE0 ENDP
;
l1000AF44 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000B016(U) 
;
l1000AF68: mov eax, dword ptr [ebp+018h]
           sub eax, 000000001h
           mov dword ptr [ebp+018h], eax
           cmp dword ptr [ebp+018h], 000000000h
           jl l1000B01B
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           mov dword ptr [ebp+00Ch], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp+014h]
           add edx, 000000001h
           mov dword ptr [ebp+014h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000AFB5
;
;* Jump:
; 1000B014(U) 
;
l1000AFAC: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000AFAA(U) 
;
l1000AFB5: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-010h]
           jnb l1000B016
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000003h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-024h]
           add edx, dword ptr [ecx+eax*04h+000000400h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-024h]
           add edx, dword ptr [ecx+eax*04h+000000800h]
           sar edx, 010h
           mov eax, dword ptr [ebp-018h]
           add eax, dword ptr [ebp-004h]
           mov byte ptr [eax], dl
           jmp l1000AFAC
;
;* Jump:
; 1000AFBB(C) 
;
l1000B016: jmp near ptr l1000AF68
;
;* Jump:
; 1000AF75(C) 
;
l1000B01B: mov esp, ebp
           pop ebp
           ret
l1000AF44 ENDP
;
l1000B01F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000B1AC(U) 
;
l1000B043: mov eax, dword ptr [ebp+018h]
           sub eax, 000000001h
           mov dword ptr [ebp+018h], eax
           cmp dword ptr [ebp+018h], 000000000h
           jl l1000B1B1
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           mov dword ptr [ebp+00Ch], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+014h]
           add edx, 000000001h
           mov dword ptr [ebp+014h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000B0BD
;
;* Jump:
; 1000B1A7(U) 
;
l1000B0B4: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000B0B2(U) 
;
l1000B0BD: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-010h]
           jnb l1000B1AC
           mov edx, dword ptr [ebp-024h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, 0000000FFh
           sub ecx, eax
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-024h]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           mov ecx, 0000000FFh
           sub ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-024h]
           xor eax, eax
           mov al, byte ptr [edx+002h]
           mov ecx, 0000000FFh
           sub ecx, eax
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+003h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000004h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-030h]
           add edx, dword ptr [ecx+eax*04h+000000400h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-030h]
           add edx, dword ptr [ecx+eax*04h+000000800h]
           sar edx, 010h
           mov eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-004h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+ecx*04h+000000C00h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-030h]
           add eax, dword ptr [edx+ecx*04h+000001000h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-030h]
           add eax, dword ptr [edx+ecx*04h+000001400h]
           sar eax, 010h
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+edx*04h+000001400h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-030h]
           add ecx, dword ptr [eax+edx*04h+000001800h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-030h]
           add ecx, dword ptr [eax+edx*04h+000001C00h]
           sar ecx, 010h
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-004h]
           mov byte ptr [edx], cl
           jmp near ptr l1000B0B4
;
;* Jump:
; 1000B0C3(C) 
;
l1000B1AC: jmp near ptr l1000B043
;
;* Jump:
; 1000B050(C) 
;
l1000B1B1: mov esp, ebp
           pop ebp
           ret
l1000B01F ENDP
;
l1000B1B5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000B236(U) 
;
l1000B1CD: mov ecx, dword ptr [ebp+018h]
           sub ecx, 000000001h
           mov dword ptr [ebp+018h], ecx
           cmp dword ptr [ebp+018h], 000000000h
           jl l1000B238
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           mov dword ptr [ebp+00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+014h]
           add eax, 000000001h
           mov dword ptr [ebp+014h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000B216
;
;* Jump:
; 1000B234(U) 
;
l1000B20D: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000B20B(U) 
;
l1000B216: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp-00Ch]
           jnb l1000B236
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-014h]
           mov dl, byte ptr [ecx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-014h]
           add eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-014h], eax
           jmp l1000B20D
;
;* Jump:
; 1000B21C(C) 
;
l1000B236: jmp l1000B1CD
;
;* Jump:
; 1000B1DA(C) 
;
l1000B238: mov esp, ebp
           pop ebp
           ret
l1000B1B5 ENDP
;
l1000B23C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+038h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000B2E4(U) 
;
l1000B254: mov ecx, dword ptr [ebp+018h]
           sub ecx, 000000001h
           mov dword ptr [ebp+018h], ecx
           cmp dword ptr [ebp+018h], 000000000h
           jl l1000B2E9
           mov dword ptr [ebp-018h], 000000000h
           jmp l1000B279
;
;* Jump:
; 1000B2D0(U) 
;
l1000B270: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1000B26E(U) 
;
l1000B279: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-008h]
           jnl l1000B2D2
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000B2AD
;
;* Jump:
; 1000B2CE(U) 
;
l1000B2A4: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000B2A2(U) 
;
l1000B2AD: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l1000B2D0
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ebp-018h]
           mov al, byte ptr [edx]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-014h], ecx
           jmp l1000B2A4
;
;* Jump:
; 1000B2B3(C) 
;
l1000B2D0: jmp l1000B270
;
;* Jump:
; 1000B27F(C) 
;
l1000B2D2: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           mov dword ptr [ebp+00Ch], edx
           mov eax, dword ptr [ebp+014h]
           add eax, 000000001h
           mov dword ptr [ebp+014h], eax
           jmp near ptr l1000B254
;
;* Jump:
; 1000B261(C) 
;
l1000B2E9: mov esp, ebp
           pop ebp
           ret
l1000B23C ENDP
;
l1000B2ED PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l1000B2ED ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D36B 
;
l1000B300 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push 000000030h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000154h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000B3E7
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000B4h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1000B351
           cmp dword ptr [ebp-00Ch], 000000001h
           je l1000B367
           cmp dword ptr [ebp-00Ch], 000000002h
           je l1000B37D
           jmp l1000B393
;
;* Jump:
; 1000B341(C) 
;
l1000B351: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1000B67F
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], offset l100200A0
           jmp l1000B3AD
;
;* Jump:
; 1000B347(C) 
;
l1000B367: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1000B67F
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], offset l1001FD10
           jmp l1000B3AD
;
;* Jump:
; 1000B34D(C) 
;
l1000B37D: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000BA22
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], offset l1001F9A0
           jmp l1000B3AD
;
;* Jump:
; 1000B34F(U) 
;
l1000B393: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000030h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000B365(U), 1000B37B(U), 1000B391(U) 
;
l1000B3AD: mov dword ptr [ebp-008h], 000000000h
           jmp l1000B3BF
;
;* Jump:
; 1000B3E1(U) 
;
l1000B3B6: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000B3B4(U) 
;
l1000B3BF: cmp dword ptr [ebp-008h], 000000004h
           jnl l1000B3E3
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+020h], 000000000h
           jmp l1000B3B6
;
;* Jump:
; 1000B3C3(C) 
;
l1000B3E3: mov esp, ebp
           pop ebp
           ret
l1000B300 ENDP
;
l1000B3E7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000154h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-014h], eax
           jmp l1000B41D
;
;* Jump:
; 1000B676(U) 
;
l1000B40B: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000054h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1000B409(U) 
;
l1000B41D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+038h]
           jnl l1000B67B
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jl l1000B44E
           cmp dword ptr [ebp-004h], 000000004h
           jnl l1000B44E
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+ecx*04h+044h], 000000000h
           jne l1000B473
;
;* Jump:
; 1000B439(C), 1000B43F(C) 
;
l1000B44E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000034h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000B44C(C) 
;
l1000B473: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+044h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B4h]
           mov dword ptr [ebp-02Ch], eax
           cmp dword ptr [ebp-02Ch], 000000000h
           je l1000B4AB
           cmp dword ptr [ebp-02Ch], 000000001h
           je l1000B51C
           cmp dword ptr [ebp-02Ch], 000000002h
           je l1000B5A1
           jmp near ptr l1000B65C
;
;* Jump:
; 1000B490(C) 
;
l1000B4AB: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+ecx*04h+00Ch], 000000000h
           jne l1000B4D8
           push 000000100h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h+00Ch], eax
;
;* Jump:
; 1000B4B6(C) 
;
l1000B4D8: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+00Ch]
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l1000B4F7
;
;* Jump:
; 1000B515(U) 
;
l1000B4EE: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1000B4EC(U) 
;
l1000B4F7: cmp dword ptr [ebp-010h], 000000040h
           jnl l1000B517
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov ax, word ptr [edx+ecx*02h]
           shl eax, 003h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1000B4EE
;
;* Jump:
; 1000B4FB(C) 
;
l1000B517: jmp near ptr l1000B676
;
;* Jump:
; 1000B496(C) 
;
l1000B51C: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+eax*04h+00Ch], 000000000h
           jne l1000B549
           push 000000100h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+edx*04h+00Ch], eax
;
;* Jump:
; 1000B527(C) 
;
l1000B549: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+00Ch]
           mov dword ptr [ebp-01Ch], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l1000B568
;
;* Jump:
; 1000B59A(U) 
;
l1000B55F: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1000B55D(U) 
;
l1000B568: cmp dword ptr [ebp-010h], 000000040h
           jnl l1000B59C
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dx, word ptr [ecx+eax*02h]
           mov eax, dword ptr [ebp-010h]
           movsx ecx, word ptr [offset g10042200+eax*02h]
           imul edx, ecx
           add edx, 000000400h
           sar edx, 00Bh
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1000B55F
;
;* Jump:
; 1000B56C(C) 
;
l1000B59C: jmp near ptr l1000B676
;
;* Jump:
; 1000B4A0(C) 
;
l1000B5A1: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+edx*04h+020h], 000000000h
           jne l1000B5CE
           push 000000100h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h+020h], eax
;
;* Jump:
; 1000B5AC(C) 
;
l1000B5CE: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+020h]
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l1000B5F4
;
;* Jump:
; 1000B658(U) 
;
l1000B5EB: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1000B5E9(U) 
;
l1000B5F4: cmp dword ptr [ebp-024h], 000000008h
           jnl l1000B65A
           mov dword ptr [ebp-020h], 000000000h
           jmp l1000B60C
;
;* Jump:
; 1000B656(U) 
;
l1000B603: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1000B601(U) 
;
l1000B60C: cmp dword ptr [ebp-020h], 000000008h
           jnl l1000B658
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-030h], ecx
           fild dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-024h]
           fmul qword ptr [offset g10042280+edx*08h]
           mov eax, dword ptr [ebp-020h]
           fmul qword ptr [offset g10042280+eax*08h]
           fmul qword ptr [g100422C8]
           fdivr qword ptr [g100422C0]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-028h]
           fstp dword ptr [edx+ecx*04h]
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           jmp l1000B603
;
;* Jump:
; 1000B610(C) 
;
l1000B658: jmp l1000B5EB
;
;* Jump:
; 1000B5F8(C) 
;
l1000B65A: jmp l1000B676
;
;* Jump:
; 1000B4A6(U) 
;
l1000B65C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000030h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000B517(U), 1000B59C(U), 1000B65A(U) 
;
l1000B676: jmp near ptr l1000B40B
;
;* Jump:
; 1000B426(C) 
;
l1000B67B: mov esp, ebp
           pop ebp
           ret
l1000B3E7 ENDP
;
l1000B67F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000012Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000154h]
           mov dword ptr [ebp-000000110h], ecx
           mov edx, dword ptr [ebp-000000110h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-000000110h]
           mov ecx, dword ptr [eax+edx*04h+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [ebp+010h]
           lea ecx, [eax+edx*04h]
           mov dword ptr [ebp+010h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000B6DD
;
;* Jump:
; 1000BA19(U) 
;
l1000B6CB: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+01Ch]
           add eax, 000000008h
           mov dword ptr [ebp+01Ch], eax
;
;* Jump:
; 1000B6C9(U) 
;
l1000B6DD: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp+020h]
           jnb l1000BA1E
           lea edx, [ebp-00000010Ch]
           mov dword ptr [ebp-000000118h], edx
           mov dword ptr [ebp-000000114h], 000000000h
           jmp l1000B710
;
;* Jump:
; 1000B8E0(U) 
;
l1000B701: mov eax, dword ptr [ebp-000000114h]
           add eax, 000000001h
           mov dword ptr [ebp-000000114h], eax
;
;* Jump:
; 1000B6FF(U) 
;
l1000B710: cmp dword ptr [ebp-000000114h], 000000008h
           jnl l1000B8E5
           mov ecx, dword ptr [ebp-000000114h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, dword ptr [ebp+01Ch]
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov eax, dword ptr [ebp-000000118h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov edx, dword ptr [ebp-000000118h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           sub eax, 000000080h
           mov ecx, dword ptr [ebp-000000118h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-000000118h]
           add edx, 000000004h
           mov dword ptr [ebp-000000118h], edx
           mov eax, dword ptr [ebp-00000011Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov eax, dword ptr [ebp-000000118h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov edx, dword ptr [ebp-000000118h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           sub eax, 000000080h
           mov ecx, dword ptr [ebp-000000118h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-000000118h]
           add edx, 000000004h
           mov dword ptr [ebp-000000118h], edx
           mov eax, dword ptr [ebp-00000011Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov eax, dword ptr [ebp-000000118h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov edx, dword ptr [ebp-000000118h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           jmp near ptr l1000B701
;
;* Jump:
; 1000B717(C) 
;
l1000B8E5: lea edx, [ebp-00000010Ch]
           push edx
           call [ebp-008h]
           add esp, 000000004h
           mov eax, dword ptr [ebp-00Ch]
           shl eax, 007h
           mov ecx, dword ptr [ebp+014h]
           add ecx, eax
           mov dword ptr [ebp-000000120h], ecx
           mov dword ptr [ebp-00000012Ch], 000000000h
           jmp l1000B91E
;
;* Jump:
; 1000BA14(U) 
;
l1000B90F: mov edx, dword ptr [ebp-00000012Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000012Ch], edx
;
;* Jump:
; 1000B90D(U) 
;
l1000B91E: cmp dword ptr [ebp-00000012Ch], 000000040h
           jnl l1000BA19
           mov eax, dword ptr [ebp-00000012Ch]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-000000124h], edx
           mov eax, dword ptr [ebp-00000012Ch]
           mov ecx, dword ptr [ebp+eax*04h-00000010Ch]
           mov dword ptr [ebp-000000128h], ecx
           cmp dword ptr [ebp-000000128h], 000000000h
           jnl l1000B9BA
           mov edx, dword ptr [ebp-000000128h]
           neg edx
           mov dword ptr [ebp-000000128h], edx
           mov eax, dword ptr [ebp-000000124h]
           sar eax, 001h
           mov ecx, dword ptr [ebp-000000128h]
           add ecx, eax
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp-000000128h]
           cmp edx, dword ptr [ebp-000000124h]
           jl l1000B9A0
           mov eax, dword ptr [ebp-000000128h]
           cdq
           idiv dword ptr [ebp-000000124h]
           mov dword ptr [ebp-000000128h], eax
           jmp l1000B9AA
;
;* Jump:
; 1000B989(C) 
;
l1000B9A0: mov dword ptr [ebp-000000128h], 000000000h
;
;* Jump:
; 1000B99E(U) 
;
l1000B9AA: mov eax, dword ptr [ebp-000000128h]
           neg eax
           mov dword ptr [ebp-000000128h], eax
           jmp l1000B9FD
;
;* Jump:
; 1000B957(C) 
;
l1000B9BA: mov ecx, dword ptr [ebp-000000124h]
           sar ecx, 001h
           mov edx, dword ptr [ebp-000000128h]
           add edx, ecx
           mov dword ptr [ebp-000000128h], edx
           mov eax, dword ptr [ebp-000000128h]
           cmp eax, dword ptr [ebp-000000124h]
           jl l1000B9F3
           mov eax, dword ptr [ebp-000000128h]
           cdq
           idiv dword ptr [ebp-000000124h]
           mov dword ptr [ebp-000000128h], eax
           jmp l1000B9FD
;
;* Jump:
; 1000B9DC(C) 
;
l1000B9F3: mov dword ptr [ebp-000000128h], 000000000h
;
;* Jump:
; 1000B9B8(U), 1000B9F1(U) 
;
l1000B9FD: mov ecx, dword ptr [ebp-00000012Ch]
           mov edx, dword ptr [ebp-000000120h]
           mov ax, word ptr [ebp-000000128h]
           mov word ptr [edx+ecx*02h], ax
           jmp near ptr l1000B90F
;
;* Jump:
; 1000B925(C) 
;
l1000BA19: jmp near ptr l1000B6CB
;
;* Jump:
; 1000B6E3(C) 
;
l1000BA1E: mov esp, ebp
           pop ebp
           ret
l1000B67F ENDP
;
l1000BA22 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000148h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000154h]
           mov dword ptr [ebp-000000110h], ecx
           mov edx, dword ptr [ebp-000000110h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-000000110h]
           mov ecx, dword ptr [eax+edx*04h+020h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [ebp+010h]
           lea ecx, [eax+edx*04h]
           mov dword ptr [ebp+010h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000BA80
;
;* Jump:
; 1000BD6B(U) 
;
l1000BA6E: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+01Ch]
           add eax, 000000008h
           mov dword ptr [ebp+01Ch], eax
;
;* Jump:
; 1000BA6C(U) 
;
l1000BA80: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp+020h]
           jnb l1000BD70
           lea edx, [ebp-00000010Ch]
           mov dword ptr [ebp-000000118h], edx
           mov dword ptr [ebp-000000114h], 000000000h
           jmp l1000BAB3
;
;* Jump:
; 1000BCE3(U) 
;
l1000BAA4: mov eax, dword ptr [ebp-000000114h]
           add eax, 000000001h
           mov dword ptr [ebp-000000114h], eax
;
;* Jump:
; 1000BAA2(U) 
;
l1000BAB3: cmp dword ptr [ebp-000000114h], 000000008h
           jnl l1000BCE8
           mov ecx, dword ptr [ebp-000000114h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, dword ptr [ebp+01Ch]
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov dword ptr [ebp-00000012Ch], edx
           fild dword ptr [ebp-00000012Ch]
           mov eax, dword ptr [ebp-000000118h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov dword ptr [ebp-000000130h], ecx
           fild dword ptr [ebp-000000130h]
           mov edx, dword ptr [ebp-000000118h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           sub eax, 000000080h
           mov dword ptr [ebp-000000134h], eax
           fild dword ptr [ebp-000000134h]
           mov ecx, dword ptr [ebp-000000118h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-000000118h]
           add edx, 000000004h
           mov dword ptr [ebp-000000118h], edx
           mov eax, dword ptr [ebp-00000011Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov dword ptr [ebp-000000138h], edx
           fild dword ptr [ebp-000000138h]
           mov eax, dword ptr [ebp-000000118h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov dword ptr [ebp-00000013Ch], ecx
           fild dword ptr [ebp-00000013Ch]
           mov edx, dword ptr [ebp-000000118h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           sub eax, 000000080h
           mov dword ptr [ebp-000000140h], eax
           fild dword ptr [ebp-000000140h]
           mov ecx, dword ptr [ebp-000000118h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-000000118h]
           add edx, 000000004h
           mov dword ptr [ebp-000000118h], edx
           mov eax, dword ptr [ebp-00000011Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sub edx, 000000080h
           mov dword ptr [ebp-000000144h], edx
           fild dword ptr [ebp-000000144h]
           mov eax, dword ptr [ebp-000000118h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-000000118h]
           add ecx, 000000004h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-00000011Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-00000011Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           sub ecx, 000000080h
           mov dword ptr [ebp-000000148h], ecx
           fild dword ptr [ebp-000000148h]
           mov edx, dword ptr [ebp-000000118h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-000000118h]
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
           jmp near ptr l1000BAA4
;
;* Jump:
; 1000BABA(C) 
;
l1000BCE8: lea edx, [ebp-00000010Ch]
           push edx
           call [ebp-008h]
           add esp, 000000004h
           mov eax, dword ptr [ebp-00Ch]
           shl eax, 007h
           mov ecx, dword ptr [ebp+014h]
           add ecx, eax
           mov dword ptr [ebp-000000120h], ecx
           mov dword ptr [ebp-000000128h], 000000000h
           jmp l1000BD21
;
;* Jump:
; 1000BD69(U) 
;
l1000BD12: mov edx, dword ptr [ebp-000000128h]
           add edx, 000000001h
           mov dword ptr [ebp-000000128h], edx
;
;* Jump:
; 1000BD10(U) 
;
l1000BD21: cmp dword ptr [ebp-000000128h], 000000040h
           jnl l1000BD6B
           mov eax, dword ptr [ebp-000000128h]
           mov ecx, dword ptr [ebp-000000128h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ebp+eax*04h-00000010Ch]
           fmul dword ptr [edx+ecx*04h]
           fst dword ptr [ebp-000000124h]
           fadd dword ptr [g100422D0]
           call l10041630; [BICRT._ftol].
           sub eax, 000004000h
           mov ecx, dword ptr [ebp-000000128h]
           mov edx, dword ptr [ebp-000000120h]
           mov word ptr [edx+ecx*02h], ax
           jmp l1000BD12
;
;* Jump:
; 1000BD28(C) 
;
l1000BD6B: jmp near ptr l1000BA6E
;
;* Jump:
; 1000BA86(C) 
;
l1000BD70: mov esp, ebp
           pop ebp
           ret
l1000BA22 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000C7A2, 1000C7BF, 10010877 
;
l1000BD80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000530h
           push edi
           cmp dword ptr [ebp+010h], 000000000h
           jl l1000BD96
           cmp dword ptr [ebp+010h], 000000004h
           jl l1000BDBB
;
;* Jump:
; 1000BD8E(C) 
;
l1000BD96: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000032h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000BD94(C) 
;
l1000BDBB: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1000BDDA
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+054h]
           mov dword ptr [ebp-000000530h], edx
           jmp l1000BDEA
;
;* Jump:
; 1000BDC6(C) 
;
l1000BDDA: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+064h]
           mov dword ptr [ebp-000000530h], edx
;
;* Jump:
; 1000BDD8(U) 
;
l1000BDEA: mov eax, dword ptr [ebp-000000530h]
           mov dword ptr [ebp-000000410h], eax
           cmp dword ptr [ebp-000000410h], 000000000h
           jne l1000BE24
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000032h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000BDFD(C) 
;
l1000BE24: mov eax, dword ptr [ebp+014h]
           cmp dword ptr [eax], 000000000h
           jne l1000BE47
           push 000000500h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1000BE2A(C) 
;
l1000BE47: mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00000052Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-000000524h], 000000001h
           jmp l1000BE74
;
;* Jump:
; 1000BEFF(U) 
;
l1000BE65: mov ecx, dword ptr [ebp-000000524h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000524h], ecx
;
;* Jump:
; 1000BE63(U) 
;
l1000BE74: cmp dword ptr [ebp-000000524h], 000000010h
           jg l1000BF04
           mov edx, dword ptr [ebp-000000410h]
           add edx, dword ptr [ebp-000000524h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-000000418h], eax
           cmp dword ptr [ebp-000000418h], 000000000h
           jl l1000BEB1
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-000000418h]
           cmp ecx, 000000100h
           jle l1000BECB
;
;* Jump:
; 1000BE9E(C) 
;
l1000BEB1: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000BEAF(C), 1000BEFD(U) 
;
l1000BECB: mov ecx, dword ptr [ebp-000000418h]
           mov edx, dword ptr [ebp-000000418h]
           sub edx, 000000001h
           mov dword ptr [ebp-000000418h], edx
           test ecx, ecx
           je l1000BEFF
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [ebp-000000524h]
           mov byte ptr [ebp+eax-00000051Ch], cl
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp l1000BECB
;
;* Jump:
; 1000BEE2(C) 
;
l1000BEFF: jmp near ptr l1000BE65
;
;* Jump:
; 1000BE7B(C) 
;
l1000BF04: mov eax, dword ptr [ebp-008h]
           mov byte ptr [ebp+eax-00000051Ch], 000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-000000414h], ecx
           mov dword ptr [ebp-000000528h], 000000000h
           movsx edx, byte ptr [ebp-00000051Ch]
           mov dword ptr [ebp-000000520h], edx
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1000BFD2(U) 
;
l1000BF36: mov eax, dword ptr [ebp-008h]
           movsx ecx, byte ptr [ebp+eax-00000051Ch]
           test ecx, ecx
           je l1000BFD7
;
;* Jump:
; 1000BF84(U) 
;
l1000BF49: mov edx, dword ptr [ebp-008h]
           movsx eax, byte ptr [ebp+edx-00000051Ch]
           cmp eax, dword ptr [ebp-000000520h]
           jne l1000BF86
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-000000528h]
           mov dword ptr [ebp+ecx*04h-00000040Ch], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-000000528h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000528h], ecx
           jmp l1000BF49
;
;* Jump:
; 1000BF5A(C) 
;
l1000BF86: mov edx, 000000001h
           mov ecx, dword ptr [ebp-000000520h]
           shl edx, cl
           cmp dword ptr [ebp-000000528h], edx
           jl l1000BFB5
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000BF99(C) 
;
l1000BFB5: mov edx, dword ptr [ebp-000000528h]
           shl edx, 001h
           mov dword ptr [ebp-000000528h], edx
           mov eax, dword ptr [ebp-000000520h]
           add eax, 000000001h
           mov dword ptr [ebp-000000520h], eax
           jmp near ptr l1000BF36
;
;* Jump:
; 1000BF43(C) 
;
l1000BFD7: mov ecx, 000000040h
           xor eax, eax
           mov edi, dword ptr [ebp-00000052Ch]
           add edi, 000000400h
           rep stosd
           mov ecx, dword ptr [ebp+00Ch]
           and ecx, 0000000FFh
           neg ecx
           sbb ecx, ecx
           and cl, 010h
           add ecx, 0000000FFh
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000C017
;
;* Jump:
; 1000C0B4(U) 
;
l1000C00E: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000C00C(U) 
;
l1000C017: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-000000414h]
           jnl l1000C0B9
           mov ecx, dword ptr [ebp-000000410h]
           add ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx+011h]
           mov dword ptr [ebp-000000418h], edx
           cmp dword ptr [ebp-000000418h], 000000000h
           jl l1000C065
           mov eax, dword ptr [ebp-000000418h]
           cmp eax, dword ptr [ebp-004h]
           jg l1000C065
           mov ecx, dword ptr [ebp-00000052Ch]
           add ecx, dword ptr [ebp-000000418h]
           movsx edx, byte ptr [ecx+000000400h]
           test edx, edx
           je l1000C07F
;
;* Jump:
; 1000C041(C), 1000C04C(C) 
;
l1000C065: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000C063(C) 
;
l1000C07F: mov edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-00000052Ch]
           mov ecx, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+ecx*04h-00000040Ch]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-00000052Ch]
           add edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [ebp+eax-00000051Ch]
           mov byte ptr [edx+000000400h], cl
           jmp near ptr l1000C00E
;
;* Jump:
; 1000C020(C) 
;
l1000C0B9: pop edi
           mov esp, ebp
           pop ebp
           ret
l1000BD80 ENDP
;
;* Call:
; 1000D2AF, 1000D307, 100117A2 
;
l1000C0BE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000844h
           push edi
           mov ecx, 000000008h
           xor eax, eax
           lea edi, [ebp-000000434h]
           rep stosd
           stosb
           mov ecx, 000000101h
           xor eax, eax
           lea edi, [ebp-000000410h]
           rep stosd
           mov dword ptr [ebp-000000840h], 000000000h
           jmp l1000C102
;
;* Jump:
; 1000C11F(U) 
;
l1000C0F3: mov eax, dword ptr [ebp-000000840h]
           add eax, 000000001h
           mov dword ptr [ebp-000000840h], eax
;
;* Jump:
; 1000C0F1(U) 
;
l1000C102: cmp dword ptr [ebp-000000840h], 000000101h
           jnl l1000C121
           mov ecx, dword ptr [ebp-000000840h]
           mov dword ptr [ebp+ecx*04h-00000083Ch], 0FFFFFFFFh
           jmp l1000C0F3
;
;* Jump:
; 1000C10C(C) 
;
l1000C121: mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx+000000400h], 000000001h
;
;* Jump:
; 1000C2FD(U) 
;
l1000C12E: mov dword ptr [ebp-008h], 0FFFFFFFFh
           mov dword ptr [ebp-000000438h], 03B9ACA00h
           mov dword ptr [ebp-000000840h], 000000000h
           jmp l1000C15A
;
;* Jump:
; 1000C1A4(U) 
;
l1000C14B: mov eax, dword ptr [ebp-000000840h]
           add eax, 000000001h
           mov dword ptr [ebp-000000840h], eax
;
;* Jump:
; 1000C149(U) 
;
l1000C15A: cmp dword ptr [ebp-000000840h], 000000100h
           jg l1000C1A6
           mov ecx, dword ptr [ebp-000000840h]
           mov edx, dword ptr [ebp+010h]
           cmp dword ptr [edx+ecx*04h], 000000000h
           je l1000C1A4
           mov eax, dword ptr [ebp-000000840h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           cmp edx, dword ptr [ebp-000000438h]
           jg l1000C1A4
           mov eax, dword ptr [ebp-000000840h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-000000438h], edx
           mov eax, dword ptr [ebp-000000840h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000C173(C), 1000C187(C) 
;
l1000C1A4: jmp l1000C14B
;
;* Jump:
; 1000C164(C) 
;
l1000C1A6: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
           mov dword ptr [ebp-000000438h], 03B9ACA00h
           mov dword ptr [ebp-000000840h], 000000000h
           jmp l1000C1D2
;
;* Jump:
; 1000C227(U) 
;
l1000C1C3: mov ecx, dword ptr [ebp-000000840h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000840h], ecx
;
;* Jump:
; 1000C1C1(U) 
;
l1000C1D2: cmp dword ptr [ebp-000000840h], 000000100h
           jg l1000C229
           mov edx, dword ptr [ebp-000000840h]
           mov eax, dword ptr [ebp+010h]
           cmp dword ptr [eax+edx*04h], 000000000h
           je l1000C227
           mov ecx, dword ptr [ebp-000000840h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           cmp eax, dword ptr [ebp-000000438h]
           jg l1000C227
           mov ecx, dword ptr [ebp-000000840h]
           cmp ecx, dword ptr [ebp-008h]
           je l1000C227
           mov edx, dword ptr [ebp-000000840h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-000000438h], ecx
           mov edx, dword ptr [ebp-000000840h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1000C1EB(C), 1000C1FF(C), 1000C20A(C) 
;
l1000C227: jmp l1000C1C3
;
;* Jump:
; 1000C1DC(C) 
;
l1000C229: cmp dword ptr [ebp-00Ch], 000000000h
           jnl l1000C234
           jmp near ptr l1000C302
;
;* Jump:
; 1000C22D(C) 
;
l1000C234: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           add edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx+eax*04h], edx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [eax+edx*04h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+ecx*04h-000000410h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp+eax*04h-000000410h], edx
;
;* Jump:
; 1000C2A4(U) 
;
l1000C273: mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ebp+ecx*04h-00000083Ch], 000000000h
           jl l1000C2A6
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+edx*04h-00000083Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+ecx*04h-000000410h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp+eax*04h-000000410h], edx
           jmp l1000C273
;
;* Jump:
; 1000C27E(C) 
;
l1000C2A6: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp+ecx*04h-00000083Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+eax*04h-000000410h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp+edx*04h-000000410h], ecx
;
;* Jump:
; 1000C2FB(U) 
;
l1000C2CA: mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [ebp+eax*04h-00000083Ch], 000000000h
           jl l1000C2FD
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+ecx*04h-00000083Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+eax*04h-000000410h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp+edx*04h-000000410h], ecx
           jmp l1000C2CA
;
;* Jump:
; 1000C2D5(C) 
;
l1000C2FD: jmp near ptr l1000C12E
;
;* Jump:
; 1000C22F(U) 
;
l1000C302: mov dword ptr [ebp-000000840h], 000000000h
           jmp l1000C31D
;
;* Jump:
; 1000C38E(U) 
;
l1000C30E: mov eax, dword ptr [ebp-000000840h]
           add eax, 000000001h
           mov dword ptr [ebp-000000840h], eax
;
;* Jump:
; 1000C30C(U) 
;
l1000C31D: cmp dword ptr [ebp-000000840h], 000000100h
           jg l1000C393
           mov ecx, dword ptr [ebp-000000840h]
           cmp dword ptr [ebp+ecx*04h-000000410h], 000000000h
           je l1000C38E
           mov edx, dword ptr [ebp-000000840h]
           cmp dword ptr [ebp+edx*04h-000000410h], 000000020h
           jle l1000C363
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000027h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000C347(C) 
;
l1000C363: mov edx, dword ptr [ebp-000000840h]
           mov eax, dword ptr [ebp+edx*04h-000000410h]
           mov cl, byte ptr [ebp+eax-000000434h]
           add cl, 001h
           mov edx, dword ptr [ebp-000000840h]
           mov eax, dword ptr [ebp+edx*04h-000000410h]
           mov byte ptr [ebp+eax-000000434h], cl
;
;* Jump:
; 1000C337(C) 
;
l1000C38E: jmp near ptr l1000C30E
;
;* Jump:
; 1000C327(C) 
;
l1000C393: mov dword ptr [ebp-000000840h], 000000020h
           jmp l1000C3AE
;
;* Jump:
; 1000C47A(U) 
;
l1000C39F: mov ecx, dword ptr [ebp-000000840h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000840h], ecx
;
;* Jump:
; 1000C39D(U) 
;
l1000C3AE: cmp dword ptr [ebp-000000840h], 000000010h
           jle l1000C47F
;
;* Jump:
; 1000C475(U) 
;
l1000C3BB: mov edx, dword ptr [ebp-000000840h]
           xor eax, eax
           mov al, byte ptr [ebp+edx-000000434h]
           test eax, eax
           jle l1000C47A
           mov ecx, dword ptr [ebp-000000840h]
           sub ecx, 000000002h
           mov dword ptr [ebp-000000844h], ecx
;
;* Jump:
; 1000C403(U) 
;
l1000C3E1: mov edx, dword ptr [ebp-000000844h]
           xor eax, eax
           mov al, byte ptr [ebp+edx-000000434h]
           test eax, eax
           jne l1000C405
           mov ecx, dword ptr [ebp-000000844h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000844h], ecx
           jmp l1000C3E1
;
;* Jump:
; 1000C3F2(C) 
;
l1000C405: mov edx, dword ptr [ebp-000000840h]
           mov al, byte ptr [ebp+edx-000000434h]
           sub al, 002h
           mov ecx, dword ptr [ebp-000000840h]
           mov byte ptr [ebp+ecx-000000434h], al
           mov edx, dword ptr [ebp-000000840h]
           mov al, byte ptr [ebp+edx-000000435h]
           add al, 001h
           mov ecx, dword ptr [ebp-000000840h]
           mov byte ptr [ebp+ecx-000000435h], al
           mov edx, dword ptr [ebp-000000844h]
           mov al, byte ptr [ebp+edx-000000433h]
           add al, 002h
           mov ecx, dword ptr [ebp-000000844h]
           mov byte ptr [ebp+ecx-000000433h], al
           mov edx, dword ptr [ebp-000000844h]
           mov al, byte ptr [ebp+edx-000000434h]
           sub al, 001h
           mov ecx, dword ptr [ebp-000000844h]
           mov byte ptr [ebp+ecx-000000434h], al
           jmp near ptr l1000C3BB
;
;* Jump:
; 1000C3CC(C) 
;
l1000C47A: jmp near ptr l1000C39F
;
;* Jump:
; 1000C3B5(C), 1000C4A1(U) 
;
l1000C47F: mov edx, dword ptr [ebp-000000840h]
           xor eax, eax
           mov al, byte ptr [ebp+edx-000000434h]
           test eax, eax
           jne l1000C4A3
           mov ecx, dword ptr [ebp-000000840h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000840h], ecx
           jmp l1000C47F
;
;* Jump:
; 1000C490(C) 
;
l1000C4A3: mov edx, dword ptr [ebp-000000840h]
           mov al, byte ptr [ebp+edx-000000434h]
           sub al, 001h
           mov ecx, dword ptr [ebp-000000840h]
           mov byte ptr [ebp+ecx-000000434h], al
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-000000434h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-000000430h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-00000042Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-000000428h]
           mov dword ptr [edx+00Ch], ecx
           mov al, byte ptr [ebp-000000424h]
           mov byte ptr [edx+010h], al
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-000000840h], 000000001h
           jmp l1000C510
;
;* Jump:
; 1000C56F(U) 
;
l1000C501: mov ecx, dword ptr [ebp-000000840h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000840h], ecx
;
;* Jump:
; 1000C4FF(U) 
;
l1000C510: cmp dword ptr [ebp-000000840h], 000000020h
           jg l1000C571
           mov dword ptr [ebp-000000844h], 000000000h
           jmp l1000C534
;
;* Jump:
; 1000C56D(U) 
;
l1000C525: mov edx, dword ptr [ebp-000000844h]
           add edx, 000000001h
           mov dword ptr [ebp-000000844h], edx
;
;* Jump:
; 1000C523(U) 
;
l1000C534: cmp dword ptr [ebp-000000844h], 0000000FFh
           jg l1000C56F
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [ebp+eax*04h-000000410h]
           cmp ecx, dword ptr [ebp-000000840h]
           jne l1000C56D
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-004h]
           mov al, byte ptr [ebp-000000844h]
           mov byte ptr [edx+011h], al
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000C553(C) 
;
l1000C56D: jmp l1000C525
;
;* Jump:
; 1000C53E(C) 
;
l1000C56F: jmp l1000C501
;
;* Jump:
; 1000C517(C) 
;
l1000C571: mov edx, dword ptr [ebp+00Ch]
           mov byte ptr [edx+000000111h], 000h
           pop edi
           mov esp, ebp
           pop ebp
           ret
l1000C0BE ENDP
;
;* Call:
; 1000D3BF, 10013033 
;
l1000C580 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push 00000006Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000158h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000C607
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000C5C3
;
;* Jump:
; 1000C601(U) 
;
l1000C5BA: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000C5B8(U) 
;
l1000C5C3: cmp dword ptr [ebp-008h], 000000004h
           jnl l1000C603
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+03Ch], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+02Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+05Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+04Ch], 000000000h
           jmp l1000C5BA
;
;* Jump:
; 1000C5C7(C) 
;
l1000C603: mov esp, ebp
           pop ebp
           ret
l1000C580 ENDP
;
l1000C607 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1000C63E
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], offset l1000CF7A
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], offset l1000D205
           jmp l1000C652
;
;* Jump:
; 1000C626(C) 
;
l1000C63E: mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], offset l1000C80D
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], offset l1000CEDD
;
;* Jump:
; 1000C63C(U) 
;
l1000C652: mov dword ptr [ebp-010h], 000000000h
           jmp l1000C664
;
;* Jump:
; 1000C7D5(U) 
;
l1000C65B: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1000C659(U) 
;
l1000C664: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+0000000E0h]
           jnl l1000C7DA
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+0000000E4h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1000C78D
           cmp dword ptr [ebp-014h], 000000000h
           jl l1000C6B5
           cmp dword ptr [ebp-014h], 000000004h
           jl l1000C6DA
;
;* Jump:
; 1000C6AD(C) 
;
l1000C6B5: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000032h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000C6B3(C) 
;
l1000C6DA: cmp dword ptr [ebp-004h], 000000000h
           jl l1000C6E6
           cmp dword ptr [ebp-004h], 000000004h
           jl l1000C70B
;
;* Jump:
; 1000C6DE(C) 
;
l1000C6E6: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000032h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000C6E4(C) 
;
l1000C70B: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+ecx*04h+04Ch], 000000000h
           jne l1000C738
           push 000000404h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h+04Ch], eax
;
;* Jump:
; 1000C716(C) 
;
l1000C738: mov ecx, 000000101h
           xor eax, eax
           mov edx, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-008h]
           mov edi, dword ptr [esi+edx*04h+04Ch]
           rep stosd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+eax*04h+05Ch], 000000000h
           jne l1000C778
           push 000000404h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+edx*04h+05Ch], eax
;
;* Jump:
; 1000C756(C) 
;
l1000C778: mov ecx, 000000101h
           xor eax, eax
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov edi, dword ptr [esi+edx*04h+05Ch]
           rep stosd
           jmp l1000C7C7
;
;* Jump:
; 1000C6A3(C) 
;
l1000C78D: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-008h]
           lea edx, [ecx+eax*04h+02Ch]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000BD80
           add esp, 000000010h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           lea ecx, [eax+edx*04h+03Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000BD80
           add esp, 000000010h
;
;* Jump:
; 1000C78B(U) 
;
l1000C7C7: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h+014h], 000000000h
           jmp near ptr l1000C65B
;
;* Jump:
; 1000C670(C) 
;
l1000C7DA: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000B8h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+028h], 000000000h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000C607 ENDP
;
l1000C80D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-024h], ecx
           mov esi, dword ptr [ebp-004h]
           add esi, 00000000Ch
           mov ecx, 000000006h
           lea edi, [ebp-020h]
           rep movsd
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B8h], 000000000h
           je l1000C886
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+024h], 000000000h
           jne l1000C886
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+028h]
           push eax
           lea ecx, [ebp-028h]
           push ecx
           call l1000CDB5
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l1000C886
           xor al, al
           jmp near ptr l1000C9A6
;
;* Jump:
; 1000C858(C), 1000C861(C), 1000C87D(C) 
;
l1000C886: mov dword ptr [ebp-034h], 000000000h
           jmp l1000C898
;
;* Jump:
; 1000C927(U) 
;
l1000C88F: mov edx, dword ptr [ebp-034h]
           add edx, 000000001h
           mov dword ptr [ebp-034h], edx
;
;* Jump:
; 1000C88D(U) 
;
l1000C898: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-034h]
           cmp ecx, dword ptr [eax+0000000FCh]
           jnl l1000C92C
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000100h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h+03Ch]
           push edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+ecx*04h+02Ch]
           push eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+ecx*04h-018h]
           push edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           push edx
           lea eax, [ebp-028h]
           push eax
           call l1000C9AC
           add esp, 000000014h
           and eax, 0000000FFh
           test eax, eax
           jne l1000C914
           xor al, al
           jmp near ptr l1000C9A6
;
;* Jump:
; 1000C90B(C) 
;
l1000C914: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp+edx*04h-018h], ecx
           jmp near ptr l1000C88F
;
;* Jump:
; 1000C8A4(C) 
;
l1000C92C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+004h], edx
           mov edi, dword ptr [ebp-004h]
           add edi, 00000000Ch
           mov ecx, 000000006h
           lea esi, [ebp-020h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B8h], 000000000h
           je l1000C9A4
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+024h], 000000000h
           jne l1000C995
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000B8h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+028h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+028h]
           and eax, 000000007h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+028h], eax
;
;* Jump:
; 1000C966(C) 
;
l1000C995: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+024h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+024h], eax
;
;* Jump:
; 1000C95D(C) 
;
l1000C9A4: mov al, 001h
;
;* Jump:
; 1000C881(U), 1000C90F(U) 
;
l1000C9A6: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000C80D ENDP
;
;* Call:
; 1000C8FC 
;
l1000C9AC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+00Ch]
           movsx ecx, word ptr [eax]
           sub ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-010h], 000000000h
           jnl l1000C9DB
           mov eax, dword ptr [ebp-010h]
           neg eax
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000C9C8(C) 
;
l1000C9DB: mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 1000C9F9(U) 
;
l1000C9E2: cmp dword ptr [ebp-010h], 000000000h
           je l1000C9FB
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-010h]
           sar eax, 001h
           mov dword ptr [ebp-010h], eax
           jmp l1000C9E2
;
;* Jump:
; 1000C9E6(C) 
;
l1000C9FB: cmp dword ptr [ebp-00Ch], 00000000Bh
           jle l1000CA24
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000006h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000C9FF(C) 
;
l1000CA24: mov eax, dword ptr [ebp+014h]
           add eax, dword ptr [ebp-00Ch]
           movsx ecx, byte ptr [eax+000000400h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CA58
           xor al, al
           jmp near ptr l1000CC11
;
;* Jump:
; 1000CA4F(C) 
;
l1000CA58: cmp dword ptr [ebp-00Ch], 000000000h
           je l1000CA82
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CA82
           xor al, al
           jmp near ptr l1000CC11
;
;* Jump:
; 1000CA5C(C), 1000CA79(C) 
;
l1000CA82: mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-018h], 000000001h
           jmp l1000CA9B
;
;* Jump:
; 1000CBDA(U) 
;
l1000CA92: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1000CA90(U) 
;
l1000CA9B: cmp dword ptr [ebp-018h], 000000040h
           jnl l1000CBDF
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov eax, dword ptr [ebp+00Ch]
           movsx ecx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-010h], ecx
           cmp dword ptr [ebp-010h], 000000000h
           jne l1000CACD
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l1000CBDA
;
;* Jump:
; 1000CABD(C), 1000CB0D(U) 
;
l1000CACD: cmp dword ptr [ebp-004h], 00000000Fh
           jle l1000CB0F
           mov eax, dword ptr [ebp+018h]
           movsx ecx, byte ptr [eax+0000004F0h]
           push ecx
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [edx+0000003C0h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CB04
           xor al, al
           jmp near ptr l1000CC11
;
;* Jump:
; 1000CAFB(C) 
;
l1000CB04: mov edx, dword ptr [ebp-004h]
           sub edx, 000000010h
           mov dword ptr [ebp-004h], edx
           jmp l1000CACD
;
;* Jump:
; 1000CAD1(C) 
;
l1000CB0F: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jnl l1000CB2C
           mov ecx, dword ptr [ebp-010h]
           neg ecx
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000CB19(C) 
;
l1000CB2C: mov dword ptr [ebp-00Ch], 000000001h
;
;* Jump:
; 1000CB4A(U) 
;
l1000CB33: mov eax, dword ptr [ebp-010h]
           sar eax, 001h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l1000CB4C
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1000CB33
;
;* Jump:
; 1000CB3F(C) 
;
l1000CB4C: cmp dword ptr [ebp-00Ch], 00000000Ah
           jle l1000CB75
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000006h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000CB50(C) 
;
l1000CB75: mov ecx, dword ptr [ebp-004h]
           shl ecx, 004h
           add ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+018h]
           add edx, dword ptr [ebp-014h]
           movsx eax, byte ptr [edx+000000400h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [edx+ecx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CBB2
           xor al, al
           jmp l1000CC11
;
;* Jump:
; 1000CBAC(C) 
;
l1000CBB2: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CBD3
           xor al, al
           jmp l1000CC11
;
;* Jump:
; 1000CBCD(C) 
;
l1000CBD3: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 1000CAC8(U) 
;
l1000CBDA: jmp near ptr l1000CA92
;
;* Jump:
; 1000CA9F(C) 
;
l1000CBDF: cmp dword ptr [ebp-004h], 000000000h
           jle l1000CC0F
           mov edx, dword ptr [ebp+018h]
           movsx eax, byte ptr [edx+000000400h]
           push eax
           mov ecx, dword ptr [ebp+018h]
           mov edx, dword ptr [ecx]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CC0F
           xor al, al
           jmp l1000CC11
;
;* Jump:
; 1000CBE3(C), 1000CC09(C) 
;
l1000CC0F: mov al, 001h
;
;* Jump:
; 1000CA53(U), 1000CA7D(U), 1000CAFF(U), 1000CBB0(U), 1000CBD1(U), 
; 1000CC0D(U) 
;
l1000CC11: mov esp, ebp
           pop ebp
           ret
l1000C9AC ENDP
;
;* Call:
; 1000CA40, 1000CA6A, 1000CAEC, 1000CB9D, 1000CBBE, 1000CBFA, 1000CEB0 
;
l1000CC15 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp+010h], 000000000h
           jne l1000CC53
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000028h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000CC2E(C) 
;
l1000CC53: mov edx, 000000001h
           mov ecx, dword ptr [ebp+010h]
           shl edx, cl
           sub edx, 000000001h
           mov eax, dword ptr [ebp-008h]
           and eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, 000000018h
           sub ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           shl edx, cl
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           or ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000CD4F(U) 
;
l1000CC8D: cmp dword ptr [ebp-004h], 000000008h
           jl l1000CD54
           mov edx, dword ptr [ebp-008h]
           sar edx, 010h
           and edx, 0000000FFh
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+004h], 000000000h
           jne l1000CCEE
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000CD6C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CCEE
           xor al, al
           jmp l1000CD68
;
;* Jump:
; 1000CCD3(C), 1000CCE8(C) 
;
l1000CCEE: cmp dword ptr [ebp-00Ch], 0000000FFh
           jne l1000CD3D
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov byte ptr [eax], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+004h], 000000000h
           jne l1000CD3D
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000CD6C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CD3D
           xor al, al
           jmp l1000CD68
;
;* Jump:
; 1000CCF5(C), 1000CD22(C), 1000CD37(C) 
;
l1000CD3D: mov eax, dword ptr [ebp-008h]
           shl eax, 008h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000008h
           mov dword ptr [ebp-004h], ecx
           jmp near ptr l1000CC8D
;
;* Jump:
; 1000CC91(C) 
;
l1000CD54: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], edx
           mov al, 001h
;
;* Jump:
; 1000CCEC(U), 1000CD3B(U) 
;
l1000CD68: mov esp, ebp
           pop ebp
           ret
l1000CC15 ENDP
;
;* Call:
; 1000CCD9, 1000CD28, 1000CE06, 1000CE57 
;
l1000CD6C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CD99
           xor al, al
           jmp l1000CDB1
;
;* Jump:
; 1000CD93(C) 
;
l1000CD99: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov al, 001h
;
;* Jump:
; 1000CD97(U) 
;
l1000CDB1: mov esp, ebp
           pop ebp
           ret
l1000CD6C ENDP
;
;* Call:
; 1000C86E 
;
l1000CDB5 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000CEA5
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CDD5
           xor al, al
           jmp near ptr l1000CEA1
;
;* Jump:
; 1000CDCC(C) 
;
l1000CDD5: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov byte ptr [edx], 0FFh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+004h], 000000000h
           jne l1000CE1E
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000CD6C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CE1E
           xor al, al
           jmp near ptr l1000CEA1
;
;* Jump:
; 1000CE00(C), 1000CE15(C) 
;
l1000CE1E: mov edx, dword ptr [ebp+00Ch]
           add edx, 0000000D0h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov byte ptr [ecx], dl
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+004h], 000000000h
           jne l1000CE6C
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000CD6C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CE6C
           xor al, al
           jmp l1000CEA1
;
;* Jump:
; 1000CE51(C), 1000CE66(C) 
;
l1000CE6C: mov dword ptr [ebp-004h], 000000000h
           jmp l1000CE7E
;
;* Jump:
; 1000CE9D(U) 
;
l1000CE75: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000CE73(U) 
;
l1000CE7E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+0000000E0h]
           jnl l1000CE9F
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+edx*04h+010h], 000000000h
           jmp l1000CE75
;
;* Jump:
; 1000CE8D(C) 
;
l1000CE9F: mov al, 001h
;
;* Jump:
; 1000CDD0(U), 1000CE19(U), 1000CE6A(U) 
;
l1000CEA1: mov esp, ebp
           pop ebp
           ret
l1000CDB5 ENDP
;
;* Call:
; 1000CDBD, 1000CF22 
;
l1000CEA5 PROC
           push ebp
           mov ebp, esp
           push 000000007h
           push 00000007Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000CC15
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1000CEC5
           xor al, al
           jmp l1000CEDB
;
;* Jump:
; 1000CEBF(C) 
;
l1000CEC5: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], 000000000h
           mov al, 001h
;
;* Jump:
; 1000CEC3(U) 
;
l1000CEDB: pop ebp
           ret
l1000CEA5 ENDP
;
l1000CEDD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-024h], ecx
           mov esi, dword ptr [ebp-004h]
           add esi, 00000000Ch
           mov ecx, 000000006h
           lea edi, [ebp-020h]
           rep movsd
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], edx
           lea eax, [ebp-028h]
           push eax
           call l1000CEA5
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000CF4D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000018h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000CF31(C) 
;
l1000CF4D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+004h], edx
           mov edi, dword ptr [ebp-004h]
           add edi, 00000000Ch
           mov ecx, 000000006h
           lea esi, [ebp-020h]
           rep movsd
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000CEDD ENDP
;
l1000CF7A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l1000CFEF
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+024h], 000000000h
           jne l1000CFE0
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000CFB3
;
;* Jump:
; 1000CFCF(U) 
;
l1000CFAA: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000CFA8(U) 
;
l1000CFB3: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+0000000E0h]
           jnl l1000CFD1
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+014h], 000000000h
           jmp l1000CFAA
;
;* Jump:
; 1000CFBF(C) 
;
l1000CFD1: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000B8h]
           mov dword ptr [eax+024h], edx
;
;* Jump:
; 1000CF9F(C) 
;
l1000CFE0: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+024h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+024h], ecx
;
;* Jump:
; 1000CF96(C) 
;
l1000CFEF: mov dword ptr [ebp-010h], 000000000h
           jmp l1000D001
;
;* Jump:
; 1000D082(U) 
;
l1000CFF8: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1000CFF6(U) 
;
l1000D001: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+0000000FCh]
           jnl l1000D087
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000100h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+ecx*04h+05Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h+04Ch]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h+014h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D08D
           add esp, 000000014h
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           movsx eax, word ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+014h], eax
           jmp near ptr l1000CFF8
;
;* Jump:
; 1000D00D(C) 
;
l1000D087: mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l1000CF7A ENDP
;
;* Call:
; 1000D064 
;
l1000D08D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+00Ch]
           movsx ecx, word ptr [eax]
           sub ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           jnl l1000D0AD
           mov edx, dword ptr [ebp-00Ch]
           neg edx
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1000D0A3(C) 
;
l1000D0AD: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1000D0CB(U) 
;
l1000D0B4: cmp dword ptr [ebp-00Ch], 000000000h
           je l1000D0CD
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           sar ecx, 001h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1000D0B4
;
;* Jump:
; 1000D0B8(C) 
;
l1000D0CD: cmp dword ptr [ebp-008h], 00000000Bh
           jle l1000D0ED
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000006h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000D0D1(C) 
;
l1000D0ED: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [edx+ecx*04h], eax
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-010h], 000000001h
           jmp l1000D11B
;
;* Jump:
; 1000D1E9(U) 
;
l1000D112: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1000D110(U) 
;
l1000D11B: cmp dword ptr [ebp-010h], 000000040h
           jnl l1000D1EE
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov eax, dword ptr [ebp+00Ch]
           movsx ecx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l1000D14D
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l1000D1E9
;
;* Jump:
; 1000D13D(C), 1000D171(U) 
;
l1000D14D: cmp dword ptr [ebp-004h], 00000000Fh
           jle l1000D173
           mov eax, dword ptr [ebp+018h]
           mov ecx, dword ptr [eax+0000003C0h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [edx+0000003C0h], ecx
           mov eax, dword ptr [ebp-004h]
           sub eax, 000000010h
           mov dword ptr [ebp-004h], eax
           jmp l1000D14D
;
;* Jump:
; 1000D151(C) 
;
l1000D173: cmp dword ptr [ebp-00Ch], 000000000h
           jnl l1000D181
           mov ecx, dword ptr [ebp-00Ch]
           neg ecx
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000D177(C) 
;
l1000D181: mov dword ptr [ebp-008h], 000000001h
;
;* Jump:
; 1000D19F(U) 
;
l1000D188: mov edx, dword ptr [ebp-00Ch]
           sar edx, 001h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1000D1A1
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           jmp l1000D188
;
;* Jump:
; 1000D194(C) 
;
l1000D1A1: cmp dword ptr [ebp-008h], 00000000Ah
           jle l1000D1C1
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000006h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000D1A5(C) 
;
l1000D1C1: mov eax, dword ptr [ebp-004h]
           shl eax, 004h
           add eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+018h]
           mov edx, dword ptr [ecx+eax*04h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           shl eax, 004h
           add eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [ecx+eax*04h], edx
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 1000D148(U) 
;
l1000D1E9: jmp near ptr l1000D112
;
;* Jump:
; 1000D11F(C) 
;
l1000D1EE: cmp dword ptr [ebp-004h], 000000000h
           jle l1000D201
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1000D1F2(C) 
;
l1000D201: mov esp, ebp
           pop ebp
           ret
l1000D08D ENDP
;
l1000D205 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-00Ch], ecx
           xor edx, edx
           mov dword ptr [ebp-01Ch], edx
           xor eax, eax
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l1000D233
;
;* Jump:
; 1000D317(U) 
;
l1000D22A: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1000D228(U) 
;
l1000D233: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+0000000E0h]
           jnl l1000D31C
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+0000000E4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [ebp+edx-01Ch]
           test eax, eax
           jne l1000D2BF
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx*04h+054h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx], 000000000h
           jne l1000D29A
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F6A0
           add esp, 000000004h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1000D287(C) 
;
l1000D29A: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+04Ch]
           push ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000C0BE
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-018h]
           mov byte ptr [ebp+edx-01Ch], 001h
;
;* Jump:
; 1000D272(C) 
;
l1000D2BF: mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [ebp+eax-004h]
           test ecx, ecx
           jne l1000D317
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [eax+edx*04h+064h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           cmp dword ptr [edx], 000000000h
           jne l1000D2F2
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F6A0
           add esp, 000000004h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1000D2DF(C) 
;
l1000D2F2: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+05Ch]
           push ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000C0BE
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [ebp+edx-004h], 001h
;
;* Jump:
; 1000D2CA(C) 
;
l1000D317: jmp near ptr l1000D22A
;
;* Jump:
; 1000D23F(C) 
;
l1000D31C: mov esp, ebp
           pop ebp
           ret
l1000D205 ENDP
;
;* Call:
; 10009C92 
;
l1000D320 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000E360
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000ACh]
           test edx, edx
           jne l1000D367
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000A930
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10011F30
           add esp, 000000004h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100117C0
           add esp, 000000008h
;
;* Jump:
; 1000D33F(C) 
;
l1000D367: mov eax, dword ptr [ebp+008h]
           push eax
           call l1000B300
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000ADh]
           test edx, edx
           je l1000D39E
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           jmp l1000D3C7
;
;* Jump:
; 1000D380(C) 
;
l1000D39E: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000D0h]
           test eax, eax
           je l1000D3BB
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10010620
           add esp, 000000004h
           jmp l1000D3C7
;
;* Jump:
; 1000D3AB(C) 
;
l1000D3BB: mov edx, dword ptr [ebp+008h]
           push edx
           call l1000C580
           add esp, 000000004h
;
;* Jump:
; 1000D39C(U), 1000D3B9(U) 
;
l1000D3C7: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000A4h], 000000001h
           jg l1000D3EB
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000AEh]
           test edx, edx
           jne l1000D3EB
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000D3F2
;
;* Jump:
; 1000D3D1(C), 1000D3E0(C) 
;
l1000D3EB: mov dword ptr [ebp-004h], 000000001h
;
;* Jump:
; 1000D3E9(U) 
;
l1000D3F2: mov al, byte ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10009F40
           add esp, 000000008h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D450
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D6A0
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+018h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000148h]
           call [eax]
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1000D320 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D408 
;
l1000D450 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push 000000040h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00000013Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000D523
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000ACh]
           test ecx, ecx
           je l1000D495
           jmp near ptr l1000D51F
;
;* Jump:
; 1000D48E(C) 
;
l1000D495: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1000D4BE
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           jmp l1000D51F
;
;* Jump:
; 1000D4A0(C) 
;
l1000D4BE: mov dword ptr [ebp-00Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-008h], eax
           jmp l1000D4E2
;
;* Jump:
; 1000D51D(U) 
;
l1000D4D0: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000054h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000D4CE(U) 
;
l1000D4E2: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [eax+038h]
           jnl l1000D51F
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+01Ch]
           shl edx, 003h
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+008h]
           add esp, 000000010h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+018h], eax
           jmp l1000D4D0
;
;* Jump:
; 1000D490(U), 1000D4BC(U), 1000D4EB(C) 
;
l1000D51F: mov esp, ebp
           pop ebp
           ret
l1000D450 ENDP
;
l1000D523 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000013Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ACh]
           test eax, eax
           je l1000D546
           jmp l1000D59E
;
;* Jump:
; 1000D542(C) 
;
l1000D546: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+010h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1000D578
           jmp l1000D584
;
;* Jump:
; 1000D574(C) 
;
l1000D578: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1000D5A2
           jmp l1000D59E
;
;* Jump:
; 1000D576(U) 
;
l1000D584: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000D544(U), 1000D582(U) 
;
l1000D59E: mov esp, ebp
           pop ebp
           ret
l1000D523 ENDP
;
l1000D5A2 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000013Ch]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000D68B(U) 
;
l1000D5B2: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           cmp ecx, dword ptr [eax+0000000DCh]
           jnb l1000D690
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+00Ch], 000000008h
           jnb l1000D5FF
           push 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           call [ecx+004h]
           add esp, 00000001Ch
;
;* Jump:
; 1000D5CE(C) 
;
l1000D5FF: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+00Ch], 000000008h
           je l1000D60D
           jmp near ptr l1000D690
;
;* Jump:
; 1000D606(C) 
;
l1000D60D: mov eax, dword ptr [ebp-004h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000144h]
           call [eax+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l1000D652
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+010h]
           test edx, edx
           jne l1000D650
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+010h], 001h
;
;* Jump:
; 1000D63A(C) 
;
l1000D650: jmp l1000D690
;
;* Jump:
; 1000D62E(C) 
;
l1000D652: mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+010h]
           test edx, edx
           je l1000D672
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+010h], 000h
;
;* Jump:
; 1000D65C(C) 
;
l1000D672: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l1000D5B2
;
;* Jump:
; 1000D5C1(C), 1000D608(U), 1000D650(U) 
;
l1000D690: mov esp, ebp
           pop ebp
           ret
l1000D5A2 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10009BE6, 1000D414, 1001304F 
;
l1000D6A0 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000020h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000148h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000D842
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000DA83
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l1000DE6D
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], offset l1000E27A
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], offset l1000E290
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], offset l1000D719
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], offset l1000D82D
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], 000000000h
           mov esp, ebp
           pop ebp
           ret
l1000D6A0 ENDP
;
l1000D719 PROC
           push ebp
           mov ebp, esp
           cmp dword ptr [ebp+010h], 00000FFFDh
           jbe l1000D73F
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000000Bh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000D723(C) 
;
l1000D73F: mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000002h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D7FA
           add esp, 000000008h
           pop ebp
           ret
l1000D719 ENDP
;
;* Call:
; 1000D747, 1000D85B, 1000D8B3, 1000D9B4, 1000DC95, 1000DD4C, 1000E011, 1000E0F3, 
; 1000E130, 1000E286, 1000E29D, 1000E34C 
;
l1000D764 PROC
           push ebp
           mov ebp, esp
           push 0000000FFh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           pop ebp
           ret
l1000D764 ENDP
;
;* Call:
; 1000D770, 1000D780, 1000D80D, 1000D823, 1000D838, 1000D8CF, 1000D8DD, 1000D8EB, 
; 1000D8F9, 1000D907, 1000D91F, 1000D937, 1000D94F, 1000D98F, 1000D99D, 1000D9D0, 
; 1000D9DE, 1000D9EC, 1000D9FA, 1000DA08, 1000DA57, 1000DA67, 1000DA77, 1000DCC7, 
; 1000DD0E, 1000DD23, 1000DDB6, 1000DDEF, 1000DE30, 1000DE4C, 1000DE5F, 1000E067, 
; 1000E096, 1000E0CA, 1000E160, 1000E1A6, 1000E21B, 1000E236, 1000E24C, 1000E26E 
;
l1000D78A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov cl, byte ptr [ebp+00Ch]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+004h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+004h], 000000000h
           jne l1000D7F6
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1000D7F6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000018h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000D7C4(C), 1000D7DA(C) 
;
l1000D7F6: mov esp, ebp
           pop ebp
           ret
l1000D78A ENDP
;
;* Call:
; 1000D75A, 1000D8C1, 1000D968, 1000D981, 1000D9C2, 1000DA16, 1000DA24, 1000DA32, 
; 1000DCAF, 1000DD65, 1000DDC9, 1000DDDC, 1000E057, 1000E101, 1000E117, 1000E14A 
;
l1000D7FA PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           sar eax, 008h
           and eax, 0000000FFh
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           pop ebp
           ret
l1000D7FA ENDP
;
l1000D82D PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           pop ebp
           ret
l1000D82D ENDP
;
l1000D842 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           mov dword ptr [ebp-004h], ecx
           push 0000000D8h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D764
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C0h]
           test edx, edx
           je l1000D888
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D8A7
           add esp, 000000004h
;
;* Jump:
; 1000D87A(C) 
;
l1000D888: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C8h]
           test edx, edx
           je l1000D8A3
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D9A7
           add esp, 000000004h
;
;* Jump:
; 1000D895(C) 
;
l1000D8A3: mov esp, ebp
           pop ebp
           ret
l1000D842 ENDP
;
;* Call:
; 1000D880 
;
l1000D8A7 PROC
           push ebp
           mov ebp, esp
           push 0000000E0h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           push 000000010h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           push 00000004Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           push 000000046h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           push 000000049h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           push 000000046h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C1h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C2h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C3h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dx, word ptr [ecx+0000000C4h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D7FA
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dx, word ptr [ecx+0000000C6h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D7FA
           add esp, 000000008h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           pop ebp
           ret
l1000D8A7 ENDP
;
;* Call:
; 1000D89B 
;
l1000D9A7 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 0000000EEh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           push 00000000Eh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           push 000000041h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           push 000000064h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           push 00000006Fh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           push 000000062h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           push 000000065h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           push 000000064h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D7FA
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D7FA
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+03Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000003h
           je l1000DA51
           cmp dword ptr [ebp-004h], 000000005h
           je l1000DA61
           jmp l1000DA71
;
;* Jump:
; 1000DA47(C) 
;
l1000DA51: push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           jmp l1000DA7F
;
;* Jump:
; 1000DA4D(C) 
;
l1000DA61: push 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           jmp l1000DA7F
;
;* Jump:
; 1000DA4F(U) 
;
l1000DA71: push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
;
;* Jump:
; 1000DA5F(U), 1000DA6F(U) 
;
l1000DA7F: mov esp, ebp
           pop ebp
           ret
l1000D9A7 ENDP
;
l1000DA83 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1000DAB4
;
;* Jump:
; 1000DADA(U) 
;
l1000DAA2: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000054h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000DAA0(U) 
;
l1000DAB4: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000DADC
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DBFF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-008h]
           add ecx, eax
           mov dword ptr [ebp-008h], ecx
           jmp l1000DAA2
;
;* Jump:
; 1000DABD(C) 
;
l1000DADC: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ADh]
           test eax, eax
           jne l1000DB03
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000D0h]
           test edx, edx
           jne l1000DB03
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+034h], 000000008h
           je l1000DB09
;
;* Jump:
; 1000DAE9(C), 1000DAF8(C) 
;
l1000DB03: mov byte ptr [ebp-004h], 000h
           jmp l1000DB87
;
;* Jump:
; 1000DB01(C) 
;
l1000DB09: mov byte ptr [ebp-004h], 001h
           mov dword ptr [ebp-010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-00Ch], edx
           jmp l1000DB31
;
;* Jump:
; 1000DB52(U) 
;
l1000DB1F: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000054h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000DB1D(U) 
;
l1000DB31: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+038h]
           jnl l1000DB54
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+014h], 000000001h
           jg l1000DB4E
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+018h], 000000001h
           jle l1000DB52
;
;* Jump:
; 1000DB43(C) 
;
l1000DB4E: mov byte ptr [ebp-004h], 000h
;
;* Jump:
; 1000DB4C(C) 
;
l1000DB52: jmp l1000DB1F
;
;* Jump:
; 1000DB3A(C) 
;
l1000DB54: cmp dword ptr [ebp-008h], 000000000h
           je l1000DB87
           mov eax, dword ptr [ebp-004h]
           and eax, 0000000FFh
           test eax, eax
           je l1000DB87
           mov byte ptr [ebp-004h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000004Bh
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 1000DB07(U), 1000DB58(C), 1000DB64(C) 
;
l1000DB87: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000ADh]
           test ecx, ecx
           je l1000DBA9
           push 0000000C9h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DD3E
           add esp, 000000008h
           jmp l1000DBFB
;
;* Jump:
; 1000DB94(C) 
;
l1000DBA9: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000D0h]
           test ecx, ecx
           je l1000DBCB
           push 0000000C2h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DD3E
           add esp, 000000008h
           jmp l1000DBFB
;
;* Jump:
; 1000DBB6(C) 
;
l1000DBCB: mov eax, dword ptr [ebp-004h]
           and eax, 0000000FFh
           test eax, eax
           je l1000DBEA
           push 0000000C0h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000DD3E
           add esp, 000000008h
           jmp l1000DBFB
;
;* Jump:
; 1000DBD5(C) 
;
l1000DBEA: push 0000000C1h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DD3E
           add esp, 000000008h
;
;* Jump:
; 1000DBA7(U), 1000DBC9(U), 1000DBE8(U) 
;
l1000DBFB: mov esp, ebp
           pop ebp
           ret
l1000DA83 ENDP
;
;* Call:
; 1000DACA, 1000E2D2 
;
l1000DBFF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+044h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l1000DC3D
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000034h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000DC16(C) 
;
l1000DC3D: mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000DC56
;
;* Jump:
; 1000DC77(U) 
;
l1000DC4D: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000DC4B(U) 
;
l1000DC56: cmp dword ptr [ebp-008h], 000000040h
           jnl l1000DC79
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dx, word ptr [ecx+eax*02h]
           cmp edx, 0000000FFh
           jle l1000DC77
           mov dword ptr [ebp-00Ch], 000000001h
;
;* Jump:
; 1000DC6E(C) 
;
l1000DC77: jmp l1000DC4D
;
;* Jump:
; 1000DC5A(C) 
;
l1000DC79: mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000080h]
           test ecx, ecx
           jne l1000DD37
           push 0000000DBh
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D764
           add esp, 000000008h
           mov eax, dword ptr [ebp-00Ch]
           neg eax
           sbb eax, eax
           and eax, 000000040h
           add eax, 000000043h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp-00Ch]
           shl edx, 004h
           mov eax, dword ptr [ebp+00Ch]
           add eax, edx
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000DCE1
;
;* Jump:
; 1000DD2B(U) 
;
l1000DCD8: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000DCD6(U) 
;
l1000DCE1: cmp dword ptr [ebp-008h], 000000040h
           jnl l1000DD2D
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [offset g10042B78+eax*04h]
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov ax, word ptr [edx+ecx*02h]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1000DD16
           mov ecx, dword ptr [ebp-010h]
           shr ecx, 008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
;
;* Jump:
; 1000DD01(C) 
;
l1000DD16: mov eax, dword ptr [ebp-010h]
           and eax, 0000000FFh
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           jmp l1000DCD8
;
;* Jump:
; 1000DCE5(C) 
;
l1000DD2D: mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+000000080h], 001h
;
;* Jump:
; 1000DC86(C) 
;
l1000DD37: mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l1000DBFF ENDP
;
;* Call:
; 1000DB9F, 1000DBC1, 1000DBE0, 1000DBF3 
;
l1000DD3E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D764
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+038h]
           imul eax, eax, 000000003h
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+020h], 00000FFFFh
           jg l1000DD85
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+01Ch], 00000FFFFh
           jle l1000DDAB
;
;* Jump:
; 1000DD77(C) 
;
l1000DD85: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000029h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 00000FFFFh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000DD83(C) 
;
l1000DDAB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+034h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+038h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-004h], eax
           jmp l1000DE1B
;
;* Jump:
; 1000DE67(U) 
;
l1000DE09: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000054h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000DE07(U) 
;
l1000DE1B: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+038h]
           jnl l1000DE69
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-004h]
           add eax, dword ptr [ecx+00Ch]
           push eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           jmp l1000DE09
;
;* Jump:
; 1000DE24(C) 
;
l1000DE69: mov esp, ebp
           pop ebp
           ret
l1000DD3E ENDP
;
l1000DE6D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ADh]
           test eax, eax
           je l1000DE9F
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000E0E2
           add esp, 000000004h
           jmp near ptr l1000DF57
;
;* Jump:
; 1000DE8C(C) 
;
l1000DE9F: mov dword ptr [ebp-008h], 000000000h
           jmp l1000DEB1
;
;* Jump:
; 1000DF52(U) 
;
l1000DEA8: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000DEA6(U) 
;
l1000DEB1: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+0000000E0h]
           jnl l1000DF57
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000D0h]
           test eax, eax
           je l1000DF28
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+000000128h], 000000000h
           jne l1000DF11
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000130h], 000000000h
           jne l1000DF0F
           push 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DF93
           add esp, 00000000Ch
;
;* Jump:
; 1000DEF8(C) 
;
l1000DF0F: jmp l1000DF26
;
;* Jump:
; 1000DEEC(C) 
;
l1000DF11: push 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DF93
           add esp, 00000000Ch
;
;* Jump:
; 1000DF0F(U) 
;
l1000DF26: jmp l1000DF52
;
;* Jump:
; 1000DEE0(C) 
;
l1000DF28: push 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DF93
           add esp, 00000000Ch
           push 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DF93
           add esp, 00000000Ch
;
;* Jump:
; 1000DF26(U) 
;
l1000DF52: jmp near ptr l1000DEA8
;
;* Jump:
; 1000DE9A(U), 1000DEBD(C) 
;
l1000DF57: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+0000000B8h]
           cmp edx, dword ptr [ecx+01Ch]
           je l1000DF83
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000E0E7
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           mov dword ptr [ecx+01Ch], eax
;
;* Jump:
; 1000DF66(C) 
;
l1000DF83: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000E121
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1000DE6D ENDP
;
;* Call:
; 1000DF07, 1000DF1E, 1000DF35, 1000DF4A, 1000E31A, 1000E339 
;
l1000DF93 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+010h]
           and eax, 0000000FFh
           test eax, eax
           je l1000DFBD
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+064h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           mov dword ptr [ebp+00Ch], ecx
           jmp l1000DFCA
;
;* Jump:
; 1000DFA3(C) 
;
l1000DFBD: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+054h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000DFBB(U) 
;
l1000DFCA: cmp dword ptr [ebp-008h], 000000000h
           jne l1000DFF5
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000032h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000DFCE(C) 
;
l1000DFF5: mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000111h]
           test edx, edx
           jne l1000E0DE
           push 0000000C4h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-00Ch], 000000001h
           jmp l1000E032
;
;* Jump:
; 1000E04A(U) 
;
l1000E029: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000E027(U) 
;
l1000E032: cmp dword ptr [ebp-00Ch], 000000010h
           jg l1000E04C
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           jmp l1000E029
;
;* Jump:
; 1000E036(C) 
;
l1000E04C: mov edx, dword ptr [ebp-004h]
           add edx, 000000013h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D7FA
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           mov dword ptr [ebp-00Ch], 000000001h
           jmp l1000E081
;
;* Jump:
; 1000E09E(U) 
;
l1000E078: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000E076(U) 
;
l1000E081: cmp dword ptr [ebp-00Ch], 000000010h
           jg l1000E0A0
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D78A
           add esp, 000000008h
           jmp l1000E078
;
;* Jump:
; 1000E085(C) 
;
l1000E0A0: mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000E0B2
;
;* Jump:
; 1000E0D2(U) 
;
l1000E0A9: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000E0A7(U) 
;
l1000E0B2: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-004h]
           jnl l1000E0D4
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+011h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           jmp l1000E0A9
;
;* Jump:
; 1000E0B8(C) 
;
l1000E0D4: mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax+000000111h], 001h
;
;* Jump:
; 1000E002(C) 
;
l1000E0DE: mov esp, ebp
           pop ebp
           ret
l1000DF93 ENDP
;
;* Call:
; 1000DE92 
;
l1000E0E2 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l1000E0E2 ENDP
;
;* Call:
; 1000DF6C 
;
l1000E0E7 PROC
           push ebp
           mov ebp, esp
           push 0000000DDh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           push 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           pop ebp
           ret
l1000E0E7 ENDP
;
;* Call:
; 1000DF87 
;
l1000E121 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push 0000000DAh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000E0h]
           lea eax, [edx+edx+006h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D7FA
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000E0h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000E17A
;
;* Jump:
; 1000E223(U) 
;
l1000E171: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000E16F(U) 
;
l1000E17A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+0000000E0h]
           jnl l1000E228
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000D0h]
           test ecx, ecx
           je l1000E20D
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000128h], 000000000h
           jne l1000E206
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000130h], 000000000h
           je l1000E204
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000ADh]
           test edx, edx
           jne l1000E204
           mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1000E1EC(C), 1000E1FB(C) 
;
l1000E204: jmp l1000E20D
;
;* Jump:
; 1000E1D9(C) 
;
l1000E206: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1000E1CD(C), 1000E204(U) 
;
l1000E20D: mov eax, dword ptr [ebp-010h]
           shl eax, 004h
           add eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           jmp near ptr l1000E171
;
;* Jump:
; 1000E186(C) 
;
l1000E228: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000128h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000012Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000D78A
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000130h]
           shl eax, 004h
           mov ecx, dword ptr [ebp+008h]
           add eax, dword ptr [ecx+000000134h]
           push eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D78A
           add esp, 000000008h
           mov esp, ebp
           pop ebp
           ret
l1000E121 ENDP
;
l1000E27A PROC
           push ebp
           mov ebp, esp
           push 0000000D9h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           pop ebp
           ret
l1000E27A ENDP
;
l1000E290 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 0000000D8h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D764
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000E2B7
;
;* Jump:
; 1000E2DA(U) 
;
l1000E2AE: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000E2AC(U) 
;
l1000E2B7: cmp dword ptr [ebp-004h], 000000004h
           jnl l1000E2DC
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+edx*04h+044h], 000000000h
           je l1000E2DA
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000DBFF
           add esp, 000000008h
;
;* Jump:
; 1000E2C8(C) 
;
l1000E2DA: jmp l1000E2AE
;
;* Jump:
; 1000E2BB(C) 
;
l1000E2DC: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000ADh]
           test ecx, ecx
           jne l1000E343
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000E2FD
;
;* Jump:
; 1000E341(U) 
;
l1000E2F4: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000E2F2(U) 
;
l1000E2FD: cmp dword ptr [ebp-004h], 000000004h
           jnl l1000E343
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+eax*04h+054h], 000000000h
           je l1000E322
           push 000000000h
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000DF93
           add esp, 00000000Ch
;
;* Jump:
; 1000E30E(C) 
;
l1000E322: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+ecx*04h+064h], 000000000h
           je l1000E341
           push 000000001h
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000DF93
           add esp, 00000000Ch
;
;* Jump:
; 1000E32D(C) 
;
l1000E341: jmp l1000E2F4
;
;* Jump:
; 1000E2E9(C), 1000E301(C) 
;
l1000E343: push 0000000D9h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000D764
           add esp, 000000008h
           mov esp, ebp
           pop ebp
           ret
l1000E290 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D32A, 10012FDF 
;
l1000E360 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000020h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000138h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1000EDE2
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1000F4DE
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l1000F516
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+00Dh], 000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000E487
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+0000000A8h], 000000000h
           je l1000E3D0
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000E7C0
           add esp, 000000004h
           jmp l1000E3E7
;
;* Jump:
; 1000E3C0(C) 
;
l1000E3D0: mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000D0h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000A4h], 000000001h
;
;* Jump:
; 1000E3CE(U) 
;
l1000E3E7: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000D0h]
           test eax, eax
           je l1000E400
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000AEh], 001h
;
;* Jump:
; 1000E3F4(C) 
;
l1000E400: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1000E434
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000AEh]
           test ecx, ecx
           je l1000E428
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000001h
           jmp l1000E432
;
;* Jump:
; 1000E41A(C) 
;
l1000E428: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000002h
;
;* Jump:
; 1000E426(U) 
;
l1000E432: jmp l1000E43E
;
;* Jump:
; 1000E40B(C) 
;
l1000E434: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1000E432(U) 
;
l1000E43E: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000AEh]
           test edx, edx
           je l1000E474
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000A4h]
           shl ecx, 001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], ecx
           jmp l1000E483
;
;* Jump:
; 1000E45F(C) 
;
l1000E474: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000A4h]
           mov dword ptr [eax+018h], edx
;
;* Jump:
; 1000E472(U) 
;
l1000E483: mov esp, ebp
           pop ebp
           ret
l1000E360 ENDP
;
;* Call:
; 1000E3AE 
;
l1000E487 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+020h], 000000000h
           jbe l1000E4B1
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+01Ch], 000000000h
           jbe l1000E4B1
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000000h
           jle l1000E4B1
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+024h], 000000000h
           jg l1000E4CB
;
;* Jump:
; 1000E494(C), 1000E49D(C), 1000E4A6(C) 
;
l1000E4B1: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000020h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000E4AF(C) 
;
l1000E4CB: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+020h], 00000FFDCh
           jg l1000E4E3
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+01Ch], 00000FFDCh
           jle l1000E509
;
;* Jump:
; 1000E4D5(C) 
;
l1000E4E3: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000029h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 00000FFDCh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000E4E1(C) 
;
l1000E509: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+01Ch]
           imul edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-008h]
           je l1000E541
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000046h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000E525(C) 
;
l1000E541: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+034h], 000000008h
           je l1000E572
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Fh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+034h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000E548(C) 
;
l1000E572: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 00000000Ah
           jle l1000E5AF
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Ah
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+038h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+01Ch], 00000000Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000E579(C) 
;
l1000E5AF: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000D4h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+0000000D8h], 000000001h
           mov dword ptr [ebp-010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-00Ch], edx
           jmp l1000E5ED
;
;* Jump:
; 1000E6A2(U) 
;
l1000E5DB: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000054h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000E5D9(U) 
;
l1000E5ED: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+038h]
           jnl l1000E6A7
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+008h], 000000000h
           jle l1000E620
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+008h], 000000004h
           jg l1000E620
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+00Ch], 000000000h
           jle l1000E620
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+00Ch], 000000004h
           jle l1000E63A
;
;* Jump:
; 1000E603(C), 1000E60C(C), 1000E615(C) 
;
l1000E620: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000012h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000E61E(C) 
;
l1000E63A: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+0000000D4h]
           cmp eax, dword ptr [edx+008h]
           jle l1000E659
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000D4h]
           mov dword ptr [ebp-014h], edx
           jmp l1000E662
;
;* Jump:
; 1000E649(C) 
;
l1000E659: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1000E657(U) 
;
l1000E662: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+0000000D4h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+0000000D8h]
           cmp eax, dword ptr [edx+00Ch]
           jle l1000E68D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000D8h]
           mov dword ptr [ebp-018h], edx
           jmp l1000E696
;
;* Jump:
; 1000E67D(C) 
;
l1000E68D: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1000E68B(U) 
;
l1000E696: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [edx+0000000D8h], eax
           jmp near ptr l1000E5DB
;
;* Jump:
; 1000E5F6(C) 
;
l1000E6A7: mov dword ptr [ebp-010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-00Ch], edx
           jmp l1000E6CB
;
;* Jump:
; 1000E792(U) 
;
l1000E6B9: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000054h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1000E6B7(U) 
;
l1000E6CB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+038h]
           jnl l1000E797
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+024h], 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000D4h]
           shl edx, 003h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+01Ch]
           imul edx, dword ptr [ecx+008h]
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+020h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+020h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D4h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+01Ch]
           imul eax, dword ptr [edx+008h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+020h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+02Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx+030h], 001h
           jmp near ptr l1000E6B9
;
;* Jump:
; 1000E6D4(C) 
;
l1000E797: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000DCh], eax
           mov esp, ebp
           pop ebp
           ret
l1000E487 ENDP
;
;* Call:
; 1000E3C6 
;
l1000E7C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000A38h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000A4h], 000000000h
           jg l1000E7FB
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000013h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000E7D3(C) 
;
l1000E7FB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000A8h]
           mov dword ptr [ebp-000000A34h], eax
           mov ecx, dword ptr [ebp-000000A34h]
           cmp dword ptr [ecx+014h], 000000000h
           jne l1000E822
           mov edx, dword ptr [ebp-000000A34h]
           cmp dword ptr [edx+018h], 00000003Fh
           je l1000E89A
;
;* Jump:
; 1000E814(C) 
;
l1000E822: mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000D0h], 001h
           lea ecx, [ebp-000000A28h]
           mov dword ptr [ebp-000000A2Ch], ecx
           mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000E853
;
;* Jump:
; 1000E896(U) 
;
l1000E844: mov edx, dword ptr [ebp-000000A30h]
           add edx, 000000001h
           mov dword ptr [ebp-000000A30h], edx
;
;* Jump:
; 1000E842(U) 
;
l1000E853: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000A30h]
           cmp ecx, dword ptr [eax+038h]
           jnl l1000E898
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000E873
;
;* Jump:
; 1000E894(U) 
;
l1000E86A: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000E868(U) 
;
l1000E873: cmp dword ptr [ebp-008h], 000000040h
           jnl l1000E896
           mov eax, dword ptr [ebp-000000A2Ch]
           mov dword ptr [eax], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-000000A2Ch]
           add ecx, 000000004h
           mov dword ptr [ebp-000000A2Ch], ecx
           jmp l1000E86A
;
;* Jump:
; 1000E877(C) 
;
l1000E896: jmp l1000E844
;
;* Jump:
; 1000E85F(C) 
;
l1000E898: jmp l1000E8DA
;
;* Jump:
; 1000E820(C) 
;
l1000E89A: mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+0000000D0h], 000h
           mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000E8BF
;
;* Jump:
; 1000E8D8(U) 
;
l1000E8B0: mov eax, dword ptr [ebp-000000A30h]
           add eax, 000000001h
           mov dword ptr [ebp-000000A30h], eax
;
;* Jump:
; 1000E8AE(U) 
;
l1000E8BF: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-000000A30h]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000E8DA
           mov eax, dword ptr [ebp-000000A30h]
           mov byte ptr [ebp+eax-020h], 000h
           jmp l1000E8B0
;
;* Jump:
; 1000E898(U), 1000E8CB(C) 
;
l1000E8DA: mov dword ptr [ebp-000000A38h], 000000001h
           jmp l1000E904
;
;* Jump:
; 1000ED1B(U) 
;
l1000E8E6: mov ecx, dword ptr [ebp-000000A34h]
           add ecx, 000000024h
           mov dword ptr [ebp-000000A34h], ecx
           mov edx, dword ptr [ebp-000000A38h]
           add edx, 000000001h
           mov dword ptr [ebp-000000A38h], edx
;
;* Jump:
; 1000E8E4(U) 
;
l1000E904: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000A38h]
           cmp ecx, dword ptr [eax+0000000A4h]
           jg l1000ED20
           mov edx, dword ptr [ebp-000000A34h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jle l1000E930
           cmp dword ptr [ebp-014h], 000000004h
           jle l1000E961
;
;* Jump:
; 1000E928(C) 
;
l1000E930: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Ah
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+01Ch], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000E92E(C) 
;
l1000E961: mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000E97C
;
;* Jump:
; 1000EA1C(U) 
;
l1000E96D: mov edx, dword ptr [ebp-000000A30h]
           add edx, 000000001h
           mov dword ptr [ebp-000000A30h], edx
;
;* Jump:
; 1000E96B(U) 
;
l1000E97C: mov eax, dword ptr [ebp-000000A30h]
           cmp eax, dword ptr [ebp-014h]
           jnl l1000EA21
           mov ecx, dword ptr [ebp-000000A30h]
           mov edx, dword ptr [ebp-000000A34h]
           mov eax, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-028h], eax
           cmp dword ptr [ebp-028h], 000000000h
           jl l1000E9AF
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ecx+038h]
           jl l1000E9D7
;
;* Jump:
; 1000E9A2(C) 
;
l1000E9AF: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000013h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000A38h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000E9AD(C) 
;
l1000E9D7: cmp dword ptr [ebp-000000A30h], 000000000h
           jle l1000EA1C
           mov edx, dword ptr [ebp-000000A30h]
           mov eax, dword ptr [ebp-000000A34h]
           mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [eax+edx*04h]
           jg l1000EA1C
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000013h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-000000A38h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000E9DE(C), 1000E9F2(C) 
;
l1000EA1C: jmp near ptr l1000E96D
;
;* Jump:
; 1000E985(C) 
;
l1000EA21: mov ecx, dword ptr [ebp-000000A34h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-000000A34h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-000000A34h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-000000A34h]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000D0h]
           test ecx, ecx
           je l1000EC63
           cmp dword ptr [ebp-010h], 000000000h
           jl l1000EA96
           cmp dword ptr [ebp-010h], 000000040h
           jnl l1000EA96
           mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ebp-010h]
           jl l1000EA96
           cmp dword ptr [ebp-024h], 000000040h
           jnl l1000EA96
           cmp dword ptr [ebp-004h], 000000000h
           jl l1000EA96
           cmp dword ptr [ebp-004h], 00000000Ah
           jg l1000EA96
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l1000EA96
           cmp dword ptr [ebp-00Ch], 00000000Ah
           jle l1000EABE
;
;* Jump:
; 1000EA68(C), 1000EA6E(C), 1000EA76(C), 1000EA7C(C), 1000EA82(C), 
; 1000EA88(C), 1000EA8E(C) 
;
l1000EA96: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000011h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000A38h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000EA94(C) 
;
l1000EABE: cmp dword ptr [ebp-010h], 000000000h
           jne l1000EAF4
           cmp dword ptr [ebp-024h], 000000000h
           je l1000EAF2
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000011h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-000000A38h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000EAC8(C) 
;
l1000EAF2: jmp l1000EB22
;
;* Jump:
; 1000EAC2(C) 
;
l1000EAF4: cmp dword ptr [ebp-014h], 000000001h
           je l1000EB22
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000011h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000A38h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000EAF2(U), 1000EAF8(C) 
;
l1000EB22: mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000EB3D
;
;* Jump:
; 1000EC59(U) 
;
l1000EB2E: mov eax, dword ptr [ebp-000000A30h]
           add eax, 000000001h
           mov dword ptr [ebp-000000A30h], eax
;
;* Jump:
; 1000EB2C(U) 
;
l1000EB3D: mov ecx, dword ptr [ebp-000000A30h]
           cmp ecx, dword ptr [ebp-014h]
           jnl l1000EC5E
           mov edx, dword ptr [ebp-000000A30h]
           mov eax, dword ptr [ebp-000000A34h]
           mov ecx, dword ptr [eax+edx*04h+004h]
           shl ecx, 008h
           lea edx, [ebp+ecx-000000A28h]
           mov dword ptr [ebp-000000A2Ch], edx
           cmp dword ptr [ebp-010h], 000000000h
           je l1000EBA5
           mov eax, dword ptr [ebp-000000A2Ch]
           cmp dword ptr [eax], 000000000h
           jnl l1000EBA5
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000011h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000A38h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000EB70(C), 1000EB7B(C) 
;
l1000EBA5: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], eax
           jmp l1000EBB6
;
;* Jump:
; 1000EC54(U) 
;
l1000EBAD: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1000EBAB(U) 
;
l1000EBB6: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-024h]
           jg l1000EC59
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-000000A2Ch]
           cmp dword ptr [ecx+eax*04h], 000000000h
           jnl l1000EC01
           cmp dword ptr [ebp-004h], 000000000h
           je l1000EBFF
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000011h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-000000A38h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000EBD5(C) 
;
l1000EBFF: jmp l1000EC45
;
;* Jump:
; 1000EBCF(C) 
;
l1000EC01: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-000000A2Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+ecx*04h]
           jne l1000EC1D
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           cmp dword ptr [ebp-00Ch], ecx
           je l1000EC45
;
;* Jump:
; 1000EC10(C) 
;
l1000EC1D: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000011h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-000000A38h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000EBFF(U), 1000EC1B(C) 
;
l1000EC45: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-000000A2Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h], eax
           jmp near ptr l1000EBAD
;
;* Jump:
; 1000EBBC(C) 
;
l1000EC59: jmp near ptr l1000EB2E
;
;* Jump:
; 1000EB46(C) 
;
l1000EC5E: jmp near ptr l1000ED1B
;
;* Jump:
; 1000EA5E(C) 
;
l1000EC63: cmp dword ptr [ebp-010h], 000000000h
           jne l1000EC7B
           cmp dword ptr [ebp-024h], 00000003Fh
           jne l1000EC7B
           cmp dword ptr [ebp-004h], 000000000h
           jne l1000EC7B
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1000ECA3
;
;* Jump:
; 1000EC67(C), 1000EC6D(C), 1000EC73(C) 
;
l1000EC7B: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000011h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000A38h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000EC79(C) 
;
l1000ECA3: mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000ECBE
;
;* Jump:
; 1000ED19(U) 
;
l1000ECAF: mov eax, dword ptr [ebp-000000A30h]
           add eax, 000000001h
           mov dword ptr [ebp-000000A30h], eax
;
;* Jump:
; 1000ECAD(U) 
;
l1000ECBE: mov ecx, dword ptr [ebp-000000A30h]
           cmp ecx, dword ptr [ebp-014h]
           jnl l1000ED1B
           mov edx, dword ptr [ebp-000000A30h]
           mov eax, dword ptr [ebp-000000A34h]
           mov ecx, dword ptr [eax+edx*04h+004h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           xor eax, eax
           mov al, byte ptr [ebp+edx-020h]
           test eax, eax
           je l1000ED11
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000013h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000A38h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000ECE7(C) 
;
l1000ED11: mov eax, dword ptr [ebp-028h]
           mov byte ptr [ebp+eax-020h], 001h
           jmp l1000ECAF
;
;* Jump:
; 1000EC5E(U), 1000ECC7(C) 
;
l1000ED1B: jmp near ptr l1000E8E6
;
;* Jump:
; 1000E913(C) 
;
l1000ED20: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000D0h]
           test edx, edx
           je l1000ED89
           mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000ED4A
;
;* Jump:
; 1000ED85(U) 
;
l1000ED3B: mov eax, dword ptr [ebp-000000A30h]
           add eax, 000000001h
           mov dword ptr [ebp-000000A30h], eax
;
;* Jump:
; 1000ED39(U) 
;
l1000ED4A: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-000000A30h]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000ED87
           mov eax, dword ptr [ebp-000000A30h]
           shl eax, 008h
           cmp dword ptr [ebp+eax-000000A28h], 000000000h
           jnl l1000ED85
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000002Dh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000ED69(C) 
;
l1000ED85: jmp l1000ED3B
;
;* Jump:
; 1000ED56(C) 
;
l1000ED87: jmp l1000EDDE
;
;* Jump:
; 1000ED2D(C) 
;
l1000ED89: mov dword ptr [ebp-000000A30h], 000000000h
           jmp l1000EDA4
;
;* Jump:
; 1000EDDC(U) 
;
l1000ED95: mov eax, dword ptr [ebp-000000A30h]
           add eax, 000000001h
           mov dword ptr [ebp-000000A30h], eax
;
;* Jump:
; 1000ED93(U) 
;
l1000EDA4: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-000000A30h]
           cmp edx, dword ptr [ecx+038h]
           jnl l1000EDDE
           mov eax, dword ptr [ebp-000000A30h]
           xor ecx, ecx
           mov cl, byte ptr [ebp+eax-020h]
           test ecx, ecx
           jne l1000EDDC
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000002Dh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000EDC0(C) 
;
l1000EDDC: jmp l1000ED95
;
;* Jump:
; 1000ED87(U), 1000EDB0(C) 
;
l1000EDDE: mov esp, ebp
           pop ebp
           ret
l1000E7C0 ENDP
;
l1000EDE2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1000EE1C
           cmp dword ptr [ebp-008h], 000000001h
           je l1000EF04
           cmp dword ptr [ebp-008h], 000000002h
           je l1000EF90
           jmp near ptr l1000F017
;
;* Jump:
; 1000EE01(C) 
;
l1000EE1C: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F076
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F1FC
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000ACh]
           test ecx, ecx
           jne l1000EE7B
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000150h]
           call [ecx]
           add esp, 000000004h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           call [ecx]
           add esp, 000000008h
;
;* Jump:
; 1000EE41(C) 
;
l1000EE7B: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000154h]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+0000000AEh]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000158h]
           call [eax]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           cmp dword ptr [ecx+018h], 000000001h
           setle dl
           dec edx
           and edx, 000000003h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000144h]
           call [edx]
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000013Ch]
           call [edx]
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000AEh]
           test ecx, ecx
           je l1000EEF8
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+00Ch], 000h
           jmp l1000EEFF
;
;* Jump:
; 1000EEED(C) 
;
l1000EEF8: mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+00Ch], 001h
;
;* Jump:
; 1000EEF6(U) 
;
l1000EEFF: jmp near ptr l1000F031
;
;* Jump:
; 1000EE07(C) 
;
l1000EF04: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F076
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F1FC
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000128h], 000000000h
           jne l1000EF43
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+000000130h], 000000000h
           je l1000EF43
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ADh]
           test eax, eax
           je l1000EF77
;
;* Jump:
; 1000EF26(C), 1000EF32(C) 
;
l1000EF43: push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000158h]
           call [eax]
           add esp, 000000008h
           push 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000144h]
           call [eax]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+00Ch], 000h
           jmp near ptr l1000F031
;
;* Jump:
; 1000EF41(C) 
;
l1000EF77: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000002h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], ecx
;
;* Jump:
; 1000EE11(C) 
;
l1000EF90: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000AEh]
           test ecx, ecx
           jne l1000EFB7
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F076
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F1FC
           add esp, 000000004h
;
;* Jump:
; 1000EF9D(C) 
;
l1000EFB7: push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000158h]
           call [eax]
           add esp, 000000008h
           push 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000144h]
           call [eax]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+01Ch], 000000000h
           jne l1000EFFB
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           call [ecx+004h]
           add esp, 000000004h
;
;* Jump:
; 1000EFE6(C) 
;
l1000EFFB: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+00Ch], 000h
           jmp l1000F031
;
;* Jump:
; 1000EE17(U) 
;
l1000F017: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000030h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000EEFF(U), 1000EF72(U), 1000F015(U) 
;
l1000F031: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+018h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           cmp dword ptr [ecx+014h], eax
           sete  dl
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+00Dh], dl
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1000F072
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx+010h], eax
;
;* Jump:
; 1000F052(C) 
;
l1000F072: mov esp, ebp
           pop ebp
           ret
l1000EDE2 ENDP
;
;* Call:
; 1000EE20, 1000EF08, 1000EFA3 
;
l1000F076 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000A8h], 000000000h
           je l1000F13E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000138h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+01Ch]
           imul ecx, ecx, 000000024h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, ecx
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx+0000000E0h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000F0CF
;
;* Jump:
; 1000F0FB(U) 
;
l1000F0C6: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000F0C4(U) 
;
l1000F0CF: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jnl l1000F0FD
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+004h]
           imul eax, eax, 000000054h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           add edx, eax
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+eax*04h+0000000E4h], edx
           jmp l1000F0C6
;
;* Jump:
; 1000F0D7(C) 
;
l1000F0FD: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+000000128h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx+00000012Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [edx+000000130h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [edx+000000134h], ecx
           jmp near ptr l1000F1F8
;
;* Jump:
; 1000F086(C) 
;
l1000F13E: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000004h
           jle l1000F17B
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Ah
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+038h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+01Ch], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000F145(C) 
;
l1000F17B: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+038h]
           mov dword ptr [edx+0000000E0h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000F19C
;
;* Jump:
; 1000F1C2(U) 
;
l1000F193: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000F191(U) 
;
l1000F19C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+038h]
           jnl l1000F1C4
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000054h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           add ecx, edx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+edx*04h+0000000E4h], ecx
           jmp l1000F193
;
;* Jump:
; 1000F1A5(C) 
;
l1000F1C4: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000128h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000012Ch], 00000003Fh
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000130h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000134h], 000000000h
;
;* Jump:
; 1000F139(U) 
;
l1000F1F8: mov esp, ebp
           pop ebp
           ret
l1000F076 ENDP
;
;* Call:
; 1000EE2C, 1000EF14, 1000EFAF 
;
l1000F1FC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000E0h], 000000001h
           jne l1000F2B7
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000E4h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [eax+0000000F4h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+0000000F8h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+034h], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+038h], 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+03Ch], 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+040h], 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+044h], 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+020h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l1000F28F
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000F284(C) 
;
l1000F28F: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+0000000FCh], 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000100h], 000000000h
           jmp near ptr l1000F493
;
;* Jump:
; 1000F20D(C) 
;
l1000F2B7: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000E0h], 000000000h
           jle l1000F2CF
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000E0h], 000000004h
           jle l1000F306
;
;* Jump:
; 1000F2C1(C) 
;
l1000F2CF: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Ah
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000E0h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+01Ch], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000F2CD(C) 
;
l1000F306: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D4h]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000F4h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000F8h], eax
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000FCh], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           jmp l1000F36F
;
;* Jump:
; 1000F48E(U) 
;
l1000F366: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1000F364(U) 
;
l1000F36F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+0000000E0h]
           jnl l1000F493
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+034h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+038h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+034h]
           imul edx, dword ptr [ecx+038h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+03Ch], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+034h]
           shl edx, 003h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+040h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+01Ch]
           xor edx, edx
           div dword ptr [esi+034h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l1000F3EB
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+034h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000F3E0(C) 
;
l1000F3EB: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+044h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [eax+020h]
           xor edx, edx
           div dword ptr [ecx+038h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l1000F414
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+038h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000F409(C) 
;
l1000F414: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000FCh]
           add eax, dword ptr [ebp-008h]
           cmp eax, 00000000Ah
           jle l1000F451
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Dh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000F435(C), 1000F48C(U) 
;
l1000F451: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           test eax, eax
           jle l1000F48E
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000FCh]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+eax*04h+000000100h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000FCh]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000FCh], ecx
           jmp l1000F451
;
;* Jump:
; 1000F45F(C) 
;
l1000F48E: jmp near ptr l1000F366
;
;* Jump:
; 1000F2B2(U), 1000F37B(C) 
;
l1000F493: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000BCh], 000000000h
           jle l1000F4D9
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+0000000BCh]
           imul eax, dword ptr [edx+0000000F4h]
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 00000FFFFh
           jnl l1000F4C6
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], ecx
           jmp l1000F4CD
;
;* Jump:
; 1000F4BC(C) 
;
l1000F4C6: mov dword ptr [ebp-018h], 00000FFFFh
;
;* Jump:
; 1000F4C4(U) 
;
l1000F4CD: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [edx+0000000B8h], eax
;
;* Jump:
; 1000F49D(C) 
;
l1000F4D9: pop esi
           mov esp, ebp
           pop ebp
           ret
l1000F1FC ENDP
;
l1000F4DE PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           mov byte ptr [ecx+00Ch], 000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           call [ecx+004h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000148h]
           call [ecx+008h]
           add esp, 000000004h
           pop ebp
           ret
l1000F4DE ENDP
;
l1000F516 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000138h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1000F558
           cmp dword ptr [ebp-008h], 000000001h
           je l1000F582
           cmp dword ptr [ebp-008h], 000000002h
           je l1000F58E
           jmp l1000F5B6
;
;* Jump:
; 1000F548(C) 
;
l1000F558: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000002h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000AEh]
           test eax, eax
           jne l1000F580
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+01Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], edx
;
;* Jump:
; 1000F56F(C) 
;
l1000F580: jmp l1000F5B6
;
;* Jump:
; 1000F54E(C) 
;
l1000F582: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000002h
           jmp l1000F5B6
;
;* Jump:
; 1000F554(C) 
;
l1000F58E: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000AEh]
           test eax, eax
           je l1000F5A7
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000001h
;
;* Jump:
; 1000F59B(C) 
;
l1000F5A7: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+01Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], eax
;
;* Jump:
; 1000F556(U), 1000F580(U), 1000F58C(U) 
;
l1000F5B6: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], eax
           mov esp, ebp
           pop ebp
           ret
l1000F516 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10009824, 10009A4A, 1001361A, 100136C1, 10013C65 
;
l1000F5D0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+004h], 000000000h
           jne l1000F5DF
           jmp l1000F63C
;
;* Jump:
; 1000F5DB(C) 
;
l1000F5DF: mov dword ptr [ebp-004h], 000000001h
           jmp l1000F5F1
;
;* Jump:
; 1000F60B(U) 
;
l1000F5E8: mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1000F5E6(U) 
;
l1000F5F1: cmp dword ptr [ebp-004h], 000000000h
           jle l1000F60D
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+024h]
           add esp, 000000008h
           jmp l1000F5E8
;
;* Jump:
; 1000F5F5(C) 
;
l1000F60D: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+010h]
           test ecx, ecx
           je l1000F632
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000C8h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+00000010Ch], 000000000h
           jmp l1000F63C
;
;* Jump:
; 1000F617(C) 
;
l1000F632: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], 000000064h
;
;* Jump:
; 1000F5DD(U), 1000F630(U) 
;
l1000F63C: mov esp, ebp
           pop ebp
           ret
l1000F5D0 ENDP
;
;* Call:
; 10009813, 10013609, 1001F782 
;
l1000F640 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+004h], 000000000h
           je l1000F65C
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+028h]
           add esp, 000000004h
;
;* Jump:
; 1000F64A(C) 
;
l1000F65C: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 000000000h
           pop ebp
           ret
l1000F640 ENDP
;
;* Call:
; 1000F751, 10012D84, 1001B0EB 
;
l1000F672 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000082h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+000000080h], 000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1000F672 ENDP
;
;* Call:
; 1000D28D, 1000D2E5, 1000FAAF, 10011780, 1001AE83 
;
l1000F6A0 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000112h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+000000111h], 000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1000F6A0 ENDP
;
           int 03h
           int 03h
;
;* Call:
; 1000F803, 1000F81E 
;
l1000F6D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l1000F707
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000F6DD(C) 
;
l1000F707: cmp dword ptr [ebp+00Ch], 000000000h
           jl l1000F713
           cmp dword ptr [ebp+00Ch], 000000004h
           jl l1000F738
;
;* Jump:
; 1000F70B(C) 
;
l1000F713: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Fh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000F711(C) 
;
l1000F738: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax*04h+044h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           jne l1000F75E
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F672
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], eax
;
;* Jump:
; 1000F74B(C) 
;
l1000F75E: mov dword ptr [ebp-00Ch], 000000000h
           jmp l1000F770
;
;* Jump:
; 1000F7DB(U) 
;
l1000F767: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000F765(U) 
;
l1000F770: cmp dword ptr [ebp-00Ch], 000000040h
           jnl l1000F7DD
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           imul eax, dword ptr [ebp+014h]
           add eax, 000000032h
           cdq
           mov ecx, 000000064h
           idiv ecx
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jg l1000F79E
           mov dword ptr [ebp-008h], 000000001h
;
;* Jump:
; 1000F795(C) 
;
l1000F79E: cmp dword ptr [ebp-008h], 000007FFFh
           jle l1000F7AE
           mov dword ptr [ebp-008h], 000007FFFh
;
;* Jump:
; 1000F7A5(C) 
;
l1000F7AE: mov edx, dword ptr [ebp+018h]
           and edx, 0000000FFh
           test edx, edx
           je l1000F7CB
           cmp dword ptr [ebp-008h], 0000000FFh
           jle l1000F7CB
           mov dword ptr [ebp-008h], 0000000FFh
;
;* Jump:
; 1000F7B9(C), 1000F7C2(C) 
;
l1000F7CB: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-00Ch]
           mov ax, word ptr [ebp-008h]
           mov word ptr [ecx+edx*02h], ax
           jmp l1000F767
;
;* Jump:
; 1000F774(C) 
;
l1000F7DD: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov byte ptr [edx+000000080h], 000h
           mov esp, ebp
           pop ebp
           ret
l1000F6D0 ENDP
;
;* Call:
; 1000F88B 
;
l1000F7ED PROC
           push ebp
           mov ebp, esp
           mov al, byte ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push offset g100422D4
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F6D0
           add esp, 000000014h
           mov al, byte ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push offset g100423D4
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000F6D0
           add esp, 000000014h
           pop ebp
           ret
l1000F7ED ENDP
;
;* Call:
; 1000F874 
;
l1000F828 PROC
           push ebp
           mov ebp, esp
           cmp dword ptr [ebp+008h], 000000000h
           jg l1000F838
           mov dword ptr [ebp+008h], 000000001h
;
;* Jump:
; 1000F82F(C) 
;
l1000F838: cmp dword ptr [ebp+008h], 000000064h
           jle l1000F845
           mov dword ptr [ebp+008h], 000000064h
;
;* Jump:
; 1000F83C(C) 
;
l1000F845: cmp dword ptr [ebp+008h], 000000032h
           jnl l1000F859
           mov eax, 000001388h
           cdq
           idiv dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           jmp l1000F868
;
;* Jump:
; 1000F849(C) 
;
l1000F859: mov eax, dword ptr [ebp+008h]
           shl eax, 001h
           mov ecx, 0000000C8h
           sub ecx, eax
           mov dword ptr [ebp+008h], ecx
;
;* Jump:
; 1000F857(U) 
;
l1000F868: mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1000F828 ENDP
;
;* Call:
; 1000F901, 100297E5 
;
l1000F86D PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call l1000F828
           add esp, 000000004h
           mov dword ptr [ebp+00Ch], eax
           mov cl, byte ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F7ED
           add esp, 00000000Ch
           pop ebp
           ret
l1000F86D ENDP
;
;* Call:
; 10012D07, 100297D0 
;
l1000F895 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l1000F8CA
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000F8A0(C) 
;
l1000F8CA: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+040h], 000000000h
           jne l1000F8EF
           push 000000348h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+040h], eax
;
;* Jump:
; 1000F8D1(C) 
;
l1000F8EF: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+034h], 000000008h
           push 000000001h
           push 00000004Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F86D
           add esp, 00000000Ch
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000FA22
           add esp, 000000004h
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000F927
;
;* Jump:
; 1000F951(U) 
;
l1000F91E: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000F91C(U) 
;
l1000F927: cmp dword ptr [ebp-004h], 000000010h
           jnl l1000F953
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+074h], 000h
           mov edx, dword ptr [ebp+008h]
           add edx, dword ptr [ebp-004h]
           mov byte ptr [edx+000000084h], 001h
           mov eax, dword ptr [ebp+008h]
           add eax, dword ptr [ebp-004h]
           mov byte ptr [eax+000000094h], 005h
           jmp l1000F91E
;
;* Jump:
; 1000F92B(C) 
;
l1000F953: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000A8h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000A4h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000ACh], 000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000ADh], 000h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+0000000AEh], 000h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+034h], 000000008h
           jle l1000F99E
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000AEh], 001h
;
;* Jump:
; 1000F992(C) 
;
l1000F99E: mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+0000000AFh], 000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+0000000B0h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000B4h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000B8h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+0000000BCh], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000C1h], 001h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+0000000C2h], 001h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000C3h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov word ptr [ecx+0000000C4h], 00001h
           mov edx, dword ptr [ebp+008h]
           mov word ptr [edx+0000000C6h], 00001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000FB6A
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1000F895 ENDP
;
;* Call:
; 1000F90D 
;
l1000FA22 PROC
           push ebp
           mov ebp, esp
           push offset g100424E8
           push offset g100424D4
           mov eax, dword ptr [ebp+008h]
           add eax, 000000054h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000FA9B
           add esp, 000000010h
           push offset g10042528
           push offset g10042514
           mov edx, dword ptr [ebp+008h]
           add edx, 000000064h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000FA9B
           add esp, 000000010h
           push offset g10042508
           push offset g100424F4
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000058h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000FA9B
           add esp, 000000010h
           push offset g100425E0
           push offset g100425CC
           mov eax, dword ptr [ebp+008h]
           add eax, 000000068h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000FA9B
           add esp, 000000010h
           pop ebp
           ret
l1000FA22 ENDP
;
;* Call:
; 1000FA3A, 1000FA57, 1000FA74, 1000FA91 
;
l1000FA9B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax], 000000000h
           jne l1000FABC
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F6A0
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx], eax
;
;* Jump:
; 1000FAA9(C) 
;
l1000FABC: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx], eax
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx+004h], eax
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov dl, byte ptr [edx+010h]
           mov byte ptr [ecx+010h], dl
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-008h], 000000001h
           jmp l1000FAF9
;
;* Jump:
; 1000FB11(U) 
;
l1000FAF0: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000FAEE(U) 
;
l1000FAF9: cmp dword ptr [ebp-008h], 000000010h
           jg l1000FB13
           mov ecx, dword ptr [ebp+010h]
           add ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           mov dword ptr [ebp-004h], eax
           jmp l1000FAF0
;
;* Jump:
; 1000FAFD(C) 
;
l1000FB13: cmp dword ptr [ebp-004h], 000000001h
           jl l1000FB22
           cmp dword ptr [ebp-004h], 000000100h
           jle l1000FB3C
;
;* Jump:
; 1000FB17(C) 
;
l1000FB22: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000FB20(C) 
;
l1000FB3C: mov ecx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp+014h]
           mov eax, dword ptr [ebp+00Ch]
           mov edi, dword ptr [eax]
           add edi, 000000011h
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov byte ptr [ecx+000000111h], 000h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000FA9B ENDP
;
;* Call:
; 1000FA16 
;
l1000FB6A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-004h], 000000005h
           ja l1000FBE7
           mov edx, dword ptr [ebp-004h]
           jmp [offset g1000FC05+edx*04h]
l1000FB87: push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
l1000FB97: push 000000003h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
l1000FBA7: push 000000003h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
l1000FBB7: push 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
l1000FBC7: push 000000005h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
l1000FBD7: push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000FC1D
           add esp, 000000008h
           jmp l1000FC01
;
;* Jump:
; 1000FB7B(C) 
;
l1000FBE7: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000009h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1000FB95(U), 1000FBA5(U), 1000FBB5(U), 1000FBC5(U), 1000FBD5(U), 
; 1000FBE5(U) 
;
l1000FC01: mov esp, ebp
           pop ebp
           ret
;
g1000FC05  dd l1000FBD7
           dd l1000FB87
           dd l1000FB97
           dd l1000FBA7
           dd l1000FBB7
           dd l1000FBC7
l1000FB6A ENDP
l1000FC1D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l1000FC54
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1000FC2A(C) 
;
l1000FC54: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+03Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000C0h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000C8h], 000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000005h
           ja l100101F0
           mov eax, dword ptr [ebp-00Ch]
           jmp [offset g1001020E+eax*04h]
l1000FC8B: mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000C0h], 001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+038h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           jmp near ptr l1001020A
l1000FCE8: mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+0000000C8h], 001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+038h], 000000003h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000052h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           add ecx, 000000054h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000047h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           add eax, 0000000A8h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000042h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000000h
           jmp near ptr l1001020A
l1000FDD5: mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000C0h], 001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+038h], 000000003h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000002h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000002h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           add eax, 000000054h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000002h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           add edx, 0000000A8h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000003h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], 000000001h
           jmp near ptr l1001020A
l1000FEC3: mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+0000000C8h], 001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+038h], 000000004h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000043h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           add edx, 000000054h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 00000004Dh
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           add ecx, 0000000A8h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000059h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           add eax, 0000000FCh
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 00000004Bh
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000000h
           jmp near ptr l1001020A
l1000FFFA: mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+0000000C8h], 001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+038h], 000000004h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000002h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000002h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           add eax, 000000054h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000002h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           add edx, 0000000A8h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000003h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           add ecx, 0000000FCh
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000002h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000002h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
           jmp near ptr l1001020A
l10010132: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [edx+038h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+038h], 000000001h
           jl l10010150
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+038h], 00000000Ah
           jle l10010184
;
;* Jump:
; 10010145(C) 
;
l10010150: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Ah
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+038h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+01Ch], 00000000Ah
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001014E(C) 
;
l10010184: mov dword ptr [ebp-004h], 000000000h
           jmp l10010196
;
;* Jump:
; 100101EC(U) 
;
l1001018D: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001018B(U) 
;
l10010196: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+038h]
           jnl l100101EE
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000054h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+040h]
           add edx, eax
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000000h
           jmp l1001018D
;
;* Jump:
; 1001019F(C) 
;
l100101EE: jmp l1001020A
;
;* Jump:
; 1000FC7B(C) 
;
l100101F0: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Ah
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1000FCE3(U), 1000FDD0(U), 1000FEBE(U), 1000FFF5(U), 1001012D(U), 
; 100101EE(U) 
;
l1001020A: mov esp, ebp
           pop ebp
           ret
;
g1001020E  dd l10010132
           dd l1000FC8B
           dd l1000FCE8
           dd l1000FDD5
           dd l1000FEC3
           dd l1000FFFA
l1000FC1D ENDP
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+038h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 000000064h
           je l10010266
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000014h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001023C(C) 
;
l10010266: cmp dword ptr [ebp-008h], 000000003h
           jne l1001027E
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+03Ch], 000000003h
           jne l1001027E
           mov dword ptr [ebp-004h], 00000000Ah
           jmp l1001029C
;
;* Jump:
; 1001026A(C), 10010273(C) 
;
l1001027E: cmp dword ptr [ebp-008h], 000000004h
           jle l1001028F
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000000006h
           mov dword ptr [ebp-004h], ecx
           jmp l1001029C
;
;* Jump:
; 10010282(C) 
;
l1001028F: mov edx, dword ptr [ebp-008h]
           lea eax, [000000002h+edx*04h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001027C(U), 1001028D(U) 
;
l1001029C: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+00000015Ch], 000000000h
           je l100102B6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000160h]
           cmp eax, dword ptr [ebp-004h]
           jnl l100102FE
;
;* Jump:
; 100102A6(C) 
;
l100102B6: cmp dword ptr [ebp-004h], 00000000Ah
           jle l100102C4
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-010h], ecx
           jmp l100102CB
;
;* Jump:
; 100102BA(C) 
;
l100102C4: mov dword ptr [ebp-010h], 00000000Ah
;
;* Jump:
; 100102C2(U) 
;
l100102CB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+000000160h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000160h]
           imul edx, edx, 000000024h
           push edx
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00000015Ch], eax
;
;* Jump:
; 100102B4(C) 
;
l100102FE: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000015Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+0000000A8h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+0000000A4h], ecx
           cmp dword ptr [ebp-008h], 000000003h
           jne l10010434
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+03Ch], 000000003h
           jne l10010434
           push 000000001h
           push 000000000h
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1001057F
           add esp, 000000010h
           mov dword ptr [ebp-00Ch], eax
           push 000000002h
           push 000000000h
           push 000000005h
           push 000000001h
           push 000000000h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000001h
           push 000000000h
           push 00000003Fh
           push 000000001h
           push 000000002h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000001h
           push 000000000h
           push 00000003Fh
           push 000000001h
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000002h
           push 000000000h
           push 00000003Fh
           push 000000006h
           push 000000000h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000001h
           push 000000002h
           push 00000003Fh
           push 000000001h
           push 000000000h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l1001057F
           add esp, 000000010h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           push 00000003Fh
           push 000000001h
           push 000000002h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           push 00000003Fh
           push 000000001h
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           push 00000003Fh
           push 000000001h
           push 000000000h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100104D2
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           jmp near ptr l100104CE
;
;* Jump:
; 10010326(C), 10010333(C) 
;
l10010434: push 000000001h
           push 000000000h
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1001057F
           add esp, 000000010h
           mov dword ptr [ebp-00Ch], eax
           push 000000002h
           push 000000000h
           push 000000005h
           push 000000001h
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10010519
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000002h
           push 000000000h
           push 00000003Fh
           push 000000006h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10010519
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000001h
           push 000000002h
           push 00000003Fh
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10010519
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l1001057F
           add esp, 000000010h
           mov dword ptr [ebp-00Ch], eax
           push 000000000h
           push 000000001h
           push 00000003Fh
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10010519
           add esp, 000000018h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1001042F(U) 
;
l100104CE: mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 1001035E, 10010377, 10010390, 100103A9, 100103C2, 100103F2, 1001040B, 10010424 
;
l100104D2 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [ecx+01Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [eax+020h], ecx
           mov edx, dword ptr [ebp+008h]
           add edx, 000000024h
           mov dword ptr [ebp+008h], edx
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100104D2 ENDP
;
;* Call:
; 1001045B, 10010476, 10010491, 100104C3, 100105FF 
;
l10010519 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001052F
;
;* Jump:
; 10010576(U) 
;
l10010526: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10010524(U) 
;
l1001052F: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp+00Ch]
           jnl l10010578
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000024h
           mov dword ptr [ebp+008h], ecx
           jmp l10010526
;
;* Jump:
; 10010535(C) 
;
l10010578: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10010519 ENDP
;
;* Call:
; 10010345, 100103D9, 10010440, 100104A8 
;
l1001057F PROC
           push ebp
           mov ebp, esp
           push ecx
           cmp dword ptr [ebp+00Ch], 000000004h
           jg l100105EB
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l100105A3
;
;* Jump:
; 100105B8(U) 
;
l1001059A: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10010598(U) 
;
l100105A3: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp+00Ch]
           jnl l100105BA
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+004h], eax
           jmp l1001059A
;
;* Jump:
; 100105A9(C) 
;
l100105BA: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000024h
           mov dword ptr [ebp+008h], ecx
           jmp l1001060A
;
;* Jump:
; 10010587(C) 
;
l100105EB: mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010519
           add esp, 000000018h
           mov dword ptr [ebp+008h], eax
;
;* Jump:
; 100105E9(U) 
;
l1001060A: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1001057F ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D3B1, 10013025 
;
l10010620 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push 00000006Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000158h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10010695
           mov dword ptr [ebp-008h], 000000000h
           jmp l10010663
;
;* Jump:
; 10010685(U) 
;
l1001065A: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10010658(U) 
;
l10010663: cmp dword ptr [ebp-008h], 000000004h
           jnl l10010687
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+04Ch], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+05Ch], 000000000h
           jmp l1001065A
;
;* Jump:
; 10010667(C) 
;
l10010687: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+040h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10010620 ENDP
;
l10010695 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ebp+00Ch]
           mov byte ptr [ecx+00Ch], dl
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           cmp dword ptr [eax+000000128h], 000000000h
           sete  cl
           mov byte ptr [ebp-008h], cl
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000130h], 000000000h
           jne l100106FD
           mov eax, dword ptr [ebp-008h]
           and eax, 0000000FFh
           test eax, eax
           je l100106F1
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], offset l100108CB
           jmp l100106FB
;
;* Jump:
; 100106E3(C) 
;
l100106F1: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], offset l10010F14
;
;* Jump:
; 100106EF(U) 
;
l100106FB: jmp l10010744
;
;* Jump:
; 100106D7(C) 
;
l100106FD: mov eax, dword ptr [ebp-008h]
           and eax, 0000000FFh
           test eax, eax
           je l10010715
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], offset l1001117B
           jmp l10010744
;
;* Jump:
; 10010707(C) 
;
l10010715: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], offset l100112A0
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+040h], 000000000h
           jne l10010744
           push 0000003E8h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+040h], eax
;
;* Jump:
; 100106FB(U), 10010713(U), 10010726(C) 
;
l10010744: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1001075D
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+008h], offset l100116A7
           jmp l10010767
;
;* Jump:
; 1001074F(C) 
;
l1001075D: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], offset l10011641
;
;* Jump:
; 1001075B(U) 
;
l10010767: mov dword ptr [ebp-014h], 000000000h
           jmp l10010779
;
;* Jump:
; 100107C2(U), 1001087F(U) 
;
l10010770: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1001076E(U) 
;
l10010779: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+0000000E0h]
           jnl l10010884
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+edx*04h+024h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l100107CF
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000130h], 000000000h
           je l100107C4
           jmp l10010770
;
;* Jump:
; 100107C0(C) 
;
l100107C4: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-004h], ecx
           jmp l100107E1
;
;* Jump:
; 100107B4(C) 
;
l100107CF: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+034h], edx
;
;* Jump:
; 100107CD(U) 
;
l100107E1: mov eax, dword ptr [ebp+00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l10010860
           cmp dword ptr [ebp-004h], 000000000h
           jl l100107F9
           cmp dword ptr [ebp-004h], 000000004h
           jl l1001081E
;
;* Jump:
; 100107F1(C) 
;
l100107F9: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000032h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100107F7(C) 
;
l1001081E: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+eax*04h+05Ch], 000000000h
           jne l1001084B
           push 000000404h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+edx*04h+05Ch], eax
;
;* Jump:
; 10010829(C) 
;
l1001084B: mov ecx, 000000101h
           xor eax, eax
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-00Ch]
           mov edi, dword ptr [esi+edx*04h+05Ch]
           rep stosd
           jmp l1001087F
;
;* Jump:
; 100107EB(C) 
;
l10010860: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax*04h+04Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov cl, byte ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000BD80
           add esp, 000000010h
;
;* Jump:
; 1001085E(U) 
;
l1001087F: jmp near ptr l10010770
;
;* Jump:
; 10010785(C) 
;
l10010884: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+038h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+03Ch], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           mov dword ptr [ecx+044h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+048h], 000000000h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10010695 ENDP
;
l100108CB PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000134h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B8h], 000000000h
           je l1001092E
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+044h], 000000000h
           jne l1001092E
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+048h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10010CD3
           add esp, 000000008h
;
;* Jump:
; 10010910(C), 10010919(C) 
;
l1001092E: mov dword ptr [ebp-020h], 000000000h
           jmp l10010940
;
;* Jump:
; 10010A37(U) 
;
l10010937: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10010935(U) 
;
l10010940: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-020h]
           cmp ecx, dword ptr [eax+0000000FCh]
           jnl l10010A3C
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000100h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+0000000E4h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-024h]
           movsx eax, word ptr [edx]
           mov ecx, dword ptr [ebp-008h]
           sar eax, cl
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [edx+ecx*04h+024h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+024h], eax
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           jnl l100109C6
           mov edx, dword ptr [ebp-014h]
           neg edx
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100109B3(C) 
;
l100109C6: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 100109E4(U) 
;
l100109CD: cmp dword ptr [ebp-014h], 000000000h
           je l100109E6
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           sar edx, 001h
           mov dword ptr [ebp-014h], edx
           jmp l100109CD
;
;* Jump:
; 100109D1(C) 
;
l100109E6: cmp dword ptr [ebp-010h], 00000000Bh
           jle l10010A06
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000006h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 100109EA(C) 
;
l10010A06: mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10010C69
           add esp, 00000000Ch
           cmp dword ptr [ebp-010h], 000000000h
           je l10010A37
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10010AB0
           add esp, 00000000Ch
;
;* Jump:
; 10010A21(C) 
;
l10010A37: jmp near ptr l10010937
;
;* Jump:
; 1001094C(C) 
;
l10010A3C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l10010AAA
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+044h], 000000000h
           jne l10010A9B
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           mov dword ptr [ecx+044h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+048h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+048h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+048h]
           and edx, 000000007h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+048h], edx
;
;* Jump:
; 10010A6C(C) 
;
l10010A9B: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+044h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+044h], edx
;
;* Jump:
; 10010A63(C) 
;
l10010AAA: mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l100108CB ENDP
;
;* Call:
; 10010A2F, 10010CC7, 10010DE6, 10010E98, 10010EF6, 100110C6, 10011222, 10011535 
;
l10010AB0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp+010h], 000000000h
           jne l10010AEE
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000028h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10010AC9(C) 
;
l10010AEE: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+00Ch]
           test eax, eax
           je l10010AFF
           jmp near ptr l10010BFE
;
;* Jump:
; 10010AF8(C) 
;
l10010AFF: mov edx, 000000001h
           mov ecx, dword ptr [ebp+010h]
           shl edx, cl
           sub edx, 000000001h
           mov eax, dword ptr [ebp-008h]
           and eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, 000000018h
           sub ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           shl edx, cl
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           or ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10010BE7(U) 
;
l10010B39: cmp dword ptr [ebp-004h], 000000008h
           jl l10010BEC
           mov edx, dword ptr [ebp-008h]
           sar edx, 010h
           and edx, 0000000FFh
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000000h
           jne l10010B90
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10010C02
           add esp, 000000004h
;
;* Jump:
; 10010B82(C) 
;
l10010B90: cmp dword ptr [ebp-00Ch], 0000000FFh
           jne l10010BD5
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov byte ptr [eax], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 000000000h
           jne l10010BD5
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010C02
           add esp, 000000004h
;
;* Jump:
; 10010B97(C), 10010BC7(C) 
;
l10010BD5: mov eax, dword ptr [ebp-008h]
           shl eax, 008h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000008h
           mov dword ptr [ebp-004h], ecx
           jmp near ptr l10010B39
;
;* Jump:
; 10010B3D(C) 
;
l10010BEC: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], edx
;
;* Jump:
; 10010AFA(U) 
;
l10010BFE: mov esp, ebp
           pop ebp
           ret
l10010AB0 ENDP
;
;* Call:
; 10010B88, 10010BCD, 10010D33, 10010D77 
;
l10010C02 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10010C4E
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10010C29(C) 
;
l10010C4E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx+010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+014h], ecx
           mov esp, ebp
           pop ebp
           ret
l10010C02 ENDP
;
;* Call:
; 10010A15, 10010E7B, 1001104A, 100110B2, 10011464, 100114FC 
;
l10010C69 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Ch]
           test ecx, ecx
           je l10010C9E
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+05Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+ecx*04h+05Ch]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+edx*04h], eax
           jmp l10010CCF
;
;* Jump:
; 10010C77(C) 
;
l10010C9E: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+04Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp+010h]
           movsx ecx, byte ptr [eax+000000400h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010AB0
           add esp, 00000000Ch
;
;* Jump:
; 10010C9C(U) 
;
l10010CCF: mov esp, ebp
           pop ebp
           ret
l10010C69 ENDP
;
;* Call:
; 10010926, 10010F7B, 100111D6, 1001130A 
;
l10010CD3 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10010E04
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+00Ch]
           test edx, edx
           jne l10010D7F
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10010DDB
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov byte ptr [edx], 0FFh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000000h
           jne l10010D3B
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10010C02
           add esp, 000000004h
;
;* Jump:
; 10010D2D(C) 
;
l10010D3B: mov edx, dword ptr [ebp+00Ch]
           add edx, 0000000D0h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov byte ptr [ecx], dl
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], eax
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 000000000h
           jne l10010D7F
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10010C02
           add esp, 000000004h
;
;* Jump:
; 10010CED(C), 10010D71(C) 
;
l10010D7F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           cmp dword ptr [edx+000000128h], 000000000h
           jne l10010DC3
           mov dword ptr [ebp-004h], 000000000h
           jmp l10010DA0
;
;* Jump:
; 10010DBF(U) 
;
l10010D97: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10010D95(U) 
;
l10010DA0: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+0000000E0h]
           jnl l10010DC1
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+024h], 000000000h
           jmp l10010D97
;
;* Jump:
; 10010DAF(C) 
;
l10010DC1: jmp l10010DD7
;
;* Jump:
; 10010D8C(C) 
;
l10010DC3: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+038h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+03Ch], 000000000h
;
;* Jump:
; 10010DC1(U) 
;
l10010DD7: mov esp, ebp
           pop ebp
           ret
l10010CD3 ENDP
;
;* Call:
; 10010CF7, 1001167E 
;
l10010DDB PROC
           push ebp
           mov ebp, esp
           push 000000007h
           push 00000007Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10010AB0
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+01Ch], 000000000h
           pop ebp
           ret
l10010DDB ENDP
;
;* Call:
; 10010CDB, 1001102C, 100110FF, 1001144C, 100114DF, 100115C5, 10011672, 100116BD 
;
l10010E04 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+038h], 000000000h
           jbe l10010ECE
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+038h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10010E3E(U) 
;
l10010E27: mov eax, dword ptr [ebp-008h]
           sar eax, 001h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10010E40
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           jmp l10010E27
;
;* Jump:
; 10010E33(C) 
;
l10010E40: cmp dword ptr [ebp-004h], 00000000Eh
           jle l10010E69
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000028h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10010E44(C) 
;
l10010E69: mov ecx, dword ptr [ebp-004h]
           shl ecx, 004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+034h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10010C69
           add esp, 00000000Ch
           cmp dword ptr [ebp-004h], 000000000h
           je l10010EA0
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+038h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010AB0
           add esp, 00000000Ch
;
;* Jump:
; 10010E87(C) 
;
l10010EA0: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+038h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+03Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010ED2
           add esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+03Ch], 000000000h
;
;* Jump:
; 10010E11(C) 
;
l10010ECE: mov esp, ebp
           pop ebp
           ret
l10010E04 ENDP
;
;* Call:
; 10010EBC, 10011487, 1001154F 
;
l10010ED2 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Ch]
           test ecx, ecx
           je l10010EE3
           jmp l10010F12
;
;* Jump:
; 10010EDF(C), 10010F10(U) 
;
l10010EE3: cmp dword ptr [ebp+010h], 000000000h
           jbe l10010F12
           push 000000001h
           mov edx, dword ptr [ebp+00Ch]
           movsx eax, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10010AB0
           add esp, 00000000Ch
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000001h
           mov dword ptr [ebp+00Ch], edx
           mov eax, dword ptr [ebp+010h]
           sub eax, 000000001h
           mov dword ptr [ebp+010h], eax
           jmp l10010EE3
;
;* Jump:
; 10010EE1(U), 10010EE7(C) 
;
l10010F12: pop ebp
           ret
l10010ED2 ENDP
;
l10010F14 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000012Ch]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000134h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+004h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l10010F83
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+044h], 000000000h
           jne l10010F83
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010CD3
           add esp, 000000008h
;
;* Jump:
; 10010F65(C), 10010F6E(C) 
;
l10010F83: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000128h]
           mov dword ptr [ebp-020h], ecx
           jmp l10010FA9
;
;* Jump:
; 10010FD8(U), 1001101D(U), 100110D5(U) 
;
l10010FA0: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10010F9E(U) 
;
l10010FA9: mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [ebp-014h]
           jg l100110DA
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov eax, dword ptr [ebp-024h]
           movsx ecx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000000h
           jne l10010FDA
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           jmp l10010FA0
;
;* Jump:
; 10010FCD(C) 
;
l10010FDA: cmp dword ptr [ebp-01Ch], 000000000h
           jnl l10010FFD
           mov eax, dword ptr [ebp-01Ch]
           neg eax
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-00Ch]
           sar edx, cl
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           not eax
           mov dword ptr [ebp-008h], eax
           jmp l1001100E
;
;* Jump:
; 10010FDE(C) 
;
l10010FFD: mov edx, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-00Ch]
           sar edx, cl
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10010FFB(U) 
;
l1001100E: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001101F
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           jmp l10010FA0
;
;* Jump:
; 10011012(C) 
;
l1001101F: mov edx, dword ptr [ebp-010h]
           cmp dword ptr [edx+038h], 000000000h
           jbe l10011034
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010E04
           add esp, 000000004h
;
;* Jump:
; 10011026(C), 1001105B(U) 
;
l10011034: cmp dword ptr [ebp-004h], 00000000Fh
           jle l1001105D
           push 0000000F0h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010C69
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000010h
           mov dword ptr [ebp-004h], ecx
           jmp l10011034
;
;* Jump:
; 10011038(C) 
;
l1001105D: mov dword ptr [ebp-018h], 000000001h
;
;* Jump:
; 1001107B(U) 
;
l10011064: mov edx, dword ptr [ebp-01Ch]
           sar edx, 001h
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-01Ch], 000000000h
           je l1001107D
           mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           jmp l10011064
;
;* Jump:
; 10011070(C) 
;
l1001107D: cmp dword ptr [ebp-018h], 00000000Ah
           jle l1001109D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000006h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10011081(C) 
;
l1001109D: mov eax, dword ptr [ebp-004h]
           shl eax, 004h
           add eax, dword ptr [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010C69
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010AB0
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], 000000000h
           jmp near ptr l10010FA0
;
;* Jump:
; 10010FAF(C) 
;
l100110DA: cmp dword ptr [ebp-004h], 000000000h
           jle l10011107
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+038h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+038h], edx
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+038h], 000007FFFh
           jne l10011107
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10010E04
           add esp, 000000004h
;
;* Jump:
; 100110DE(C), 100110F9(C) 
;
l10011107: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l10011175
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+044h], 000000000h
           jne l10011166
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           mov dword ptr [ecx+044h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+048h], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           and edx, 000000007h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+048h], edx
;
;* Jump:
; 10011137(C) 
;
l10011166: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+044h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+044h], edx
;
;* Jump:
; 1001112E(C) 
;
l10011175: mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l10010F14 ENDP
;
l1001117B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000134h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B8h], 000000000h
           je l100111DE
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+044h], 000000000h
           jne l100111DE
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+048h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l10010CD3
           add esp, 000000008h
;
;* Jump:
; 100111C0(C), 100111C9(C) 
;
l100111DE: mov dword ptr [ebp-010h], 000000000h
           jmp l100111F0
;
;* Jump:
; 1001122A(U) 
;
l100111E7: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 100111E5(U) 
;
l100111F0: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+0000000FCh]
           jnl l1001122C
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           movsx eax, word ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           push 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           sar edx, cl
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10010AB0
           add esp, 00000000Ch
           jmp l100111E7
;
;* Jump:
; 100111FC(C) 
;
l1001122C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B8h], 000000000h
           je l1001129A
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+044h], 000000000h
           jne l1001128B
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000B8h]
           mov dword ptr [edx+044h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+048h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+048h], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+048h]
           and eax, 000000007h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+048h], eax
;
;* Jump:
; 1001125C(C) 
;
l1001128B: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+044h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+044h], eax
;
;* Jump:
; 10011253(C) 
;
l1001129A: mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l1001117B ENDP
;
l100112A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000128h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000012Ch]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000134h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+004h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l10011312
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+044h], 000000000h
           jne l10011312
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010CD3
           add esp, 000000008h
;
;* Jump:
; 100112F4(C), 100112FD(C) 
;
l10011312: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-000000128h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000128h]
           mov dword ptr [ebp-000000120h], ecx
           jmp l10011344
;
;* Jump:
; 100113B9(U) 
;
l10011335: mov edx, dword ptr [ebp-000000120h]
           add edx, 000000001h
           mov dword ptr [ebp-000000120h], edx
;
;* Jump:
; 10011333(U) 
;
l10011344: mov eax, dword ptr [ebp-000000120h]
           cmp eax, dword ptr [ebp-014h]
           jg l100113BE
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov eax, dword ptr [ebp-000000128h]
           movsx ecx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-00000011Ch], ecx
           cmp dword ptr [ebp-00000011Ch], 000000000h
           jnl l10011383
           mov edx, dword ptr [ebp-00000011Ch]
           neg edx
           mov dword ptr [ebp-00000011Ch], edx
;
;* Jump:
; 10011373(C) 
;
l10011383: mov eax, dword ptr [ebp-00000011Ch]
           mov ecx, dword ptr [ebp-008h]
           sar eax, cl
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ebp-00000011Ch]
           mov dword ptr [ebp+ecx*04h-000000114h], edx
           cmp dword ptr [ebp-00000011Ch], 000000001h
           jne l100113B9
           mov eax, dword ptr [ebp-000000120h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100113AE(C) 
;
l100113B9: jmp near ptr l10011335
;
;* Jump:
; 1001134D(C) 
;
l100113BE: mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-000000124h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+040h]
           mov eax, dword ptr [ebp-010h]
           add edx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-000000118h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000128h]
           mov dword ptr [ebp-000000120h], edx
           jmp l10011401
;
;* Jump:
; 10011435(U), 100114D6(U), 10011574(U) 
;
l100113F2: mov eax, dword ptr [ebp-000000120h]
           add eax, 000000001h
           mov dword ptr [ebp-000000120h], eax
;
;* Jump:
; 100113F0(U) 
;
l10011401: mov ecx, dword ptr [ebp-000000120h]
           cmp ecx, dword ptr [ebp-014h]
           jg l10011579
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [ebp+edx*04h-000000114h]
           mov dword ptr [ebp-00000011Ch], eax
           cmp dword ptr [ebp-00000011Ch], 000000000h
           jne l10011437
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           jmp l100113F2
;
;* Jump:
; 1001142A(C), 100114A5(U) 
;
l10011437: cmp dword ptr [ebp-004h], 00000000Fh
           jle l100114A7
           mov edx, dword ptr [ebp-000000120h]
           cmp edx, dword ptr [ebp-00Ch]
           jg l100114A7
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010E04
           add esp, 000000004h
           push 0000000F0h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010C69
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-000000124h]
           push edx
           mov eax, dword ptr [ebp-000000118h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l10010ED2
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-000000118h], eax
           mov dword ptr [ebp-000000124h], 000000000h
           jmp l10011437
;
;* Jump:
; 1001143B(C), 10011446(C) 
;
l100114A7: cmp dword ptr [ebp-00000011Ch], 000000001h
           jle l100114DB
           mov ecx, dword ptr [ebp-00000011Ch]
           and ecx, 000000001h
           mov edx, dword ptr [ebp-000000118h]
           add edx, dword ptr [ebp-000000124h]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-000000124h]
           add eax, 000000001h
           mov dword ptr [ebp-000000124h], eax
           jmp near ptr l100113F2
;
;* Jump:
; 100114AE(C) 
;
l100114DB: mov ecx, dword ptr [ebp-010h]
           push ecx
           call l10010E04
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           shl edx, 004h
           add edx, 000000001h
           push edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+034h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10010C69
           add esp, 00000000Ch
           mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [offset g10042B78+eax*04h]
           mov edx, dword ptr [ebp-000000128h]
           movsx eax, word ptr [edx+ecx*02h]
           xor ecx, ecx
           test eax, eax
           setnl cl
           mov dword ptr [ebp-00000011Ch], ecx
           push 000000001h
           mov edx, dword ptr [ebp-00000011Ch]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010AB0
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-000000124h]
           push ecx
           mov edx, dword ptr [ebp-000000118h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10010ED2
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-000000118h], edx
           mov dword ptr [ebp-000000124h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           jmp near ptr l100113F2
;
;* Jump:
; 1001140A(C) 
;
l10011579: cmp dword ptr [ebp-004h], 000000000h
           jg l10011588
           cmp dword ptr [ebp-000000124h], 000000000h
           jbe l100115CD
;
;* Jump:
; 1001157D(C) 
;
l10011588: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+038h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+038h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, dword ptr [ebp-000000124h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+03Ch], ecx
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+038h], 000007FFFh
           je l100115C1
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+03Ch], 0000003A9h
           jbe l100115CD
;
;* Jump:
; 100115B3(C) 
;
l100115C1: mov edx, dword ptr [ebp-010h]
           push edx
           call l10010E04
           add esp, 000000004h
;
;* Jump:
; 10011586(C), 100115BF(C) 
;
l100115CD: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B8h], 000000000h
           je l1001163B
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+044h], 000000000h
           jne l1001162C
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B8h]
           mov dword ptr [ecx+044h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+048h], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+048h]
           and edx, 000000007h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+048h], edx
;
;* Jump:
; 100115FD(C) 
;
l1001162C: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+044h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+044h], edx
;
;* Jump:
; 100115F4(C) 
;
l1001163B: mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l100112A0 ENDP
;
l10011641 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l10010E04
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10010DDB
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10011641 ENDP
;
l100116A7 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000158h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10010E04
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           cmp dword ptr [eax+000000128h], 000000000h
           sete  cl
           mov byte ptr [ebp-008h], cl
           xor edx, edx
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-014h], 000000000h
           jmp l100116EE
;
;* Jump:
; 10011728(U), 100117B2(U) 
;
l100116E5: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100116E3(U) 
;
l100116EE: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+0000000E0h]
           jnl l100117B7
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-008h]
           and eax, 0000000FFh
           test eax, eax
           je l10011735
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+000000130h], 000000000h
           je l1001172A
           jmp l100116E5
;
;* Jump:
; 10011726(C) 
;
l1001172A: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-004h], eax
           jmp l1001173E
;
;* Jump:
; 1001171A(C) 
;
l10011735: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10011733(U) 
;
l1001173E: mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [ebp+eax-01Ch]
           test ecx, ecx
           jne l100117B2
           mov edx, dword ptr [ebp-008h]
           and edx, 0000000FFh
           test edx, edx
           je l10011767
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax*04h+054h]
           mov dword ptr [ebp-018h], edx
           jmp l10011774
;
;* Jump:
; 10011756(C) 
;
l10011767: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax*04h+064h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10011765(U) 
;
l10011774: mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax], 000000000h
           jne l1001178D
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F6A0
           add esp, 000000004h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx], eax
;
;* Jump:
; 1001177A(C) 
;
l1001178D: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+05Ch]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000C0BE
           add esp, 00000000Ch
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [ebp+eax-01Ch], 001h
;
;* Jump:
; 10011749(C) 
;
l100117B2: jmp near ptr l100116E5
;
;* Jump:
; 100116FA(C) 
;
l100117B7: mov esp, ebp
           pop ebp
           ret
l100116A7 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D35F 
;
l100117C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l100117EC
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100117D0(C) 
;
l100117EC: push 000000040h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000140h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l100118C1
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000150h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           test edx, edx
           je l10011841
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10011B79
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10011DDE
           add esp, 000000004h
           jmp l100118BD
;
;* Jump:
; 10011827(C) 
;
l10011841: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10011926
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], ecx
           jmp l1001186F
;
;* Jump:
; 100118BB(U) 
;
l1001185D: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000054h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001185B(U) 
;
l1001186F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+038h]
           jnl l100118BD
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+01Ch]
           shl eax, 003h
           mov ecx, dword ptr [ebp+008h]
           imul eax, dword ptr [ecx+0000000D4h]
           mov ecx, dword ptr [ebp-008h]
           cdq
           idiv dword ptr [ecx+008h]
           push eax
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+008h]
           add esp, 000000010h
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h+008h], eax
           jmp l1001185D
;
;* Jump:
; 1001183F(U), 10011878(C) 
;
l100118BD: mov esp, ebp
           pop ebp
           ret
l100117C0 ENDP
;
l100118C1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           je l100118F1
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100118D5(C) 
;
l100118F1: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov dword ptr [ecx+030h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+038h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           shl ecx, 001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+03Ch], ecx
           mov esp, ebp
           pop ebp
           ret
l100118C1 ENDP
;
l10011926 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10011B2C(U) 
;
l10011938: mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           cmp eax, dword ptr [ebp+014h]
           jnb l10011B31
           mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           cmp edx, dword ptr [ebp+020h]
           jnb l10011B31
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+014h]
           sub ecx, dword ptr [eax]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+0000000D8h]
           sub ecx, dword ptr [eax+034h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp-014h]
           jnb l10011981
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-018h], eax
           jmp l10011987
;
;* Jump:
; 10011977(C) 
;
l10011981: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001197F(U) 
;
l10011987: mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           lea ecx, [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000014Ch]
           call [ecx+004h]
           add esp, 000000014h
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+034h]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+034h], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+030h]
           sub eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+030h], eax
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+030h], 000000000h
           jne l10011A5C
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+034h]
           cmp edx, dword ptr [ecx+0000000D8h]
           jnl l10011A5C
           mov dword ptr [ebp-010h], 000000000h
           jmp l10011A15
;
;* Jump:
; 10011A4B(U) 
;
l10011A0C: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10011A0A(U) 
;
l10011A15: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+038h]
           jnl l10011A4D
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+034h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+eax*04h+008h]
           push edx
           call l10011B35
           add esp, 000000010h
           jmp l10011A0C
;
;* Jump:
; 10011A1E(C) 
;
l10011A4D: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000D8h]
           mov dword ptr [eax+034h], edx
;
;* Jump:
; 100119F0(C), 10011A01(C) 
;
l10011A5C: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+034h]
           cmp edx, dword ptr [ecx+0000000D8h]
           jne l10011AAA
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp-008h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000150h]
           call [eax+004h]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [ecx], eax
;
;* Jump:
; 10011A6B(C) 
;
l10011AAA: mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+030h], 000000000h
           jne l10011B2C
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           cmp ecx, dword ptr [ebp+020h]
           jnb l10011B2C
           mov dword ptr [ebp-010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-00Ch], eax
           jmp l10011AE1
;
;* Jump:
; 10011B20(U) 
;
l10011ACF: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000054h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10011ACD(U) 
;
l10011AE1: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+038h]
           jnl l10011B22
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+020h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+01Ch]
           shl edx, 003h
           push edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+018h]
           mov edx, dword ptr [ecx+eax*04h]
           push edx
           call l10011B35
           add esp, 000000010h
           jmp l10011ACF
;
;* Jump:
; 10011AEA(C) 
;
l10011B22: mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [ebp+020h]
           mov dword ptr [eax], ecx
           jmp l10011B31
;
;* Jump:
; 10011AB1(C), 10011ABB(C) 
;
l10011B2C: jmp near ptr l10011938
;
;* Jump:
; 10011940(C), 1001194E(C), 10011B2A(U) 
;
l10011B31: mov esp, ebp
           pop ebp
           ret
l10011926 ENDP
;
;* Call:
; 10011A43, 10011B18, 10011D21 
;
l10011B35 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-004h], eax
           jmp l10011B4A
;
;* Jump:
; 10011B73(U) 
;
l10011B41: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10011B3F(U) 
;
l10011B4A: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp+014h]
           jnl l10011B75
           mov eax, dword ptr [ebp+00Ch]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+010h]
           sub eax, 000000001h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100268D1
           add esp, 000000018h
           jmp l10011B41
;
;* Jump:
; 10011B50(C) 
;
l10011B75: mov esp, ebp
           pop ebp
           ret
l10011B35 ENDP
;
l10011B79 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10011DD5(U) 
;
l10011B9A: mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           cmp edx, dword ptr [ebp+020h]
           jnb l10011DDA
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           cmp ecx, dword ptr [ebp+014h]
           jnb l10011CC8
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+014h]
           sub eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+03Ch]
           sub eax, dword ptr [edx+034h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-014h]
           jnb l10011BE0
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-01Ch], edx
           jmp l10011BE6
;
;* Jump:
; 10011BD6(C) 
;
l10011BE0: mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10011BDE(U) 
;
l10011BE6: mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+034h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           lea eax, [edx+ecx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000014Ch]
           call [eax+004h]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+030h]
           cmp eax, dword ptr [edx+020h]
           jne l10011C9B
           mov dword ptr [ebp-010h], 000000000h
           jmp l10011C3D
;
;* Jump:
; 10011C99(U) 
;
l10011C34: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10011C32(U) 
;
l10011C3D: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+038h]
           jnl l10011C9B
           mov dword ptr [ebp-018h], 000000001h
           jmp l10011C5A
;
;* Jump:
; 10011C97(U) 
;
l10011C51: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10011C4F(U) 
;
l10011C5A: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+0000000D8h]
           jg l10011C99
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           push 000000001h
           mov eax, dword ptr [ebp-018h]
           neg eax
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+008h]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+008h]
           push eax
           call l100268D1
           add esp, 000000018h
           jmp l10011C51
;
;* Jump:
; 10011C66(C) 
;
l10011C99: jmp l10011C34
;
;* Jump:
; 10011C29(C), 10011C46(C) 
;
l10011C9B: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+034h]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+034h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+030h]
           sub edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+030h], edx
           jmp l10011D37
;
;* Jump:
; 10011BB0(C) 
;
l10011CC8: mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+030h], 000000000h
           je l10011CD6
           jmp near ptr l10011DDA
;
;* Jump:
; 10011CCF(C) 
;
l10011CD6: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+034h]
           cmp ecx, dword ptr [eax+03Ch]
           jnl l10011D37
           mov dword ptr [ebp-010h], 000000000h
           jmp l10011CF6
;
;* Jump:
; 10011D29(U) 
;
l10011CED: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10011CEB(U) 
;
l10011CF6: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+038h]
           jnl l10011D2B
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+03Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+008h]
           push ecx
           call l10011B35
           add esp, 000000010h
           jmp l10011CED
;
;* Jump:
; 10011CFF(C) 
;
l10011D2B: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [edx+034h], ecx
;
;* Jump:
; 10011CC6(U), 10011CE2(C) 
;
l10011D37: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+034h]
           cmp ecx, dword ptr [eax+03Ch]
           jne l10011DD5
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+018h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+038h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000150h]
           call [ecx+004h]
           add esp, 000000014h
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+038h]
           mov ecx, dword ptr [ebp+008h]
           add eax, dword ptr [ecx+0000000D8h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+038h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+038h]
           cmp ecx, dword ptr [ebp-008h]
           jl l10011DAB
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+038h], 000000000h
;
;* Jump:
; 10011D9F(C) 
;
l10011DAB: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+034h]
           cmp ecx, dword ptr [ebp-008h]
           jl l10011DC0
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+034h], 000000000h
;
;* Jump:
; 10011DB4(C) 
;
l10011DC0: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+034h]
           mov edx, dword ptr [ebp+008h]
           add ecx, dword ptr [edx+0000000D8h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+03Ch], ecx
;
;* Jump:
; 10011D43(C) 
;
l10011DD5: jmp near ptr l10011B9A
;
;* Jump:
; 10011BA2(C), 10011CD1(U) 
;
l10011DDA: mov esp, ebp
           pop ebp
           ret
l10011B79 ENDP
;
;* Call:
; 10011837 
;
l10011DDE PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+038h]
           imul edx, edx, 000000005h
           imul edx, dword ptr [ebp-01Ch]
           shl edx, 002h
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-018h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-014h], ecx
           jmp l10011E47
;
;* Jump:
; 10011F1E(U) 
;
l10011E35: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000054h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10011E33(U) 
;
l10011E47: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+038h]
           jnl l10011F23
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000003h
           push eax
           mov ecx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+01Ch]
           shl eax, 003h
           mov edx, dword ptr [ebp+008h]
           imul eax, dword ptr [edx+0000000D4h]
           mov ecx, dword ptr [ebp-014h]
           cdq
           idiv dword ptr [ecx+008h]
           push eax
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+008h]
           add esp, 000000010h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-01Ch]
           imul ecx, ecx, 000000003h
           shl ecx, 002h
           mov esi, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           lea edi, [eax+edx*04h]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10011EC2
;
;* Jump:
; 10011EFA(U) 
;
l10011EB9: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10011EB7(U) 
;
l10011EC2: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-01Ch]
           jnl l10011EFC
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx*02h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-010h]
           mov ecx, dword ptr [esi+ecx*04h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx*04h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-010h]
           mov eax, dword ptr [esi+eax*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10011EB9
;
;* Jump:
; 10011EC8(C) 
;
l10011EFC: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           lea eax, [edx+ecx*04h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+008h], eax
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000005h
           mov ecx, dword ptr [ebp-008h]
           lea edx, [ecx+eax*04h]
           mov dword ptr [ebp-008h], edx
           jmp near ptr l10011E35
;
;* Jump:
; 10011E50(C) 
;
l10011F23: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10011DDE ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000D351 
;
l10011F30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov byte ptr [ebp-008h], 001h
           push 000000034h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000150h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10012153
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10012158
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+008h], 000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000AFh]
           test eax, eax
           je l10011F9F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000019h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10011F83(C) 
;
l10011F9F: mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10011FC3
;
;* Jump:
; 10012114(U) 
;
l10011FB1: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000054h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10011FAF(U) 
;
l10011FC3: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+038h]
           jnl l10012119
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+008h]
           cmp edx, dword ptr [ecx+0000000D4h]
           jne l1001202A
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+00Ch]
           cmp edx, dword ptr [ecx+0000000D8h]
           jne l1001202A
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B0h], 000000000h
           je l10012017
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+00Ch], offset l100129B4
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+008h], 001h
           jmp l10012025
;
;* Jump:
; 10011FFE(C) 
;
l10012017: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+00Ch], offset l100123CA
;
;* Jump:
; 10012015(U) 
;
l10012025: jmp near ptr l10012114
;
;* Jump:
; 10011FE1(C), 10011FF2(C) 
;
l1001202A: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           shl ecx, 001h
           mov edx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [edx+0000000D4h]
           jne l10012065
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+00Ch]
           cmp edx, dword ptr [ecx+0000000D8h]
           jne l10012065
           mov byte ptr [ebp-008h], 000h
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+00Ch], offset l1001241B
           jmp near ptr l10012114
;
;* Jump:
; 1001203B(C), 1001204C(C) 
;
l10012065: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           shl eax, 001h
           mov ecx, dword ptr [ebp+008h]
           cmp eax, dword ptr [ecx+0000000D4h]
           jne l100120BE
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           shl eax, 001h
           mov ecx, dword ptr [ebp+008h]
           cmp eax, dword ptr [ecx+0000000D8h]
           jne l100120BE
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000B0h], 000000000h
           je l100120AE
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+00Ch], offset l100125F5
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+008h], 001h
           jmp l100120BC
;
;* Jump:
; 10012095(C) 
;
l100120AE: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+00Ch], offset l100124E9
;
;* Jump:
; 100120AC(U) 
;
l100120BC: jmp l10012114
;
;* Jump:
; 10012076(C), 10012089(C) 
;
l100120BE: mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+0000000D4h]
           cdq
           idiv dword ptr [ecx+008h]
           test edx, edx
           jne l100120FA
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+0000000D8h]
           cdq
           idiv dword ptr [ecx+00Ch]
           test edx, edx
           jne l100120FA
           mov byte ptr [ebp-008h], 000h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+00Ch], offset l100121E7
           jmp l10012114
;
;* Jump:
; 100120D0(C), 100120E4(C) 
;
l100120FA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000026h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10012025(U), 10012060(U), 100120BC(U), 100120F8(U) 
;
l10012114: jmp near ptr l10011FB1
;
;* Jump:
; 10011FCC(C) 
;
l10012119: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000B0h], 000000000h
           je l1001214F
           mov ecx, dword ptr [ebp-008h]
           and ecx, 0000000FFh
           test ecx, ecx
           jne l1001214F
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000063h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
;
;* Jump:
; 10012123(C), 10012130(C) 
;
l1001214F: mov esp, ebp
           pop ebp
           ret
l10011F30 ENDP
;
l10012153 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10012153 ENDP
;
l10012158 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000150h]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-014h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+040h]
           mov dword ptr [ebp-010h], eax
           jmp l1001218E
;
;* Jump:
; 100121E1(U) 
;
l1001217C: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000054h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001217A(U) 
;
l1001218E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+038h]
           jnl l100121E3
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp+010h]
           lea eax, [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+018h]
           imul edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+014h]
           mov eax, dword ptr [ecx+eax*04h]
           lea ecx, [eax+edx*04h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-008h]
           call [ecx+eax*04h+00Ch]
           add esp, 000000010h
           jmp l1001217C
;
;* Jump:
; 10012197(C) 
;
l100121E3: mov esp, ebp
           pop ebp
           ret
l10012158 ENDP
;
l100121E7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+0000000D4h]
           cdq
           idiv dword ptr [ecx+008h]
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+0000000D8h]
           cdq
           idiv dword ptr [ecx+00Ch]
           mov dword ptr [ebp-02Ch], eax
           mov edx, dword ptr [ebp-014h]
           imul edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-038h], eax
           mov eax, dword ptr [ebp-008h]
           imul eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000D8h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           call l10012353
           add esp, 000000010h
           mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-020h], 000000000h
           jmp l10012272
;
;* Jump:
; 1001234A(U) 
;
l10012269: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10012267(U) 
;
l10012272: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+00Ch]
           jnl l1001234F
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           jmp l100122AF
;
;* Jump:
; 1001233C(U) 
;
l1001229D: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 1001229B(U) 
;
l100122AF: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-008h]
           jnb l10012341
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           jmp l100122D4
;
;* Jump:
; 10012322(U) 
;
l100122CB: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 100122C9(U) 
;
l100122D4: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-02Ch]
           jnl l10012324
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           add ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-028h], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10012300
;
;* Jump:
; 10012320(U) 
;
l100122F7: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 100122F5(U) 
;
l10012300: mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-014h]
           jnl l10012322
           mov ecx, dword ptr [ebp-028h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-00Ch]
           add eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
           jmp l100122F7
;
;* Jump:
; 10012306(C) 
;
l10012322: jmp l100122CB
;
;* Jump:
; 100122DA(C) 
;
l10012324: mov eax, dword ptr [ebp-00Ch]
           add eax, dword ptr [ebp-038h]
           cdq
           idiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-024h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           jmp near ptr l1001229D
;
;* Jump:
; 100122B5(C) 
;
l10012341: mov ecx, dword ptr [ebp-030h]
           add ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-030h], ecx
           jmp near ptr l10012269
;
;* Jump:
; 1001227B(C) 
;
l1001234F: mov esp, ebp
           pop ebp
           ret
l100121E7 ENDP
;
;* Call:
; 10012251, 10012411, 10012448, 10012517, 10012628, 100129E5 
;
l10012353 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+014h]
           sub eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jle l100123C6
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001237A
;
;* Jump:
; 100123C4(U) 
;
l10012371: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001236F(U) 
;
l1001237A: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp+00Ch]
           jnl l100123C6
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h]
           add edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [eax-001h]
           mov byte ptr [ebp-00Ch], cl
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-014h], edx
           jmp l100123AB
;
;* Jump:
; 100123C2(U) 
;
l100123A2: mov eax, dword ptr [ebp-014h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100123A0(U) 
;
l100123AB: cmp dword ptr [ebp-014h], 000000000h
           jle l100123C4
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
           jmp l100123A2
;
;* Jump:
; 100123AF(C) 
;
l100123C4: jmp l10012371
;
;* Jump:
; 10012366(C), 10012380(C) 
;
l100123C6: mov esp, ebp
           pop ebp
           ret
l10012353 ENDP
;
l100123CA PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp+014h]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp+010h]
           push edx
           call l100268D1
           add esp, 000000018h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000D8h]
           push edx
           mov eax, dword ptr [ebp+014h]
           push eax
           call l10012353
           add esp, 000000010h
           pop ebp
           ret
l100123CA ENDP
;
l1001241B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           shl edx, 001h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           call l10012353
           add esp, 000000010h
           mov dword ptr [ebp-010h], 000000000h
           jmp l10012462
;
;* Jump:
; 100124E0(U) 
;
l10012459: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10012457(U) 
;
l10012462: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+00Ch]
           jnl l100124E5
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001249E
;
;* Jump:
; 100124DE(U) 
;
l10012495: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10012493(U) 
;
l1001249E: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-004h]
           jnb l100124E0
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, edx
           add ecx, eax
           sar ecx, 001h
           mov edx, dword ptr [ebp-014h]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           xor ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000002h
           mov dword ptr [ebp-018h], edx
           jmp l10012495
;
;* Jump:
; 100124A4(C) 
;
l100124E0: jmp near ptr l10012459
;
;* Jump:
; 1001246B(C) 
;
l100124E5: mov esp, ebp
           pop ebp
           ret
l1001241B ENDP
;
l100124E9 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push ebx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           shl edx, 001h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           call l10012353
           add esp, 000000010h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           jmp l10012538
;
;* Jump:
; 100125EB(U) 
;
l1001252F: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001252D(U) 
;
l10012538: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+00Ch]
           jnl l100125F0
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h+004h]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-014h], 000000001h
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10012585
;
;* Jump:
; 100125E0(U) 
;
l1001257C: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001257A(U) 
;
l10012585: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-004h]
           jnb l100125E2
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           add edx, ecx
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add ecx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-008h]
           xor ebx, ebx
           mov bl, byte ptr [eax+001h]
           add ecx, edx
           add ebx, ecx
           sar ebx, 002h
           mov ecx, dword ptr [ebp-01Ch]
           mov byte ptr [ecx], bl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-014h]
           xor eax, 000000003h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000002h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000002h
           mov dword ptr [ebp-008h], edx
           jmp l1001257C
;
;* Jump:
; 1001258B(C) 
;
l100125E2: mov eax, dword ptr [ebp-020h]
           add eax, 000000002h
           mov dword ptr [ebp-020h], eax
           jmp near ptr l1001252F
;
;* Jump:
; 10012541(C) 
;
l100125F0: pop ebx
           mov esp, ebp
           pop ebp
           ret
l100124E9 ENDP
;
l100125F5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           shl edx, 001h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           add eax, 000000002h
           push eax
           mov ecx, dword ptr [ebp+010h]
           sub ecx, 000000004h
           push ecx
           call l10012353
           add esp, 000000010h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B0h]
           imul eax, eax, 000000050h
           mov ecx, 000004000h
           sub ecx, eax
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B0h]
           shl eax, 004h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l1001266E
;
;* Jump:
; 100129AB(U) 
;
l10012665: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10012663(U) 
;
l1001266E: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [edx+00Ch]
           jnl l100129B0
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h-004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h+008h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           add edx, ecx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           add edx, ecx
           mov dword ptr [ebp-028h], edx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+002h]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx+002h]
           add eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-00Ch]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           add ecx, dword ptr [ebp-00Ch]
           add ecx, edx
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ebp-004h]
           add edx, eax
           mov dword ptr [ebp-028h], edx
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000008000h
           sar ecx, 010h
           mov edx, dword ptr [ebp-02Ch]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000002h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000002h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000002h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000002h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000002h
           mov dword ptr [ebp-034h], edx
           jmp l100127C8
;
;* Jump:
; 100128CE(U) 
;
l100127BF: mov eax, dword ptr [ebp-034h]
           sub eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 100127BD(U) 
;
l100127C8: cmp dword ptr [ebp-034h], 000000000h
           jbe l100128D3
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           add edx, ecx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           add edx, ecx
           mov dword ptr [ebp-028h], edx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx-001h]
           add eax, edx
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+002h]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx-001h]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx+002h]
           add eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-00Ch]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx-001h]
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax-001h]
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           add ecx, dword ptr [ebp-00Ch]
           add ecx, edx
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ebp-004h]
           add edx, eax
           mov dword ptr [ebp-028h], edx
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000008000h
           sar ecx, 010h
           mov edx, dword ptr [ebp-02Ch]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000002h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000002h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000002h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000002h
           mov dword ptr [ebp-018h], ecx
           jmp near ptr l100127BF
;
;* Jump:
; 100127CC(C) 
;
l100128D3: mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov dword ptr [ebp-028h], eax
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           add ecx, eax
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           add ecx, eax
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx-001h]
           add ecx, eax
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           add ecx, eax
           mov edx, dword ptr [ebp-014h]
           xor eax, eax
           mov al, byte ptr [edx-001h]
           add ecx, eax
           mov edx, dword ptr [ebp-014h]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           add ecx, eax
           mov dword ptr [ebp-00Ch], ecx
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx-001h]
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx-001h]
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           add edx, dword ptr [ebp-00Ch]
           add edx, eax
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-028h]
           imul eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, dword ptr [ebp-004h]
           add eax, ecx
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-028h]
           add edx, 000008000h
           sar edx, 010h
           mov eax, dword ptr [ebp-02Ch]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-030h]
           add ecx, 000000002h
           mov dword ptr [ebp-030h], ecx
           jmp near ptr l10012665
;
;* Jump:
; 10012677(C) 
;
l100129B0: mov esp, ebp
           pop ebp
           ret
l100125F5 ENDP
;
l100129B4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           shl ecx, 003h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000D8h]
           add eax, 000000002h
           push eax
           mov ecx, dword ptr [ebp+010h]
           sub ecx, 000000004h
           push ecx
           call l10012353
           add esp, 000000010h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B0h]
           shl eax, 009h
           mov ecx, 000010000h
           sub ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000B0h]
           shl eax, 006h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-024h], 000000000h
           jmp l10012A24
;
;* Jump:
; 10012BF8(U) 
;
l10012A1B: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10012A19(U) 
;
l10012A24: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [edx+00Ch]
           jnl l10012BFD
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h-004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp-030h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov dword ptr [ebp-010h], edx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-030h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp-030h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov dword ptr [ebp-020h], edx
           mov edx, dword ptr [ebp-010h]
           sub edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-010h]
           add eax, edx
           add eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-00Ch]
           imul edx, dword ptr [ebp-004h]
           add ecx, edx
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           add eax, 000008000h
           sar eax, 010h
           mov ecx, dword ptr [ebp-02Ch]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000002h
           mov dword ptr [ebp-034h], edx
           jmp l10012B1F
;
;* Jump:
; 10012BB4(U) 
;
l10012B16: mov eax, dword ptr [ebp-034h]
           sub eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 10012B14(U) 
;
l10012B1F: cmp dword ptr [ebp-034h], 000000000h
           jbe l10012BB9
           mov ecx, dword ptr [ebp-030h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov edx, dword ptr [ebp-030h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov dword ptr [ebp-020h], ecx
           mov ecx, dword ptr [ebp-010h]
           sub ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-038h]
           add edx, ecx
           add edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-028h]
           imul eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, dword ptr [ebp-004h]
           add eax, ecx
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-028h]
           add edx, 000008000h
           sar edx, 010h
           mov eax, dword ptr [ebp-02Ch]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-010h], eax
           jmp near ptr l10012B16
;
;* Jump:
; 10012B23(C) 
;
l10012BB9: mov ecx, dword ptr [ebp-030h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-010h]
           sub eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-038h]
           add ecx, eax
           add ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ebp-004h]
           add edx, eax
           mov dword ptr [ebp-028h], edx
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000008000h
           sar ecx, 010h
           mov edx, dword ptr [ebp-02Ch]
           mov byte ptr [edx], cl
           jmp near ptr l10012A1B
;
;* Jump:
; 10012A2D(C) 
;
l10012BFD: mov esp, ebp
           pop ebp
           ret
l100129B4 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 000000064h
           je l10012C44
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10012C1A(C) 
;
l10012C44: push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000982E
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+010h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10012FCC
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000CCh], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 000000067h
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+014h], 000000064h
           je l10012CD3
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10012CA9(C) 
;
l10012CD3: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ecx+01Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov dword ptr [ecx+020h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ecx+024h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+028h]
           mov dword ptr [ecx+028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l1000F895
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+028h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l1000FC1D
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C0h]
           mov dword ptr [edx+034h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [eax+00000010Ah]
           mov byte ptr [edx+0000000AFh], cl
           mov dword ptr [ebp-004h], 000000000h
           jmp l10012D55
;
;* Jump:
; 10012DB6(U) 
;
l10012D4C: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10012D4A(U) 
;
l10012D55: cmp dword ptr [ebp-004h], 000000004h
           jnl l10012DB8
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+eax*04h+000000090h], 000000000h
           je l10012DB6
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           lea ecx, [eax+edx*04h+044h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           cmp dword ptr [edx], 000000000h
           jne l10012D91
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call l1000F672
           add esp, 000000004h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 10012D7E(C) 
;
l10012D91: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+edx*04h+000000090h]
           mov ecx, dword ptr [ebp-010h]
           mov edi, dword ptr [ecx]
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov byte ptr [eax+000000080h], 000h
;
;* Jump:
; 10012D69(C) 
;
l10012DB6: jmp l10012D4C
;
;* Jump:
; 10012D59(C) 
;
l10012DB8: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ecx+038h], eax
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+038h], 000000001h
           jl l10012DD6
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+038h], 00000000Ah
           jle l10012E0A
;
;* Jump:
; 10012DCB(C) 
;
l10012DD6: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Ah
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+038h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+01Ch], 00000000Ah
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10012DD4(C) 
;
l10012E0A: mov dword ptr [ebp-01Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+040h]
           mov dword ptr [ebp-020h], edx
           jmp l10012E43
;
;* Jump:
; 10012F44(U) 
;
l10012E28: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000054h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, 000000054h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10012E26(U) 
;
l10012E43: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+038h]
           jnl l10012F49
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+008h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+010h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jl l10012EA5
           cmp dword ptr [ebp-004h], 000000004h
           jnl l10012EA5
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+ecx*04h+000000090h], 000000000h
           jne l10012ECA
;
;* Jump:
; 10012E8D(C), 10012E93(C) 
;
l10012EA5: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000034h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10012EA3(C) 
;
l10012ECA: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000090h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+04Ch]
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l10012F44
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10012EFB
;
;* Jump:
; 10012F42(U) 
;
l10012EF2: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10012EF0(U) 
;
l10012EFB: cmp dword ptr [ebp-00Ch], 000000040h
           jnl l10012F44
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-014h]
           xor esi, esi
           mov si, [eax+edx*02h]
           cmp ecx, esi
           je l10012F42
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000002Ch
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10012F1B(C) 
;
l10012F42: jmp l10012EF2
;
;* Jump:
; 10012EE7(C), 10012EFF(C) 
;
l10012F44: jmp near ptr l10012E28
;
;* Jump:
; 10012E4C(C) 
;
l10012F49: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000100h]
           test ecx, ecx
           je l10012FC6
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000101h]
           cmp eax, 000000001h
           jne l10012F8C
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+000000101h]
           mov byte ptr [ecx+0000000C1h], al
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+000000102h]
           mov byte ptr [ecx+0000000C2h], al
;
;* Jump:
; 10012F66(C) 
;
l10012F8C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+000000103h]
           mov byte ptr [ecx+0000000C3h], al
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov ax, word ptr [edx+000000104h]
           mov word ptr [ecx+0000000C4h], ax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov ax, word ptr [edx+000000106h]
           mov word ptr [ecx+0000000C6h], ax
;
;* Jump:
; 10012F56(C) 
;
l10012FC6: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 10012C79 
;
l10012FCC PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+024h], 000000001h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000E360
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000ADh]
           test eax, eax
           je l10013012
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
           jmp l1001303B
;
;* Jump:
; 10012FF4(C) 
;
l10013012: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000D0h]
           test ecx, ecx
           je l1001302F
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10010620
           add esp, 000000004h
           jmp l1001303B
;
;* Jump:
; 1001301F(C) 
;
l1001302F: mov eax, dword ptr [ebp+008h]
           push eax
           call l1000C580
           add esp, 000000004h
;
;* Jump:
; 10013010(U), 1001302D(U) 
;
l1001303B: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001307B
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000D6A0
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+018h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000148h]
           call [eax]
           add esp, 000000004h
           pop ebp
           ret
l10012FCC ENDP
;
;* Call:
; 10013043 
;
l1001307B PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push 000000044h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000144h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001311D
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l100131E1
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+018h], edx
           push 000000500h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+004h]
           add esp, 00000000Ch
           mov dword ptr [ebp-00Ch], eax
           push 000000500h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10026972
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           jmp l100130FC
;
;* Jump:
; 10013117(U) 
;
l100130F3: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 100130F1(U) 
;
l100130FC: cmp dword ptr [ebp-008h], 00000000Ah
           jnl l10013119
           mov edx, dword ptr [ebp-008h]
           shl edx, 007h
           mov eax, dword ptr [ebp-00Ch]
           add eax, edx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+01Ch], eax
           jmp l100130F3
;
;* Jump:
; 10013100(C) 
;
l10013119: mov esp, ebp
           pop ebp
           ret
l1001307B ENDP
;
l1001311D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+00Ch], 000000002h
           je l1001314D
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10013131(C) 
;
l1001314D: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10013167
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1001311D ENDP
;
;* Call:
; 1001315B, 1001347A 
;
l10013167 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000E0h], 000000001h
           jle l1001318F
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 000000001h
           jmp l100131C9
;
;* Jump:
; 10013181(C) 
;
l1001318F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000DCh]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+008h], edx
           jnb l100131B7
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000E4h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+014h], ecx
           jmp l100131C9
;
;* Jump:
; 100131A1(C) 
;
l100131B7: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000E4h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+048h]
           mov dword ptr [ecx+014h], edx
;
;* Jump:
; 1001318D(U), 100131B5(U) 
;
l100131C9: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10013167 ENDP
;
l100131E1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000144h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000F4h]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000DCh]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov dword ptr [ebp-030h], 000000000h
           jmp l10013223
;
;* Jump:
; 1001327F(U) 
;
l1001321A: mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
;
;* Jump:
; 10013218(U) 
;
l10013223: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-030h]
           cmp edx, dword ptr [ecx+0000000E0h]
           jnl l10013281
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-01Ch], edx
           push 000000000h
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+eax*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+020h]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp+ecx*04h-02Ch], eax
           jmp l1001321A
;
;* Jump:
; 1001322F(C) 
;
l10013281: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-068h], eax
           jmp l10013295
;
;* Jump:
; 10013462(U) 
;
l1001328C: mov ecx, dword ptr [ebp-068h]
           add ecx, 000000001h
           mov dword ptr [ebp-068h], ecx
;
;* Jump:
; 1001328A(U) 
;
l10013295: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-068h]
           cmp eax, dword ptr [edx+014h]
           jnl l10013467
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-010h], edx
           jmp l100132B8
;
;* Jump:
; 10013453(U) 
;
l100132AF: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 100132AD(U) 
;
l100132B8: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+0000000F4h]
           jnb l10013458
           mov dword ptr [ebp-064h], 000000000h
           mov dword ptr [ebp-030h], 000000000h
           jmp l100132E3
;
;* Jump:
; 10013418(U) 
;
l100132DA: mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
;
;* Jump:
; 100132D8(U) 
;
l100132E3: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-030h]
           cmp edx, dword ptr [ecx+0000000E0h]
           jnl l1001341D
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000E4h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-010h]
           imul ecx, dword ptr [eax+034h]
           mov dword ptr [ebp-05Ch], ecx
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-00Ch]
           jnb l10013325
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+034h]
           mov dword ptr [ebp-070h], ecx
           jmp l1001332E
;
;* Jump:
; 10013318(C) 
;
l10013325: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+044h]
           mov dword ptr [ebp-070h], eax
;
;* Jump:
; 10013323(U) 
;
l1001332E: mov ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-060h], 000000000h
           jmp l10013346
;
;* Jump:
; 10013413(U) 
;
l1001333D: mov edx, dword ptr [ebp-060h]
           add edx, 000000001h
           mov dword ptr [ebp-060h], edx
;
;* Jump:
; 1001333B(U) 
;
l10013346: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-060h]
           cmp ecx, dword ptr [eax+038h]
           jnl l10013418
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           cmp eax, dword ptr [ebp-004h]
           jb l1001336E
           mov ecx, dword ptr [ebp-060h]
           add ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [edx+048h]
           jnl l100133C6
;
;* Jump:
; 1001335E(C) 
;
l1001336E: mov eax, dword ptr [ebp-060h]
           add eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+ecx*04h-02Ch]
           mov ecx, dword ptr [ebp-05Ch]
           shl ecx, 007h
           mov edx, dword ptr [edx+eax*04h]
           add edx, ecx
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-06Ch], 000000000h
           jmp l1001339B
;
;* Jump:
; 100133C2(U) 
;
l10013392: mov eax, dword ptr [ebp-06Ch]
           add eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
;
;* Jump:
; 10013390(U) 
;
l1001339B: mov ecx, dword ptr [ebp-06Ch]
           cmp ecx, dword ptr [ebp-018h]
           jnl l100133C4
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp+edx*04h-058h], eax
           mov ecx, dword ptr [ebp-064h]
           add ecx, 000000001h
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000080h
           mov dword ptr [ebp-014h], edx
           jmp l10013392
;
;* Jump:
; 100133A1(C) 
;
l100133C4: jmp l100133CD
;
;* Jump:
; 1001336C(C) 
;
l100133C6: mov dword ptr [ebp-06Ch], 000000000h
;
;* Jump:
; 100133C4(U) 
;
l100133CD: jmp l100133D8
;
;* Jump:
; 10013411(U) 
;
l100133CF: mov eax, dword ptr [ebp-06Ch]
           add eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
;
;* Jump:
; 100133CD(U) 
;
l100133D8: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-06Ch]
           cmp edx, dword ptr [ecx+034h]
           jnl l10013413
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+ecx*04h+01Ch]
           mov dword ptr [ebp+eax*04h-058h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp+edx*04h-05Ch]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp+ecx*04h-058h]
           mov ax, word ptr [eax]
           mov word ptr [edx], ax
           mov ecx, dword ptr [ebp-064h]
           add ecx, 000000001h
           mov dword ptr [ebp-064h], ecx
           jmp l100133CF
;
;* Jump:
; 100133E1(C) 
;
l10013413: jmp near ptr l1001333D
;
;* Jump:
; 1001334F(C) 
;
l10013418: jmp near ptr l100132DA
;
;* Jump:
; 100132EF(C) 
;
l1001341D: lea edx, [ebp-058h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000158h]
           call [edx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l10013453
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-068h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+00Ch], eax
           xor al, al
           jmp l10013484
;
;* Jump:
; 1001343B(C) 
;
l10013453: jmp near ptr l100132AF
;
;* Jump:
; 100132C4(C) 
;
l10013458: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000000h
           jmp near ptr l1001328C
;
;* Jump:
; 1001329E(C) 
;
l10013467: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10013167
           add esp, 000000004h
           mov al, 001h
;
;* Jump:
; 10013451(U) 
;
l10013484: mov esp, ebp
           pop ebp
           ret
l100131E1 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10029542 
;
l10013490 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push edi
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], 000000000h
           cmp dword ptr [ebp+00Ch], 00000003Eh
           je l100134D8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 00000003Eh
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 100134A5(C) 
;
l100134D8: cmp dword ptr [ebp+010h], 0000001ACh
           je l10013512
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000015h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 0000001ACh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+01Ch], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100134DF(C) 
;
l10013512: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, 00000006Bh
           xor eax, eax
           mov edi, dword ptr [ebp+008h]
           rep stosd
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+010h], 001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100225E0
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           jmp l10013579
;
;* Jump:
; 10013590(U) 
;
l10013570: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001356E(U) 
;
l10013579: cmp dword ptr [ebp-004h], 000000004h
           jnl l10013592
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+000000090h], 000000000h
           jmp l10013570
;
;* Jump:
; 1001357D(C) 
;
l10013592: mov dword ptr [ebp-004h], 000000000h
           jmp l100135A4
;
;* Jump:
; 100135CC(U) 
;
l1001359B: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10013599(U) 
;
l100135A4: cmp dword ptr [ebp-004h], 000000004h
           jnl l100135CE
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+0000000A0h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+eax*04h+0000000B0h], 000000000h
           jmp l1001359B
;
;* Jump:
; 100135A8(C) 
;
l100135CE: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000010Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10018E36
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10017860
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000C8h
           pop edi
           mov esp, ebp
           pop ebp
           ret
l10013490 ENDP
;
;* Call:
; 100296DD 
;
l10013602 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F640
           add esp, 000000004h
           pop ebp
           ret
l10013602 ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F5D0
           add esp, 000000004h
           pop ebp
           ret
;
;* Call:
; 100295B0 
;
l10013624 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000C8h
           je l1001366A
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000C9h
           je l1001366A
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10013634(C), 10013640(C) 
;
l1001366A: mov edx, dword ptr [ebp+008h]
           push edx
           call l100136D7
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000001h
           je l1001368D
           cmp dword ptr [ebp-008h], 000000002h
           je l10013696
           jmp l100136D0
;
;* Jump:
; 10013683(C) 
;
l1001368D: mov dword ptr [ebp-004h], 000000001h
           jmp l100136D0
;
;* Jump:
; 10013689(C) 
;
l10013696: mov ecx, dword ptr [ebp+00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l100136BD
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000033h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100136A1(C) 
;
l100136BD: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F5D0
           add esp, 000000004h
           mov dword ptr [ebp-004h], 000000002h
;
;* Jump:
; 1001368B(U), 10013694(U) 
;
l100136D0: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10013624 ENDP
;
;* Call:
; 1001366E 
;
l100136D7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, 0000000C8h
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 00000000Ah
           ja l10013795
           mov ecx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [ecx+offset g100137D8]
           jmp [offset g100137C4+eax*04h]
l10013715: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           call [ecx+004h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000C9h
l10013742: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           call [edx]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000001h
           jne l10013773
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100137E3
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], 0000000CAh
;
;* Jump:
; 1001375B(C) 
;
l10013773: jmp l100137BD
l10013775: mov dword ptr [ebp-004h], 000000001h
           jmp l100137BD
l1001377E: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           call [ecx]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           jmp l100137BD
;
;* Jump:
; 100136FD(C) 
;
l10013795: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10013773(U), 1001377C(U), 10013793(U) 
;
l100137BD: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
;
g100137C4  dd l10013715
           dd l10013742
           dd l10013775
           dd l1001377E
           dd l10013795
g100137D8  dd 003020100h
           dd 003030303h
           db 003h
           db 004h
           db 003h
l100136D7 ENDP
;
;* Call:
; 10013761 
;
l100137E3 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000001h
           je l1001380D
           cmp dword ptr [ebp-014h], 000000003h
           je l10013826
           cmp dword ptr [ebp-014h], 000000004h
           je l10013990
           jmp near ptr l10013A23
;
;* Jump:
; 100137F6(C) 
;
l1001380D: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+028h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+02Ch], 000000001h
           jmp near ptr l10013A37
;
;* Jump:
; 100137FC(C) 
;
l10013826: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000100h]
           test edx, edx
           je l10013844
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000003h
           jmp near ptr l10013981
;
;* Jump:
; 10013833(C) 
;
l10013844: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000108h]
           test edx, edx
           je l100138C4
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [eax+000000109h]
           mov byte ptr [ebp-018h], cl
           cmp byte ptr [ebp-018h], 000h
           je l1001386D
           cmp byte ptr [ebp-018h], 001h
           je l10013879
           jmp l10013885
;
;* Jump:
; 10013863(C) 
;
l1001386D: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+028h], 000000002h
           jmp l100138BF
;
;* Jump:
; 10013869(C) 
;
l10013879: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000003h
           jmp l100138BF
;
;* Jump:
; 1001386B(U) 
;
l10013885: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000072h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000109h]
           mov dword ptr [ecx+018h], eax
           push 0FFFFFFFFh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+028h], 000000003h
;
;* Jump:
; 10013877(U), 10013883(U) 
;
l100138BF: jmp near ptr l10013981
;
;* Jump:
; 10013851(C) 
;
l100138C4: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov ecx, dword ptr [eax+054h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov ecx, dword ptr [eax+0000000A8h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-004h], 000000001h
           jne l10013911
           cmp dword ptr [ebp-008h], 000000002h
           jne l10013911
           cmp dword ptr [ebp-00Ch], 000000003h
           jne l10013911
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+028h], 000000003h
           jmp l10013981
;
;* Jump:
; 100138F7(C), 100138FD(C), 10013903(C) 
;
l10013911: cmp dword ptr [ebp-004h], 000000052h
           jne l1001392F
           cmp dword ptr [ebp-008h], 000000047h
           jne l1001392F
           cmp dword ptr [ebp-00Ch], 000000042h
           jne l1001392F
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000002h
           jmp l10013981
;
;* Jump:
; 10013915(C), 1001391B(C), 10013921(C), 10013975(C) 
;
l1001392F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           add edx, 000000018h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000006Fh
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           xor edx, edx
           test edx, edx
           jne l1001392F
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000003h
;
;* Jump:
; 1001383F(U), 100138BF(U), 1001390F(U), 1001392D(U) 
;
l10013981: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+02Ch], 000000002h
           jmp near ptr l10013A37
;
;* Jump:
; 10013802(C) 
;
l10013990: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000108h]
           test eax, eax
           je l10013A0D
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ecx+000000109h]
           mov byte ptr [ebp-01Ch], dl
           cmp byte ptr [ebp-01Ch], 000h
           je l100139B9
           cmp byte ptr [ebp-01Ch], 002h
           je l100139C5
           jmp l100139D1
;
;* Jump:
; 100139AF(C) 
;
l100139B9: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000004h
           jmp l10013A0B
;
;* Jump:
; 100139B5(C) 
;
l100139C5: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+028h], 000000005h
           jmp l10013A0B
;
;* Jump:
; 100139B7(U) 
;
l100139D1: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000072h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000109h]
           mov dword ptr [edx+018h], ecx
           push 0FFFFFFFFh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+028h], 000000005h
;
;* Jump:
; 100139C3(U), 100139CF(U) 
;
l10013A0B: jmp l10013A17
;
;* Jump:
; 1001399D(C) 
;
l10013A0D: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000004h
;
;* Jump:
; 10013A0B(U) 
;
l10013A17: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+02Ch], 000000004h
           jmp l10013A37
;
;* Jump:
; 10013808(U) 
;
l10013A23: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+028h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+02Ch], 000000000h
;
;* Jump:
; 10013821(U), 1001398B(U), 10013A21(U) 
;
l10013A37: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+030h], 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+034h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+038h], 000000000h
           mov dword ptr [eax+03Ch], 03FF00000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+040h], 000h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+041h], 000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+048h], 001h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+049h], 001h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+04Ah], 000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+04Ch], 000000002h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+050h], 001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+054h], 000000100h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+074h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+058h], 000h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+059h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+05Ah], 000h
           mov esp, ebp
           pop ebp
           ret
l100137E3 ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000C8h
           jl l10013AE2
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000D2h
           jle l10013B0A
;
;* Jump:
; 10013AD4(C) 
;
l10013AE2: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10013AE0(C) 
;
l10013B0A: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           mov al, byte ptr [eax+011h]
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CAh
           jl l10013B33
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000D2h
           jle l10013B5B
;
;* Jump:
; 10013B25(C) 
;
l10013B33: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10013B31(C) 
;
l10013B5B: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           mov al, byte ptr [eax+010h]
           pop ebp
           ret
;
;* Call:
; 100296CE 
;
l10013B69 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CDh
           je l10013B84
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000CEh
           jne l10013BD7
;
;* Jump:
; 10013B76(C) 
;
l10013B84: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+040h]
           test eax, eax
           jne l10013BD7
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+078h]
           cmp eax, dword ptr [edx+060h]
           jnb l10013BB8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000043h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10013B9C(C) 
;
l10013BB8: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000180h]
           call [edx+004h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+014h], 0000000D2h
           jmp l10013C23
;
;* Jump:
; 10013B82(C), 10013B8E(C) 
;
l10013BD7: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000CFh
           jne l10013BEF
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000D2h
           jmp l10013C23
;
;* Jump:
; 10013BE1(C) 
;
l10013BEF: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000D2h
           je l10013C23
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10013BD5(U), 10013BED(U), 10013BF9(C), 10013C4F(U) 
;
l10013C23: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           test eax, eax
           jne l10013C51
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           call [eax]
           add esp, 000000004h
           test eax, eax
           jne l10013C4F
           xor al, al
           jmp l10013C6F
;
;* Jump:
; 10013C49(C) 
;
l10013C4F: jmp l10013C23
;
;* Jump:
; 10013C33(C) 
;
l10013C51: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           call [eax+018h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F5D0
           add esp, 000000004h
           mov al, 001h
;
;* Jump:
; 10013C4D(U) 
;
l10013C6F: pop ebp
           ret
l10013B69 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10029673 
;
l10013C80 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CAh
           jne l10013CC3
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001C23B
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+040h]
           test eax, eax
           je l10013CB9
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], 0000000CFh
           mov al, 001h
           jmp near ptr l10013DDA
;
;* Jump:
; 10013CA6(C) 
;
l10013CB9: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000CBh
;
;* Jump:
; 10013C8E(C) 
;
l10013CC3: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CBh
           jne l10013D9A
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           xor eax, eax
           mov al, byte ptr [edx+010h]
           test eax, eax
           je l10013D89
;
;* Jump:
; 10013D84(U) 
;
l10013CE9: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10013D01
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10013CF0(C) 
;
l10013D01: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           call [ecx]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l10013D23
           xor al, al
           jmp near ptr l10013DDA
;
;* Jump:
; 10013D1A(C) 
;
l10013D23: cmp dword ptr [ebp-004h], 000000002h
           jne l10013D2B
           jmp l10013D89
;
;* Jump:
; 10013D27(C) 
;
l10013D2B: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+008h], 000000000h
           je l10013D84
           cmp dword ptr [ebp-004h], 000000003h
           je l10013D40
           cmp dword ptr [ebp-004h], 000000001h
           jne l10013D84
;
;* Jump:
; 10013D38(C) 
;
l10013D40: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+004h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+004h], edx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [eax+004h]
           cmp eax, dword ptr [edx+008h]
           jl l10013D84
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           add eax, dword ptr [ecx+00000011Ch]
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10013D32(C), 10013D3E(C), 10013D67(C) 
;
l10013D84: jmp near ptr l10013CE9
;
;* Jump:
; 10013CE3(C), 10013D29(U) 
;
l10013D89: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+07Ch]
           mov dword ptr [edx+000000084h], ecx
           jmp l10013DCE
;
;* Jump:
; 10013CCD(C) 
;
l10013D9A: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 0000000CCh
           je l10013DCE
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000014h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10013D98(U), 10013DA4(C) 
;
l10013DCE: mov eax, dword ptr [ebp+008h]
           push eax
           call l10013DDE
           add esp, 000000004h
;
;* Jump:
; 10013CB4(U), 10013D1E(U) 
;
l10013DDA: mov esp, ebp
           pop ebp
           ret
l10013C80 ENDP
;
;* Call:
; 10013DD2, 10014166 
;
l10013DDE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CCh
           je l10013E14
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000180h]
           call [eax]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+078h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000CCh
;
;* Jump:
; 10013DEC(C), 10013ED5(U) 
;
l10013E14: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           test edx, edx
           je l10013EDA
;
;* Jump:
; 10013EA4(U) 
;
l10013E2A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+078h]
           cmp edx, dword ptr [ecx+060h]
           jnb l10013EA6
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10013E6E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10013E3F(C) 
;
l10013E6E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [ebp-004h], ecx
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           add edx, 000000078h
           push edx
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000184h]
           call [edx+004h]
           add esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           cmp ecx, dword ptr [ebp-004h]
           jne l10013EA4
           xor al, al
           jmp l10013EF6
;
;* Jump:
; 10013E9E(C) 
;
l10013EA4: jmp l10013E2A
;
;* Jump:
; 10013E36(C) 
;
l10013EA6: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           call [ecx+004h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+078h], 000000000h
           jmp near ptr l10013E14
;
;* Jump:
; 10013E24(C) 
;
l10013EDA: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+041h]
           neg ecx
           sbb ecx, ecx
           neg ecx
           add ecx, 0000000CDh
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], ecx
           mov al, 001h
;
;* Jump:
; 10013EA2(U) 
;
l10013EF6: mov esp, ebp
           pop ebp
           ret
l10013DDE ENDP
;
;* Call:
; 100296BD 
;
l10013EFA PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CDh
           je l10013F32
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10013F08(C) 
;
l10013F32: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+078h]
           cmp eax, dword ptr [edx+060h]
           jb l10013F61
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000007Bh
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           jmp l10013FCF
;
;* Jump:
; 10013F3E(C) 
;
l10013F61: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10013F97
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10013F68(C) 
;
l10013F97: mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+010h]
           push eax
           lea ecx, [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000184h]
           call [edx+004h]
           add esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+078h], ecx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10013F5F(U) 
;
l10013FCF: mov esp, ebp
           pop ebp
           ret
l10013EFA ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CEh
           je l1001400B
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10013FE1(C) 
;
l1001400B: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+078h]
           cmp eax, dword ptr [edx+060h]
           jb l1001403D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000007Bh
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l100140DC
;
;* Jump:
; 10014017(C) 
;
l1001403D: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10014073
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10014044(C) 
;
l10014073: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+000000114h]
           imul edx, dword ptr [ecx+000000118h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+010h]
           cmp eax, dword ptr [ebp-004h]
           jnb l100140AB
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000017h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001408F(C) 
;
l100140AB: mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000188h]
           call [eax+00Ch]
           add esp, 000000008h
           test eax, eax
           jne l100140CA
           xor eax, eax
           jmp l100140DC
;
;* Jump:
; 100140C4(C) 
;
l100140CA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+078h]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+078h], edx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10014038(U), 100140C8(U) 
;
l100140DC: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CFh
           je l10014123
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000CCh
           je l10014123
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000014h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 100140ED(C), 100140F9(C) 
;
l10014123: cmp dword ptr [ebp+00Ch], 000000000h
           jg l10014130
           mov dword ptr [ebp+00Ch], 000000001h
;
;* Jump:
; 10014127(C) 
;
l10014130: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           xor ecx, ecx
           mov cl, byte ptr [eax+011h]
           test ecx, ecx
           je l10014156
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           cmp eax, dword ptr [edx+07Ch]
           jle l10014156
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+07Ch]
           mov dword ptr [ebp+00Ch], edx
;
;* Jump:
; 10014140(C), 1001414B(C) 
;
l10014156: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+000000084h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10013DDE
           add esp, 000000004h
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CDh
           je l1001418B
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000CEh
           jne l100141B6
;
;* Jump:
; 1001417D(C) 
;
l1001418B: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+040h]
           test eax, eax
           je l100141B6
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000180h]
           call [eax+004h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], 0000000D0h
           jmp l100141EA
;
;* Jump:
; 10014189(C), 10014195(C) 
;
l100141B6: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 0000000D0h
           je l100141EA
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000014h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100141B4(U), 100141C0(C), 10014227(U) 
;
l100141EA: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+07Ch]
           cmp edx, dword ptr [ecx+000000084h]
           jg l10014229
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           xor edx, edx
           mov dl, byte ptr [ecx+011h]
           test edx, edx
           jne l10014229
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           call [edx]
           add esp, 000000004h
           test eax, eax
           jne l10014227
           xor al, al
           jmp l10014235
;
;* Jump:
; 10014221(C) 
;
l10014227: jmp l100141EA
;
;* Jump:
; 100141F9(C), 1001420B(C) 
;
l10014229: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+014h], 0000000CFh
           mov al, 001h
;
;* Jump:
; 10014225(U) 
;
l10014235: pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002978F 
;
l10014240 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+018h], 000000000h
           jne l10014266
           push 00000001Ch
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], eax
;
;* Jump:
; 1001424B(C) 
;
l10014266: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l1001429A
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], offset l100142DC
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], offset l10014343
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+014h], edx
           mov esp, ebp
           pop ebp
           ret
l10014240 ENDP
;
l1001429A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           push 000001000h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000001000h
           mov esp, ebp
           pop ebp
           ret
l1001429A ENDP
;
l100142DC PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           push eax
           push 000001000h
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           push edx
           call [__imp_fwrite]; [BICRT.fwrite].
           add esp, 000000010h
           cmp eax, 000001000h
           je l10014328
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000025h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001430C(C) 
;
l10014328: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000001000h
           mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l100142DC ENDP
;
l10014343 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, 000001000h
           sub eax, dword ptr [edx+004h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jbe l100143A2
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           push edx
           call [__imp_fwrite]; [BICRT.fwrite].
           add esp, 000000010h
           cmp eax, dword ptr [ebp-008h]
           je l100143A2
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000025h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10014364(C), 10014386(C) 
;
l100143A2: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           push eax
           call [__imp_fflush]; [BICRT.fflush].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [edx+00Ch]
           and eax, 000000020h
           test eax, eax
           je l100143DC
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000025h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100143C0(C) 
;
l100143DC: mov esp, ebp
           pop ebp
           ret
l10014343 ENDP
;
;* Call:
; 1002959F 
;
l100143E0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+018h], 000000000h
           jne l1001442B
           push 000000028h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           push 000001000h
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], eax
;
;* Jump:
; 100143EB(C) 
;
l1001442B: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l10014486
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], offset l1001449E
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], offset l10014552
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], offset l10018AA0
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], offset l100145AA
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov esp, ebp
           pop ebp
           ret
l100143E0 ENDP
;
l10014486 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+024h], 001h
           mov esp, ebp
           pop ebp
           ret
l10014486 ENDP
;
;* Call:
; 10014580 
;
l1001449E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           push 000001000h
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+020h]
           push edx
           call [__imp_fread]; [BICRT.fread].
           add esp, 000000010h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           ja l10014531
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+024h]
           test ecx, ecx
           je l100144FA
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000002Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100144DE(C) 
;
l100144FA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000078h
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+020h]
           mov byte ptr [ecx], 0FFh
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+020h]
           mov byte ptr [eax+001h], 0D9h
           mov dword ptr [ebp-004h], 000000002h
;
;* Jump:
; 100144D2(C) 
;
l10014531: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+020h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax+024h], 000h
           mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l1001449E ENDP
;
l10014552 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jle l100145A6
;
;* Jump:
; 10014588(U) 
;
l10014565: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           cmp eax, dword ptr [edx+004h]
           jle l1001458A
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           sub edx, dword ptr [ecx+004h]
           mov dword ptr [ebp+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001449E
           add esp, 000000004h
           jmp l10014565
;
;* Jump:
; 1001456E(C) 
;
l1001458A: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           add edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           sub edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
;
;* Jump:
; 10014563(C) 
;
l100145A6: mov esp, ebp
           pop ebp
           ret
l10014552 ENDP
;
l100145AA PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l100145AA ENDP
;
           int 03h
;
;* Call:
; 1001C51F, 1001F615 
;
l100145B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push 000000074h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000188h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001473B
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], offset l100147D6
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+070h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l100146D0
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1001462D
;
;* Jump:
; 100146A9(U) 
;
l1001461B: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000054h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10014619(U) 
;
l1001462D: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+024h]
           jnl l100146AE
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000C8h]
           test eax, eax
           je l10014659
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000000003h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001464E(C) 
;
l10014659: mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+020h]
           push eax
           call l100268B3
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           call l100268B3
           add esp, 000000008h
           push eax
           push 000000001h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+014h]
           add esp, 000000018h
           mov edx, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h+048h], eax
           jmp near ptr l1001461B
;
;* Jump:
; 10014636(C) 
;
l100146AE: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10014AF4
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], offset l10014D2D
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000048h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], ecx
           jmp l10014737
;
;* Jump:
; 10014600(C) 
;
l100146D0: push 000000500h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+004h]
           add esp, 00000000Ch
           mov dword ptr [ebp-018h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l100146FC
;
;* Jump:
; 10014717(U) 
;
l100146F3: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100146F1(U) 
;
l100146FC: cmp dword ptr [ebp-014h], 00000000Ah
           jnl l10014719
           mov ecx, dword ptr [ebp-014h]
           shl ecx, 007h
           mov edx, dword ptr [ebp-018h]
           add edx, ecx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+eax*04h+020h], edx
           jmp l100146F3
;
;* Jump:
; 10014700(C) 
;
l10014719: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10014AED
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], offset l10014837
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 100146CE(U) 
;
l10014737: mov esp, ebp
           pop ebp
           ret
l100145B0 ENDP
;
l1001473B PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000080h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10014759
           add esp, 000000004h
           pop ebp
           ret
l1001473B ENDP
;
;* Call:
; 1001474F, 10014AC2, 10014D02 
;
l10014759 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000124h], 000000001h
           jle l10014781
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], 000000001h
           jmp l100147BE
;
;* Jump:
; 10014773(C) 
;
l10014781: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000011Ch]
           sub edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000080h], edx
           jnb l100147AC
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000128h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+01Ch], ecx
           jmp l100147BE
;
;* Jump:
; 10014796(C) 
;
l100147AC: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000128h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+048h]
           mov dword ptr [ecx+01Ch], edx
;
;* Jump:
; 1001477F(U), 100147AA(U) 
;
l100147BE: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10014759 ENDP
;
l100147D6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+010h], 000000000h
           je l10014826
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+049h]
           test ecx, ecx
           je l1001481C
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10014F46
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           je l1001481C
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], offset l100150C1
           jmp l10014826
;
;* Jump:
; 100147F9(C), 1001480E(C) 
;
l1001481C: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], offset l10014D2D
;
;* Jump:
; 100147ED(C), 1001481A(U) 
;
l10014826: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000088h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l100147D6 ENDP
;
l10014837 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000138h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000011Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-038h], ecx
           jmp l1001487B
;
;* Jump:
; 10014A7B(U) 
;
l10014872: mov edx, dword ptr [ebp-038h]
           add edx, 000000001h
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 10014870(U) 
;
l1001487B: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-038h]
           cmp ecx, dword ptr [eax+01Ch]
           jnl l10014A80
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-018h], eax
           jmp l1001489E
;
;* Jump:
; 10014A6C(U) 
;
l10014895: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10014893(U) 
;
l1001489E: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-014h]
           ja l10014A71
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           shl ecx, 007h
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+020h]
           push eax
           call l10026972
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000020h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           call [ecx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l10014902
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ecx+014h], edx
           xor eax, eax
           jmp near ptr l10014AE9
;
;* Jump:
; 100148E7(C) 
;
l10014902: mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           jmp l1001491B
;
;* Jump:
; 10014955(U), 10014A67(U) 
;
l10014912: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10014910(U) 
;
l1001491B: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ecx+000000124h]
           jnl l10014A6C
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000128h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           xor ecx, ecx
           mov cl, byte ptr [eax+030h]
           test ecx, ecx
           jne l10014957
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [edx+03Ch]
           mov dword ptr [ebp-034h], eax
           jmp l10014912
;
;* Jump:
; 10014947(C) 
;
l10014957: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000019Ch]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-014h]
           jnb l10014980
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+034h]
           mov dword ptr [ebp-040h], edx
           jmp l10014989
;
;* Jump:
; 10014973(C) 
;
l10014980: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+044h]
           mov dword ptr [ebp-040h], ecx
;
;* Jump:
; 1001497E(U) 
;
l10014989: mov edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-038h]
           imul eax, dword ptr [edx+024h]
           mov edx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+ecx*04h]
           lea edx, [ecx+eax*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-018h]
           imul ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-02Ch], ecx
           mov dword ptr [ebp-030h], 000000000h
           jmp l100149CA
;
;* Jump:
; 10014A62(U) 
;
l100149C1: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 100149BF(U) 
;
l100149CA: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-030h]
           cmp ecx, dword ptr [eax+038h]
           jnl l10014A67
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000080h]
           cmp eax, dword ptr [ebp-004h]
           jb l100149F5
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [edx+048h]
           jnl l10014A47
;
;* Jump:
; 100149E5(C) 
;
l100149F5: mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-010h], eax
           mov dword ptr [ebp-03Ch], 000000000h
           jmp l10014A0D
;
;* Jump:
; 10014A45(U) 
;
l10014A04: mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-03Ch], ecx
;
;* Jump:
; 10014A02(U) 
;
l10014A0D: mov edx, dword ptr [ebp-03Ch]
           cmp edx, dword ptr [ebp-020h]
           jnl l10014A47
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+020h]
           push ecx
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [ebp-008h]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-010h]
           add edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-010h], edx
           jmp l10014A04
;
;* Jump:
; 100149F3(C), 10014A13(C) 
;
l10014A47: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [eax+034h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp-01Ch]
           lea edx, [ecx+eax*04h]
           mov dword ptr [ebp-01Ch], edx
           jmp near ptr l100149C1
;
;* Jump:
; 100149D3(C) 
;
l10014A67: jmp near ptr l10014912
;
;* Jump:
; 10014927(C) 
;
l10014A6C: jmp near ptr l10014895
;
;* Jump:
; 100148A4(C) 
;
l10014A71: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+014h], 000000000h
           jmp near ptr l10014872
;
;* Jump:
; 10014884(C) 
;
l10014A80: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000088h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000088h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000080h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000080h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+000000080h]
           cmp eax, dword ptr [edx+00000011Ch]
           jnb l10014AD1
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10014759
           add esp, 000000004h
           mov eax, 000000003h
           jmp l10014AE9
;
;* Jump:
; 10014ABC(C) 
;
l10014AD1: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           call [ecx+00Ch]
           add esp, 000000004h
           mov eax, 000000004h
;
;* Jump:
; 100148FD(U), 10014ACF(U) 
;
l10014AE9: mov esp, ebp
           pop ebp
           ret
l10014837 ENDP
;
l10014AED PROC
           push ebp
           mov ebp, esp
           xor eax, eax
           pop ebp
           ret
l10014AED ENDP
;
l10014AF4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-024h], 000000000h
           jmp l10014B18
;
;* Jump:
; 10014B75(U) 
;
l10014B0F: mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 10014B0D(U) 
;
l10014B18: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [eax+000000124h]
           jnl l10014B77
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000128h]
           mov dword ptr [ebp-010h], ecx
           push 000000001h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+000000080h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h+048h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+020h]
           add esp, 000000014h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp+edx*04h-020h], eax
           jmp l10014B0F
;
;* Jump:
; 10014B24(C) 
;
l10014B77: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-034h], ecx
           jmp l10014B8B
;
;* Jump:
; 10014CD0(U) 
;
l10014B82: mov edx, dword ptr [ebp-034h]
           add edx, 000000001h
           mov dword ptr [ebp-034h], edx
;
;* Jump:
; 10014B80(U) 
;
l10014B8B: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-034h]
           cmp ecx, dword ptr [eax+01Ch]
           jnl l10014CD5
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-008h], eax
           jmp l10014BAE
;
;* Jump:
; 10014CC1(U) 
;
l10014BA5: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10014BA3(U) 
;
l10014BAE: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+000000138h]
           jnb l10014CC6
           mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l10014BD9
;
;* Jump:
; 10014C83(U) 
;
l10014BD0: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10014BCE(U) 
;
l10014BD9: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [edx+000000124h]
           jnl l10014C88
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+000000128h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           imul edx, dword ptr [ecx+034h]
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10014C1A
;
;* Jump:
; 10014C81(U) 
;
l10014C11: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10014C0F(U) 
;
l10014C1A: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+038h]
           jnl l10014C83
           mov eax, dword ptr [ebp-02Ch]
           add eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+ecx*04h-020h]
           mov ecx, dword ptr [ebp-028h]
           shl ecx, 007h
           mov edx, dword ptr [edx+eax*04h]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-038h], 000000000h
           jmp l10014C52
;
;* Jump:
; 10014C7F(U) 
;
l10014C49: mov eax, dword ptr [ebp-038h]
           add eax, 000000001h
           mov dword ptr [ebp-038h], eax
;
;* Jump:
; 10014C47(U) 
;
l10014C52: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-038h]
           cmp edx, dword ptr [ecx+034h]
           jnl l10014C81
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+eax*04h+020h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000001h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000080h
           mov dword ptr [ebp-00Ch], ecx
           jmp l10014C49
;
;* Jump:
; 10014C5B(C) 
;
l10014C81: jmp l10014C11
;
;* Jump:
; 10014C23(C) 
;
l10014C83: jmp near ptr l10014BD0
;
;* Jump:
; 10014BE5(C) 
;
l10014C88: mov edx, dword ptr [ebp-004h]
           add edx, 000000020h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000198h]
           call [edx+004h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l10014CC1
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], eax
           xor eax, eax
           jmp l10014D29
;
;* Jump:
; 10014CA9(C) 
;
l10014CC1: jmp near ptr l10014BA5
;
;* Jump:
; 10014BBA(C) 
;
l10014CC6: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000000h
           jmp near ptr l10014B82
;
;* Jump:
; 10014B94(C) 
;
l10014CD5: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000080h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000080h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+000000080h]
           cmp ecx, dword ptr [eax+00000011Ch]
           jnb l10014D11
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10014759
           add esp, 000000004h
           mov eax, 000000003h
           jmp l10014D29
;
;* Jump:
; 10014CFC(C) 
;
l10014D11: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           call [edx+00Ch]
           add esp, 000000004h
           mov eax, 000000004h
;
;* Jump:
; 10014CBF(U), 10014D0F(U) 
;
l10014D29: mov esp, ebp
           pop ebp
           ret
l10014AF4 ENDP
;
l10014D2D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000011Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10014DA1(U) 
;
l10014D4E: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+07Ch]
           cmp eax, dword ptr [edx+000000084h]
           jl l10014D84
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+07Ch]
           cmp eax, dword ptr [edx+000000084h]
           jne l10014DA3
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+000000080h]
           cmp eax, dword ptr [edx+000000088h]
           ja l10014DA3
;
;* Jump:
; 10014D5D(C) 
;
l10014D84: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           call [eax]
           add esp, 000000004h
           test eax, eax
           jne l10014DA1
           xor eax, eax
           jmp near ptr l10014F42
;
;* Jump:
; 10014D98(C) 
;
l10014DA1: jmp l10014D4E
;
;* Jump:
; 10014D6E(C), 10014D82(C) 
;
l10014DA3: mov dword ptr [ebp-02Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-020h], edx
           jmp l10014DCA
;
;* Jump:
; 10014DE5(U), 10014F08(U) 
;
l10014DB8: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000054h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10014DB6(U) 
;
l10014DCA: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [edx+024h]
           jnl l10014F0D
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+030h]
           test edx, edx
           jne l10014DE7
           jmp l10014DB8
;
;* Jump:
; 10014DE3(C) 
;
l10014DE7: push 000000000h
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [edx+000000088h]
           imul ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+048h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+020h]
           add esp, 000000014h
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000088h]
           cmp eax, dword ptr [ebp-004h]
           jnb l10014E38
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-028h], edx
           jmp l10014E58
;
;* Jump:
; 10014E2B(C) 
;
l10014E38: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov eax, dword ptr [eax+020h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov dword ptr [ebp-028h], edx
           cmp dword ptr [ebp-028h], 000000000h
           jne l10014E58
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10014E36(U), 10014E4D(C) 
;
l10014E58: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000019Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [edx+eax*04h+004h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-030h], 000000000h
           jmp l10014E89
;
;* Jump:
; 10014F03(U) 
;
l10014E80: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 10014E7E(U) 
;
l10014E89: mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [ebp-028h]
           jnl l10014F08
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-01Ch], eax
           mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           jmp l10014EB6
;
;* Jump:
; 10014EF2(U) 
;
l10014EAD: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10014EAB(U) 
;
l10014EB6: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+01Ch]
           jnb l10014EF4
           mov ecx, dword ptr [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call [ebp-008h]
           add esp, 000000014h
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000080h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-014h], edx
           jmp l10014EAD
;
;* Jump:
; 10014EBF(C) 
;
l10014EF4: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+024h]
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx*04h]
           mov dword ptr [ebp-018h], eax
           jmp near ptr l10014E80
;
;* Jump:
; 10014E8F(C) 
;
l10014F08: jmp near ptr l10014DB8
;
;* Jump:
; 10014DD3(C) 
;
l10014F0D: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000088h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000088h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+000000088h]
           cmp eax, dword ptr [edx+00000011Ch]
           jnb l10014F3D
           mov eax, 000000003h
           jmp l10014F42
;
;* Jump:
; 10014F34(C) 
;
l10014F3D: mov eax, 000000004h
;
;* Jump:
; 10014D9C(U), 10014F3B(U) 
;
l10014F42: mov esp, ebp
           pop ebp
           ret
l10014D2D ENDP
;
;* Call:
; 100147FF 
;
l10014F46 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-00Ch], ecx
           mov byte ptr [ebp-010h], 000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000C8h]
           test eax, eax
           je l10014F78
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+00000008Ch], 000000000h
           jne l10014F7F
;
;* Jump:
; 10014F6A(C) 
;
l10014F78: xor al, al
           jmp near ptr l100150BC
;
;* Jump:
; 10014F76(C) 
;
l10014F7F: mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+070h], 000000000h
           jne l10014FA9
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           imul ecx, ecx, 000000018h
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+070h], eax
;
;* Jump:
; 10014F86(C) 
;
l10014FA9: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-014h], eax
           jmp l10014FD9
;
;* Jump:
; 100150B4(U) 
;
l10014FC7: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000054h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10014FC5(U) 
;
l10014FD9: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+024h]
           jnl l100150B9
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+04Ch]
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 000000000h
           jne l10014FFE
           xor al, al
           jmp near ptr l100150BC
;
;* Jump:
; 10014FF5(C) 
;
l10014FFE: mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dx, word ptr [ecx]
           test edx, edx
           je l1001504B
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cx, word ptr [eax+002h]
           test ecx, ecx
           je l1001504B
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov ax, word ptr [edx+010h]
           test eax, eax
           je l1001504B
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dx, word ptr [ecx+020h]
           test edx, edx
           je l1001504B
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cx, word ptr [eax+012h]
           test ecx, ecx
           je l1001504B
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov ax, word ptr [edx+004h]
           test eax, eax
           jne l1001504F
;
;* Jump:
; 10015008(C), 10015015(C), 10015022(C), 1001502F(C), 1001503C(C) 
;
l1001504B: xor al, al
           jmp l100150BC
;
;* Jump:
; 10015049(C) 
;
l1001504F: mov ecx, dword ptr [ebp-018h]
           shl ecx, 008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000008Ch]
           add eax, ecx
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx], 000000000h
           jnl l1001506F
           xor al, al
           jmp l100150BC
;
;* Jump:
; 10015069(C) 
;
l1001506F: mov dword ptr [ebp-008h], 000000001h
           jmp l10015081
;
;* Jump:
; 100150A9(U) 
;
l10015078: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10015076(U) 
;
l10015081: cmp dword ptr [ebp-008h], 000000005h
           jg l100150AB
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-01Ch]
           mov edx, dword ptr [esi+edx*04h]
           mov dword ptr [ecx+eax*04h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+eax*04h], 000000000h
           je l100150A9
           mov byte ptr [ebp-010h], 001h
;
;* Jump:
; 100150A3(C) 
;
l100150A9: jmp l10015078
;
;* Jump:
; 10015085(C) 
;
l100150AB: mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l10014FC7
;
;* Jump:
; 10014FE2(C) 
;
l100150B9: mov al, byte ptr [ebp-010h]
;
;* Jump:
; 10014F7A(U), 10014FF9(U), 1001504D(U), 1001506D(U) 
;
l100150BC: pop esi
           mov esp, ebp
           pop ebp
           ret
l10014F46 ENDP
;
l100150C1 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000011Ch
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000011Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10015168(U) 
;
l100150E6: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+07Ch]
           cmp eax, dword ptr [edx+000000084h]
           jg l1001516D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           test eax, eax
           jne l1001516D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+07Ch]
           cmp eax, dword ptr [edx+000000084h]
           jne l1001514B
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           cmp dword ptr [ecx+00000016Ch], 000000000h
           sete  dl
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000088h]
           add ecx, dword ptr [ebp-00000011Ch]
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000080h], ecx
           jbe l1001514B
           jmp l1001516D
;
;* Jump:
; 10015118(C), 10015147(C) 
;
l1001514B: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           call [edx]
           add esp, 000000004h
           test eax, eax
           jne l10015168
           xor eax, eax
           jmp near ptr l10015B11
;
;* Jump:
; 1001515F(C) 
;
l10015168: jmp near ptr l100150E6
;
;* Jump:
; 100150F5(C), 10015107(C), 10015149(U) 
;
l1001516D: mov dword ptr [ebp-0000000F8h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov dword ptr [ebp-0000000ECh], ecx
           jmp l100151A6
;
;* Jump:
; 100151C7(U), 10015AD7(U) 
;
l10015188: mov edx, dword ptr [ebp-0000000F8h]
           add edx, 000000001h
           mov dword ptr [ebp-0000000F8h], edx
           mov eax, dword ptr [ebp-0000000ECh]
           add eax, 000000054h
           mov dword ptr [ebp-0000000ECh], eax
;
;* Jump:
; 10015186(U) 
;
l100151A6: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000000F8h]
           cmp edx, dword ptr [ecx+024h]
           jnl l10015ADC
           mov eax, dword ptr [ebp-0000000ECh]
           xor ecx, ecx
           mov cl, byte ptr [eax+030h]
           test ecx, ecx
           jne l100151C9
           jmp l10015188
;
;* Jump:
; 100151C5(C) 
;
l100151C9: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000088h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l100151FA
           mov ecx, dword ptr [ebp-0000000ECh]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-0000000F4h], edx
           mov eax, dword ptr [ebp-0000000F4h]
           shl eax, 001h
           mov dword ptr [ebp-008h], eax
           mov byte ptr [ebp-0000000E8h], 000h
           jmp l1001523C
;
;* Jump:
; 100151D5(C) 
;
l100151FA: mov ecx, dword ptr [ebp-0000000ECh]
           mov esi, dword ptr [ebp-0000000ECh]
           mov eax, dword ptr [ecx+020h]
           xor edx, edx
           div dword ptr [esi+00Ch]
           mov dword ptr [ebp-0000000F4h], edx
           cmp dword ptr [ebp-0000000F4h], 000000000h
           jne l1001522C
           mov edx, dword ptr [ebp-0000000ECh]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-0000000F4h], eax
;
;* Jump:
; 1001521B(C) 
;
l1001522C: mov ecx, dword ptr [ebp-0000000F4h]
           mov dword ptr [ebp-008h], ecx
           mov byte ptr [ebp-0000000E8h], 001h
;
;* Jump:
; 100151F8(U) 
;
l1001523C: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000088h], 000000000h
           jbe l100152B9
           mov eax, dword ptr [ebp-0000000ECh]
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-008h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000088h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-0000000ECh]
           imul ecx, dword ptr [edx+00Ch]
           push ecx
           mov eax, dword ptr [ebp-0000000F8h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+eax*04h+048h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+020h]
           add esp, 000000014h
           mov dword ptr [ebp-0000000F0h], eax
           mov eax, dword ptr [ebp-0000000ECh]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-0000000F0h]
           lea eax, [edx+ecx*04h]
           mov dword ptr [ebp-0000000F0h], eax
           mov byte ptr [ebp-000000104h], 000h
           jmp l100152EC
;
;* Jump:
; 10015246(C) 
;
l100152B9: push 000000000h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp-0000000F8h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+edx*04h+048h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+020h]
           add esp, 000000014h
           mov dword ptr [ebp-0000000F0h], eax
           mov byte ptr [ebp-000000104h], 001h
;
;* Jump:
; 100152B7(U) 
;
l100152EC: mov edx, dword ptr [ebp-0000000F8h]
           imul edx, edx, 000000006h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+070h]
           lea edx, [ecx+edx*04h]
           mov dword ptr [ebp-00000010Ch], edx
           mov eax, dword ptr [ebp-0000000ECh]
           mov ecx, dword ptr [eax+04Ch]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-038h]
           xor eax, eax
           mov ax, word ptr [edx]
           mov dword ptr [ebp-0000000E4h], eax
           mov ecx, dword ptr [ebp-038h]
           xor edx, edx
           mov dx, word ptr [ecx+002h]
           mov dword ptr [ebp-000000100h], edx
           mov eax, dword ptr [ebp-038h]
           xor ecx, ecx
           mov cx, word ptr [eax+010h]
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-038h]
           xor eax, eax
           mov ax, word ptr [edx+020h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-038h]
           xor edx, edx
           mov dx, word ptr [ecx+012h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-038h]
           xor ecx, ecx
           mov cx, word ptr [eax+004h]
           mov dword ptr [ebp-000000108h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000019Ch]
           mov ecx, dword ptr [ebp-0000000F8h]
           mov edx, dword ptr [eax+ecx*04h+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-0000000F8h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-040h], edx
           mov dword ptr [ebp-000000114h], 000000000h
           jmp l100153A3
;
;* Jump:
; 10015AD2(U) 
;
l10015394: mov eax, dword ptr [ebp-000000114h]
           add eax, 000000001h
           mov dword ptr [ebp-000000114h], eax
;
;* Jump:
; 10015392(U) 
;
l100153A3: mov ecx, dword ptr [ebp-000000114h]
           cmp ecx, dword ptr [ebp-0000000F4h]
           jnl l10015AD7
           mov edx, dword ptr [ebp-000000114h]
           mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-0000000D8h], ecx
           mov edx, dword ptr [ebp-000000104h]
           and edx, 0000000FFh
           test edx, edx
           je l100153F1
           cmp dword ptr [ebp-000000114h], 000000000h
           jne l100153F1
           mov eax, dword ptr [ebp-0000000D8h]
           mov dword ptr [ebp-000000110h], eax
           jmp l10015407
;
;* Jump:
; 100153D8(C), 100153E1(C) 
;
l100153F1: mov ecx, dword ptr [ebp-000000114h]
           mov edx, dword ptr [ebp-0000000F0h]
           mov eax, dword ptr [edx+ecx*04h-004h]
           mov dword ptr [ebp-000000110h], eax
;
;* Jump:
; 100153EF(U) 
;
l10015407: mov ecx, dword ptr [ebp-0000000E8h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l10015436
           mov edx, dword ptr [ebp-0000000F4h]
           sub edx, 000000001h
           cmp dword ptr [ebp-000000114h], edx
           jne l10015436
           mov eax, dword ptr [ebp-0000000D8h]
           mov dword ptr [ebp-0000000D4h], eax
           jmp l1001544C
;
;* Jump:
; 10015415(C), 10015426(C) 
;
l10015436: mov ecx, dword ptr [ebp-000000114h]
           mov edx, dword ptr [ebp-0000000F0h]
           mov eax, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-0000000D4h], eax
;
;* Jump:
; 10015434(U) 
;
l1001544C: mov ecx, dword ptr [ebp-000000110h]
           movsx edx, word ptr [ecx]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-0000000D8h]
           movsx eax, word ptr [edx]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-0000000D4h]
           movsx ecx, word ptr [eax]
           mov dword ptr [ebp-0000000E0h], ecx
           mov edx, dword ptr [ebp-0000000E0h]
           mov dword ptr [ebp-0000000D0h], edx
           mov eax, dword ptr [ebp-0000000D0h]
           mov dword ptr [ebp-0000000CCh], eax
           mov dword ptr [ebp-030h], 000000000h
           mov ecx, dword ptr [ebp-0000000ECh]
           mov edx, dword ptr [ecx+01Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-0000000C8h], edx
           mov dword ptr [ebp-024h], 000000000h
           jmp l100154CE
;
;* Jump:
; 10015ABB(U) 
;
l100154C5: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 100154C3(U) 
;
l100154CE: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp-0000000C8h]
           ja l10015AC0
           push 000000001h
           lea edx, [ebp-0000000C4h]
           push edx
           mov eax, dword ptr [ebp-0000000D8h]
           push eax
           call l1002694F
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp-0000000C8h]
           jnb l10015533
           mov edx, dword ptr [ebp-000000110h]
           movsx eax, word ptr [edx+000000080h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-0000000D8h]
           movsx edx, word ptr [ecx+000000080h]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp-0000000D4h]
           movsx ecx, word ptr [eax+000000080h]
           mov dword ptr [ebp-0000000E0h], ecx
;
;* Jump:
; 100154FE(C) 
;
l10015533: mov edx, dword ptr [ebp-00000010Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           cmp dword ptr [ebp-028h], 000000000h
           je l1001562F
           movsx ecx, word ptr [ebp-0000000C2h]
           test ecx, ecx
           jne l1001562F
           mov edx, dword ptr [ebp-0000000E4h]
           imul edx, edx, 000000024h
           mov eax, dword ptr [ebp-034h]
           sub eax, dword ptr [ebp-044h]
           imul edx, eax
           mov dword ptr [ebp-0000000FCh], edx
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jl l100155C7
           mov eax, dword ptr [ebp-000000100h]
           shl eax, 007h
           add eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000100h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l100155C5
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l100155C5
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 1001559E(C), 100155B0(C) 
;
l100155C5: jmp l10015621
;
;* Jump:
; 10015577(C) 
;
l100155C7: mov eax, dword ptr [ebp-000000100h]
           shl eax, 007h
           sub eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000100h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l10015613
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l10015613
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 100155EC(C), 100155FE(C) 
;
l10015613: mov ecx, dword ptr [ebp-0000000DCh]
           neg ecx
           mov dword ptr [ebp-0000000DCh], ecx
;
;* Jump:
; 100155C5(U) 
;
l10015621: mov dx, word ptr [ebp-0000000DCh]
           mov word ptr [ebp-0000000C2h], dx
;
;* Jump:
; 10015543(C), 10015552(C) 
;
l1001562F: mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000000h
           je l1001572E
           movsx edx, word ptr [ebp-0000000B4h]
           test edx, edx
           jne l1001572E
           mov eax, dword ptr [ebp-0000000E4h]
           imul eax, eax, 000000024h
           mov ecx, dword ptr [ebp-01Ch]
           sub ecx, dword ptr [ebp-0000000D0h]
           imul eax, ecx
           mov dword ptr [ebp-0000000FCh], eax
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jl l100156C6
           mov eax, dword ptr [ebp-000000118h]
           shl eax, 007h
           add eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000118h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l100156C4
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l100156C4
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 1001569D(C), 100156AF(C) 
;
l100156C4: jmp l10015720
;
;* Jump:
; 10015676(C) 
;
l100156C6: mov eax, dword ptr [ebp-000000118h]
           shl eax, 007h
           sub eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000118h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l10015712
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l10015712
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 100156EB(C), 100156FD(C) 
;
l10015712: mov ecx, dword ptr [ebp-0000000DCh]
           neg ecx
           mov dword ptr [ebp-0000000DCh], ecx
;
;* Jump:
; 100156C4(U) 
;
l10015720: mov dx, word ptr [ebp-0000000DCh]
           mov word ptr [ebp-0000000B4h], dx
;
;* Jump:
; 1001563F(C), 1001564E(C) 
;
l1001572E: mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000000h
           je l10015828
           movsx edx, word ptr [ebp-0000000A4h]
           test edx, edx
           jne l10015828
           mov eax, dword ptr [ebp-0000000E4h]
           imul eax, eax, 000000009h
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, dword ptr [ebp-0000000D0h]
           mov edx, dword ptr [ebp-03Ch]
           shl edx, 001h
           sub ecx, edx
           imul eax, ecx
           mov dword ptr [ebp-0000000FCh], eax
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jl l100157C6
           mov eax, dword ptr [ebp-020h]
           shl eax, 007h
           add eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-020h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l100157C4
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l100157C4
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 1001579D(C), 100157AF(C) 
;
l100157C4: jmp l1001581A
;
;* Jump:
; 1001577C(C) 
;
l100157C6: mov eax, dword ptr [ebp-020h]
           shl eax, 007h
           sub eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-020h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l1001580C
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l1001580C
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 100157E5(C), 100157F7(C) 
;
l1001580C: mov ecx, dword ptr [ebp-0000000DCh]
           neg ecx
           mov dword ptr [ebp-0000000DCh], ecx
;
;* Jump:
; 100157C4(U) 
;
l1001581A: mov dx, word ptr [ebp-0000000DCh]
           mov word ptr [ebp-0000000A4h], dx
;
;* Jump:
; 1001573E(C), 1001574D(C) 
;
l10015828: mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000000h
           je l10015924
           movsx edx, word ptr [ebp-0000000B2h]
           test edx, edx
           jne l10015924
           mov eax, dword ptr [ebp-0000000E4h]
           imul eax, eax, 000000005h
           mov ecx, dword ptr [ebp-014h]
           sub ecx, dword ptr [ebp-02Ch]
           sub ecx, dword ptr [ebp-0000000CCh]
           add ecx, dword ptr [ebp-0000000E0h]
           imul eax, ecx
           mov dword ptr [ebp-0000000FCh], eax
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jl l100158C2
           mov eax, dword ptr [ebp-004h]
           shl eax, 007h
           add eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-004h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l100158C0
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l100158C0
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 10015899(C), 100158AB(C) 
;
l100158C0: jmp l10015916
;
;* Jump:
; 10015878(C) 
;
l100158C2: mov eax, dword ptr [ebp-004h]
           shl eax, 007h
           sub eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-004h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l10015908
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l10015908
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 100158E1(C), 100158F3(C) 
;
l10015908: mov ecx, dword ptr [ebp-0000000DCh]
           neg ecx
           mov dword ptr [ebp-0000000DCh], ecx
;
;* Jump:
; 100158C0(U) 
;
l10015916: mov dx, word ptr [ebp-0000000DCh]
           mov word ptr [ebp-0000000B2h], dx
;
;* Jump:
; 10015838(C), 10015847(C) 
;
l10015924: mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000000h
           je l10015A27
           movsx edx, word ptr [ebp-0000000C0h]
           test edx, edx
           jne l10015A27
           mov eax, dword ptr [ebp-0000000E4h]
           imul eax, eax, 000000009h
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-03Ch]
           shl edx, 001h
           sub ecx, edx
           imul eax, ecx
           mov dword ptr [ebp-0000000FCh], eax
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jl l100159BF
           mov eax, dword ptr [ebp-000000108h]
           shl eax, 007h
           add eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000108h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l100159BD
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l100159BD
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 10015996(C), 100159A8(C) 
;
l100159BD: jmp l10015A19
;
;* Jump:
; 1001596F(C) 
;
l100159BF: mov eax, dword ptr [ebp-000000108h]
           shl eax, 007h
           sub eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [ebp-000000108h]
           shl ecx, 008h
           cdq
           idiv ecx
           mov dword ptr [ebp-0000000DCh], eax
           cmp dword ptr [ebp-028h], 000000000h
           jle l10015A0B
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl edx, cl
           cmp dword ptr [ebp-0000000DCh], edx
           jl l10015A0B
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           shl eax, cl
           sub eax, 000000001h
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 100159E4(C), 100159F6(C) 
;
l10015A0B: mov ecx, dword ptr [ebp-0000000DCh]
           neg ecx
           mov dword ptr [ebp-0000000DCh], ecx
;
;* Jump:
; 100159BD(U) 
;
l10015A19: mov dx, word ptr [ebp-0000000DCh]
           mov word ptr [ebp-0000000C0h], dx
;
;* Jump:
; 10015934(C), 10015943(C) 
;
l10015A27: mov eax, dword ptr [ebp-030h]
           push eax
           mov ecx, dword ptr [ebp-040h]
           push ecx
           lea edx, [ebp-0000000C4h]
           push edx
           mov eax, dword ptr [ebp-0000000ECh]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [ebp-010h]
           add esp, 000000014h
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-03Ch], edx
           mov eax, dword ptr [ebp-0000000D0h]
           mov dword ptr [ebp-0000000CCh], eax
           mov ecx, dword ptr [ebp-0000000E0h]
           mov dword ptr [ebp-0000000D0h], ecx
           mov edx, dword ptr [ebp-0000000D8h]
           add edx, 000000080h
           mov dword ptr [ebp-0000000D8h], edx
           mov eax, dword ptr [ebp-000000110h]
           add eax, 000000080h
           mov dword ptr [ebp-000000110h], eax
           mov ecx, dword ptr [ebp-0000000D4h]
           add ecx, 000000080h
           mov dword ptr [ebp-0000000D4h], ecx
           mov edx, dword ptr [ebp-0000000ECh]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [edx+024h]
           mov dword ptr [ebp-030h], eax
           jmp near ptr l100154C5
;
;* Jump:
; 100154D7(C) 
;
l10015AC0: mov ecx, dword ptr [ebp-0000000ECh]
           mov edx, dword ptr [ecx+024h]
           mov eax, dword ptr [ebp-040h]
           lea ecx, [eax+edx*04h]
           mov dword ptr [ebp-040h], ecx
           jmp near ptr l10015394
;
;* Jump:
; 100153AF(C) 
;
l10015AD7: jmp near ptr l10015188
;
;* Jump:
; 100151B2(C) 
;
l10015ADC: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000088h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000088h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+000000088h]
           cmp ecx, dword ptr [eax+00000011Ch]
           jnb l10015B0C
           mov eax, 000000003h
           jmp l10015B11
;
;* Jump:
; 10015B03(C) 
;
l10015B0C: mov eax, 000000004h
;
;* Jump:
; 10015163(U), 10015B0A(U) 
;
l10015B11: pop esi
           mov esp, ebp
           pop ebp
           ret
l100150C1 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C45C 
;
l10015B20 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push 000000018h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+0000001A4h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001636E
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000004h
           ja l10015BE2
           mov eax, dword ptr [ebp-00Ch]
           jmp [offset g10015DE8+eax*04h]
l10015B73: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000001h
           je l10015B96
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015B7A(C) 
;
l10015B96: jmp l10015C05
l10015B98: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000003h
           je l10015BBB
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015B9F(C) 
;
l10015BBB: jmp l10015C05
l10015BBD: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000004h
           je l10015BE0
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015BC4(C) 
;
l10015BE0: jmp l10015C05
;
;* Jump:
; 10015B67(C) 
;
l10015BE2: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 000000001h
           jnl l10015C05
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015B96(U), 10015BBB(U), 10015BE0(U), 10015BE9(C) 
;
l10015C05: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-010h], 000000001h
           je l10015C2D
           cmp dword ptr [ebp-010h], 000000002h
           je l10015CA7
           cmp dword ptr [ebp-010h], 000000004h
           je l10015D24
           jmp near ptr l10015D80
;
;* Jump:
; 10015C12(C) 
;
l10015C2D: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+064h], 000000001h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000001h
           je l10015C49
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+028h], 000000003h
           jne l10015C88
;
;* Jump:
; 10015C3E(C) 
;
l10015C49: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10016126
           mov dword ptr [ebp-008h], 000000001h
           jmp l10015C65
;
;* Jump:
; 10015C84(U) 
;
l10015C5C: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10015C5A(U) 
;
l10015C65: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+024h]
           jnl l10015C86
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000000054h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov byte ptr [eax+ecx+030h], 000h
           jmp l10015C5C
;
;* Jump:
; 10015C6E(C) 
;
l10015C86: jmp l10015CA2
;
;* Jump:
; 10015C47(C) 
;
l10015C88: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10015C86(U) 
;
l10015CA2: jmp near ptr l10015DC0
;
;* Jump:
; 10015C18(C) 
;
l10015CA7: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+064h], 000000003h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000003h
           jne l10015CD2
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10015F1D
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10015DFC
           add esp, 000000004h
           jmp l10015D1F
;
;* Jump:
; 10015CB8(C) 
;
l10015CD2: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000001h
           jne l10015CE7
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1001614E
           jmp l10015D1F
;
;* Jump:
; 10015CD9(C) 
;
l10015CE7: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+028h], 000000002h
           jne l10015D05
           mov ecx, 000000001h
           test ecx, ecx
           je l10015D05
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10016072
           jmp l10015D1F
;
;* Jump:
; 10015CEE(C), 10015CF7(C) 
;
l10015D05: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000001Bh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10015CD0(U), 10015CE5(U), 10015D03(U) 
;
l10015D1F: jmp near ptr l10015DC0
;
;* Jump:
; 10015C22(C) 
;
l10015D24: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+064h], 000000004h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+028h], 000000005h
           jne l10015D4F
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l100161E7
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10015DFC
           add esp, 000000004h
           jmp l10015D7E
;
;* Jump:
; 10015D35(C) 
;
l10015D4F: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+028h], 000000004h
           jne l10015D64
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l10016072
           jmp l10015D7E
;
;* Jump:
; 10015D56(C) 
;
l10015D64: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015D4D(U), 10015D62(U) 
;
l10015D7E: jmp l10015DC0
;
;* Jump:
; 10015C28(U) 
;
l10015D80: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+02Ch]
           cmp eax, dword ptr [edx+028h]
           jne l10015DA6
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ecx+064h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l10016072
           jmp l10015DC0
;
;* Jump:
; 10015D8C(C) 
;
l10015DA6: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10015CA2(U), 10015D1F(U), 10015D7E(U), 10015DA4(U) 
;
l10015DC0: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+04Ah]
           test edx, edx
           je l10015DD8
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+068h], 000000001h
           jmp l10015DE4
;
;* Jump:
; 10015DCA(C) 
;
l10015DD8: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           mov dword ptr [ecx+068h], eax
;
;* Jump:
; 10015DD6(U) 
;
l10015DE4: mov esp, ebp
           pop ebp
           ret
;
g10015DE8  dd l10015B73
           dd l10015B98
           dd l10015B98
           dd l10015BBD
           dd l10015BBD
l10015B20 ENDP
;
;* Call:
; 10015CC8, 10015D45 
;
l10015DFC PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A4h]
           mov dword ptr [ebp-00Ch], ecx
           push 000000400h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], eax
           push 000000400h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00Ch], eax
           push 000000400h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], eax
           push 000000400h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+014h], eax
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 0FFFFFF80h
           jmp l10015EA0
;
;* Jump:
; 10015F14(U) 
;
l10015E8E: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10015E8C(U) 
;
l10015EA0: cmp dword ptr [ebp-008h], 0000000FFh
           jg l10015F19
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 0000166E9h
           add ecx, 000008000h
           sar ecx, 010h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 00001C5A2h
           add eax, 000008000h
           sar eax, 010h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h], eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -00000B6D2h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ecx+eax*04h], edx
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, -00000581Ah
           add ecx, 000008000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           jmp near ptr l10015E8E
;
;* Jump:
; 10015EA7(C) 
;
l10015F19: mov esp, ebp
           pop ebp
           ret
l10015DFC ENDP
;
l10015F1D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A4h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000120h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-03Ch], ecx
;
;* Jump:
; 10016069(U) 
;
l10015F68: mov edx, dword ptr [ebp+018h]
           sub edx, 000000001h
           mov dword ptr [ebp+018h], edx
           cmp dword ptr [ebp+018h], 000000000h
           jl l1001606E
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+010h]
           add eax, 000000001h
           mov dword ptr [ebp+010h], eax
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp+014h]
           add eax, 000000004h
           mov dword ptr [ebp+014h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10015FD3
;
;* Jump:
; 10016064(U) 
;
l10015FCA: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10015FC8(U) 
;
l10015FD3: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-024h]
           jnb l10016069
           mov eax, dword ptr [ebp-028h]
           add eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           add edx, dword ptr [ecx+eax*04h]
           sar edx, 010h
           mov eax, dword ptr [ebp-030h]
           add eax, edx
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-01Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [edx+ecx*04h]
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-01Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000003h
           mov dword ptr [ebp-034h], ecx
           jmp near ptr l10015FCA
;
;* Jump:
; 10015FD9(C) 
;
l10016069: jmp near ptr l10015F68
;
;* Jump:
; 10015F75(C) 
;
l1001606E: mov esp, ebp
           pop ebp
           ret
l10015F1D ENDP
;
l10016072 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001611D(U) 
;
l1001608A: mov ecx, dword ptr [ebp+018h]
           sub ecx, 000000001h
           mov dword ptr [ebp+018h], ecx
           cmp dword ptr [ebp+018h], 000000000h
           jl l10016122
           mov dword ptr [ebp-018h], 000000000h
           jmp l100160AF
;
;* Jump:
; 10016109(U) 
;
l100160A6: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 100160A4(U) 
;
l100160AF: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-00Ch]
           jnl l1001610B
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           add ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           jmp l100160E5
;
;* Jump:
; 10016107(U) 
;
l100160DC: mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100160DA(U) 
;
l100160E5: cmp dword ptr [ebp-004h], 000000000h
           jbe l10016109
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           mov al, byte ptr [edx]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-010h], edx
           jmp l100160DC
;
;* Jump:
; 100160E9(C) 
;
l10016109: jmp l100160A6
;
;* Jump:
; 100160B5(C) 
;
l1001610B: mov eax, dword ptr [ebp+010h]
           add eax, 000000001h
           mov dword ptr [ebp+010h], eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, 000000004h
           mov dword ptr [ebp+014h], ecx
           jmp near ptr l1001608A
;
;* Jump:
; 10016097(C) 
;
l10016122: mov esp, ebp
           pop ebp
           ret
l10016072 ENDP
;
l10016126 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+05Ch]
           push ecx
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           push eax
           call l100268D1
           add esp, 000000018h
           pop ebp
           ret
l10016126 ENDP
;
l1001614E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+05Ch]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 100161DE(U) 
;
l1001615D: mov edx, dword ptr [ebp+018h]
           sub edx, 000000001h
           mov dword ptr [ebp+018h], edx
           cmp dword ptr [ebp+018h], 000000000h
           jl l100161E3
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000001h
           mov dword ptr [ebp+010h], ecx
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, 000000004h
           mov dword ptr [ebp+014h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l100161A6
;
;* Jump:
; 100161DC(U) 
;
l1001619D: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001619B(U) 
;
l100161A6: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-008h]
           jnb l100161DE
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov al, byte ptr [ecx]
           mov byte ptr [edx+002h], al
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov al, byte ptr [edx+002h]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000003h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1001619D
;
;* Jump:
; 100161AC(C) 
;
l100161DE: jmp near ptr l1001615D
;
;* Jump:
; 1001616A(C) 
;
l100161E3: mov esp, ebp
           pop ebp
           ret
l1001614E ENDP
;
l100161E7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A4h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000120h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-040h], ecx
;
;* Jump:
; 10016365(U) 
;
l10016232: mov edx, dword ptr [ebp+018h]
           sub edx, 000000001h
           mov dword ptr [ebp+018h], edx
           cmp dword ptr [ebp+018h], 000000000h
           jl l1001636A
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000001h
           mov dword ptr [ebp+010h], ecx
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, 000000004h
           mov dword ptr [ebp+014h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l100162AC
;
;* Jump:
; 10016360(U) 
;
l100162A3: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100162A1(U) 
;
l100162AC: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-024h]
           jnb l10016365
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [edx+ecx*04h]
           mov ecx, 0000000FFh
           sub ecx, eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-01Ch]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           add ecx, dword ptr [eax+edx*04h]
           sar ecx, 010h
           mov edx, dword ptr [ebp-030h]
           add edx, ecx
           mov eax, 0000000FFh
           sub eax, edx
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-01Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [edx+ecx*04h]
           mov ecx, 0000000FFh
           sub ecx, eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-01Ch]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+002h], cl
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-038h]
           mov cl, byte ptr [edx]
           mov byte ptr [eax+003h], cl
           mov edx, dword ptr [ebp-038h]
           add edx, 000000004h
           mov dword ptr [ebp-038h], edx
           jmp near ptr l100162A3
;
;* Jump:
; 100162B2(C) 
;
l10016365: jmp near ptr l10016232
;
;* Jump:
; 1001623F(C) 
;
l1001636A: mov esp, ebp
           pop ebp
           ret
l100161E7 ENDP
;
l1001636E PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l1001636E ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C487 
;
l10016380 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push edi
           push 000000054h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00000019Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx], offset l10016424
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov dword ptr [ebp-004h], ecx
           jmp l100163D9
;
;* Jump:
; 1001641D(U) 
;
l100163C7: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000054h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100163C5(U) 
;
l100163D9: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+024h]
           jnl l1001641F
           push 000000100h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+050h], eax
           mov ecx, 000000040h
           xor eax, eax
           mov edx, dword ptr [ebp-004h]
           mov edi, dword ptr [edx+050h]
           rep stosd
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+eax*04h+02Ch], 0FFFFFFFFh
           jmp l100163C7
;
;* Jump:
; 100163E2(C) 
;
l1001641F: pop edi
           mov esp, ebp
           pop ebp
           ret
l10016380 ENDP
;
l10016424 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000019Ch]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-010h], eax
           jmp l1001646B
;
;* Jump:
; 10016592(U), 100165A6(U), 10016702(U) 
;
l10016459: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000054h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10016457(U) 
;
l1001646B: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+024h]
           jnl l10016707
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-034h]
           sub ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
           cmp dword ptr [ebp-034h], 000000007h
           ja l10016542
           mov edx, dword ptr [ebp-034h]
           jmp [offset g1001670B+edx*04h]
l100164A0: mov dword ptr [ebp-01Ch], offset l1002257C
           mov dword ptr [ebp-004h], 000000000h
           jmp near ptr l1001656A
l100164B3: mov dword ptr [ebp-01Ch], offset l100222BF
           mov dword ptr [ebp-004h], 000000000h
           jmp near ptr l1001656A
l100164C6: mov dword ptr [ebp-01Ch], offset l10021D80
           mov dword ptr [ebp-004h], 000000000h
           jmp near ptr l1001656A
l100164D9: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+044h]
           mov dword ptr [ebp-038h], ecx
           cmp dword ptr [ebp-038h], 000000000h
           je l100164F6
           cmp dword ptr [ebp-038h], 000000001h
           je l10016506
           cmp dword ptr [ebp-038h], 000000002h
           je l10016516
           jmp l10016526
;
;* Jump:
; 100164E6(C) 
;
l100164F6: mov dword ptr [ebp-01Ch], offset l10021410
           mov dword ptr [ebp-004h], 000000000h
           jmp l10016540
;
;* Jump:
; 100164EC(C) 
;
l10016506: mov dword ptr [ebp-01Ch], offset l10020C70
           mov dword ptr [ebp-004h], 000000001h
           jmp l10016540
;
;* Jump:
; 100164F2(C) 
;
l10016516: mov dword ptr [ebp-01Ch], offset l10020550
           mov dword ptr [ebp-004h], 000000002h
           jmp l10016540
;
;* Jump:
; 100164F4(U) 
;
l10016526: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000030h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10016504(U), 10016514(U), 10016524(U) 
;
l10016540: jmp l1001656A
;
;* Jump:
; 10016490(C) 
;
l10016542: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000007h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100164AE(U), 100164C1(U), 100164D4(U), 10016540(U) 
;
l1001656A: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+ecx*04h+004h], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx+030h]
           test edx, edx
           je l10016592
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+eax*04h+02Ch]
           cmp edx, dword ptr [ebp-004h]
           jne l10016597
;
;* Jump:
; 10016581(C) 
;
l10016592: jmp near ptr l10016459
;
;* Jump:
; 10016590(C) 
;
l10016597: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+04Ch]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp-008h], 000000000h
           jne l100165AB
           jmp near ptr l10016459
;
;* Jump:
; 100165A4(C) 
;
l100165AB: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+02Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-03Ch], edx
           cmp dword ptr [ebp-03Ch], 000000000h
           je l100165D9
           cmp dword ptr [ebp-03Ch], 000000001h
           je l10016616
           cmp dword ptr [ebp-03Ch], 000000002h
           je l1001666A
           jmp near ptr l100166E8
;
;* Jump:
; 100165C2(C) 
;
l100165D9: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l100165F4
;
;* Jump:
; 1001660F(U) 
;
l100165EB: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100165E9(U) 
;
l100165F4: cmp dword ptr [ebp-00Ch], 000000040h
           jnl l10016611
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dx, word ptr [ecx+eax*02h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l100165EB
;
;* Jump:
; 100165F8(C) 
;
l10016611: jmp near ptr l10016702
;
;* Jump:
; 100165C8(C) 
;
l10016616: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+050h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10016631
;
;* Jump:
; 10016663(U) 
;
l10016628: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10016626(U) 
;
l10016631: cmp dword ptr [ebp-00Ch], 000000040h
           jnl l10016665
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h]
           mov edx, dword ptr [ebp-00Ch]
           movsx eax, word ptr [offset g10042688+edx*02h]
           imul ecx, eax
           add ecx, 000000800h
           sar ecx, 00Ch
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10016628
;
;* Jump:
; 10016635(C) 
;
l10016665: jmp near ptr l10016702
;
;* Jump:
; 100165CE(C) 
;
l1001666A: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+050h]
           mov dword ptr [ebp-030h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l1001668C
;
;* Jump:
; 100166E4(U) 
;
l10016683: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10016681(U) 
;
l1001668C: cmp dword ptr [ebp-02Ch], 000000008h
           jnl l100166E6
           mov dword ptr [ebp-028h], 000000000h
           jmp l100166A4
;
;* Jump:
; 100166E2(U) 
;
l1001669B: mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 10016699(U) 
;
l100166A4: cmp dword ptr [ebp-028h], 000000008h
           jnl l100166E4
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h]
           mov dword ptr [ebp-040h], ecx
           fild dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-02Ch]
           fmul qword ptr [offset g10042708+edx*08h]
           mov eax, dword ptr [ebp-028h]
           fmul qword ptr [offset g10042708+eax*08h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-030h]
           fstp dword ptr [edx+ecx*04h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp l1001669B
;
;* Jump:
; 100166A8(C) 
;
l100166E4: jmp l10016683
;
;* Jump:
; 10016690(C) 
;
l100166E6: jmp l10016702
;
;* Jump:
; 100165D4(U) 
;
l100166E8: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000030h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10016611(U), 10016665(U), 100166E6(U) 
;
l10016702: jmp near ptr l10016459
;
;* Jump:
; 10016474(C) 
;
l10016707: mov esp, ebp
           pop ebp
           ret
;
g1001670B  dd l100164A0
           dd l100164B3
           dd l10016542
           dd l100164C6
           dd l10016542
           dd l10016542
           dd l10016542
           dd l100164D9
l10016424 ENDP
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10017035, 10017052, 1001D613, 1001D63B 
;
l10016730 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000538h
           push edi
           cmp dword ptr [ebp+010h], 000000000h
           jl l10016746
           cmp dword ptr [ebp+010h], 000000004h
           jl l1001676B
;
;* Jump:
; 1001673E(C) 
;
l10016746: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000032h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10016744(C) 
;
l1001676B: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l1001678D
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000A0h]
           mov dword ptr [ebp-000000538h], edx
           jmp l100167A0
;
;* Jump:
; 10016776(C) 
;
l1001678D: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+0000000B0h]
           mov dword ptr [ebp-000000538h], edx
;
;* Jump:
; 1001678B(U) 
;
l100167A0: mov eax, dword ptr [ebp-000000538h]
           mov dword ptr [ebp-00000040Ch], eax
           cmp dword ptr [ebp-00000040Ch], 000000000h
           jne l100167DA
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000032h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100167B3(C) 
;
l100167DA: mov eax, dword ptr [ebp+014h]
           cmp dword ptr [eax], 000000000h
           jne l100167FD
           push 000000590h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 100167E0(C) 
;
l100167FD: mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-000000530h], eax
           mov ecx, dword ptr [ebp-000000530h]
           mov edx, dword ptr [ebp-00000040Ch]
           mov dword ptr [ecx+00000008Ch], edx
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-000000528h], 000000001h
           jmp l1001683C
;
;* Jump:
; 100168C6(U) 
;
l1001682D: mov eax, dword ptr [ebp-000000528h]
           add eax, 000000001h
           mov dword ptr [ebp-000000528h], eax
;
;* Jump:
; 1001682B(U) 
;
l1001683C: cmp dword ptr [ebp-000000528h], 000000010h
           jg l100168CB
           mov ecx, dword ptr [ebp-00000040Ch]
           add ecx, dword ptr [ebp-000000528h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-000000418h], edx
           cmp dword ptr [ebp-000000418h], 000000000h
           jl l10016878
           mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-000000418h]
           cmp eax, 000000100h
           jle l10016892
;
;* Jump:
; 10016866(C) 
;
l10016878: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10016876(C), 100168C4(U) 
;
l10016892: mov eax, dword ptr [ebp-000000418h]
           mov ecx, dword ptr [ebp-000000418h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000418h], ecx
           test eax, eax
           je l100168C6
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [ebp-000000528h]
           mov byte ptr [ebp+edx-00000051Ch], al
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           jmp l10016892
;
;* Jump:
; 100168A9(C) 
;
l100168C6: jmp near ptr l1001682D
;
;* Jump:
; 10016843(C) 
;
l100168CB: mov edx, dword ptr [ebp-004h]
           mov byte ptr [ebp+edx-00000051Ch], 000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000410h], eax
           mov dword ptr [ebp-00000052Ch], 000000000h
           movsx ecx, byte ptr [ebp-00000051Ch]
           mov dword ptr [ebp-000000524h], ecx
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10016999(U) 
;
l100168FD: mov edx, dword ptr [ebp-004h]
           movsx eax, byte ptr [ebp+edx-00000051Ch]
           test eax, eax
           je l1001699E
;
;* Jump:
; 1001694B(U) 
;
l10016910: mov ecx, dword ptr [ebp-004h]
           movsx edx, byte ptr [ebp+ecx-00000051Ch]
           cmp edx, dword ptr [ebp-000000524h]
           jne l1001694D
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00000052Ch]
           mov dword ptr [ebp+eax*04h-000000408h], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000052Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000052Ch], eax
           jmp l10016910
;
;* Jump:
; 10016921(C) 
;
l1001694D: mov edx, 000000001h
           mov ecx, dword ptr [ebp-000000524h]
           shl edx, cl
           cmp dword ptr [ebp-00000052Ch], edx
           jl l1001697C
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10016960(C) 
;
l1001697C: mov edx, dword ptr [ebp-00000052Ch]
           shl edx, 001h
           mov dword ptr [ebp-00000052Ch], edx
           mov eax, dword ptr [ebp-000000524h]
           add eax, 000000001h
           mov dword ptr [ebp-000000524h], eax
           jmp near ptr l100168FD
;
;* Jump:
; 1001690A(C) 
;
l1001699E: mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-000000528h], 000000001h
           jmp l100169C0
;
;* Jump:
; 10016A40(U) 
;
l100169B1: mov ecx, dword ptr [ebp-000000528h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000528h], ecx
;
;* Jump:
; 100169AF(U) 
;
l100169C0: cmp dword ptr [ebp-000000528h], 000000010h
           jg l10016A45
           mov edx, dword ptr [ebp-00000040Ch]
           add edx, dword ptr [ebp-000000528h]
           xor eax, eax
           mov al, byte ptr [edx]
           test eax, eax
           je l10016A2D
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           sub edx, dword ptr [ebp+ecx*04h-000000408h]
           mov eax, dword ptr [ebp-000000528h]
           mov ecx, dword ptr [ebp-000000530h]
           mov dword ptr [ecx+eax*04h+048h], edx
           mov edx, dword ptr [ebp-00000040Ch]
           add edx, dword ptr [ebp-000000528h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-000000528h]
           mov eax, dword ptr [ebp-000000530h]
           mov ecx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+ecx*04h-00000040Ch]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10016A40
;
;* Jump:
; 100169DB(C) 
;
l10016A2D: mov edx, dword ptr [ebp-000000528h]
           mov eax, dword ptr [ebp-000000530h]
           mov dword ptr [eax+edx*04h], 0FFFFFFFFh
;
;* Jump:
; 10016A2B(U) 
;
l10016A40: jmp near ptr l100169B1
;
;* Jump:
; 100169C7(C) 
;
l10016A45: mov ecx, dword ptr [ebp-000000530h]
           mov dword ptr [ecx+044h], 0000FFFFFh
           mov ecx, 000000100h
           xor eax, eax
           mov edi, dword ptr [ebp-000000530h]
           add edi, 000000090h
           rep stosd
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-000000528h], 000000001h
           jmp l10016A89
;
;* Jump:
; 10016B72(U) 
;
l10016A7A: mov edx, dword ptr [ebp-000000528h]
           add edx, 000000001h
           mov dword ptr [ebp-000000528h], edx
;
;* Jump:
; 10016A78(U) 
;
l10016A89: cmp dword ptr [ebp-000000528h], 000000008h
           jg l10016B77
           mov dword ptr [ebp-000000418h], 000000001h
           jmp l10016ABA
;
;* Jump:
; 10016B6D(U) 
;
l10016AA2: mov eax, dword ptr [ebp-000000418h]
           add eax, 000000001h
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10016AA0(U) 
;
l10016ABA: mov edx, dword ptr [ebp-00000040Ch]
           add edx, dword ptr [ebp-000000528h]
           xor eax, eax
           mov al, byte ptr [edx]
           cmp dword ptr [ebp-000000418h], eax
           jg l10016B72
           mov ecx, 000000008h
           sub ecx, dword ptr [ebp-000000528h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+edx*04h-000000408h]
           shl eax, cl
           mov dword ptr [ebp-000000414h], eax
           mov ecx, 000000008h
           sub ecx, dword ptr [ebp-000000528h]
           mov edx, 000000001h
           shl edx, cl
           mov dword ptr [ebp-000000520h], edx
           jmp l10016B1C
;
;* Jump:
; 10016B6B(U) 
;
l10016B0D: mov eax, dword ptr [ebp-000000520h]
           sub eax, 000000001h
           mov dword ptr [ebp-000000520h], eax
;
;* Jump:
; 10016B0B(U) 
;
l10016B1C: cmp dword ptr [ebp-000000520h], 000000000h
           jle l10016B6D
           mov ecx, dword ptr [ebp-000000414h]
           mov edx, dword ptr [ebp-000000530h]
           mov eax, dword ptr [ebp-000000528h]
           mov dword ptr [edx+ecx*04h+000000090h], eax
           mov ecx, dword ptr [ebp-000000530h]
           add ecx, dword ptr [ebp-000000414h]
           mov edx, dword ptr [ebp-00000040Ch]
           add edx, dword ptr [ebp-004h]
           mov al, byte ptr [edx+011h]
           mov byte ptr [ecx+000000490h], al
           mov ecx, dword ptr [ebp-000000414h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000414h], ecx
           jmp l10016B0D
;
;* Jump:
; 10016B23(C) 
;
l10016B6D: jmp near ptr l10016AA2
;
;* Jump:
; 10016AD0(C) 
;
l10016B72: jmp near ptr l10016A7A
;
;* Jump:
; 10016A90(C) 
;
l10016B77: mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           test edx, edx
           je l10016BF2
           mov dword ptr [ebp-000000418h], 000000000h
           jmp l10016B9F
;
;* Jump:
; 10016BF0(U) 
;
l10016B90: mov eax, dword ptr [ebp-000000418h]
           add eax, 000000001h
           mov dword ptr [ebp-000000418h], eax
;
;* Jump:
; 10016B8E(U) 
;
l10016B9F: mov ecx, dword ptr [ebp-000000418h]
           cmp ecx, dword ptr [ebp-000000410h]
           jnl l10016BF2
           mov edx, dword ptr [ebp-00000040Ch]
           add edx, dword ptr [ebp-000000418h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           mov dword ptr [ebp-000000534h], eax
           cmp dword ptr [ebp-000000534h], 000000000h
           jl l10016BD6
           cmp dword ptr [ebp-000000534h], 00000000Fh
           jle l10016BF0
;
;* Jump:
; 10016BCB(C) 
;
l10016BD6: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10016BD4(C) 
;
l10016BF0: jmp l10016B90
;
;* Jump:
; 10016B82(C), 10016BAB(C) 
;
l10016BF2: pop edi
           mov esp, ebp
           pop ebp
           ret
l10016730 ENDP
;
;* Call:
; 10016DD7, 10016E4F, 1001725D, 10017337, 10017434, 10017529, 100175FF, 100176F0, 
; 1001D7B2, 1001D88C, 1001DB40, 1001DC35, 1001DD06, 1001DE72, 1001E03F, 1001E18E, 
; 1001E232, 1001E2DB, 1001E456 
;
l10016BF7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00000017Ch], 000000000h
           jne l10016D2E
;
;* Jump:
; 10016D27(U) 
;
l10016C27: cmp dword ptr [ebp+010h], 000000019h
           jnl l10016D2C
           cmp dword ptr [ebp-008h], 000000000h
           jne l10016C6E
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+018h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10016C57
           xor al, al
           jmp near ptr l10016DAE
;
;* Jump:
; 10016C4E(C) 
;
l10016C57: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10016C35(C) 
;
l10016C6E: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-010h], 0000000FFh
           jne l10016D12
;
;* Jump:
; 10016CF3(C) 
;
l10016C93: cmp dword ptr [ebp-008h], 000000000h
           jne l10016CD0
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+018h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10016CB9
           xor al, al
           jmp near ptr l10016DAE
;
;* Jump:
; 10016CB0(C) 
;
l10016CB9: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10016C97(C) 
;
l10016CD0: mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-010h], 0000000FFh
           je l10016C93
           cmp dword ptr [ebp-010h], 000000000h
           jne l10016D04
           mov dword ptr [ebp-010h], 0000000FFh
           jmp l10016D12
;
;* Jump:
; 10016CF9(C) 
;
l10016D04: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+00000017Ch], ecx
           jmp l10016D2E
;
;* Jump:
; 10016C91(C), 10016D02(U) 
;
l10016D12: mov edx, dword ptr [ebp+00Ch]
           shl edx, 008h
           or edx, dword ptr [ebp-010h]
           mov dword ptr [ebp+00Ch], edx
           mov eax, dword ptr [ebp+010h]
           add eax, 000000008h
           mov dword ptr [ebp+010h], eax
           jmp near ptr l10016C27
;
;* Jump:
; 10016C2B(C) 
;
l10016D2C: jmp l10016D89
;
;* Jump:
; 10016C21(C), 10016D10(U) 
;
l10016D2E: mov ecx, dword ptr [ebp+014h]
           cmp ecx, dword ptr [ebp+010h]
           jle l10016D89
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+000000198h]
           xor ecx, ecx
           mov cl, byte ptr [eax+008h]
           test ecx, ecx
           jne l10016D72
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000075h
           push 0FFFFFFFFh
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+000000198h]
           mov byte ptr [edx+008h], 001h
;
;* Jump:
; 10016D46(C) 
;
l10016D72: mov ecx, 000000019h
           sub ecx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           shl eax, cl
           mov dword ptr [ebp+00Ch], eax
           mov dword ptr [ebp+010h], 000000019h
;
;* Jump:
; 10016D2C(U), 10016D34(C) 
;
l10016D89: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+00Ch], edx
           mov al, 001h
;
;* Jump:
; 10016C52(U), 10016CB4(U) 
;
l10016DAE: mov esp, ebp
           pop ebp
           ret
l10016BF7 ENDP
;
;* Call:
; 100172F1, 100174C8, 10017693, 1001D846, 1001DBD4, 1001E107 
;
l10016DB2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+010h]
           cmp ecx, dword ptr [ebp-004h]
           jnl l10016E02
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10016DF0
           or eax, 0FFFFFFFFh
           jmp near ptr l10016F01
;
;* Jump:
; 10016DE6(C) 
;
l10016DF0: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp+010h], eax
;
;* Jump:
; 10016DC5(C) 
;
l10016E02: mov ecx, dword ptr [ebp+010h]
           sub ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp+010h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           sar edx, cl
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           shl eax, cl
           sub eax, 000000001h
           and edx, eax
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10016E9F(U) 
;
l10016E25: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+ecx*04h]
           jle l10016EA1
           mov ecx, dword ptr [ebp-008h]
           shl ecx, 001h
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+010h], 000000001h
           jnl l10016E7A
           push 000000001h
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10016E68
           or eax, 0FFFFFFFFh
           jmp near ptr l10016F01
;
;* Jump:
; 10016E5E(C) 
;
l10016E68: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp+010h], edx
;
;* Jump:
; 10016E3F(C) 
;
l10016E7A: mov eax, dword ptr [ebp+010h]
           sub eax, 000000001h
           mov dword ptr [ebp+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           sar edx, cl
           and edx, 000000001h
           mov eax, dword ptr [ebp-008h]
           or eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           jmp l10016E25
;
;* Jump:
; 10016E31(C) 
;
l10016EA1: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+00Ch], edx
           cmp dword ptr [ebp-004h], 000000010h
           jle l10016EE3
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000076h
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           xor eax, eax
           jmp l10016F01
;
;* Jump:
; 10016EB7(C) 
;
l10016EE3: mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+00000008Ch]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+014h]
           mov esi, dword ptr [ebp-008h]
           add esi, dword ptr [edx+ecx*04h+048h]
           xor ecx, ecx
           mov cl, byte ptr [eax+esi+011h]
           mov eax, ecx
;
;* Jump:
; 10016DEB(U), 10016E63(U), 10016EE1(U) 
;
l10016F01: pop esi
           mov esp, ebp
           pop ebp
           ret
l10016DB2 ENDP
;
;* Call:
; 1001C4DB, 1001F607 
;
l10016F06 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push 0000000ACh
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000198h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10016F7E
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10017160
           mov dword ptr [ebp-008h], 000000000h
           jmp l10016F56
;
;* Jump:
; 10016F78(U) 
;
l10016F4D: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10016F4B(U) 
;
l10016F56: cmp dword ptr [ebp-008h], 000000004h
           jnl l10016F7A
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+038h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+028h], 000000000h
           jmp l10016F4D
;
;* Jump:
; 10016F5A(C) 
;
l10016F7A: mov esp, ebp
           pop ebp
           ret
l10016F06 ENDP
;
l10016F7E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+00000016Ch], 000000000h
           jne l10016FC1
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000170h], 00000003Fh
           jne l10016FC1
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+000000174h], 000000000h
           jne l10016FC1
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000178h], 000000000h
           je l10016FDE
;
;* Jump:
; 10016F9B(C), 10016FA7(C), 10016FB3(C) 
;
l10016FC1: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000007Ah
           push 0FFFFFFFFh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
;
;* Jump:
; 10016FBF(C) 
;
l10016FDE: mov dword ptr [ebp-010h], 000000000h
           jmp l10016FF0
;
;* Jump:
; 10017068(U) 
;
l10016FE7: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10016FE5(U) 
;
l10016FF0: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+000000124h]
           jnl l1001706D
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000128h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-008h]
           lea edx, [ecx+eax*04h+028h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10016730
           add esp, 000000010h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           lea ecx, [eax+edx*04h+038h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10016730
           add esp, 000000010h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h+014h], 000000000h
           jmp near ptr l10016FE7
;
;* Jump:
; 10016FFC(C) 
;
l1001706D: mov dword ptr [ebp-018h], 000000000h
           jmp l1001707F
;
;* Jump:
; 1001712C(U) 
;
l10017076: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10017074(U) 
;
l1001707F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+000000140h]
           jnl l10017131
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000144h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000128h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-008h]
           mov ecx, dword ptr [esi+ecx*04h+028h]
           mov dword ptr [eax+edx*04h+048h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [esi+eax*04h+038h]
           mov dword ptr [edx+ecx*04h+070h], eax
           mov ecx, dword ptr [ebp-00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+030h]
           test edx, edx
           je l10017112
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-018h]
           mov byte ptr [eax+000000098h], 001h
           mov ecx, dword ptr [ebp-00Ch]
           xor edx, edx
           cmp dword ptr [ecx+024h], 000000001h
           setg  dl
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-018h]
           mov byte ptr [eax+0000000A2h], dl
           jmp l1001712C
;
;* Jump:
; 100170E9(C) 
;
l10017112: mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-018h]
           mov byte ptr [ecx+0000000A2h], 000h
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-018h]
           mov byte ptr [edx+000000098h], 000h
;
;* Jump:
; 10017110(U) 
;
l1001712C: jmp near ptr l10017076
;
;* Jump:
; 1001708B(C) 
;
l10017131: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+008h], 000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000FCh]
           mov dword ptr [eax+024h], edx
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10016F7E ENDP
;
l10017160 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+0000000FCh], 000000000h
           je l100171A3
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+024h], 000000000h
           jne l100171A3
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10017795
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100171A3
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 1001717C(C), 10017185(C), 1001719A(C) 
;
l100171A3: mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx+008h]
           test eax, eax
           jne l10017780
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000014h
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ebp-014h], edx
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-034h], 000000000h
           jmp l10017211
;
;* Jump:
; 10017735(U) 
;
l10017208: mov eax, dword ptr [ebp-034h]
           add eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 10017206(U) 
;
l10017211: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-034h]
           cmp edx, dword ptr [ecx+000000140h]
           jnl l1001773A
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-04Ch], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+eax*04h+048h]
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+eax*04h+070h]
           mov dword ptr [ebp-040h], edx
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017290
           push 000000000h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10017275
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 1001726C(C) 
;
l10017275: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017290
           mov dword ptr [ebp-050h], 000000001h
           jmp l100172DD
;
;* Jump:
; 1001724D(C), 10017285(C) 
;
l10017290: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-054h], edx
           mov eax, dword ptr [ebp-054h]
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-050h], edx
           cmp dword ptr [ebp-050h], 000000000h
           je l100172D6
           mov eax, dword ptr [ebp-01Ch]
           sub eax, dword ptr [ebp-050h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-048h]
           add ecx, dword ptr [ebp-054h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-03Ch], edx
           jmp l10017315
;
;* Jump:
; 100172B8(C) 
;
l100172D6: mov dword ptr [ebp-050h], 000000009h
;
;* Jump:
; 1001728E(U) 
;
l100172DD: mov eax, dword ptr [ebp-050h]
           push eax
           mov ecx, dword ptr [ebp-048h]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-03Ch], eax
           cmp dword ptr [ebp-03Ch], 000000000h
           jnl l10017309
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 10017300(C) 
;
l10017309: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100172D4(U) 
;
l10017315: cmp dword ptr [ebp-03Ch], 000000000h
           je l100173AB
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [ebp-03Ch]
           jnl l1001735B
           mov edx, dword ptr [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001734F
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 10017346(C) 
;
l1001734F: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10017325(C) 
;
l1001735B: mov edx, dword ptr [ebp-01Ch]
           sub edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-01Ch]
           sar eax, cl
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-03Ch]
           shl edx, cl
           sub edx, 000000001h
           and eax, edx
           mov dword ptr [ebp-038h], eax
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-038h]
           cmp ecx, dword ptr [offset g10042748+eax*04h]
           jnl l1001739F
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-038h]
           add eax, dword ptr [offset g10042788+edx*04h]
           mov dword ptr [ebp-06Ch], eax
           jmp l100173A5
;
;* Jump:
; 1001738B(C) 
;
l1001739F: mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-06Ch], ecx
;
;* Jump:
; 1001739D(U) 
;
l100173A5: mov edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-03Ch], edx
;
;* Jump:
; 10017319(C) 
;
l100173AB: mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-034h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000098h]
           test ecx, ecx
           je l100173EE
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000144h]
           mov dword ptr [ebp-058h], ecx
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [ebp-03Ch]
           add eax, dword ptr [ebp+edx*04h-018h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp+ecx*04h-018h], edx
           mov eax, dword ptr [ebp-04Ch]
           mov cx, word ptr [ebp-03Ch]
           mov word ptr [eax], cx
;
;* Jump:
; 100173BB(C) 
;
l100173EE: mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-034h]
           xor eax, eax
           mov al, byte ptr [edx+0000000A2h]
           test eax, eax
           je l100175CF
           mov dword ptr [ebp-044h], 000000001h
           jmp l10017416
;
;* Jump:
; 100175C5(U) 
;
l1001740D: mov ecx, dword ptr [ebp-044h]
           add ecx, 000000001h
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 1001740B(U) 
;
l10017416: cmp dword ptr [ebp-044h], 000000040h
           jnl l100175CA
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017467
           push 000000000h
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001744C
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 10017443(C) 
;
l1001744C: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017467
           mov dword ptr [ebp-05Ch], 000000001h
           jmp l100174B4
;
;* Jump:
; 10017424(C), 1001745C(C) 
;
l10017467: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-05Ch], edx
           cmp dword ptr [ebp-05Ch], 000000000h
           je l100174AD
           mov eax, dword ptr [ebp-01Ch]
           sub eax, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, dword ptr [ebp-060h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-03Ch], edx
           jmp l100174EC
;
;* Jump:
; 1001748F(C) 
;
l100174AD: mov dword ptr [ebp-05Ch], 000000009h
;
;* Jump:
; 10017465(U) 
;
l100174B4: mov eax, dword ptr [ebp-05Ch]
           push eax
           mov ecx, dword ptr [ebp-040h]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-03Ch], eax
           cmp dword ptr [ebp-03Ch], 000000000h
           jnl l100174E0
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 100174D7(C) 
;
l100174E0: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100174AB(U) 
;
l100174EC: mov ecx, dword ptr [ebp-03Ch]
           sar ecx, 004h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-03Ch]
           and edx, 00000000Fh
           mov dword ptr [ebp-03Ch], edx
           cmp dword ptr [ebp-03Ch], 000000000h
           je l100175B4
           mov eax, dword ptr [ebp-044h]
           add eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [ebp-03Ch]
           jnl l1001754D
           mov edx, dword ptr [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10017541
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 10017538(C) 
;
l10017541: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10017517(C) 
;
l1001754D: mov edx, dword ptr [ebp-01Ch]
           sub edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-01Ch]
           sar eax, cl
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-03Ch]
           shl edx, cl
           sub edx, 000000001h
           and eax, edx
           mov dword ptr [ebp-038h], eax
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-038h]
           cmp ecx, dword ptr [offset g10042748+eax*04h]
           jnl l10017591
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-038h]
           add eax, dword ptr [offset g10042788+edx*04h]
           mov dword ptr [ebp-070h], eax
           jmp l10017597
;
;* Jump:
; 1001757D(C) 
;
l10017591: mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-070h], ecx
;
;* Jump:
; 1001758F(U) 
;
l10017597: mov edx, dword ptr [ebp-070h]
           mov dword ptr [ebp-03Ch], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [offset g10042B78+eax*04h]
           mov edx, dword ptr [ebp-04Ch]
           mov ax, word ptr [ebp-03Ch]
           mov word ptr [edx+ecx*02h], ax
           jmp l100175C5
;
;* Jump:
; 10017502(C) 
;
l100175B4: cmp dword ptr [ebp-038h], 00000000Fh
           je l100175BC
           jmp l100175CA
;
;* Jump:
; 100175B8(C) 
;
l100175BC: mov ecx, dword ptr [ebp-044h]
           add ecx, 00000000Fh
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 100175B2(U) 
;
l100175C5: jmp near ptr l1001740D
;
;* Jump:
; 1001741A(C), 100175BA(U) 
;
l100175CA: jmp near ptr l10017735
;
;* Jump:
; 100173FE(C) 
;
l100175CF: mov dword ptr [ebp-044h], 000000001h
           jmp l100175E1
;
;* Jump:
; 10017730(U) 
;
l100175D8: mov edx, dword ptr [ebp-044h]
           add edx, 000000001h
           mov dword ptr [ebp-044h], edx
;
;* Jump:
; 100175D6(U) 
;
l100175E1: cmp dword ptr [ebp-044h], 000000040h
           jnl l10017735
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017632
           push 000000000h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10017617
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 1001760E(C) 
;
l10017617: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000008h
           jnl l10017632
           mov dword ptr [ebp-064h], 000000001h
           jmp l1001767F
;
;* Jump:
; 100175EF(C), 10017627(C) 
;
l10017632: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-068h], edx
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-064h], edx
           cmp dword ptr [ebp-064h], 000000000h
           je l10017678
           mov eax, dword ptr [ebp-01Ch]
           sub eax, dword ptr [ebp-064h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, dword ptr [ebp-068h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-03Ch], edx
           jmp l100176B7
;
;* Jump:
; 1001765A(C) 
;
l10017678: mov dword ptr [ebp-064h], 000000009h
;
;* Jump:
; 10017630(U) 
;
l1001767F: mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp-040h]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-03Ch], eax
           cmp dword ptr [ebp-03Ch], 000000000h
           jnl l100176AB
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 100176A2(C) 
;
l100176AB: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10017676(U) 
;
l100176B7: mov ecx, dword ptr [ebp-03Ch]
           sar ecx, 004h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-03Ch]
           and edx, 00000000Fh
           mov dword ptr [ebp-03Ch], edx
           cmp dword ptr [ebp-03Ch], 000000000h
           je l1001771F
           mov eax, dword ptr [ebp-044h]
           add eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [ebp-03Ch]
           jnl l10017714
           mov edx, dword ptr [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l10017708
           xor al, al
           jmp near ptr l10017791
;
;* Jump:
; 100176FF(C) 
;
l10017708: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 100176DE(C) 
;
l10017714: mov edx, dword ptr [ebp-01Ch]
           sub edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-01Ch], edx
           jmp l10017730
;
;* Jump:
; 100176CD(C) 
;
l1001771F: cmp dword ptr [ebp-038h], 00000000Fh
           je l10017727
           jmp l10017735
;
;* Jump:
; 10017723(C) 
;
l10017727: mov eax, dword ptr [ebp-044h]
           add eax, 00000000Fh
           mov dword ptr [ebp-044h], eax
;
;* Jump:
; 1001771D(U) 
;
l10017730: jmp near ptr l100175D8
;
;* Jump:
; 100175CA(U), 100175E5(C), 10017725(U) 
;
l10017735: jmp near ptr l10017208
;
;* Jump:
; 1001721D(C) 
;
l1001773A: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000014h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00Ch], ecx
;
;* Jump:
; 100171AD(C) 
;
l10017780: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+024h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+024h], eax
           mov al, 001h
;
;* Jump:
; 1001719E(U), 10017270(U), 10017304(U), 1001734A(U), 10017447(U), 
; 100174DB(U), 1001753C(U), 10017612(U), 100176A6(U), 10017703(U) 
;
l10017791: mov esp, ebp
           pop ebp
           ret
l10017160 ENDP
;
;* Call:
; 1001718B 
;
l10017795 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+000000194h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov ecx, dword ptr [ecx+014h]
           add ecx, eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov dword ptr [eax+014h], ecx
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           call [ecx+008h]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100177FA
           xor al, al
           jmp l1001784E
;
;* Jump:
; 100177F4(C) 
;
l100177FA: mov dword ptr [ebp-008h], 000000000h
           jmp l1001780C
;
;* Jump:
; 10017828(U) 
;
l10017803: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10017801(U) 
;
l1001780C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+000000124h]
           jnl l1001782A
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+014h], 000000000h
           jmp l10017803
;
;* Jump:
; 10017818(C) 
;
l1001782A: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000FCh]
           mov dword ptr [ecx+024h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+00000017Ch], 000000000h
           jne l1001784C
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+008h], 000h
;
;* Jump:
; 10017843(C) 
;
l1001784C: mov al, 001h
;
;* Jump:
; 100177F8(U) 
;
l1001784E: mov esp, ebp
           pop ebp
           ret
l10017795 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100135EB 
;
l10017860 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000018h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000190h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10017CAB
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l100180D6
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l100178C6
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], offset l10017C97
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+010h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+011h], 000h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+014h], 001h
           mov esp, ebp
           pop ebp
           ret
l10017860 ENDP
;
;* Call:
; 10017D4B 
;
l100178C6 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001791E
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10017BC0
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000188h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           mov eax, dword ptr [eax+004h]
           mov dword ptr [edx], eax
           pop ebp
           ret
l100178C6 ENDP
;
;* Call:
; 100178CD 
;
l1001791E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push esi
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000124h], 000000001h
           jne l100179DB
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000128h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [eax+000000138h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+00000013Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+034h], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+038h], 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+03Ch], 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [eax+040h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+044h], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+020h]
           xor edx, edx
           div dword ptr [esi+00Ch]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l100179B3
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100179A8(C) 
;
l100179B3: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000140h], 000000001h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000144h], 000000000h
           jmp near ptr l10017BBB
;
;* Jump:
; 1001792F(C) 
;
l100179DB: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000124h], 000000000h
           jle l100179F3
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000124h], 000000004h
           jle l10017A2A
;
;* Jump:
; 100179E5(C) 
;
l100179F3: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Ah
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000124h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+01Ch], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100179F1(C) 
;
l10017A2A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000110h]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000138h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00000013Ch], eax
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000140h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           jmp l10017A93
;
;* Jump:
; 10017BB6(U) 
;
l10017A8A: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10017A88(U) 
;
l10017A93: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+000000124h]
           jnl l10017BBB
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000128h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+034h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+038h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+034h]
           imul edx, dword ptr [ecx+038h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+03Ch], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+034h]
           imul eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+040h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+01Ch]
           xor edx, edx
           div dword ptr [ecx+034h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l10017B13
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+034h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10017B08(C) 
;
l10017B13: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+044h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [eax+020h]
           xor edx, edx
           div dword ptr [ecx+038h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l10017B3C
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+038h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10017B31(C) 
;
l10017B3C: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000140h]
           add eax, dword ptr [ebp-008h]
           cmp eax, 00000000Ah
           jle l10017B79
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Dh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10017B5D(C), 10017BB4(U) 
;
l10017B79: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           test eax, eax
           jle l10017BB6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000140h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+eax*04h+000000144h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000140h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000140h], ecx
           jmp l10017B79
;
;* Jump:
; 10017B87(C) 
;
l10017BB6: jmp near ptr l10017A8A
;
;* Jump:
; 100179D6(U), 10017A9F(C) 
;
l10017BBB: pop esi
           mov esp, ebp
           pop ebp
           ret
l1001791E ENDP
;
;* Call:
; 100178D9 
;
l10017BC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push esi
           push edi
           mov dword ptr [ebp-010h], 000000000h
           jmp l10017BDA
;
;* Jump:
; 10017C05(U), 10017C8C(U) 
;
l10017BD1: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10017BCF(U) 
;
l10017BDA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+000000124h]
           jnl l10017C91
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000128h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+04Ch], 000000000h
           je l10017C07
           jmp l10017BD1
;
;* Jump:
; 10017C03(C) 
;
l10017C07: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jl l10017C2C
           cmp dword ptr [ebp-004h], 000000004h
           jnl l10017C2C
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+eax*04h+000000090h], 000000000h
           jne l10017C51
;
;* Jump:
; 10017C14(C), 10017C1A(C) 
;
l10017C2C: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000034h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10017C2A(C) 
;
l10017C51: push 000000082h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov esi, dword ptr [edx+ecx*04h+000000090h]
           mov ecx, 000000020h
           mov edi, dword ptr [ebp-008h]
           rep movsd
           movsw
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+04Ch], ecx
           jmp near ptr l10017BD1
;
;* Jump:
; 10017BE6(C) 
;
l10017C91: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10017BC0 ENDP
;
l10017C97 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           mov dword ptr [ecx], offset l10017CAB
           pop ebp
           ret
l10017C97 ENDP
;
l10017CAB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           test eax, eax
           je l10017CD3
           mov eax, 000000002h
           jmp near ptr l10017DB9
;
;* Jump:
; 10017CC7(C) 
;
l10017CD3: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           call [eax+004h]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000001h
           je l10017D00
           cmp dword ptr [ebp-00Ch], 000000002h
           je l10017D55
           jmp near ptr l10017DB6
;
;* Jump:
; 10017CF3(C) 
;
l10017D00: mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx+014h]
           test eax, eax
           je l10017D21
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10017DBD
           add esp, 000000004h
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+014h], 000h
           jmp l10017D53
;
;* Jump:
; 10017D0A(C) 
;
l10017D21: mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+010h]
           test ecx, ecx
           jne l10017D47
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000023h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10017D2B(C) 
;
l10017D47: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100178C6
           add esp, 000000004h
;
;* Jump:
; 10017D1F(U) 
;
l10017D53: jmp l10017DB6
;
;* Jump:
; 10017CF9(C) 
;
l10017D55: mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+011h], 001h
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+014h]
           test ecx, ecx
           je l10017D96
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Dh]
           test ecx, ecx
           je l10017D94
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000003Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10017D78(C) 
;
l10017D94: jmp l10017DB6
;
;* Jump:
; 10017D66(C) 
;
l10017D96: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+000000084h]
           cmp eax, dword ptr [edx+07Ch]
           jle l10017DB6
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+07Ch]
           mov dword ptr [ecx+000000084h], eax
;
;* Jump:
; 10017CFB(U), 10017D53(U), 10017D94(U), 10017DA5(C) 
;
l10017DB6: mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10017CCE(U) 
;
l10017DB9: mov esp, ebp
           pop ebp
           ret
l10017CAB ENDP
;
;* Call:
; 10017D10 
;
l10017DBD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+020h], 00000FFDCh
           jg l10017DDB
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+01Ch], 00000FFDCh
           jle l10017E01
;
;* Jump:
; 10017DCD(C) 
;
l10017DDB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000029h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 00000FFDCh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10017DD9(C) 
;
l10017E01: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000C0h], 000000008h
           je l10017E38
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Fh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C0h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10017E0B(C) 
;
l10017E38: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+024h], 00000000Ah
           jle l10017E75
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Ah
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+01Ch], 00000000Ah
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10017E3F(C) 
;
l10017E75: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+000000110h], 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000114h], 000000001h
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov dword ptr [ebp-004h], ecx
           jmp l10017EB6
;
;* Jump:
; 10017F6B(U) 
;
l10017EA4: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000054h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10017EA2(U) 
;
l10017EB6: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+024h]
           jnl l10017F70
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+008h], 000000000h
           jle l10017EE9
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+008h], 000000004h
           jg l10017EE9
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+00Ch], 000000000h
           jle l10017EE9
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00Ch], 000000004h
           jle l10017F03
;
;* Jump:
; 10017ECC(C), 10017ED5(C), 10017EDE(C) 
;
l10017EE9: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000012h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10017EE7(C) 
;
l10017F03: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+000000110h]
           cmp edx, dword ptr [ecx+008h]
           jle l10017F22
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000110h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10017F2B
;
;* Jump:
; 10017F12(C) 
;
l10017F22: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10017F20(U) 
;
l10017F2B: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+000000110h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+000000114h]
           cmp edx, dword ptr [ecx+00Ch]
           jle l10017F56
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000114h]
           mov dword ptr [ebp-010h], ecx
           jmp l10017F5F
;
;* Jump:
; 10017F46(C) 
;
l10017F56: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10017F54(U) 
;
l10017F5F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+000000114h], edx
           jmp near ptr l10017EA4
;
;* Jump:
; 10017EBF(C) 
;
l10017F70: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000118h], 000000008h
           mov dword ptr [ebp-008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-004h], edx
           jmp l10017FA4
;
;* Jump:
; 1001806C(U) 
;
l10017F92: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000054h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10017F90(U) 
;
l10017FA4: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+024h]
           jnl l10018071
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+024h], 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000110h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+01Ch]
           imul eax, dword ptr [edx+008h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+020h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000110h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+01Ch]
           imul eax, dword ptr [edx+008h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+020h]
           imul eax, dword ptr [edx+00Ch]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+02Ch], eax
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+030h], 001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+04Ch], 000000000h
           jmp near ptr l10017F92
;
;* Jump:
; 10017FAD(C) 
;
l10018071: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000114h]
           shl edx, 003h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           call l100268A0
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000011Ch], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+000000124h]
           cmp edx, dword ptr [ecx+024h]
           jl l100180B6
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000C8h]
           test ecx, ecx
           je l100180C5
;
;* Jump:
; 100180A5(C) 
;
l100180B6: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           mov byte ptr [eax+010h], 001h
           jmp l100180D2
;
;* Jump:
; 100180B4(C) 
;
l100180C5: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           mov byte ptr [edx+010h], 000h
;
;* Jump:
; 100180C3(U) 
;
l100180D2: mov esp, ebp
           pop ebp
           ret
l10017DBD ENDP
;
l100180D6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10017CAB
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+010h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+011h], 000h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+014h], 001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+010h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           call [edx]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+00000008Ch], 000000000h
           mov esp, ebp
           pop ebp
           ret
l100180D6 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C539 
;
l10018140 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push esi
           push 000000050h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+000000184h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], offset l10018398
           mov eax, dword ptr [ebp+00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l10018198
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001817C(C) 
;
l10018198: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           test edx, edx
           je l100181ED
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000118h], 000000002h
           jnl l100181D0
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000002Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100181B4(C) 
;
l100181D0: mov eax, dword ptr [ebp+008h]
           push eax
           call l10018280
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000118h]
           add edx, 000000002h
           mov dword ptr [ebp-004h], edx
           jmp l100181F9
;
;* Jump:
; 100181A8(C) 
;
l100181ED: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000118h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100181EB(U) 
;
l100181F9: mov dword ptr [ebp-010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-00Ch], eax
           jmp l10018220
;
;* Jump:
; 10018279(U) 
;
l1001820E: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000054h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001820C(U) 
;
l10018220: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+024h]
           jnl l1001827B
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+00Ch]
           imul ecx, dword ptr [eax+024h]
           mov esi, dword ptr [ebp+008h]
           mov eax, ecx
           cdq
           idiv dword ptr [esi+000000118h]
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-014h]
           imul edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+01Ch]
           imul edx, dword ptr [ecx+024h]
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+008h]
           add esp, 000000010h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h+008h], eax
           jmp l1001820E
;
;* Jump:
; 10018229(C) 
;
l1001827B: pop esi
           mov esp, ebp
           pop ebp
           ret
l10018140 ENDP
;
;* Call:
; 100181D4 
;
l10018280 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000118h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+024h]
           shl edx, 001h
           shl edx, 002h
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+038h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+038h]
           lea eax, [edx+eax*04h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+03Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-00Ch], eax
           jmp l100182FE
;
;* Jump:
; 1001838E(U) 
;
l100182EC: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000054h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100182EA(U) 
;
l100182FE: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+024h]
           jnl l10018393
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+00Ch]
           imul ecx, dword ptr [eax+024h]
           mov esi, dword ptr [ebp+008h]
           mov eax, ecx
           cdq
           idiv dword ptr [esi+000000118h]
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-014h]
           add edx, 000000004h
           mov eax, dword ptr [ebp-018h]
           imul eax, edx
           shl eax, 001h
           shl eax, 002h
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           lea eax, [edx+ecx*04h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+038h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000004h
           mov eax, dword ptr [ebp-018h]
           imul eax, edx
           mov ecx, dword ptr [ebp-004h]
           lea edx, [ecx+eax*04h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h], eax
           jmp near ptr l100182EC
;
;* Jump:
; 10018307(C) 
;
l10018393: pop esi
           mov esp, ebp
           pop ebp
           ret
l10018280 ENDP
;
l10018398 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l100183BE
           cmp dword ptr [ebp-008h], 000000002h
           je l10018423
           jmp l1001842F
;
;* Jump:
; 100183B4(C) 
;
l100183BE: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           test edx, edx
           je l10018406
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10018671
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001844D
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+040h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+04Ch], 000000000h
           jmp l10018410
;
;* Jump:
; 100183CE(C) 
;
l10018406: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l100185CF
;
;* Jump:
; 10018404(U) 
;
l10018410: mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+030h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+034h], 000000000h
           jmp l10018449
;
;* Jump:
; 100183BA(C) 
;
l10018423: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l10018A6D
           jmp l10018449
;
;* Jump:
; 100183BC(U) 
;
l1001842F: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10018421(U), 1001842D(U) 
;
l10018449: mov esp, ebp
           pop ebp
           ret
l10018398 ENDP
;
;* Call:
; 100183DE 
;
l1001844D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000118h]
           mov dword ptr [ebp-020h], eax
           mov dword ptr [ebp-01Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-018h], edx
           jmp l10018493
;
;* Jump:
; 100185C5(U) 
;
l10018481: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000054h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001847F(U) 
;
l10018493: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+024h]
           jnl l100185CA
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+00Ch]
           imul eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp+008h]
           cdq
           idiv dword ptr [ecx+000000118h]
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+038h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+ecx*04h+008h]
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l100184F9
;
;* Jump:
; 1001852E(U) 
;
l100184F0: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100184EE(U) 
;
l100184F9: mov edx, dword ptr [ebp-020h]
           add edx, 000000002h
           mov eax, dword ptr [ebp-024h]
           imul eax, edx
           cmp dword ptr [ebp-014h], eax
           jnl l10018530
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-004h]
           mov eax, dword ptr [esi+eax*04h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-00Ch]
           mov eax, dword ptr [esi+eax*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l100184F0
;
;* Jump:
; 10018508(C) 
;
l10018530: mov dword ptr [ebp-014h], 000000000h
           jmp l10018542
;
;* Jump:
; 10018596(U) 
;
l10018539: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10018537(U) 
;
l10018542: mov edx, dword ptr [ebp-024h]
           shl edx, 001h
           cmp dword ptr [ebp-014h], edx
           jnl l10018598
           mov eax, dword ptr [ebp-024h]
           imul eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-020h]
           sub ecx, 000000002h
           mov edx, dword ptr [ebp-024h]
           imul edx, ecx
           add edx, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-004h]
           mov eax, dword ptr [esi+eax*04h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-020h]
           sub ecx, 000000002h
           mov edx, dword ptr [ebp-024h]
           imul edx, ecx
           add edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-024h]
           imul eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-004h]
           mov edx, dword ptr [esi+edx*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10018539
;
;* Jump:
; 1001854A(C) 
;
l10018598: mov dword ptr [ebp-014h], 000000000h
           jmp l100185AA
;
;* Jump:
; 100185C3(U) 
;
l100185A1: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1001859F(U) 
;
l100185AA: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp-024h]
           jnl l100185C5
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov ecx, dword ptr [ecx]
           mov dword ptr [eax+edx*04h], ecx
           jmp l100185A1
;
;* Jump:
; 100185B0(C) 
;
l100185C5: jmp near ptr l10018481
;
;* Jump:
; 1001849C(C) 
;
l100185CA: pop esi
           mov esp, ebp
           pop ebp
           ret
l1001844D ENDP
;
l100185CF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx+030h]
           test eax, eax
           jne l10018614
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           call [ecx+00Ch]
           add esp, 000000008h
           test eax, eax
           jne l1001860D
           jmp l1001866D
;
;* Jump:
; 10018609(C) 
;
l1001860D: mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+030h], 001h
;
;* Jump:
; 100185EB(C) 
;
l10018614: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000118h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000034h
           push eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           call [ecx+004h]
           add esp, 00000001Ch
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+034h]
           cmp eax, dword ptr [ebp-004h]
           jb l1001866D
           mov ecx, dword ptr [ebp-008h]
           mov byte ptr [ecx+030h], 000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+034h], 000000000h
;
;* Jump:
; 1001860B(U), 1001865A(C) 
;
l1001866D: mov esp, ebp
           pop ebp
           ret
l100185CF ENDP
;
l10018671 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+030h]
           test eax, eax
           jne l100186CF
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+040h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+edx*04h+038h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           call [ecx+00Ch]
           add esp, 000000008h
           test eax, eax
           jne l100186B9
           jmp near ptr l10018841
;
;* Jump:
; 100186B2(C) 
;
l100186B9: mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+030h], 001h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+04Ch]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+04Ch], ecx
;
;* Jump:
; 1001868D(C) 
;
l100186CF: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+044h]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp-008h], 000000000h
           je l1001875A
           cmp dword ptr [ebp-008h], 000000001h
           je l1001879D
           cmp dword ptr [ebp-008h], 000000002h
           je l100186F3
           jmp near ptr l10018841
;
;* Jump:
; 100186EC(C) 
;
l100186F3: mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+048h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000034h
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+040h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+eax*04h+038h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000018Ch]
           call [edx+004h]
           add esp, 00000001Ch
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+034h]
           cmp edx, dword ptr [ecx+048h]
           jnb l10018741
           jmp near ptr l10018841
;
;* Jump:
; 1001873A(C) 
;
l10018741: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           cmp edx, dword ptr [ebp+014h]
           jb l1001875A
           jmp near ptr l10018841
;
;* Jump:
; 100186DC(C), 10018753(C) 
;
l1001875A: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+034h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000118h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+048h], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+04Ch]
           cmp eax, dword ptr [edx+00000011Ch]
           jne l10018793
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001897D
           add esp, 000000004h
;
;* Jump:
; 10018785(C) 
;
l10018793: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+044h], 000000001h
;
;* Jump:
; 100186E2(C) 
;
l1001879D: mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+048h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000034h
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+040h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+ecx*04h+038h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000018Ch]
           call [eax+004h]
           add esp, 00000001Ch
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+034h]
           cmp eax, dword ptr [edx+048h]
           jnb l100187E8
           jmp l10018841
;
;* Jump:
; 100187E4(C) 
;
l100187E8: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+04Ch], 000000001h
           jne l100187FD
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10018845
           add esp, 000000004h
;
;* Jump:
; 100187EF(C) 
;
l100187FD: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+040h]
           xor ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+040h], ecx
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+030h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000118h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+034h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000118h]
           add edx, 000000002h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+048h], edx
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+044h], 000000002h
;
;* Jump:
; 100186B4(U), 100186EE(U), 1001873C(U), 10018755(U), 100187E6(U) 
;
l10018841: mov esp, ebp
           pop ebp
           ret
l10018671 ENDP
;
;* Call:
; 100187F5 
;
l10018845 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000118h]
           mov dword ptr [ebp-01Ch], eax
           mov dword ptr [ebp-018h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-014h], edx
           jmp l1001888B
;
;* Jump:
; 10018973(U) 
;
l10018879: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000054h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10018877(U) 
;
l1001888B: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+024h]
           jnl l10018978
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+00Ch]
           imul eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp+008h]
           cdq
           idiv dword ptr [ecx+000000118h]
           mov dword ptr [ebp-020h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+038h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l100188E4
;
;* Jump:
; 1001896E(U) 
;
l100188DB: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100188D9(U) 
;
l100188E4: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-020h]
           jnl l10018973
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-020h]
           imul ecx, eax
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-010h]
           sub edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-004h]
           mov ecx, dword ptr [esi+ecx*04h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-020h]
           imul eax, edx
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           sub ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [esi+eax*04h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000002h
           mov edx, dword ptr [ebp-020h]
           imul edx, ecx
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-004h]
           mov ecx, dword ptr [esi+ecx*04h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000002h
           mov eax, dword ptr [ebp-020h]
           imul eax, edx
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-008h]
           mov edx, dword ptr [esi+edx*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp near ptr l100188DB
;
;* Jump:
; 100188EA(C) 
;
l10018973: jmp near ptr l10018879
;
;* Jump:
; 10018894(C) 
;
l10018978: pop esi
           mov esp, ebp
           pop ebp
           ret
l10018845 ENDP
;
;* Call:
; 1001878B 
;
l1001897D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-018h], eax
           jmp l100189B7
;
;* Jump:
; 10018A63(U) 
;
l100189A5: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000054h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 100189A3(U) 
;
l100189B7: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+024h]
           jnl l10018A68
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+00Ch]
           imul ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-010h], ecx
           mov ecx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cdq
           idiv dword ptr [ecx+000000118h]
           mov dword ptr [ebp-020h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+02Ch]
           xor edx, edx
           div dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jne l10018A00
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100189F8(C) 
;
l10018A00: cmp dword ptr [ebp-01Ch], 000000000h
           jne l10018A19
           mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           cdq
           idiv dword ptr [ebp-020h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+048h], eax
;
;* Jump:
; 10018A04(C) 
;
l10018A19: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+040h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+038h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10018A41
;
;* Jump:
; 10018A61(U) 
;
l10018A38: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10018A36(U) 
;
l10018A41: mov eax, dword ptr [ebp-020h]
           shl eax, 001h
           cmp dword ptr [ebp-014h], eax
           jnl l10018A63
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [esi+eax*04h-004h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10018A38
;
;* Jump:
; 10018A49(C) 
;
l10018A63: jmp near ptr l100189A5
;
;* Jump:
; 100189C0(C) 
;
l10018A68: pop esi
           mov esp, ebp
           pop ebp
           ret
l1001897D ENDP
;
l10018A6D PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           push 000000000h
           push 000000000h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000018Ch]
           call [edx+004h]
           add esp, 00000001Ch
           pop ebp
           ret
l10018A6D ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10018AA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000001h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000079h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+01Ch], eax
           push 0FFFFFFFFh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
;
;* Jump:
; 10018C0D(U) 
;
l10018AEC: cmp dword ptr [ebp-008h], 0000000C0h
           jnl l10018B01
           mov dword ptr [ebp-004h], 000000002h
           jmp near ptr l10018B84
;
;* Jump:
; 10018AF3(C) 
;
l10018B01: cmp dword ptr [ebp-008h], 0000000D0h
           jl l10018B13
           cmp dword ptr [ebp-008h], 0000000D7h
           jle l10018B1C
;
;* Jump:
; 10018B08(C) 
;
l10018B13: mov dword ptr [ebp-004h], 000000003h
           jmp l10018B84
;
;* Jump:
; 10018B11(C) 
;
l10018B1C: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000001h
           and ecx, 000000007h
           add ecx, 0000000D0h
           cmp dword ptr [ebp-008h], ecx
           je l10018B44
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000002h
           and edx, 000000007h
           add edx, 0000000D0h
           cmp dword ptr [ebp-008h], edx
           jne l10018B4D
;
;* Jump:
; 10018B2E(C) 
;
l10018B44: mov dword ptr [ebp-004h], 000000003h
           jmp l10018B84
;
;* Jump:
; 10018B42(C) 
;
l10018B4D: mov eax, dword ptr [ebp+00Ch]
           sub eax, 000000001h
           and eax, 000000007h
           add eax, 0000000D0h
           cmp dword ptr [ebp-008h], eax
           je l10018B74
           mov ecx, dword ptr [ebp+00Ch]
           sub ecx, 000000002h
           and ecx, 000000007h
           add ecx, 0000000D0h
           cmp dword ptr [ebp-008h], ecx
           jne l10018B7D
;
;* Jump:
; 10018B5E(C) 
;
l10018B74: mov dword ptr [ebp-004h], 000000002h
           jmp l10018B84
;
;* Jump:
; 10018B72(C) 
;
l10018B7D: mov dword ptr [ebp-004h], 000000001h
;
;* Jump:
; 10018AFC(U), 10018B1A(U), 10018B4B(U), 10018B7B(U) 
;
l10018B84: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000061h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+01Ch], eax
           push 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000001h
           je l10018BD1
           cmp dword ptr [ebp-00Ch], 000000002h
           je l10018BE2
           cmp dword ptr [ebp-00Ch], 000000003h
           je l10018C09
           jmp l10018C0D
;
;* Jump:
; 10018BC1(C) 
;
l10018BD1: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000017Ch], 000000000h
           mov al, 001h
           jmp l10018C12
;
;* Jump:
; 10018BC7(C) 
;
l10018BE2: mov eax, dword ptr [ebp+008h]
           push eax
           call l10018C16
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018BFB
           xor al, al
           jmp l10018C12
;
;* Jump:
; 10018BF5(C) 
;
l10018BFB: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000017Ch]
           mov dword ptr [ebp-008h], edx
           jmp l10018C0D
;
;* Jump:
; 10018BCD(C) 
;
l10018C09: mov al, 001h
           jmp l10018C12
;
;* Jump:
; 10018BCF(U), 10018C07(U) 
;
l10018C0D: jmp near ptr l10018AEC
;
;* Jump:
; 10018BE0(U), 10018BF9(U), 10018C0B(U) 
;
l10018C12: mov esp, ebp
           pop ebp
           ret
l10018AA0 ENDP
;
;* Call:
; 10018BE6, 100197B4, 1001B6D9 
;
l10018C16 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10018C8A(C), 10018DB3(U) 
;
l10018C36: cmp dword ptr [ebp-00Ch], 000000000h
           jne l10018C6A
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018C59
           xor al, al
           jmp near ptr l10018E32
;
;* Jump:
; 10018C50(C) 
;
l10018C59: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10018C3A(C) 
;
l10018C6A: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l10018C36
;
;* Jump:
; 10018D1B(U) 
;
l10018C8C: cmp dword ptr [ebp-004h], 0000000FFh
           je l10018D20
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [eax+014h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov dword ptr [eax+014h], ecx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 10018D19(C) 
;
l10018CC5: cmp dword ptr [ebp-00Ch], 000000000h
           jne l10018CF9
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-008h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018CE8
           xor al, al
           jmp near ptr l10018E32
;
;* Jump:
; 10018CDF(C) 
;
l10018CE8: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10018CC9(C) 
;
l10018CF9: mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           xor eax, eax
           test eax, eax
           jne l10018CC5
           jmp near ptr l10018C8C
;
;* Jump:
; 10018C93(C), 10018D74(C), 10018D7D(C) 
;
l10018D20: cmp dword ptr [ebp-00Ch], 000000000h
           jne l10018D54
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018D43
           xor al, al
           jmp near ptr l10018E32
;
;* Jump:
; 10018D3A(C) 
;
l10018D43: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10018D24(C) 
;
l10018D54: mov ecx, dword ptr [ebp-00Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           xor edx, edx
           test edx, edx
           jne l10018D20
           cmp dword ptr [ebp-004h], 0000000FFh
           je l10018D20
           cmp dword ptr [ebp-004h], 000000000h
           je l10018D87
           jmp l10018DB8
;
;* Jump:
; 10018D83(C) 
;
l10018D87: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov edx, dword ptr [ecx+014h]
           add edx, 000000002h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ecx+014h], edx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], edx
           jmp near ptr l10018C36
;
;* Jump:
; 10018D85(U) 
;
l10018DB8: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           cmp dword ptr [ecx+014h], 000000000h
           je l10018E13
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000074h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], edx
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ecx+014h], 000000000h
;
;* Jump:
; 10018DC5(C) 
;
l10018E13: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+00000017Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], ecx
           mov al, 001h
;
;* Jump:
; 10018C54(U), 10018CE3(U), 10018D3E(U) 
;
l10018E32: mov esp, ebp
           pop ebp
           ret
l10018C16 ENDP
;
;* Call:
; 100135DF 
;
l10018E36 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push 0000000A8h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000194h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001B79A
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l10019770
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], offset l1001B6C6
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], offset l1001962B
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+05Ch], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp l10018EA4
;
;* Jump:
; 10018EC6(U) 
;
l10018E9B: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10018E99(U) 
;
l10018EA4: cmp dword ptr [ebp-008h], 000000010h
           jnl l10018EC8
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+01Ch], offset l1001962B
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+060h], 000000000h
           jmp l10018E9B
;
;* Jump:
; 10018EA8(C) 
;
l10018EC8: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], offset l10018EEC
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+054h], offset l10018EEC
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001B79A
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l10018E36 ENDP
;
l10018EEC PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10018FB8(C) 
;
l10018F0C: cmp dword ptr [ebp-020h], 000000000h
           jne l10018F40
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018F2F
           xor al, al
           jmp near ptr l10019114
;
;* Jump:
; 10018F26(C) 
;
l10018F2F: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10018F10(C) 
;
l10018F40: mov eax, dword ptr [ebp-020h]
           sub eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-028h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
           cmp dword ptr [ebp-020h], 000000000h
           jne l10018F93
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10018F82
           xor al, al
           jmp near ptr l10019114
;
;* Jump:
; 10018F79(C) 
;
l10018F82: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10018F63(C) 
;
l10018F93: mov ecx, dword ptr [ebp-020h]
           sub ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-028h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           add ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           xor eax, eax
           test eax, eax
           jne l10018F0C
           mov ecx, dword ptr [ebp-014h]
           sub ecx, 000000002h
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 00000000Eh
           jl l10018FD6
           mov dword ptr [ebp-024h], 00000000Eh
           jmp l10018FEB
;
;* Jump:
; 10018FCB(C) 
;
l10018FD6: cmp dword ptr [ebp-014h], 000000000h
           jle l10018FE4
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-024h], edx
           jmp l10018FEB
;
;* Jump:
; 10018FDA(C) 
;
l10018FE4: mov dword ptr [ebp-024h], 000000000h
;
;* Jump:
; 10018FD4(U), 10018FE2(U) 
;
l10018FEB: mov dword ptr [ebp-01Ch], 000000000h
           jmp l10018FFD
;
;* Jump:
; 1001905D(U) 
;
l10018FF4: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10018FF2(U) 
;
l10018FFD: mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [ebp-024h]
           jnb l1001905F
;
;* Jump:
; 1001905B(C) 
;
l10019005: cmp dword ptr [ebp-020h], 000000000h
           jne l10019039
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-018h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019028
           xor al, al
           jmp near ptr l10019114
;
;* Jump:
; 1001901F(C) 
;
l10019028: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10019009(C) 
;
l10019039: mov edx, dword ptr [ebp-020h]
           sub edx, 000000001h
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp+eax-010h], dl
           mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l10019005
           jmp l10018FF4
;
;* Jump:
; 10019003(C) 
;
l1001905F: mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov dword ptr [ebp-02Ch], ecx
           cmp dword ptr [ebp-02Ch], 0000000E0h
           je l10019088
           cmp dword ptr [ebp-02Ch], 0000000EEh
           je l100190A2
           jmp l100190BC
;
;* Jump:
; 1001907B(C) 
;
l10019088: mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-024h]
           push eax
           lea ecx, [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10019118
           add esp, 000000010h
           jmp l100190E7
;
;* Jump:
; 10019084(C) 
;
l100190A2: mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           lea edx, [ebp-010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100194DC
           add esp, 000000010h
           jmp l100190E7
;
;* Jump:
; 10019086(U) 
;
l100190BC: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000044h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000017Ch]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100190A0(U), 100190BA(U) 
;
l100190E7: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [eax+004h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           jle l10019112
           mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           call [edx+010h]
           add esp, 000000008h
;
;* Jump:
; 100190FC(C) 
;
l10019112: mov al, 001h
;
;* Jump:
; 10018F2A(U), 10018F7D(U), 10019023(U) 
;
l10019114: mov esp, ebp
           pop ebp
           ret
l10018EEC ENDP
;
;* Call:
; 10019098, 1001BC3B 
;
l10019118 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+010h]
           add eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp+010h], 00000000Eh
           jb l10019378
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           cmp edx, 00000004Ah
           jne l10019378
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           cmp ecx, 000000046h
           jne l10019378
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+002h]
           cmp eax, 000000049h
           jne l10019378
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+003h]
           cmp edx, 000000046h
           jne l10019378
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           test ecx, ecx
           jne l10019378
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+000000100h], 001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dl, byte ptr [ecx+005h]
           mov byte ptr [eax+000000101h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dl, byte ptr [ecx+006h]
           mov byte ptr [eax+000000102h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dl, byte ptr [ecx+007h]
           mov byte ptr [eax+000000103h], dl
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+008h]
           shl ecx, 008h
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+009h]
           add ecx, eax
           mov edx, dword ptr [ebp+008h]
           mov word ptr [edx+000000104h], cx
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Ah]
           shl ecx, 008h
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+00Bh]
           add ecx, eax
           mov edx, dword ptr [ebp+008h]
           mov word ptr [edx+000000106h], cx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000101h]
           cmp ecx, 000000001h
           je l1001924C
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000077h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+000000101h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000102h]
           mov dword ptr [eax+01Ch], edx
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 10019207(C), 100192CE(C) 
;
l1001924C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000018h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000101h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000102h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov ax, word ptr [edx+000000104h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov ax, word ptr [edx+000000106h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], eax
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+000000103h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000057h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           xor ecx, ecx
           test ecx, ecx
           jne l1001924C
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+00Dh]
           or eax, edx
           test eax, eax
           je l10019327
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000005Ah
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+00Ch]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+00Dh]
           mov dword ptr [ecx+01Ch], eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
;
;* Jump:
; 100192E8(C) 
;
l10019327: mov ecx, dword ptr [ebp-004h]
           sub ecx, 00000000Eh
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+00Dh]
           imul eax, edx
           imul eax, eax, 000000003h
           cmp dword ptr [ebp-004h], eax
           je l10019373
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000058h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
;
;* Jump:
; 10019349(C) 
;
l10019373: jmp near ptr l100194D8
;
;* Jump:
; 1001912B(C), 1001913B(C), 1001914C(C), 1001915D(C), 1001916E(C), 
; 1001917E(C) 
;
l10019378: cmp dword ptr [ebp+010h], 000000006h
           jb l100194B0
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           cmp eax, 00000004Ah
           jne l100194B0
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           cmp edx, 000000046h
           jne l100194B0
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           cmp ecx, 000000058h
           jne l100194B0
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+003h]
           cmp eax, 000000058h
           jne l100194B0
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           test edx, edx
           jne l100194B0
           mov eax, dword ptr [ebp+00Ch]
           mov cl, byte ptr [eax+005h]
           mov byte ptr [ebp-00Ch], cl
           cmp byte ptr [ebp-00Ch], 010h
           je l100193F5
           cmp byte ptr [ebp-00Ch], 011h
           je l10019422
           cmp byte ptr [ebp-00Ch], 013h
           je l1001944C
           jmp near ptr l10019476
;
;* Jump:
; 100193E2(C) 
;
l100193F5: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000006Ch
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           jmp near ptr l100194AE
;
;* Jump:
; 100193E8(C) 
;
l10019422: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000006Dh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           jmp l100194AE
;
;* Jump:
; 100193EE(C) 
;
l1001944C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000006Eh
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           jmp l100194AE
;
;* Jump:
; 100193F0(U) 
;
l10019476: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000059h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
;
;* Jump:
; 1001941D(U), 1001944A(U), 10019474(U) 
;
l100194AE: jmp l100194D8
;
;* Jump:
; 1001937C(C), 1001938C(C), 1001939D(C), 100193AE(C), 100193BF(C), 
; 100193CF(C) 
;
l100194B0: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000004Dh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
;
;* Jump:
; 10019373(U), 100194AE(U) 
;
l100194D8: mov esp, ebp
           pop ebp
           ret
l10019118 ENDP
;
;* Call:
; 100190B2, 1001BC55 
;
l100194DC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           cmp dword ptr [ebp+010h], 00000000Ch
           jb l100195FC
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           cmp ecx, 000000041h
           jne l100195FC
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           cmp eax, 000000064h
           jne l100195FC
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+002h]
           cmp edx, 00000006Fh
           jne l100195FC
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+003h]
           cmp ecx, 000000062h
           jne l100195FC
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           cmp eax, 000000065h
           jne l100195FC
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           shl edx, 008h
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+007h]
           shl eax, 008h
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           add eax, edx
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+009h]
           shl ecx, 008h
           mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+00Ah]
           add ecx, eax
           mov dword ptr [ebp-008h], ecx
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+00Bh]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 100195E2(C) 
;
l10019593: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000004Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           test eax, eax
           jne l10019593
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+000000108h], 001h
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-010h]
           mov byte ptr [edx+000000109h], al
           jmp l10019627
;
;* Jump:
; 100194E6(C), 100194F6(C), 10019507(C), 10019518(C), 10019529(C), 
; 1001953A(C) 
;
l100195FC: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000004Eh
           mov eax, dword ptr [ebp+010h]
           add eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], eax
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 100195FA(U) 
;
l10019627: mov esp, ebp
           pop ebp
           ret
l100194DC ENDP
;
;* Call:
; 10019950, 10019A5E 
;
l1001962B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100196F7(C) 
;
l1001964B: cmp dword ptr [ebp-00Ch], 000000000h
           jne l1001967F
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001966E
           xor al, al
           jmp near ptr l1001976C
;
;* Jump:
; 10019665(C) 
;
l1001966E: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001964F(C) 
;
l1001967F: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l100196D2
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100196C1
           xor al, al
           jmp near ptr l1001976C
;
;* Jump:
; 100196B8(C) 
;
l100196C1: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100196A2(C) 
;
l100196D2: mov ecx, dword ptr [ebp-00Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           xor eax, eax
           test eax, eax
           jne l1001964B
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000002h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000005Bh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jle l1001976A
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           call [eax+010h]
           add esp, 000000008h
;
;* Jump:
; 10019754(C) 
;
l1001976A: mov al, 001h
;
;* Jump:
; 10019669(U), 100196BC(U) 
;
l1001976C: mov esp, ebp
           pop ebp
           ret
l1001962B ENDP
;
l10019770 PROC
           push ebp
           mov ebp, esp
           push ecx
;
;* Jump:
; 10019AAD(U) 
;
l10019774: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+00000017Ch], 000000000h
           jne l100197CC
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           xor eax, eax
           mov al, byte ptr [edx+00Ch]
           test eax, eax
           jne l100197B0
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001B595
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100197AE
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100197A5(C) 
;
l100197AE: jmp l100197CC
;
;* Jump:
; 10019790(C) 
;
l100197B0: mov edx, dword ptr [ebp+008h]
           push edx
           call l10018C16
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100197CC
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 1001977E(C), 100197AE(U), 100197C3(C) 
;
l100197CC: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 0000000FDh
           ja l10019A75
           mov ecx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [ecx+offset g10019AFA]
           jmp [offset g10019AB6+eax*04h]
l10019800: mov edx, dword ptr [ebp+008h]
           push edx
           call l10019BF8
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001981C
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 10019813(C) 
;
l1001981C: jmp near ptr l10019AA0
l10019821: push 000000000h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10019D0E
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l10019841
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 10019838(C) 
;
l10019841: jmp near ptr l10019AA0
l10019846: push 000000000h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10019D0E
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l10019866
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 1001985D(C) 
;
l10019866: jmp near ptr l10019AA0
l1001986B: push 000000001h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10019D0E
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l1001988B
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 10019882(C) 
;
l1001988B: jmp near ptr l10019AA0
l10019890: push 000000001h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10019D0E
           add esp, 00000000Ch
           and eax, 0000000FFh
           test eax, eax
           jne l100198B0
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100198A7(C) 
;
l100198B0: jmp near ptr l10019AA0
l100198B5: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000003Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000017Ch]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
           jmp near ptr l10019AA0
l100198E5: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001A32B
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019901
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100198F8(C) 
;
l10019901: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000017Ch], 000000000h
           mov eax, 000000001h
           jmp near ptr l10019AB2
l10019918: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000055h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000017Ch], 000000000h
           mov eax, 000000002h
           jmp near ptr l10019AB2
l1001994C: mov eax, dword ptr [ebp+008h]
           push eax
           call l1001962B
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019968
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 1001995F(C) 
;
l10019968: jmp near ptr l10019AA0
l1001996D: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001A86C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019989
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 10019980(C) 
;
l10019989: jmp near ptr l10019AA0
l1001998E: mov edx, dword ptr [ebp+008h]
           push edx
           call l1001AF2C
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100199AA
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100199A1(C) 
;
l100199AA: jmp near ptr l10019AA0
l100199AF: mov eax, dword ptr [ebp+008h]
           push eax
           call l1001B3A6
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l100199CB
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100199C2(C) 
;
l100199CB: jmp near ptr l10019AA0
l100199D0: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000017Ch]
           call [eax+edx*04h-000000364h]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019A00
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 100199F7(C) 
;
l10019A00: jmp near ptr l10019AA0
l10019A05: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           call [edx+018h]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019A28
           xor eax, eax
           jmp near ptr l10019AB2
;
;* Jump:
; 10019A1F(C) 
;
l10019A28: jmp l10019AA0
l10019A2A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000005Ch
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000017Ch]
           mov dword ptr [eax+018h], edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           jmp l10019AA0
l10019A5A: mov eax, dword ptr [ebp+008h]
           push eax
           call l1001962B
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019A73
           xor eax, eax
           jmp l10019AB2
;
;* Jump:
; 10019A6D(C) 
;
l10019A73: jmp l10019AA0
;
;* Jump:
; 100197E8(C) 
;
l10019A75: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000044h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000017Ch]
           mov dword ptr [ecx+018h], eax
;
;* Jump:
; 10019AF6(C) 
;
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001981C(U), 10019841(U), 10019866(U), 1001988B(U), 100198B0(U), 
; 100198E0(U), 10019968(U), 10019989(U), 100199AA(U), 100199CB(U), 
; 10019A00(U), 10019A28(U), 10019A58(U), 10019A73(U) 
;
l10019AA0: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00000017Ch], 000000000h
           jmp near ptr l10019774
;
;* Jump:
; 100197A9(U), 100197C7(U), 10019817(U), 1001983C(U), 10019861(U), 
; 10019886(U), 100198AB(U), 100198FC(U), 10019913(U), 10019947(U), 
; 10019963(U), 10019984(U), 100199A5(U), 100199C6(U), 100199FB(U), 
; 10019A23(U), 10019A71(U) 
;
l10019AB2: mov esp, ebp
           pop ebp
           ret
;
g10019AB6  dd l10019A2A
           dd l10019821
           dd l10019846
           dd l100198B5
           dd l1001996D
           dd l1001986B
           dd l10019890
           dd l1001994C
           dd l10019800
           dd l10019918
           dd l100198E5
           dd l1001998E
           dd l10019A5A
           dd l100199AF
           dd l100199D0
           dd l10019A05
           dd l10019A75
g10019AFA  dd 010101000h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 010101010h
           dd 001101010h
           dd 004030201h
           dd 003030303h
           dd 007030605h
           dd 000030303h
           dd 000000000h
           dd 008000000h
           dd 00C0B0A09h
           dd 00E10100Dh
           dd 00E0E0E0Eh
           dd 00E0E0E0Eh
           dd 00E0E0E0Eh
           dd 0100E0E0Eh
           dd 010101010h
           dd 010101010h
           dd 010101010h
           db 010h
           db 00Fh
l10019770 ENDP
;
;* Call:
; 10019804 
;
l10019BF8 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000066h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00Ch]
           test ecx, ecx
           je l10019C45
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000003Dh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10019C29(C) 
;
l10019C45: mov dword ptr [ebp-004h], 000000000h
           jmp l10019C57
;
;* Jump:
; 10019C84(U) 
;
l10019C4E: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10019C4C(U) 
;
l10019C57: cmp dword ptr [ebp-004h], 000000010h
           jnl l10019C86
           mov edx, dword ptr [ebp+008h]
           add edx, dword ptr [ebp-004h]
           mov byte ptr [edx+0000000CAh], 000h
           mov eax, dword ptr [ebp+008h]
           add eax, dword ptr [ebp-004h]
           mov byte ptr [eax+0000000DAh], 001h
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+0000000EAh], 005h
           jmp l10019C4E
;
;* Jump:
; 10019C5B(C) 
;
l10019C86: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000FCh], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+028h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+00000010Ah], 000h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+000000100h], 000h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+000000101h], 001h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+000000102h], 001h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+000000103h], 000h
           mov eax, dword ptr [ebp+008h]
           mov word ptr [eax+000000104h], 00001h
           mov ecx, dword ptr [ebp+008h]
           mov word ptr [ecx+000000106h], 00001h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+000000108h], 000h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+000000109h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           mov byte ptr [edx+00Ch], 001h
           mov al, 001h
           mov esp, ebp
           pop ebp
           ret
l10019BF8 ENDP
;
;* Call:
; 10019829, 1001984E, 10019873, 10019898 
;
l10019D0E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp+00Ch]
           mov byte ptr [eax+0000000C8h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp+010h]
           mov byte ptr [edx+0000000C9h], al
;
;* Jump:
; 10019DF2(C) 
;
l10019D46: cmp dword ptr [ebp-010h], 000000000h
           jne l10019D7A
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019D69
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019D60(C) 
;
l10019D69: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10019D4A(C) 
;
l10019D7A: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           shl eax, 008h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-010h], 000000000h
           jne l10019DCD
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019DBC
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019DB3(C) 
;
l10019DBC: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10019D9D(C) 
;
l10019DCD: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-008h]
           add edx, ecx
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           xor ecx, ecx
           test ecx, ecx
           jne l10019D46
;
;* Jump:
; 10019E52(C) 
;
l10019DF8: cmp dword ptr [ebp-010h], 000000000h
           jne l10019E2C
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019E1B
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019E12(C) 
;
l10019E1B: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10019DFC(C) 
;
l10019E2C: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000C0h], ecx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           xor ecx, ecx
           test ecx, ecx
           jne l10019DF8
;
;* Jump:
; 10019F09(C) 
;
l10019E54: cmp dword ptr [ebp-010h], 000000000h
           jne l10019E88
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019E77
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019E6E(C) 
;
l10019E77: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10019E58(C) 
;
l10019E88: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           shl ecx, 008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+020h], ecx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-010h], 000000000h
           jne l10019EDE
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019ECD
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019EC4(C) 
;
l10019ECD: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10019EAE(C) 
;
l10019EDE: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           add edx, eax
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+020h], edx
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           xor edx, edx
           test edx, edx
           jne l10019E54
;
;* Jump:
; 10019FC4(C) 
;
l10019F0F: cmp dword ptr [ebp-010h], 000000000h
           jne l10019F43
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019F32
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019F29(C) 
;
l10019F32: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10019F13(C) 
;
l10019F43: mov eax, dword ptr [ebp-010h]
           sub eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+01Ch], edx
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-010h], 000000000h
           jne l10019F99
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019F88
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019F7F(C) 
;
l10019F88: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10019F69(C) 
;
l10019F99: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           add eax, ecx
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           xor eax, eax
           test eax, eax
           jne l10019F0F
;
;* Jump:
; 1001A021(C) 
;
l10019FCA: cmp dword ptr [ebp-010h], 000000000h
           jne l10019FFE
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l10019FED
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 10019FE4(C) 
;
l10019FED: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10019FCE(C) 
;
l10019FFE: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+024h], eax
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           xor eax, eax
           test eax, eax
           jne l10019FCA
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000008h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001A08A(C) 
;
l1001A02C: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000018h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000017Ch]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000064h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           test eax, eax
           jne l1001A02C
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000194h]
           xor eax, eax
           mov al, byte ptr [edx+00Dh]
           test eax, eax
           je l1001A0B8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000003Ah
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001A09C(C) 
;
l1001A0B8: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+020h], 000000000h
           jbe l1001A0D3
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+01Ch], 000000000h
           jbe l1001A0D3
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+024h], 000000000h
           jg l1001A0ED
;
;* Jump:
; 1001A0BF(C), 1001A0C8(C) 
;
l1001A0D3: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000020h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001A0D1(C) 
;
l1001A0ED: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           imul eax, eax, 000000003h
           cmp dword ptr [ebp-008h], eax
           je l1001A115
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001A0F9(C) 
;
l1001A115: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000C4h], 000000000h
           jne l1001A145
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+024h]
           imul edx, edx, 000000054h
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000C4h], eax
;
;* Jump:
; 1001A11F(C) 
;
l1001A145: mov dword ptr [ebp-018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-014h], eax
           jmp l1001A16C
;
;* Jump:
; 1001A302(U) 
;
l1001A15A: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000054h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1001A158(U) 
;
l1001A16C: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+024h]
           jnl l1001A307
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1001A1DA(C) 
;
l1001A184: cmp dword ptr [ebp-010h], 000000000h
           jne l1001A1B8
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A1A7
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 1001A19E(C) 
;
l1001A1A7: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001A188(C) 
;
l1001A1B8: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           xor eax, eax
           test eax, eax
           jne l1001A184
;
;* Jump:
; 1001A230(C) 
;
l1001A1DC: cmp dword ptr [ebp-010h], 000000000h
           jne l1001A210
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A1FF
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 1001A1F6(C) 
;
l1001A1FF: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001A1E0(C) 
;
l1001A210: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           xor edx, edx
           test edx, edx
           jne l1001A1DC
           mov eax, dword ptr [ebp-004h]
           sar eax, 004h
           and eax, 00000000Fh
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp-004h]
           and edx, 00000000Fh
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00Ch], edx
;
;* Jump:
; 1001A2A4(C) 
;
l1001A24D: cmp dword ptr [ebp-010h], 000000000h
           jne l1001A281
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A270
           xor al, al
           jmp near ptr l1001A327
;
;* Jump:
; 1001A267(C) 
;
l1001A270: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001A251(C) 
;
l1001A281: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           xor eax, eax
           test eax, eax
           jne l1001A24D
;
;* Jump:
; 1001A300(C) 
;
l1001A2A6: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           add edx, 000000018h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000065h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           xor edx, edx
           test edx, edx
           jne l1001A2A6
           jmp near ptr l1001A15A
;
;* Jump:
; 1001A175(C) 
;
l1001A307: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov byte ptr [ecx+00Dh], 001h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+004h], edx
           mov al, 001h
;
;* Jump:
; 10019D64(U), 10019DB7(U), 10019E16(U), 10019E72(U), 10019EC8(U), 
; 10019F2D(U), 10019F83(U), 10019FE8(U), 1001A1A2(U), 1001A1FA(U), 
; 1001A26B(U) 
;
l1001A327: mov esp, ebp
           pop ebp
           ret
l10019D0E ENDP
;
;* Call:
; 100198E9 
;
l1001A32B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           xor edx, edx
           mov dl, byte ptr [ecx+00Dh]
           test edx, edx
           jne l1001A377
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000003Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001A35B(C), 1001A423(C) 
;
l1001A377: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A3AB
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A39A
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A391(C) 
;
l1001A39A: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001A37B(C) 
;
l1001A3AB: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-024h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           shl ecx, 008h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           cmp dword ptr [ebp-018h], 000000000h
           jne l1001A3FE
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A3ED
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A3E4(C) 
;
l1001A3ED: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001A3CE(C) 
;
l1001A3FE: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-00Ch]
           add eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
           xor edx, edx
           test edx, edx
           jne l1001A377
;
;* Jump:
; 1001A47D(C) 
;
l1001A429: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A45D
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A44C
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A443(C) 
;
l1001A44C: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001A42D(C) 
;
l1001A45D: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001A429
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000067h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+018h], eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           mov ecx, dword ptr [ebp-028h]
           lea edx, [ecx+ecx+006h]
           cmp dword ptr [ebp-00Ch], edx
           jne l1001A4BF
           cmp dword ptr [ebp-028h], 000000001h
           jl l1001A4BF
           cmp dword ptr [ebp-028h], 000000004h
           jle l1001A4D9
;
;* Jump:
; 1001A4B1(C), 1001A4B7(C) 
;
l1001A4BF: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000000Bh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001A4BD(C) 
;
l1001A4D9: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+000000124h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l1001A4F7
;
;* Jump:
; 1001A68D(U) 
;
l1001A4EE: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1001A4EC(U) 
;
l1001A4F7: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp-028h]
           jnl l1001A692
;
;* Jump:
; 1001A557(C) 
;
l1001A503: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A537
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A526
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A51D(C) 
;
l1001A526: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001A507(C) 
;
l1001A537: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001A503
;
;* Jump:
; 1001A5AD(C) 
;
l1001A559: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A58D
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A57C
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A573(C) 
;
l1001A57C: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001A55D(C) 
;
l1001A58D: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-024h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           xor eax, eax
           test eax, eax
           jne l1001A559
           mov dword ptr [ebp-020h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-01Ch], edx
           jmp l1001A5D6
;
;* Jump:
; 1001A5ED(U) 
;
l1001A5C4: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000054h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001A5C2(U) 
;
l1001A5D6: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx+024h]
           jnl l1001A5EF
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx]
           jne l1001A5ED
           jmp l1001A614
;
;* Jump:
; 1001A5E9(C) 
;
l1001A5ED: jmp l1001A5C4
;
;* Jump:
; 1001A5DF(C) 
;
l1001A5EF: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000005h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001A5EB(U) 
;
l1001A614: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+edx*04h+000000128h], ecx
           mov edx, dword ptr [ebp-004h]
           sar edx, 004h
           and edx, 00000000Fh
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp-004h]
           and ecx, 00000000Fh
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+018h], ecx
;
;* Jump:
; 1001A68B(C) 
;
l1001A63F: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000018h
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000068h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           xor eax, eax
           test eax, eax
           jne l1001A63F
           jmp near ptr l1001A4EE
;
;* Jump:
; 1001A4FD(C), 1001A6E6(C) 
;
l1001A692: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A6C6
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A6B5
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A6AC(C) 
;
l1001A6B5: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1001A696(C) 
;
l1001A6C6: mov ecx, dword ptr [ebp-018h]
           sub ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-024h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
           xor edx, edx
           test edx, edx
           jne l1001A692
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00000016Ch], ecx
;
;* Jump:
; 1001A748(C) 
;
l1001A6F4: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A728
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A717
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A70E(C) 
;
l1001A717: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001A6F8(C) 
;
l1001A728: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-024h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           xor eax, eax
           test eax, eax
           jne l1001A6F4
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000000170h], edx
;
;* Jump:
; 1001A7AA(C) 
;
l1001A756: cmp dword ptr [ebp-018h], 000000000h
           jne l1001A78A
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A779
           xor al, al
           jmp near ptr l1001A868
;
;* Jump:
; 1001A770(C) 
;
l1001A779: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001A75A(C) 
;
l1001A78A: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001A756
           mov edx, dword ptr [ebp-004h]
           sar edx, 004h
           and edx, 00000000Fh
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000174h], edx
           mov ecx, dword ptr [ebp-004h]
           and ecx, 00000000Fh
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000178h], ecx
;
;* Jump:
; 1001A834(C) 
;
l1001A7CD: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           add ecx, 000000018h
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000016Ch]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000170h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000174h]
           mov dword ptr [edx+008h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000178h]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000069h
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           xor ecx, ecx
           test ecx, ecx
           jne l1001A7CD
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+07Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+07Ch], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], ecx
           mov al, 001h
;
;* Jump:
; 1001A395(U), 1001A3E8(U), 1001A447(U), 1001A521(U), 1001A577(U), 
; 1001A6B0(U), 1001A712(U), 1001A774(U) 
;
l1001A868: mov esp, ebp
           pop ebp
           ret
l1001A32B ENDP
;
;* Call:
; 10019971 
;
l1001A86C PROC
           push ebp
           mov ebp, esp
           sub esp, 00000013Ch
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-000000120h], ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-000000130h], eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-000000128h], edx
;
;* Jump:
; 1001A997(C) 
;
l1001A8A0: cmp dword ptr [ebp-000000128h], 000000000h
           jne l1001A8E6
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000120h]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A8C9
           xor al, al
           jmp near ptr l1001AF26
;
;* Jump:
; 1001A8C0(C) 
;
l1001A8C9: mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-000000130h], eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-000000128h], edx
;
;* Jump:
; 1001A8A7(C) 
;
l1001A8E6: mov eax, dword ptr [ebp-000000128h]
           sub eax, 000000001h
           mov dword ptr [ebp-000000128h], eax
           mov ecx, dword ptr [ebp-000000130h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp-000000130h]
           add eax, 000000001h
           mov dword ptr [ebp-000000130h], eax
           cmp dword ptr [ebp-000000128h], 000000000h
           jne l1001A95D
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-000000120h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A940
           xor al, al
           jmp near ptr l1001AF26
;
;* Jump:
; 1001A937(C) 
;
l1001A940: mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-000000128h], eax
;
;* Jump:
; 1001A91E(C) 
;
l1001A95D: mov ecx, dword ptr [ebp-000000128h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp-000000130h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, eax
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-000000130h]
           add edx, 000000001h
           mov dword ptr [ebp-000000130h], edx
           xor eax, eax
           test eax, eax
           jne l1001A8A0
           mov ecx, dword ptr [ebp-00000011Ch]
           sub ecx, 000000002h
           mov dword ptr [ebp-00000011Ch], ecx
;
;* Jump:
; 1001AEDF(U) 
;
l1001A9AC: cmp dword ptr [ebp-00000011Ch], 000000010h
           jle l1001AEE4
;
;* Jump:
; 1001AA31(C) 
;
l1001A9B9: cmp dword ptr [ebp-000000128h], 000000000h
           jne l1001A9FF
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-000000120h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001A9E2
           xor al, al
           jmp near ptr l1001AF26
;
;* Jump:
; 1001A9D9(C) 
;
l1001A9E2: mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-000000130h], edx
           mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000128h], ecx
;
;* Jump:
; 1001A9C0(C) 
;
l1001A9FF: mov edx, dword ptr [ebp-000000128h]
           sub edx, 000000001h
           mov dword ptr [ebp-000000128h], edx
           mov eax, dword ptr [ebp-000000130h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-00000012Ch], ecx
           mov edx, dword ptr [ebp-000000130h]
           add edx, 000000001h
           mov dword ptr [ebp-000000130h], edx
           xor eax, eax
           test eax, eax
           jne l1001A9B9
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000050h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-00000012Ch]
           mov dword ptr [ecx+018h], edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           mov byte ptr [ebp-000000118h], 000h
           mov dword ptr [ebp-000000104h], 000000000h
           mov dword ptr [ebp-000000124h], 000000001h
           jmp l1001AA8A
;
;* Jump:
; 1001AB33(U) 
;
l1001AA7B: mov eax, dword ptr [ebp-000000124h]
           add eax, 000000001h
           mov dword ptr [ebp-000000124h], eax
;
;* Jump:
; 1001AA79(U) 
;
l1001AA8A: cmp dword ptr [ebp-000000124h], 000000010h
           jg l1001AB38
;
;* Jump:
; 1001AB14(C) 
;
l1001AA97: cmp dword ptr [ebp-000000128h], 000000000h
           jne l1001AADD
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-000000120h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001AAC0
           xor al, al
           jmp near ptr l1001AF26
;
;* Jump:
; 1001AAB7(C) 
;
l1001AAC0: mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-000000128h], eax
;
;* Jump:
; 1001AA9E(C) 
;
l1001AADD: mov ecx, dword ptr [ebp-000000128h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp-000000124h]
           mov eax, dword ptr [ebp-000000130h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp+edx-000000118h], cl
           mov edx, dword ptr [ebp-000000130h]
           add edx, 000000001h
           mov dword ptr [ebp-000000130h], edx
           xor eax, eax
           test eax, eax
           jne l1001AA97
           mov ecx, dword ptr [ebp-000000124h]
           xor edx, edx
           mov dl, byte ptr [ebp+ecx-000000118h]
           mov eax, dword ptr [ebp-000000104h]
           add eax, edx
           mov dword ptr [ebp-000000104h], eax
           jmp near ptr l1001AA7B
;
;* Jump:
; 1001AA91(C) 
;
l1001AB38: mov ecx, dword ptr [ebp-00000011Ch]
           sub ecx, 000000011h
           mov dword ptr [ebp-00000011Ch], ecx
;
;* Jump:
; 1001AC1A(C) 
;
l1001AB47: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000018h
           mov dword ptr [ebp-000000138h], eax
           mov ecx, dword ptr [ebp-000000117h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-000000138h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-000000116h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-000000115h]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-000000138h]
           mov dword ptr [eax+008h], edx
           mov ecx, dword ptr [ebp-000000114h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-000000138h]
           mov dword ptr [edx+00Ch], ecx
           mov eax, dword ptr [ebp-000000113h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000112h]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-000000138h]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp-000000111h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-000000138h]
           mov dword ptr [edx+018h], ecx
           mov eax, dword ptr [ebp-000000110h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000056h
           push 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           xor ecx, ecx
           test ecx, ecx
           jne l1001AB47
;
;* Jump:
; 1001ACF3(C) 
;
l1001AC20: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000018h
           mov dword ptr [ebp-00000013Ch], eax
           mov ecx, dword ptr [ebp-00000010Fh]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-00000013Ch]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-00000010Eh]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-00000010Dh]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [eax+008h], edx
           mov ecx, dword ptr [ebp-00000010Ch]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-00000013Ch]
           mov dword ptr [edx+00Ch], ecx
           mov eax, dword ptr [ebp-00000010Bh]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00000010Ah]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp-000000109h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-00000013Ch]
           mov dword ptr [edx+018h], ecx
           mov eax, dword ptr [ebp-000000108h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000056h
           push 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           xor ecx, ecx
           test ecx, ecx
           jne l1001AC20
           cmp dword ptr [ebp-000000104h], 000000100h
           jg l1001AD13
           mov edx, dword ptr [ebp-000000104h]
           cmp edx, dword ptr [ebp-00000011Ch]
           jle l1001AD2D
;
;* Jump:
; 1001AD03(C) 
;
l1001AD13: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001AD11(C) 
;
l1001AD2D: mov dword ptr [ebp-000000124h], 000000000h
           jmp l1001AD48
;
;* Jump:
; 1001ADD9(U) 
;
l1001AD39: mov edx, dword ptr [ebp-000000124h]
           add edx, 000000001h
           mov dword ptr [ebp-000000124h], edx
;
;* Jump:
; 1001AD37(U) 
;
l1001AD48: mov eax, dword ptr [ebp-000000124h]
           cmp eax, dword ptr [ebp-000000104h]
           jnl l1001ADDE
;
;* Jump:
; 1001ADD7(C) 
;
l1001AD5A: cmp dword ptr [ebp-000000128h], 000000000h
           jne l1001ADA0
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-000000120h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001AD83
           xor al, al
           jmp near ptr l1001AF26
;
;* Jump:
; 1001AD7A(C) 
;
l1001AD83: mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-000000128h], eax
;
;* Jump:
; 1001AD61(C) 
;
l1001ADA0: mov ecx, dword ptr [ebp-000000128h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp-000000124h]
           mov eax, dword ptr [ebp-000000130h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp+edx-000000100h], cl
           mov edx, dword ptr [ebp-000000130h]
           add edx, 000000001h
           mov dword ptr [ebp-000000130h], edx
           xor eax, eax
           test eax, eax
           jne l1001AD5A
           jmp near ptr l1001AD39
;
;* Jump:
; 1001AD54(C) 
;
l1001ADDE: mov ecx, dword ptr [ebp-00000011Ch]
           sub ecx, dword ptr [ebp-000000104h]
           mov dword ptr [ebp-00000011Ch], ecx
           mov edx, dword ptr [ebp-00000012Ch]
           and edx, 000000010h
           test edx, edx
           je l1001AE24
           mov eax, dword ptr [ebp-00000012Ch]
           sub eax, 000000010h
           mov dword ptr [ebp-00000012Ch], eax
           mov ecx, dword ptr [ebp-00000012Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx*04h+0000000B0h]
           mov dword ptr [ebp-000000134h], eax
           jmp l1001AE3A
;
;* Jump:
; 1001ADFB(C) 
;
l1001AE24: mov ecx, dword ptr [ebp-00000012Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx*04h+0000000A0h]
           mov dword ptr [ebp-000000134h], eax
;
;* Jump:
; 1001AE22(U) 
;
l1001AE3A: cmp dword ptr [ebp-00000012Ch], 000000000h
           jl l1001AE4C
           cmp dword ptr [ebp-00000012Ch], 000000004h
           jl l1001AE74
;
;* Jump:
; 1001AE41(C) 
;
l1001AE4C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000001Eh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-00000012Ch]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001AE4A(C) 
;
l1001AE74: mov eax, dword ptr [ebp-000000134h]
           cmp dword ptr [eax], 000000000h
           jne l1001AE93
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000F6A0
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000134h]
           mov dword ptr [edx], eax
;
;* Jump:
; 1001AE7D(C) 
;
l1001AE93: mov eax, dword ptr [ebp-000000134h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000118h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-000000114h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-000000110h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-00000010Ch]
           mov dword ptr [ecx+00Ch], eax
           mov dl, byte ptr [ebp-000000108h]
           mov byte ptr [ecx+010h], dl
           mov eax, dword ptr [ebp-000000134h]
           mov edi, dword ptr [eax]
           add edi, 000000011h
           mov ecx, 000000040h
           lea esi, [ebp-000000100h]
           rep movsd
           jmp near ptr l1001A9AC
;
;* Jump:
; 1001A9B3(C) 
;
l1001AEE4: cmp dword ptr [ebp-00000011Ch], 000000000h
           je l1001AF07
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001AEEB(C) 
;
l1001AF07: mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [ebp-000000130h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [ebp-000000128h]
           mov dword ptr [edx+004h], eax
           mov al, 001h
;
;* Jump:
; 1001A8C4(U), 1001A93B(U), 1001A9DD(U), 1001AABB(U), 1001AD7E(U) 
;
l1001AF26: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1001A86C ENDP
;
;* Call:
; 10019992 
;
l1001AF2C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1001AFF8(C) 
;
l1001AF4C: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001AF80
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001AF6F
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001AF66(C) 
;
l1001AF6F: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1001AF50(C) 
;
l1001AF80: mov eax, dword ptr [ebp-01Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001AFD3
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001AFC2
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001AFB9(C) 
;
l1001AFC2: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1001AFA3(C) 
;
l1001AFD3: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-008h]
           add ecx, eax
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
           xor eax, eax
           test eax, eax
           jne l1001AF4C
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000002h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001B36A(U) 
;
l1001B007: cmp dword ptr [ebp-008h], 000000000h
           jle l1001B36F
;
;* Jump:
; 1001B065(C) 
;
l1001B011: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001B045
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B034
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001B02B(C) 
;
l1001B034: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001B015(C) 
;
l1001B045: mov edx, dword ptr [ebp-01Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
           xor eax, eax
           test eax, eax
           jne l1001B011
           mov ecx, dword ptr [ebp-024h]
           sar ecx, 004h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-024h]
           and edx, 00000000Fh
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000051h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+01Ch], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           cmp dword ptr [ebp-024h], 000000004h
           jl l1001B0D7
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000001Fh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001B0B0(C) 
;
l1001B0D7: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+ecx*04h+000000090h], 000000000h
           jne l1001B100
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F672
           add esp, 000000004h
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+000000090h], eax
;
;* Jump:
; 1001B0E5(C) 
;
l1001B100: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l1001B122
;
;* Jump:
; 1001B255(U) 
;
l1001B119: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1001B117(U) 
;
l1001B122: cmp dword ptr [ebp-018h], 000000040h
           jnl l1001B25A
           cmp dword ptr [ebp-014h], 000000000h
           je l1001B1EA
;
;* Jump:
; 1001B1E2(C) 
;
l1001B136: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001B16A
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B159
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001B150(C) 
;
l1001B159: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1001B13A(C) 
;
l1001B16A: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx]
           shl eax, 008h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001B1BD
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B1AC
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001B1A3(C) 
;
l1001B1AC: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001B18D(C) 
;
l1001B1BD: mov edx, dword ptr [ebp-01Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001B136
           jmp l1001B240
;
;* Jump:
; 1001B130(C), 1001B23E(C) 
;
l1001B1EA: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1001B21E
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B20D
           xor al, al
           jmp near ptr l1001B3A2
;
;* Jump:
; 1001B204(C) 
;
l1001B20D: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001B1EE(C) 
;
l1001B21E: mov edx, dword ptr [ebp-01Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
           xor eax, eax
           test eax, eax
           jne l1001B1EA
;
;* Jump:
; 1001B1E8(U) 
;
l1001B240: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov eax, dword ptr [ebp-010h]
           mov cx, word ptr [ebp-004h]
           mov word ptr [eax+edx*02h], cx
           jmp near ptr l1001B119
;
;* Jump:
; 1001B126(C) 
;
l1001B25A: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           cmp dword ptr [eax+068h], 000000002h
           jl l1001B352
           mov dword ptr [ebp-018h], 000000000h
           jmp l1001B27B
;
;* Jump:
; 1001B34D(U) 
;
l1001B272: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000008h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001B270(U) 
;
l1001B27B: cmp dword ptr [ebp-018h], 000000040h
           jnl l1001B352
;
;* Jump:
; 1001B347(C) 
;
l1001B285: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000018h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov ax, word ptr [edx+ecx*02h]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h+002h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dx, word ptr [ecx+eax*02h+004h]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+008h], edx
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov ax, word ptr [edx+ecx*02h+006h]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+00Ch], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h+008h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dx, word ptr [ecx+eax*02h+00Ah]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov ax, word ptr [edx+ecx*02h+00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+018h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cx, word ptr [eax+edx*02h+00Eh]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+01Ch], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000005Dh
           push 000000002h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           xor edx, edx
           test edx, edx
           jne l1001B285
           jmp near ptr l1001B272
;
;* Jump:
; 1001B263(C), 1001B27F(C) 
;
l1001B352: mov eax, dword ptr [ebp-008h]
           sub eax, 000000041h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l1001B36A
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000040h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001B35F(C) 
;
l1001B36A: jmp near ptr l1001B007
;
;* Jump:
; 1001B00B(C) 
;
l1001B36F: cmp dword ptr [ebp-008h], 000000000h
           je l1001B38F
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Bh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001B373(C) 
;
l1001B38F: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], ecx
           mov al, 001h
;
;* Jump:
; 1001AF6A(U), 1001AFBD(U), 1001B02F(U), 1001B154(U), 1001B1A7(U), 
; 1001B208(U) 
;
l1001B3A2: mov esp, ebp
           pop ebp
           ret
l1001AF2C ENDP
;
;* Call:
; 100199B3 
;
l1001B3A6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B472(C) 
;
l1001B3C6: cmp dword ptr [ebp-010h], 000000000h
           jne l1001B3FA
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B3E9
           xor al, al
           jmp near ptr l1001B591
;
;* Jump:
; 1001B3E0(C) 
;
l1001B3E9: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B3CA(C) 
;
l1001B3FA: mov eax, dword ptr [ebp-010h]
           sub eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jne l1001B44D
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B43C
           xor al, al
           jmp near ptr l1001B591
;
;* Jump:
; 1001B433(C) 
;
l1001B43C: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001B41D(C) 
;
l1001B44D: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-008h]
           add ecx, eax
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           xor eax, eax
           test eax, eax
           jne l1001B3C6
           cmp dword ptr [ebp-008h], 000000004h
           je l1001B498
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001B47C(C), 1001B544(C) 
;
l1001B498: cmp dword ptr [ebp-010h], 000000000h
           jne l1001B4CC
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B4BB
           xor al, al
           jmp near ptr l1001B591
;
;* Jump:
; 1001B4B2(C) 
;
l1001B4BB: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B49C(C) 
;
l1001B4CC: mov eax, dword ptr [ebp-010h]
           sub eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           shl edx, 008h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jne l1001B51F
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B50E
           xor al, al
           jmp near ptr l1001B591
;
;* Jump:
; 1001B505(C) 
;
l1001B50E: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001B4EF(C) 
;
l1001B51F: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           xor eax, eax
           test eax, eax
           jne l1001B498
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000052h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+0000000FCh], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+004h], edx
           mov al, 001h
;
;* Jump:
; 1001B3E4(U), 1001B437(U), 1001B4B6(U), 1001B509(U) 
;
l1001B591: mov esp, ebp
           pop ebp
           ret
l1001B3A6 ENDP
;
;* Call:
; 10019796 
;
l1001B595 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B609(C) 
;
l1001B5B5: cmp dword ptr [ebp-010h], 000000000h
           jne l1001B5E9
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ecx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B5D8
           xor al, al
           jmp near ptr l1001B6C2
;
;* Jump:
; 1001B5CF(C) 
;
l1001B5D8: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B5B9(C) 
;
l1001B5E9: mov eax, dword ptr [ebp-010h]
           sub eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001B5B5
;
;* Jump:
; 1001B65F(C) 
;
l1001B60B: cmp dword ptr [ebp-010h], 000000000h
           jne l1001B63F
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B62E
           xor al, al
           jmp near ptr l1001B6C2
;
;* Jump:
; 1001B625(C) 
;
l1001B62E: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1001B60F(C) 
;
l1001B63F: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           xor eax, eax
           test eax, eax
           jne l1001B60B
           cmp dword ptr [ebp-004h], 0000000FFh
           jne l1001B673
           cmp dword ptr [ebp-008h], 0000000D8h
           je l1001B6A3
;
;* Jump:
; 1001B668(C) 
;
l1001B673: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000035h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+01Ch], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001B671(C) 
;
l1001B6A3: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+00000017Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+004h], edx
           mov al, 001h
;
;* Jump:
; 1001B5D3(U), 1001B629(U) 
;
l1001B6C2: mov esp, ebp
           pop ebp
           ret
l1001B595 ENDP
;
l1001B6C6 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+00000017Ch], 000000000h
           jne l1001B6F1
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10018C16
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B6F1
           xor al, al
           jmp near ptr l1001B798
;
;* Jump:
; 1001B6D3(C), 1001B6E8(C) 
;
l1001B6F1: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [eax+010h]
           add ecx, 0000000D0h
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+00000017Ch], ecx
           jne l1001B74E
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000062h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [eax+010h]
           mov dword ptr [edx+018h], eax
           push 000000003h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00000017Ch], 000000000h
           jmp l1001B778
;
;* Jump:
; 1001B70C(C) 
;
l1001B74E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           call [ecx+014h]
           add esp, 000000008h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B778
           xor al, al
           jmp l1001B798
;
;* Jump:
; 1001B74C(U), 1001B772(C) 
;
l1001B778: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov ecx, dword ptr [eax+010h]
           add ecx, 000000001h
           and ecx, 000000007h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov dword ptr [eax+010h], ecx
           mov al, 001h
;
;* Jump:
; 1001B6EC(U), 1001B776(U) 
;
l1001B798: pop ebp
           ret
l1001B6C6 ENDP
;
;* Call:
; 10018EE0 
;
l1001B79A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+0000000C4h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+07Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+00000017Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+00Ch], 000h
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+00Dh], 000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000000A0h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l1001B79A ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [eax+030h]
           sub ecx, 000000014h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+010h]
           cmp edx, dword ptr [ebp-008h]
           jle l1001B826
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp+010h], eax
;
;* Jump:
; 1001B81E(C) 
;
l1001B826: cmp dword ptr [ebp+010h], 000000000h
           je l1001B863
           mov dword ptr [ebp-004h], offset l1001B8FD
           cmp dword ptr [ebp+00Ch], 0000000E0h
           jne l1001B84B
           cmp dword ptr [ebp+010h], 00000000Eh
           jnb l1001B84B
           mov dword ptr [ebp+010h], 00000000Eh
           jmp l1001B861
;
;* Jump:
; 1001B83A(C), 1001B840(C) 
;
l1001B84B: cmp dword ptr [ebp+00Ch], 0000000EEh
           jne l1001B861
           cmp dword ptr [ebp+010h], 00000000Ch
           jnb l1001B861
           mov dword ptr [ebp+010h], 00000000Ch
;
;* Jump:
; 1001B849(U), 1001B852(C), 1001B858(C) 
;
l1001B861: jmp l1001B883
;
;* Jump:
; 1001B82A(C) 
;
l1001B863: mov dword ptr [ebp-004h], offset l1001962B
           cmp dword ptr [ebp+00Ch], 0000000E0h
           je l1001B87C
           cmp dword ptr [ebp+00Ch], 0000000EEh
           jne l1001B883
;
;* Jump:
; 1001B871(C) 
;
l1001B87C: mov dword ptr [ebp-004h], offset l10018EEC
;
;* Jump:
; 1001B861(U), 1001B87A(C) 
;
l1001B883: cmp dword ptr [ebp+00Ch], 0000000FEh
           jne l1001B8A0
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+05Ch], ecx
           jmp l1001B8F9
;
;* Jump:
; 1001B88A(C) 
;
l1001B8A0: cmp dword ptr [ebp+00Ch], 0000000E0h
           jl l1001B8D4
           cmp dword ptr [ebp+00Ch], 0000000EFh
           jg l1001B8D4
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h-000000364h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+edx*04h-000000320h], ecx
           jmp l1001B8F9
;
;* Jump:
; 1001B8A7(C), 1001B8B0(C) 
;
l1001B8D4: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000044h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001B89E(U), 1001B8D2(U) 
;
l1001B8F9: mov esp, ebp
           pop ebp
           ret
;
l1001B8FD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+0000000A0h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-024h], 000000000h
           jne l1001BAE2
;
;* Jump:
; 1001B9F2(C) 
;
l1001B946: cmp dword ptr [ebp-018h], 000000000h
           jne l1001B97A
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B969
           xor al, al
           jmp near ptr l1001BCC8
;
;* Jump:
; 1001B960(C) 
;
l1001B969: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1001B94A(C) 
;
l1001B97A: mov ecx, dword ptr [ebp-018h]
           sub ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov al, byte ptr [edx]
           shl eax, 008h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           cmp dword ptr [ebp-018h], 000000000h
           jne l1001B9CD
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           call [eax+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001B9BC
           xor al, al
           jmp near ptr l1001BCC8
;
;* Jump:
; 1001B9B3(C) 
;
l1001B9BC: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001B99D(C) 
;
l1001B9CD: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-00Ch]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           xor ecx, ecx
           test ecx, ecx
           jne l1001B946
           mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000002h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l1001BACC
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+00000017Ch], 0000000FEh
           jne l1001BA25
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-028h], edx
           jmp l1001BA3B
;
;* Jump:
; 1001BA18(C) 
;
l1001BA25: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+ecx*04h-000000320h]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 1001BA23(U) 
;
l1001BA3B: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-028h]
           jnb l1001BA49
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 1001BA41(C) 
;
l1001BA49: mov eax, dword ptr [ebp-028h]
           add eax, 000000014h
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+004h]
           add esp, 00000000Ch
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [eax+00000017Ch]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000014h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+0000000A0h], edx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+0000000A4h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-004h], ecx
           jmp l1001BAE0
;
;* Jump:
; 1001BA05(C) 
;
l1001BACC: mov dword ptr [ebp-004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1001BACA(U) 
;
l1001BAE0: jmp l1001BB03
;
;* Jump:
; 1001B940(C) 
;
l1001BAE2: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+0000000A4h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+010h]
           add edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1001BAE0(U), 1001BB9E(U) 
;
l1001BB03: mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-004h]
           jnb l1001BBA3
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+0000000A4h], eax
           cmp dword ptr [ebp-018h], 000000000h
           jne l1001BB60
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           call [edx+00Ch]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001BB4F
           xor al, al
           jmp near ptr l1001BCC8
;
;* Jump:
; 1001BB46(C) 
;
l1001BB4F: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1001BB30(C), 1001BB9C(U) 
;
l1001BB60: mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [ebp-004h]
           jnb l1001BB9E
           cmp dword ptr [ebp-018h], 000000000h
           jbe l1001BB9E
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-020h]
           mov cl, byte ptr [eax]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-018h]
           sub ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           jmp l1001BB60
;
;* Jump:
; 1001BB66(C), 1001BB6C(C) 
;
l1001BB9E: jmp near ptr l1001BB03
;
;* Jump:
; 1001BB09(C) 
;
l1001BBA3: cmp dword ptr [ebp-024h], 000000000h
           je l1001BBFE
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+00000010Ch], 000000000h
           jne l1001BBC3
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+00000010Ch], edx
           jmp l1001BBE9
;
;* Jump:
; 1001BBB3(C) 
;
l1001BBC3: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000010Ch]
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 1001BBDF(U) 
;
l1001BBCF: mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx], 000000000h
           je l1001BBE1
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-02Ch], ecx
           jmp l1001BBCF
;
;* Jump:
; 1001BBD5(C) 
;
l1001BBE1: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx], eax
;
;* Jump:
; 1001BBC1(U) 
;
l1001BBE9: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+008h]
           sub ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1001BBA7(C) 
;
l1001BBFE: mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+0000000A0h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000017Ch]
           mov dword ptr [ebp-030h], ecx
           cmp dword ptr [ebp-030h], 0000000E0h
           je l1001BC2B
           cmp dword ptr [ebp-030h], 0000000EEh
           je l1001BC45
           jmp l1001BC5F
;
;* Jump:
; 1001BC1E(C) 
;
l1001BC2B: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10019118
           add esp, 000000010h
           jmp l1001BC9B
;
;* Jump:
; 1001BC27(C) 
;
l1001BC45: mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100194DC
           add esp, 000000010h
           jmp l1001BC9B
;
;* Jump:
; 1001BC29(U) 
;
l1001BC5F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000005Bh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000017Ch]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+01Ch], ecx
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+004h]
           add esp, 000000008h
;
;* Jump:
; 1001BC43(U), 1001BC5D(U) 
;
l1001BC9B: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           jle l1001BCC6
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           call [edx+010h]
           add esp, 000000008h
;
;* Jump:
; 1001BCB0(C) 
;
l1001BCC6: mov al, 001h
;
;* Jump:
; 1001B964(U), 1001B9B7(U), 1001BB4A(U) 
;
l1001BCC8: mov esp, ebp
           pop ebp
           ret
l1001B8FD ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+00Ch], 0000000FEh
           jne l1001BCF0
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx+018h], eax
           jmp l1001BD39
;
;* Jump:
; 1001BCE3(C) 
;
l1001BCF0: cmp dword ptr [ebp+00Ch], 0000000E0h
           jl l1001BD14
           cmp dword ptr [ebp+00Ch], 0000000EFh
           jg l1001BD14
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx+ecx*04h-000000364h], eax
           jmp l1001BD39
;
;* Jump:
; 1001BCF7(C), 1001BD00(C) 
;
l1001BD14: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000044h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001BCEE(U), 1001BD12(U) 
;
l1001BD39: mov esp, ebp
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C2A1 
;
l1001BD40 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CAh
           je l1001BD7A
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001BD50(C) 
;
l1001BD7A: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+030h]
           shl edx, 003h
           mov eax, dword ptr [ebp+008h]
           cmp edx, dword ptr [eax+034h]
           ja l1001BDCB
           push 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+05Ch], eax
           push 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+060h], eax
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000118h], 000000001h
           jmp near ptr l1001BE8B
;
;* Jump:
; 1001BD89(C) 
;
l1001BDCB: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+030h]
           shl ecx, 002h
           mov edx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [edx+034h]
           ja l1001BE19
           push 000000004h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           call l100268A0
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+05Ch], eax
           push 000000004h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           call l100268A0
           add esp, 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+060h], eax
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000118h], 000000002h
           jmp l1001BE8B
;
;* Jump:
; 1001BDDA(C) 
;
l1001BE19: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+030h]
           shl edx, 001h
           mov eax, dword ptr [ebp+008h]
           cmp edx, dword ptr [eax+034h]
           ja l1001BE66
           push 000000002h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+05Ch], eax
           push 000000002h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+020h]
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+060h], eax
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+000000118h], 000000004h
           jmp l1001BE8B
;
;* Jump:
; 1001BE27(C) 
;
l1001BE66: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [eax+05Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+060h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000118h], 000000008h
;
;* Jump:
; 1001BDC6(U), 1001BE17(U), 1001BE64(U) 
;
l1001BE8B: mov dword ptr [ebp-008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-004h], edx
           jmp l1001BEB2
;
;* Jump:
; 1001BF28(U) 
;
l1001BEA0: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000054h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001BE9E(U) 
;
l1001BEB2: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+024h]
           jnl l1001BF2D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000118h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001BF1D(U) 
;
l1001BEC9: cmp dword ptr [ebp-00Ch], 000000008h
           jnl l1001BF1F
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+008h]
           imul ecx, dword ptr [ebp-00Ch]
           shl ecx, 001h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [edx+000000110h]
           imul edx, dword ptr [eax+000000118h]
           cmp ecx, edx
           jg l1001BF1F
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           imul ecx, dword ptr [ebp-00Ch]
           shl ecx, 001h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [edx+000000114h]
           imul edx, dword ptr [eax+000000118h]
           cmp ecx, edx
           jg l1001BF1F
           mov eax, dword ptr [ebp-00Ch]
           shl eax, 001h
           mov dword ptr [ebp-00Ch], eax
           jmp l1001BEC9
;
;* Jump:
; 1001BECD(C), 1001BEF0(C), 1001BF13(C) 
;
l1001BF1F: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+024h], edx
           jmp near ptr l1001BEA0
;
;* Jump:
; 1001BEBB(C) 
;
l1001BF2D: mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov dword ptr [ebp-004h], ecx
           jmp l1001BF54
;
;* Jump:
; 1001BFC3(U) 
;
l1001BF42: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000054h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001BF40(U) 
;
l1001BF54: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+024h]
           jnl l1001BFC8
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000110h]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+024h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           imul eax, ecx
           push eax
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           shl eax, 003h
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+00Ch]
           imul eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+020h]
           imul edx, eax
           push edx
           call l100268A0
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+02Ch], eax
           jmp near ptr l1001BF42
;
;* Jump:
; 1001BF5D(C) 
;
l1001BFC8: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+02Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           cmp dword ptr [ebp-010h], 000000004h
           ja l1001C00E
           mov edx, dword ptr [ebp-010h]
           jmp [offset g1001C075+edx*04h]
l1001BFEA: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+064h], 000000001h
           jmp l1001C01A
l1001BFF6: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+064h], 000000003h
           jmp l1001C01A
l1001C002: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+064h], 000000004h
           jmp l1001C01A
;
;* Jump:
; 1001BFDE(C) 
;
l1001C00E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [eax+064h], edx
;
;* Jump:
; 1001BFF4(U), 1001C000(U), 1001C00C(U) 
;
l1001C01A: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+04Ah]
           test ecx, ecx
           je l1001C02F
           mov dword ptr [ebp-014h], 000000001h
           jmp l1001C038
;
;* Jump:
; 1001C024(C) 
;
l1001C02F: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1001C02D(U) 
;
l1001C038: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ecx+068h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001C089
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           je l1001C067
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           mov dword ptr [ecx+06Ch], eax
           jmp l1001C071
;
;* Jump:
; 1001C054(C) 
;
l1001C067: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+06Ch], 000000001h
;
;* Jump:
; 1001C065(U) 
;
l1001C071: mov esp, ebp
           pop ebp
           ret
;
g1001C075  dd l1001BFEA
           dd l1001BFF6
           dd l1001BFF6
           dd l1001C002
           dd l1001C002
l1001BD40 ENDP
;
;* Call:
; 1001C045, 1001C2FB 
;
l1001C089 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+048h]
           test ecx, ecx
           jne l1001C0A7
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+00000010Ah]
           test eax, eax
           je l1001C0AE
;
;* Jump:
; 1001C096(C) 
;
l1001C0A7: xor al, al
           jmp near ptr l1001C18B
;
;* Jump:
; 1001C0A5(C) 
;
l1001C0AE: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+028h], 000000003h
           jne l1001C0D2
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+024h], 000000003h
           jne l1001C0D2
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+02Ch], 000000002h
           jne l1001C0D2
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+064h], 000000003h
           je l1001C0D9
;
;* Jump:
; 1001C0B5(C), 1001C0BE(C), 1001C0C7(C) 
;
l1001C0D2: xor al, al
           jmp near ptr l1001C18B
;
;* Jump:
; 1001C0D0(C) 
;
l1001C0D9: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           cmp dword ptr [eax+008h], 000000002h
           jne l1001C139
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           cmp dword ptr [edx+05Ch], 000000001h
           jne l1001C139
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           cmp dword ptr [ecx+0000000B0h], 000000001h
           jne l1001C139
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           cmp dword ptr [eax+00Ch], 000000002h
           jg l1001C139
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           cmp dword ptr [edx+060h], 000000001h
           jne l1001C139
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           cmp dword ptr [ecx+0000000B4h], 000000001h
           je l1001C13D
;
;* Jump:
; 1001C0E6(C), 1001C0F5(C), 1001C107(C), 1001C116(C), 1001C125(C) 
;
l1001C139: xor al, al
           jmp l1001C18B
;
;* Jump:
; 1001C137(C) 
;
l1001C13D: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+024h]
           cmp edx, dword ptr [ecx+000000118h]
           jne l1001C185
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000C4h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+078h]
           cmp eax, dword ptr [edx+000000118h]
           jne l1001C185
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+0000000CCh]
           cmp ecx, dword ptr [eax+000000118h]
           je l1001C189
;
;* Jump:
; 1001C152(C), 1001C169(C) 
;
l1001C185: xor al, al
           jmp l1001C18B
;
;* Jump:
; 1001C183(C) 
;
l1001C189: mov al, 001h
;
;* Jump:
; 1001C0A9(U), 1001C0D4(U), 1001C13B(U), 1001C187(U) 
;
l1001C18B: pop ebp
           ret
l1001C089 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+014h], 0000000CFh
           je l1001C1D1
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000014h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001C1A7(C) 
;
l1001C1D1: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+04Ah]
           test ecx, ecx
           je l1001C21D
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+059h]
           test eax, eax
           je l1001C21D
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+074h], 000000000h
           je l1001C21D
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx+0000001A8h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           call [ecx+00Ch]
           add esp, 000000004h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+008h], 000h
           jmp l1001C237
;
;* Jump:
; 1001C1DB(C), 1001C1E7(C), 1001C1F0(C) 
;
l1001C21D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000002Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001C21B(U) 
;
l1001C237: mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 10013C94 
;
l1001C23B PROC
           push ebp
           mov ebp, esp
           push ecx
           push 00000001Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000180h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001C6F1
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1001C912
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+008h], 000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001C28B
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1001C23B ENDP
;
;* Call:
; 1001C27F 
;
l1001C28B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001BD40
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001C61D
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+05Ch]
           imul eax, dword ptr [edx+064h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-010h]
           je l1001C2ED
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000046h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001C2D1(C) 
;
l1001C2ED: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001C089
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+010h], al
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+04Ah]
           test edx, edx
           je l1001C335
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+040h]
           test ecx, ecx
           jne l1001C34A
;
;* Jump:
; 1001C327(C) 
;
l1001C335: mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+058h], 000h
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+059h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+05Ah], 000h
;
;* Jump:
; 1001C333(C) 
;
l1001C34A: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+04Ah]
           test eax, eax
           je l1001C432
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+041h]
           test edx, edx
           je l1001C380
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000002Fh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001C364(C) 
;
l1001C380: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+064h], 000000003h
           je l1001C3AA
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+058h], 001h
           mov ecx, dword ptr [ebp+008h]
           mov byte ptr [ecx+059h], 000h
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+05Ah], 000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+074h], 000000000h
           jmp l1001C3D8
;
;* Jump:
; 1001C387(C) 
;
l1001C3AA: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+074h], 000000000h
           je l1001C3BC
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+059h], 001h
           jmp l1001C3D8
;
;* Jump:
; 1001C3B1(C) 
;
l1001C3BC: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+050h]
           test ecx, ecx
           je l1001C3D1
           mov edx, dword ptr [ebp+008h]
           mov byte ptr [edx+05Ah], 001h
           jmp l1001C3D8
;
;* Jump:
; 1001C3C6(C) 
;
l1001C3D1: mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+058h], 001h
;
;* Jump:
; 1001C3A8(U), 1001C3BA(U), 1001C3CF(U) 
;
l1001C3D8: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+058h]
           test edx, edx
           je l1001C3FF
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10023A30
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000001A8h]
           mov dword ptr [ecx+014h], eax
;
;* Jump:
; 1001C3E2(C) 
;
l1001C3FF: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+05Ah]
           test edx, edx
           jne l1001C417
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+059h]
           test ecx, ecx
           je l1001C432
;
;* Jump:
; 1001C409(C) 
;
l1001C417: mov edx, dword ptr [ebp+008h]
           push edx
           call l10024A70
           add esp, 000000004h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A8h]
           mov dword ptr [eax+018h], edx
;
;* Jump:
; 1001C354(C), 1001C415(C) 
;
l1001C432: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+041h]
           test ecx, ecx
           jne l1001C483
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+010h]
           test eax, eax
           je l1001C458
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001C960
           add esp, 000000004h
           jmp l1001C470
;
;* Jump:
; 1001C448(C) 
;
l1001C458: mov edx, dword ptr [ebp+008h]
           push edx
           call l10015B20
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001EA30
           add esp, 000000004h
;
;* Jump:
; 1001C456(U) 
;
l1001C470: mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ecx+05Ah]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001E580
           add esp, 000000008h
;
;* Jump:
; 1001C43C(C) 
;
l1001C483: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10016380
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000C9h]
           test eax, eax
           je l1001C4BA
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
           jmp l1001C4E3
;
;* Jump:
; 1001C49C(C) 
;
l1001C4BA: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000C8h]
           test ecx, ecx
           je l1001C4D7
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001D220
           add esp, 000000004h
           jmp l1001C4E3
;
;* Jump:
; 1001C4C7(C) 
;
l1001C4D7: mov eax, dword ptr [ebp+008h]
           push eax
           call l10016F06
           add esp, 000000004h
;
;* Jump:
; 1001C4B8(U), 1001C4D5(U) 
;
l1001C4E3: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           xor eax, eax
           mov al, byte ptr [edx+010h]
           test eax, eax
           jne l1001C50A
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+040h]
           test edx, edx
           jne l1001C50A
           mov dword ptr [ebp-018h], 000000000h
           jmp l1001C511
;
;* Jump:
; 1001C4F3(C), 1001C4FF(C) 
;
l1001C50A: mov dword ptr [ebp-018h], 000000001h
;
;* Jump:
; 1001C508(U) 
;
l1001C511: mov al, byte ptr [ebp-018h]
           mov byte ptr [ebp-008h], al
           mov cl, byte ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100145B0
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+041h]
           test ecx, ecx
           jne l1001C541
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10018140
           add esp, 000000008h
;
;* Jump:
; 1001C531(C) 
;
l1001C541: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+018h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           call [edx+008h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l1001C619
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+040h]
           test edx, edx
           jne l1001C619
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           xor edx, edx
           mov dl, byte ptr [ecx+010h]
           test edx, edx
           je l1001C619
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000000C8h]
           test ecx, ecx
           je l1001C5B7
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+024h]
           imul eax, eax, 000000003h
           add eax, 000000002h
           mov dword ptr [ebp-014h], eax
           jmp l1001C5C0
;
;* Jump:
; 1001C5A4(C) 
;
l1001C5B7: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1001C5B5(U) 
;
l1001C5C0: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000011Ch]
           imul eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [edx+008h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+05Ah]
           neg eax
           sbb eax, eax
           neg eax
           add eax, 000000002h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], ecx
;
;* Jump:
; 1001C56B(C), 1001C57B(C), 1001C591(C) 
;
l1001C619: mov esp, ebp
           pop ebp
           ret
l1001C28B ENDP
;
;* Call:
; 1001C2AD 
;
l1001C61D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           push edi
           push 000000580h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           add eax, 000000100h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000000120h], edx
           mov ecx, 000000040h
           xor eax, eax
           mov edi, dword ptr [ebp-004h]
           sub edi, 000000100h
           rep stosd
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001C679
;
;* Jump:
; 1001C68D(U) 
;
l1001C670: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001C66E(U) 
;
l1001C679: cmp dword ptr [ebp-008h], 0000000FFh
           jg l1001C68F
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp-008h]
           mov dl, byte ptr [ebp-008h]
           mov byte ptr [ecx], dl
           jmp l1001C670
;
;* Jump:
; 1001C680(C) 
;
l1001C68F: mov eax, dword ptr [ebp-004h]
           add eax, 000000080h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000080h
           jmp l1001C6AC
;
;* Jump:
; 1001C6BE(U) 
;
l1001C6A3: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001C6A1(U) 
;
l1001C6AC: cmp dword ptr [ebp-008h], 000000200h
           jnl l1001C6C0
           mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov byte ptr [edx], 0FFh
           jmp l1001C6A3
;
;* Jump:
; 1001C6B3(C) 
;
l1001C6C0: mov ecx, 000000060h
           xor eax, eax
           mov edi, dword ptr [ebp-004h]
           add edi, 000000200h
           rep stosd
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+000000120h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000380h
           mov ecx, 000000020h
           rep movsd
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1001C61D ENDP
;
l1001C6F1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+008h]
           test eax, eax
           je l1001C755
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+008h], 000h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           call [ecx]
           add esp, 000000008h
           push 000000002h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           call [ecx]
           add esp, 000000008h
           push 000000002h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000184h]
           call [ecx]
           add esp, 000000008h
           jmp near ptr l1001C891
;
;* Jump:
; 1001C70B(C) 
;
l1001C755: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+04Ah]
           test eax, eax
           je l1001C7D1
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+074h], 000000000h
           jne l1001C7D1
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+050h]
           test eax, eax
           je l1001C79A
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+05Ah]
           test edx, edx
           je l1001C79A
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [eax+0000001A8h], edx
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+008h], 001h
           jmp l1001C7D1
;
;* Jump:
; 1001C774(C), 1001C780(C) 
;
l1001C79A: mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+058h]
           test edx, edx
           je l1001C7B7
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+0000001A8h], edx
           jmp l1001C7D1
;
;* Jump:
; 1001C7A4(C) 
;
l1001C7B7: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000002Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001C75F(C), 1001C768(C), 1001C798(U), 1001C7B5(U) 
;
l1001C7D1: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000019Ch]
           call [ecx]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000188h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+041h]
           test eax, eax
           jne l1001C891
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+010h]
           test edx, edx
           jne l1001C824
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A4h]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001C810(C) 
;
l1001C824: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A0h]
           call [edx]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+04Ah]
           test ecx, ecx
           je l1001C85B
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [edx+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000001A8h]
           call [eax]
           add esp, 000000008h
;
;* Jump:
; 1001C840(C) 
;
l1001C85B: mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           neg edx
           sbb edx, edx
           and edx, 000000003h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000018Ch]
           call [edx]
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000184h]
           call [edx]
           add esp, 000000008h
;
;* Jump:
; 1001C750(U), 1001C800(C) 
;
l1001C891: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l1001C90E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+008h]
           neg eax
           sbb eax, eax
           neg eax
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           add edx, eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+010h], edx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+040h]
           test eax, eax
           je l1001C90E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000190h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           test eax, eax
           jne l1001C90E
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+05Ah]
           neg ecx
           sbb ecx, ecx
           neg ecx
           add ecx, 000000001h
           mov edx, dword ptr [edx+010h]
           add edx, ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+010h], edx
;
;* Jump:
; 1001C898(C), 1001C8D5(C), 1001C8E7(C) 
;
l1001C90E: mov esp, ebp
           pop ebp
           ret
l1001C6F1 ENDP
;
l1001C912 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000180h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+04Ah]
           test eax, eax
           je l1001C941
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000001A8h]
           call [eax+008h]
           add esp, 000000004h
;
;* Jump:
; 1001C92C(C) 
;
l1001C941: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], edx
           mov esp, ebp
           pop ebp
           ret
l1001C912 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C44E 
;
l1001C960 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000030h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+0000001A0h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001CB39
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+008h], 000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+05Ch]
           imul eax, dword ptr [edx+064h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000114h], 000000002h
           jne l1001C9EA
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], offset l1001CB60
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], offset l1001CEF2
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+028h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+004h]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], eax
           jmp l1001CA08
;
;* Jump:
; 1001C9B3(C) 
;
l1001C9EA: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1001CC76
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], offset l1001CCC7
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], 000000000h
;
;* Jump:
; 1001C9E8(U) 
;
l1001CA08: mov edx, dword ptr [ebp+008h]
           push edx
           call l1001CA18
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1001C960 ENDP
;
;* Call:
; 1001CA0C 
;
l1001CA18 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-00Ch], ecx
           push 000000400h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], eax
           push 000000400h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+014h], eax
           push 000000400h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+018h], eax
           push 000000400h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+01Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 0FFFFFF80h
           jmp l1001CABC
;
;* Jump:
; 1001CB30(U) 
;
l1001CAAA: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001CAA8(U) 
;
l1001CABC: cmp dword ptr [ebp-008h], 0000000FFh
           jg l1001CB35
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 0000166E9h
           add ecx, 000008000h
           sar ecx, 010h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 00001C5A2h
           add eax, 000008000h
           sar eax, 010h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h], eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -00000B6D2h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ecx+eax*04h], edx
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, -00000581Ah
           add ecx, 000008000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+01Ch]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           jmp near ptr l1001CAAA
;
;* Jump:
; 1001CAC3(C) 
;
l1001CB35: mov esp, ebp
           pop ebp
           ret
l1001CA18 ENDP
;
l1001CB39 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+024h], 000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [eax+02Ch], edx
           mov esp, ebp
           pop ebp
           ret
l1001CB39 ENDP
;
l1001CB60 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx+024h]
           test eax, eax
           je l1001CBB9
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+028h]
           push edx
           push 000000001h
           push 000000000h
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+018h]
           lea eax, [edx+ecx*04h]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000020h
           push ecx
           call l100268D1
           add esp, 000000018h
           mov dword ptr [ebp-004h], 000000001h
           mov edx, dword ptr [ebp-010h]
           mov byte ptr [edx+024h], 000h
           jmp near ptr l1001CC3D
;
;* Jump:
; 1001CB7C(C) 
;
l1001CBB9: mov dword ptr [ebp-004h], 000000002h
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+02Ch]
           jbe l1001CBD4
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+02Ch]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001CBC9(C) 
;
l1001CBD4: mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ebp+020h]
           sub edx, dword ptr [ecx]
           mov dword ptr [ebp+020h], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp+020h]
           jbe l1001CBED
           mov ecx, dword ptr [ebp+020h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001CBE5(C) 
;
l1001CBED: mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+018h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-004h], 000000001h
           jbe l1001CC12
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+018h]
           mov eax, dword ptr [edx+ecx*04h+004h]
           mov dword ptr [ebp-008h], eax
           jmp l1001CC22
;
;* Jump:
; 1001CBFF(C) 
;
l1001CC12: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           mov byte ptr [eax+024h], 001h
;
;* Jump:
; 1001CC10(U) 
;
l1001CC22: lea ecx, [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           call [eax+00Ch]
           add esp, 000000010h
;
;* Jump:
; 1001CBB4(U) 
;
l1001CC3D: mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+02Ch]
           sub edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+02Ch], edx
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx+024h]
           test edx, edx
           jne l1001CC72
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx], ecx
;
;* Jump:
; 1001CC63(C) 
;
l1001CC72: mov esp, ebp
           pop ebp
           ret
l1001CB60 ENDP
;
l1001CC76 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+018h]
           lea edx, [ecx+eax*04h]
           push edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call [ecx+00Ch]
           add esp, 000000010h
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx], eax
           mov esp, ebp
           pop ebp
           ret
l1001CC76 ENDP
;
l1001CCC7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000120h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           shr eax, 001h
           mov dword ptr [ebp-008h], eax
           jmp l1001CD53
;
;* Jump:
; 1001CE55(U) 
;
l1001CD4A: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001CD48(U) 
;
l1001CD53: cmp dword ptr [ebp-008h], 000000000h
           jbe l1001CE5A
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-028h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           add ecx, dword ptr [eax+edx*04h]
           sar ecx, 010h
           mov dword ptr [ebp-034h], ecx
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-02Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-038h]
           add edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+001h], dl
           mov eax, dword ptr [ebp-038h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000003h
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-02Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-038h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-038h]
           add eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+002h], cl
           mov edx, dword ptr [ebp-040h]
           add edx, 000000003h
           mov dword ptr [ebp-040h], edx
           jmp near ptr l1001CD4A
;
;* Jump:
; 1001CD57(C) 
;
l1001CE5A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+05Ch]
           and ecx, 000000001h
           test ecx, ecx
           je l1001CEEE
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-028h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-004h]
           add edx, dword ptr [ecx+eax*04h]
           sar edx, 010h
           mov dword ptr [ebp-034h], edx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-02Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-038h]
           add edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+001h], dl
           mov eax, dword ptr [ebp-038h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
;
;* Jump:
; 1001CE65(C) 
;
l1001CEEE: mov esp, ebp
           pop ebp
           ret
l1001CCC7 ENDP
;
l1001CEF2 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000120h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-04Ch], edx
           mov eax, dword ptr [ebp+010h]
           shl eax, 001h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp+010h]
           shl ecx, 001h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+ecx*04h+004h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           shr eax, 001h
           mov dword ptr [ebp-008h], eax
           jmp l1001CF9A
;
;* Jump:
; 1001D13E(U) 
;
l1001CF91: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001CF8F(U) 
;
l1001CF9A: cmp dword ptr [ebp-008h], 000000000h
           jbe l1001D143
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-028h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           add ecx, dword ptr [eax+edx*04h]
           sar ecx, 010h
           mov dword ptr [ebp-030h], ecx
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-03Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000000001h
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+001h], dl
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000003h
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-03Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+002h], cl
           mov edx, dword ptr [ebp-040h]
           add edx, 000000003h
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-048h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-048h]
           add edx, 000000001h
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+001h], cl
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+002h], dl
           mov eax, dword ptr [ebp-044h]
           add eax, 000000003h
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-048h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-048h]
           add eax, 000000001h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+001h], dl
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           mov ecx, dword ptr [ebp-044h]
           add ecx, 000000003h
           mov dword ptr [ebp-044h], ecx
           jmp near ptr l1001CF91
;
;* Jump:
; 1001CF9E(C) 
;
l1001D143: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           and eax, 000000001h
           test eax, eax
           je l1001D216
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-028h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           add ecx, dword ptr [eax+edx*04h]
           sar ecx, 010h
           mov dword ptr [ebp-030h], ecx
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-03Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+001h], cl
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+002h], dl
           mov eax, dword ptr [ebp-048h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-024h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-034h]
           add ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+002h], cl
;
;* Jump:
; 1001D14E(C) 
;
l1001D216: mov esp, ebp
           pop ebp
           ret
l1001CEF2 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C4CD, 1001F5F9 
;
l1001D220 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push 000000040h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+000000198h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001D2FB
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001D263
;
;* Jump:
; 1001D277(U) 
;
l1001D25A: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001D258(U) 
;
l1001D263: cmp dword ptr [ebp-008h], 000000004h
           jnl l1001D279
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h+02Ch], 000000000h
           jmp l1001D25A
;
;* Jump:
; 1001D267(C) 
;
l1001D279: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           shl ecx, 006h
           shl ecx, 002h
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00000008Ch], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000008Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l1001D2BE
;
;* Jump:
; 1001D2F5(U) 
;
l1001D2B5: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001D2B3(U) 
;
l1001D2BE: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+024h]
           jnl l1001D2F7
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001D2DB
;
;* Jump:
; 1001D2F3(U) 
;
l1001D2D2: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1001D2D0(U) 
;
l1001D2DB: cmp dword ptr [ebp-008h], 000000040h
           jnl l1001D2F5
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1001D2D2
;
;* Jump:
; 1001D2DF(C) 
;
l1001D2F5: jmp l1001D2B5
;
;* Jump:
; 1001D2C7(C) 
;
l1001D2F7: mov esp, ebp
           pop ebp
           ret
l1001D220 ENDP
;
l1001D2FB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           cmp dword ptr [edx+00000016Ch], 000000000h
           sete  al
           mov byte ptr [ebp-00Ch], al
           mov byte ptr [ebp-020h], 000h
           mov ecx, dword ptr [ebp-00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001D342
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000170h], 000000000h
           je l1001D340
           mov byte ptr [ebp-020h], 001h
;
;* Jump:
; 1001D33A(C) 
;
l1001D340: jmp l1001D376
;
;* Jump:
; 1001D32E(C) 
;
l1001D342: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+00000016Ch]
           cmp edx, dword ptr [ecx+000000170h]
           jg l1001D362
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000170h], 000000040h
           jl l1001D366
;
;* Jump:
; 1001D354(C) 
;
l1001D362: mov byte ptr [ebp-020h], 001h
;
;* Jump:
; 1001D360(C) 
;
l1001D366: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+000000124h], 000000001h
           je l1001D376
           mov byte ptr [ebp-020h], 001h
;
;* Jump:
; 1001D340(U), 1001D370(C) 
;
l1001D376: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000174h], 000000000h
           je l1001D39D
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000174h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000178h], ecx
           je l1001D39D
           mov byte ptr [ebp-020h], 001h
;
;* Jump:
; 1001D380(C), 1001D397(C) 
;
l1001D39D: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000178h], 00000000Dh
           jle l1001D3AD
           mov byte ptr [ebp-020h], 001h
;
;* Jump:
; 1001D3A7(C) 
;
l1001D3AD: mov ecx, dword ptr [ebp-020h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001D418
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000010h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000016Ch]
           mov dword ptr [edx+018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000170h]
           mov dword ptr [eax+01Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000174h]
           mov dword ptr [ecx+020h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000178h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001D3B8(C) 
;
l1001D418: mov dword ptr [ebp-01Ch], 000000000h
           jmp l1001D42A
;
;* Jump:
; 1001D54F(U) 
;
l1001D421: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1001D41F(U) 
;
l1001D42A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+000000124h]
           jnl l1001D554
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000128h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           shl eax, 008h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000008Ch]
           add edx, eax
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           and eax, 0000000FFh
           test eax, eax
           jne l1001D4AB
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx], 000000000h
           jnl l1001D4AB
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000073h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+01Ch], 000000000h
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 1001D46D(C), 1001D475(C) 
;
l1001D4AB: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000016Ch]
           mov dword ptr [ebp-004h], ecx
           jmp l1001D4C2
;
;* Jump:
; 1001D54A(U) 
;
l1001D4B9: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001D4B7(U) 
;
l1001D4C2: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+000000170h]
           jg l1001D54F
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+edx*04h], 000000000h
           jnl l1001D4E5
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l1001D4F1
;
;* Jump:
; 1001D4DA(C) 
;
l1001D4E5: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 1001D4E3(U) 
;
l1001D4F1: mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000174h]
           cmp eax, dword ptr [ebp-028h]
           je l1001D538
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000073h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], edx
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+004h]
           add esp, 000000008h
;
;* Jump:
; 1001D503(C) 
;
l1001D538: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov edx, dword ptr [edx+000000178h]
           mov dword ptr [ecx+eax*04h], edx
           jmp near ptr l1001D4B9
;
;* Jump:
; 1001D4CE(C) 
;
l1001D54F: jmp near ptr l1001D421
;
;* Jump:
; 1001D436(C) 
;
l1001D554: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+000000174h], 000000000h
           jne l1001D585
           mov ecx, dword ptr [ebp-00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001D579
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+004h], offset l1001D69E
           jmp l1001D583
;
;* Jump:
; 1001D56B(C) 
;
l1001D579: mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], offset l1001DA41
;
;* Jump:
; 1001D577(U) 
;
l1001D583: jmp l1001D5A8
;
;* Jump:
; 1001D55E(C) 
;
l1001D585: mov ecx, dword ptr [ebp-00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001D59E
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+004h], offset l1001DDAD
           jmp l1001D5A8
;
;* Jump:
; 1001D590(C) 
;
l1001D59E: mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], offset l1001DEFE
;
;* Jump:
; 1001D583(U), 1001D59C(U) 
;
l1001D5A8: mov dword ptr [ebp-01Ch], 000000000h
           jmp l1001D5BA
;
;* Jump:
; 1001D661(U) 
;
l1001D5B1: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001D5AF(U) 
;
l1001D5BA: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+000000124h]
           jnl l1001D666
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h+000000128h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001D61D
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000174h], 000000000h
           jne l1001D61B
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-010h]
           lea ecx, [eax+edx*04h+02Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10016730
           add esp, 000000010h
;
;* Jump:
; 1001D5F3(C) 
;
l1001D61B: jmp l1001D653
;
;* Jump:
; 1001D5E7(C) 
;
l1001D61D: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-010h]
           lea edx, [ecx+eax*04h+02Ch]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10016730
           add esp, 000000010h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+eax*04h+02Ch]
           mov dword ptr [edx+03Ch], eax
;
;* Jump:
; 1001D61B(U) 
;
l1001D653: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+ecx*04h+018h], 000000000h
           jmp near ptr l1001D5B1
;
;* Jump:
; 1001D5C6(C) 
;
l1001D666: mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-010h]
           mov byte ptr [edx+008h], 000h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000FCh]
           mov dword ptr [ecx+028h], eax
           mov esp, ebp
           pop ebp
           ret
l1001D2FB ENDP
;
l1001D69E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000060h
           push esi
           push edi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000178h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+0000000FCh], 000000000h
           je l1001D6EF
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+028h], 000000000h
           jne l1001D6EF
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001D97A
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001D6EF
           xor al, al
           jmp near ptr l1001D974
;
;* Jump:
; 1001D6C8(C), 1001D6D1(C), 1001D6E6(C) 
;
l1001D6EF: mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+008h]
           test edx, edx
           jne l1001D963
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-038h], ecx
           mov esi, dword ptr [ebp-018h]
           add esi, 000000014h
           mov ecx, 000000005h
           lea edi, [ebp-02Ch]
           rep movsd
           mov dword ptr [ebp-050h], 000000000h
           jmp l1001D750
;
;* Jump:
; 1001D925(U) 
;
l1001D747: mov edx, dword ptr [ebp-050h]
           add edx, 000000001h
           mov dword ptr [ebp-050h], edx
;
;* Jump:
; 1001D745(U) 
;
l1001D750: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-050h]
           cmp ecx, dword ptr [eax+000000140h]
           jnl l1001D92A
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000144h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx*04h+000000128h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+eax*04h+02Ch]
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-038h], 000000008h
           jnl l1001D7E5
           push 000000000h
           mov eax, dword ptr [ebp-038h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-04Ch]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001D7CA
           xor al, al
           jmp near ptr l1001D974
;
;* Jump:
; 1001D7C1(C) 
;
l1001D7CA: mov eax, dword ptr [ebp-044h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-038h], ecx
           cmp dword ptr [ebp-038h], 000000008h
           jnl l1001D7E5
           mov dword ptr [ebp-058h], 000000001h
           jmp l1001D832
;
;* Jump:
; 1001D7A2(C), 1001D7DA(C) 
;
l1001D7E5: mov ecx, dword ptr [ebp-038h]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-05Ch], edx
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-058h], edx
           cmp dword ptr [ebp-058h], 000000000h
           je l1001D82B
           mov eax, dword ptr [ebp-038h]
           sub eax, dword ptr [ebp-058h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, dword ptr [ebp-05Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-010h], edx
           jmp l1001D86A
;
;* Jump:
; 1001D80D(C) 
;
l1001D82B: mov dword ptr [ebp-058h], 000000009h
;
;* Jump:
; 1001D7E3(U) 
;
l1001D832: mov eax, dword ptr [ebp-058h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-038h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-04Ch]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jnl l1001D85E
           xor al, al
           jmp near ptr l1001D974
;
;* Jump:
; 1001D855(C) 
;
l1001D85E: mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-038h], eax
;
;* Jump:
; 1001D829(U) 
;
l1001D86A: cmp dword ptr [ebp-010h], 000000000h
           je l1001D900
           mov ecx, dword ptr [ebp-038h]
           cmp ecx, dword ptr [ebp-010h]
           jnl l1001D8B0
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-038h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-04Ch]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001D8A4
           xor al, al
           jmp near ptr l1001D974
;
;* Jump:
; 1001D89B(C) 
;
l1001D8A4: mov eax, dword ptr [ebp-044h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1001D87A(C) 
;
l1001D8B0: mov edx, dword ptr [ebp-038h]
           sub edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-038h]
           sar eax, cl
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-010h]
           shl edx, cl
           sub edx, 000000001h
           and eax, edx
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [offset g100427C8+eax*04h]
           jnl l1001D8F4
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [offset g10042808+edx*04h]
           mov dword ptr [ebp-060h], eax
           jmp l1001D8FA
;
;* Jump:
; 1001D8E0(C) 
;
l1001D8F4: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-060h], ecx
;
;* Jump:
; 1001D8F2(U) 
;
l1001D8FA: mov edx, dword ptr [ebp-060h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001D86E(C) 
;
l1001D900: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp+eax*04h-028h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp+edx*04h-028h], eax
           mov edx, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-014h]
           shl edx, cl
           mov eax, dword ptr [ebp-054h]
           mov word ptr [eax], dx
           jmp near ptr l1001D747
;
;* Jump:
; 1001D75C(C) 
;
l1001D92A: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+010h], ecx
           mov edi, dword ptr [ebp-018h]
           add edi, 000000014h
           mov ecx, 000000005h
           lea esi, [ebp-02Ch]
           rep movsd
;
;* Jump:
; 1001D6F9(C) 
;
l1001D963: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+028h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+028h], eax
           mov al, 001h
;
;* Jump:
; 1001D6EA(U), 1001D7C5(U), 1001D859(U), 1001D89F(U) 
;
l1001D974: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1001D69E ENDP
;
;* Call:
; 1001D6D7, 1001DA84, 1001DDEB, 1001DF5F 
;
l1001D97A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+000000194h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov ecx, dword ptr [ecx+014h]
           add ecx, eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000194h]
           mov dword ptr [eax+014h], ecx
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000194h]
           call [ecx+008h]
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001D9DF
           xor al, al
           jmp l1001DA3D
;
;* Jump:
; 1001D9D9(C) 
;
l1001D9DF: mov dword ptr [ebp-008h], 000000000h
           jmp l1001D9F1
;
;* Jump:
; 1001DA0D(U) 
;
l1001D9E8: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1001D9E6(U) 
;
l1001D9F1: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+000000124h]
           jnl l1001DA0F
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h+018h], 000000000h
           jmp l1001D9E8
;
;* Jump:
; 1001D9FD(C) 
;
l1001DA0F: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000000FCh]
           mov dword ptr [edx+028h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+00000017Ch], 000000000h
           jne l1001DA3B
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+008h], 000h
;
;* Jump:
; 1001DA32(C) 
;
l1001DA3B: mov al, 001h
;
;* Jump:
; 1001D9DD(U) 
;
l1001DA3D: mov esp, ebp
           pop ebp
           ret
l1001D97A ENDP
;
l1001DA41 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000170h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000178h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000FCh], 000000000h
           je l1001DA9C
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+028h], 000000000h
           jne l1001DA9C
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001D97A
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DA9C
           xor al, al
           jmp near ptr l1001DDA9
;
;* Jump:
; 1001DA75(C), 1001DA7E(C), 1001DA93(C) 
;
l1001DA9C: mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+008h]
           test ecx, ecx
           jne l1001DD98
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jbe l1001DAC9
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp near ptr l1001DD8F
;
;* Jump:
; 1001DAB9(C) 
;
l1001DAC9: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-03Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00000016Ch]
           mov dword ptr [ebp-024h], eax
           jmp l1001DB20
;
;* Jump:
; 1001DD61(U) 
;
l1001DB17: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 1001DB15(U) 
;
l1001DB20: mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ebp-020h]
           jg l1001DD66
           cmp dword ptr [ebp-028h], 000000008h
           jnl l1001DB73
           push 000000000h
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-03Ch]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DB58
           xor al, al
           jmp near ptr l1001DDA9
;
;* Jump:
; 1001DB4F(C) 
;
l1001DB58: mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000008h
           jnl l1001DB73
           mov dword ptr [ebp-044h], 000000001h
           jmp l1001DBC0
;
;* Jump:
; 1001DB30(C), 1001DB68(C) 
;
l1001DB73: mov ecx, dword ptr [ebp-028h]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-044h], edx
           cmp dword ptr [ebp-044h], 000000000h
           je l1001DBB9
           mov eax, dword ptr [ebp-028h]
           sub eax, dword ptr [ebp-044h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-048h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-014h], edx
           jmp l1001DBF8
;
;* Jump:
; 1001DB9B(C) 
;
l1001DBB9: mov dword ptr [ebp-044h], 000000009h
;
;* Jump:
; 1001DB71(U) 
;
l1001DBC0: mov eax, dword ptr [ebp-044h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-03Ch]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jnl l1001DBEC
           xor al, al
           jmp near ptr l1001DDA9
;
;* Jump:
; 1001DBE3(C) 
;
l1001DBEC: mov edx, dword ptr [ebp-034h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 1001DBB7(U) 
;
l1001DBF8: mov ecx, dword ptr [ebp-014h]
           sar ecx, 004h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-014h]
           and edx, 00000000Fh
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           je l1001DCC7
           mov eax, dword ptr [ebp-024h]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-014h]
           jnl l1001DC59
           mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-03Ch]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DC4D
           xor al, al
           jmp near ptr l1001DDA9
;
;* Jump:
; 1001DC44(C) 
;
l1001DC4D: mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1001DC23(C) 
;
l1001DC59: mov edx, dword ptr [ebp-028h]
           sub edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-028h]
           sar eax, cl
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-014h]
           shl edx, cl
           sub edx, 000000001h
           and eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [offset g100427C8+eax*04h]
           jnl l1001DC9D
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, dword ptr [offset g10042808+edx*04h]
           mov dword ptr [ebp-04Ch], eax
           jmp l1001DCA3
;
;* Jump:
; 1001DC89(C) 
;
l1001DC9D: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-04Ch], ecx
;
;* Jump:
; 1001DC9B(U) 
;
l1001DCA3: mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-018h]
           shl eax, cl
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov ecx, dword ptr [ebp-040h]
           mov word ptr [ecx+edx*02h], ax
           jmp near ptr l1001DD61
;
;* Jump:
; 1001DC0E(C) 
;
l1001DCC7: cmp dword ptr [ebp-00Ch], 00000000Fh
           jne l1001DCDB
           mov edx, dword ptr [ebp-024h]
           add edx, 00000000Fh
           mov dword ptr [ebp-024h], edx
           jmp near ptr l1001DD61
;
;* Jump:
; 1001DCCB(C) 
;
l1001DCDB: mov eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           shl eax, cl
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1001DD56
           mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnl l1001DD2A
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-03Ch]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DD1E
           xor al, al
           jmp near ptr l1001DDA9
;
;* Jump:
; 1001DD15(C) 
;
l1001DD1E: mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1001DCF4(C) 
;
l1001DD2A: mov edx, dword ptr [ebp-028h]
           sub edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-028h]
           sar eax, cl
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           shl edx, cl
           sub edx, 000000001h
           and eax, edx
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001DCEC(C) 
;
l1001DD56: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp l1001DD66
;
;* Jump:
; 1001DCC2(U), 1001DCD6(U) 
;
l1001DD61: jmp near ptr l1001DB17
;
;* Jump:
; 1001DB26(C), 1001DD5F(U) 
;
l1001DD66: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx+010h], edx
;
;* Jump:
; 1001DAC4(U) 
;
l1001DD8F: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], ecx
;
;* Jump:
; 1001DAA6(C) 
;
l1001DD98: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+028h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+028h], eax
           mov al, 001h
;
;* Jump:
; 1001DA97(U), 1001DB53(U), 1001DBE7(U), 1001DC48(U), 1001DD19(U) 
;
l1001DDA9: mov esp, ebp
           pop ebp
           ret
l1001DA41 ENDP
;
l1001DDAD PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, 000000001h
           mov ecx, dword ptr [edx+000000178h]
           shl eax, cl
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+0000000FCh], 000000000h
           je l1001DE03
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+028h], 000000000h
           jne l1001DE03
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1001D97A
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DE03
           xor al, al
           jmp near ptr l1001DEFA
;
;* Jump:
; 1001DDDC(C), 1001DDE5(C), 1001DDFA(C) 
;
l1001DE03: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-028h], 000000000h
           jmp l1001DE44
;
;* Jump:
; 1001DEBB(U) 
;
l1001DE3B: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 1001DE39(U) 
;
l1001DE44: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ecx+000000140h]
           jnl l1001DEC0
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-02Ch], edx
           cmp dword ptr [ebp-010h], 000000001h
           jnl l1001DE93
           push 000000001h
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea edx, [ebp-024h]
           push edx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DE87
           xor al, al
           jmp l1001DEFA
;
;* Jump:
; 1001DE81(C) 
;
l1001DE87: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1001DE62(C) 
;
l1001DE93: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-010h]
           sar eax, cl
           and eax, 000000001h
           test eax, eax
           je l1001DEBB
           mov ecx, dword ptr [ebp-02Ch]
           mov dx, word ptr [ecx]
           or dx, word ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov word ptr [eax], dx
;
;* Jump:
; 1001DEA9(C) 
;
l1001DEBB: jmp near ptr l1001DE3B
;
;* Jump:
; 1001DE50(C) 
;
l1001DEC0: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+028h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+028h], eax
           mov al, 001h
;
;* Jump:
; 1001DDFE(U), 1001DE85(U) 
;
l1001DEFA: mov esp, ebp
           pop ebp
           ret
l1001DDAD ENDP
;
l1001DEFE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000158h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000198h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000170h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, 000000001h
           mov ecx, dword ptr [ecx+000000178h]
           shl edx, cl
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+008h]
           or edx, 0FFFFFFFFh
           mov ecx, dword ptr [eax+000000178h]
           shl edx, cl
           mov dword ptr [ebp-00000012Ch], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+0000000FCh], 000000000h
           je l1001DF77
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+028h], 000000000h
           jne l1001DF77
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1001D97A
           add esp, 000000004h
           and eax, 0000000FFh
           test eax, eax
           jne l1001DF77
           xor al, al
           jmp near ptr l1001E56F
;
;* Jump:
; 1001DF50(C), 1001DF59(C), 1001DF6E(C) 
;
l1001DF77: mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+008h]
           test ecx, ecx
           jne l1001E527
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000138h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-000000148h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-000000130h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+03Ch]
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-000000134h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000016Ch]
           mov dword ptr [ebp-000000128h], edx
           cmp dword ptr [ebp-008h], 000000000h
           jne l1001E3E8
           jmp l1001E013
;
;* Jump:
; 1001E3E3(U) 
;
l1001E004: mov eax, dword ptr [ebp-000000128h]
           add eax, 000000001h
           mov dword ptr [ebp-000000128h], eax
;
;* Jump:
; 1001E002(U) 
;
l1001E013: mov ecx, dword ptr [ebp-000000128h]
           cmp ecx, dword ptr [ebp-020h]
           jg l1001E3E8
           cmp dword ptr [ebp-000000130h], 000000008h
           jnl l1001E07F
           push 000000000h
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001E055
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E04E(C) 
;
l1001E055: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
           cmp dword ptr [ebp-000000130h], 000000008h
           jnl l1001E07F
           mov dword ptr [ebp-000000150h], 000000001h
           jmp l1001E0EA
;
;* Jump:
; 1001E029(C), 1001E071(C) 
;
l1001E07F: mov ecx, dword ptr [ebp-000000130h]
           sub ecx, 000000008h
           mov edx, dword ptr [ebp-004h]
           sar edx, cl
           and edx, 0000000FFh
           mov dword ptr [ebp-000000154h], edx
           mov eax, dword ptr [ebp-000000154h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+eax*04h+000000090h]
           mov dword ptr [ebp-000000150h], edx
           cmp dword ptr [ebp-000000150h], 000000000h
           je l1001E0E0
           mov eax, dword ptr [ebp-000000130h]
           sub eax, dword ptr [ebp-000000150h]
           mov dword ptr [ebp-000000130h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-000000154h]
           xor edx, edx
           mov dl, byte ptr [ecx+000000490h]
           mov dword ptr [ebp-018h], edx
           jmp l1001E132
;
;* Jump:
; 1001E0B6(C) 
;
l1001E0E0: mov dword ptr [ebp-000000150h], 000000009h
;
;* Jump:
; 1001E07D(U) 
;
l1001E0EA: mov eax, dword ptr [ebp-000000150h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016DB2
           add esp, 000000014h
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           jnl l1001E11D
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E116(C) 
;
l1001E11D: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
;
;* Jump:
; 1001E0DE(U) 
;
l1001E132: mov ecx, dword ptr [ebp-018h]
           sar ecx, 004h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-018h]
           and edx, 00000000Fh
           mov dword ptr [ebp-018h], edx
           cmp dword ptr [ebp-018h], 000000000h
           je l1001E1F0
           cmp dword ptr [ebp-018h], 000000001h
           je l1001E171
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000076h
           push 0FFFFFFFFh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
;
;* Jump:
; 1001E152(C) 
;
l1001E171: cmp dword ptr [ebp-000000130h], 000000001h
           jnl l1001E1B9
           push 000000001h
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001E1A4
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E19D(C) 
;
l1001E1A4: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
;
;* Jump:
; 1001E178(C) 
;
l1001E1B9: mov ecx, dword ptr [ebp-000000130h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-000000130h]
           sar edx, cl
           and edx, 000000001h
           test edx, edx
           je l1001E1E2
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-018h], eax
           jmp l1001E1EB
;
;* Jump:
; 1001E1D8(C) 
;
l1001E1E2: mov ecx, dword ptr [ebp-00000012Ch]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001E1E0(U) 
;
l1001E1EB: jmp near ptr l1001E297
;
;* Jump:
; 1001E148(C) 
;
l1001E1F0: cmp dword ptr [ebp-010h], 00000000Fh
           je l1001E297
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-010h]
           shl edx, cl
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-010h], 000000000h
           je l1001E292
           mov eax, dword ptr [ebp-000000130h]
           cmp eax, dword ptr [ebp-010h]
           jnl l1001E25D
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001E248
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E241(C) 
;
l1001E248: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
;
;* Jump:
; 1001E21A(C) 
;
l1001E25D: mov ecx, dword ptr [ebp-000000130h]
           sub ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-000000130h]
           sar edx, cl
           mov eax, 000000001h
           mov ecx, dword ptr [ebp-010h]
           shl eax, cl
           sub eax, 000000001h
           and edx, eax
           mov dword ptr [ebp-010h], edx
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001E20B(C) 
;
l1001E292: jmp near ptr l1001E3E8
;
;* Jump:
; 1001E1EB(U), 1001E1F4(C), 1001E38E(C) 
;
l1001E297: mov edx, dword ptr [ebp-000000128h]
           mov eax, dword ptr [offset g10042B78+edx*04h]
           mov ecx, dword ptr [ebp-00000014Ch]
           lea edx, [ecx+eax*02h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           movsx ecx, word ptr [eax]
           test ecx, ecx
           je l1001E365
           cmp dword ptr [ebp-000000130h], 000000001h
           jnl l1001E306
           push 000000001h
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001E2F1
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E2EA(C) 
;
l1001E2F1: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
;
;* Jump:
; 1001E2C5(C) 
;
l1001E306: mov ecx, dword ptr [ebp-000000130h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-000000130h]
           sar edx, cl
           and edx, 000000001h
           test edx, edx
           je l1001E363
           mov eax, dword ptr [ebp-00Ch]
           movsx ecx, word ptr [eax]
           and ecx, dword ptr [ebp-024h]
           test ecx, ecx
           jne l1001E363
           mov edx, dword ptr [ebp-00Ch]
           movsx eax, word ptr [edx]
           test eax, eax
           jl l1001E350
           mov ecx, dword ptr [ebp-00Ch]
           mov dx, word ptr [ecx]
           add dx, word ptr [ebp-024h]
           mov eax, dword ptr [ebp-00Ch]
           mov word ptr [eax], dx
           jmp l1001E363
;
;* Jump:
; 1001E33C(C) 
;
l1001E350: mov ecx, dword ptr [ebp-00Ch]
           mov dx, word ptr [ecx]
           add dx, word ptr [ebp-00000012Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov word ptr [eax], dx
;
;* Jump:
; 1001E325(C), 1001E332(C), 1001E34E(U) 
;
l1001E363: jmp l1001E376
;
;* Jump:
; 1001E2B8(C) 
;
l1001E365: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           cmp dword ptr [ebp-010h], 000000000h
           jnl l1001E376
           jmp l1001E394
;
;* Jump:
; 1001E363(U), 1001E372(C) 
;
l1001E376: mov edx, dword ptr [ebp-000000128h]
           add edx, 000000001h
           mov dword ptr [ebp-000000128h], edx
           mov eax, dword ptr [ebp-000000128h]
           cmp eax, dword ptr [ebp-020h]
           jle l1001E297
;
;* Jump:
; 1001E374(U) 
;
l1001E394: cmp dword ptr [ebp-018h], 000000000h
           je l1001E3E3
           mov ecx, dword ptr [ebp-000000128h]
           mov edx, dword ptr [offset g10042B78+ecx*04h]
           mov dword ptr [ebp-000000158h], edx
           mov eax, dword ptr [ebp-000000158h]
           mov ecx, dword ptr [ebp-00000014Ch]
           mov dx, word ptr [ebp-018h]
           mov word ptr [ecx+eax*02h], dx
           mov eax, dword ptr [ebp-000000134h]
           mov ecx, dword ptr [ebp-000000158h]
           mov dword ptr [ebp+eax*04h-000000124h], ecx
           mov edx, dword ptr [ebp-000000134h]
           add edx, 000000001h
           mov dword ptr [ebp-000000134h], edx
;
;* Jump:
; 1001E398(C) 
;
l1001E3E3: jmp near ptr l1001E004
;
;* Jump:
; 1001DFFC(C), 1001E01C(C), 1001E292(U) 
;
l1001E3E8: cmp dword ptr [ebp-008h], 000000000h
           jbe l1001E4EC
           jmp l1001E403
;
;* Jump:
; 1001E4DE(U) 
;
l1001E3F4: mov eax, dword ptr [ebp-000000128h]
           add eax, 000000001h
           mov dword ptr [ebp-000000128h], eax
;
;* Jump:
; 1001E3F2(U) 
;
l1001E403: mov ecx, dword ptr [ebp-000000128h]
           cmp ecx, dword ptr [ebp-020h]
           jg l1001E4E3
           mov edx, dword ptr [ebp-000000128h]
           mov eax, dword ptr [offset g10042B78+edx*04h]
           mov ecx, dword ptr [ebp-00000014Ch]
           lea edx, [ecx+eax*02h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           movsx ecx, word ptr [eax]
           test ecx, ecx
           je l1001E4DE
           cmp dword ptr [ebp-000000130h], 000000001h
           jnl l1001E481
           push 000000001h
           mov edx, dword ptr [ebp-000000130h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000148h]
           push ecx
           call l10016BF7
           add esp, 000000010h
           and eax, 0000000FFh
           test eax, eax
           jne l1001E46C
           jmp near ptr l1001E53A
;
;* Jump:
; 1001E465(C) 
;
l1001E46C: mov edx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ebp-000000130h], eax
;
;* Jump:
; 1001E440(C) 
;
l1001E481: mov ecx, dword ptr [ebp-000000130h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000130h], ecx
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-000000130h]
           sar edx, cl
           and edx, 000000001h
           test edx, edx
           je l1001E4DE
           mov eax, dword ptr [ebp-00Ch]
           movsx ecx, word ptr [eax]
           and ecx, dword ptr [ebp-024h]
           test ecx, ecx
           jne l1001E4DE
           mov edx, dword ptr [ebp-00Ch]
           movsx eax, word ptr [edx]
           test eax, eax
           jl l1001E4CB
           mov ecx, dword ptr [ebp-00Ch]
           mov dx, word ptr [ecx]
           add dx, word ptr [ebp-024h]
           mov eax, dword ptr [ebp-00Ch]
           mov word ptr [eax], dx
           jmp l1001E4DE
;
;* Jump:
; 1001E4B7(C) 
;
l1001E4CB: mov ecx, dword ptr [ebp-00Ch]
           mov dx, word ptr [ecx]
           add dx, word ptr [ebp-00000012Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov word ptr [eax], dx
;
;* Jump:
; 1001E433(C), 1001E4A0(C), 1001E4AD(C), 1001E4C9(U) 
;
l1001E4DE: jmp near ptr l1001E3F4
;
;* Jump:
; 1001E40C(C) 
;
l1001E4E3: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1001E3EC(C) 
;
l1001E4EC: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-000000148h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-000000144h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-000000130h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], ecx
;
;* Jump:
; 1001DF81(C) 
;
l1001E527: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+028h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+028h], eax
           mov al, 001h
           jmp l1001E56F
;
;* Jump:
; 1001E050(U), 1001E118(U), 1001E19F(U), 1001E243(U), 1001E2EC(U), 
; 1001E467(U), 1001E56B(U) 
;
l1001E53A: cmp dword ptr [ebp-000000134h], 000000000h
           jle l1001E56D
           mov edx, dword ptr [ebp-000000134h]
           sub edx, 000000001h
           mov dword ptr [ebp-000000134h], edx
           mov eax, dword ptr [ebp-000000134h]
           mov ecx, dword ptr [ebp+eax*04h-000000124h]
           mov edx, dword ptr [ebp-00000014Ch]
           mov word ptr [edx+ecx*02h], 00000h
           jmp l1001E53A
;
;* Jump:
; 1001E541(C) 
;
l1001E56D: xor al, al
;
;* Jump:
; 1001DF72(U), 1001E538(U) 
;
l1001E56F: mov esp, ebp
           pop ebp
           ret
l1001DEFE ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C47B 
;
l1001E580 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 00000001Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+00000018Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l1001E668
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+04Ah]
           test eax, eax
           je l1001E664
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000114h]
           mov dword ptr [ecx+010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001E637
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+060h]
           push ecx
           call l100268B3
           add esp, 000000008h
           push eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+05Ch]
           imul ecx, dword ptr [eax+064h]
           push ecx
           push 000000000h
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+010h]
           add esp, 000000018h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], eax
           jmp l1001E664
;
;* Jump:
; 1001E5ED(C) 
;
l1001E637: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+05Ch]
           imul ecx, dword ptr [eax+064h]
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+008h]
           add esp, 000000010h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 1001E5CD(C), 1001E635(U) 
;
l1001E664: mov esp, ebp
           pop ebp
           ret
l1001E580 ENDP
;
l1001E668 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1001E69B
           cmp dword ptr [ebp-008h], 000000002h
           je l1001E727
           cmp dword ptr [ebp-008h], 000000003h
           je l1001E6F8
           jmp near ptr l1001E756
;
;* Jump:
; 1001E684(C) 
;
l1001E69B: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+04Ah]
           test ecx, ecx
           je l1001E6E4
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1001E788
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00Ch], 000000000h
           jne l1001E6E2
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           push edx
           push 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+01Ch]
           add esp, 000000014h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 1001E6B8(C) 
;
l1001E6E2: jmp l1001E6F6
;
;* Jump:
; 1001E6A5(C) 
;
l1001E6E4: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1001E6E2(U) 
;
l1001E6F6: jmp l1001E770
;
;* Jump:
; 1001E694(C) 
;
l1001E6F8: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+008h], 000000000h
           jne l1001E71B
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 1001E6FF(C) 
;
l1001E71B: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset l1001E829
           jmp l1001E770
;
;* Jump:
; 1001E68A(C) 
;
l1001E727: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+008h], 000000000h
           jne l1001E74A
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001E72E(C) 
;
l1001E74A: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], offset l1001E926
           jmp l1001E770
;
;* Jump:
; 1001E696(U) 
;
l1001E756: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001E6F6(U), 1001E725(U), 1001E754(U) 
;
l1001E770: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 000000000h
           mov esp, ebp
           pop ebp
           ret
l1001E668 ENDP
;
l1001E788 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [ebp+020h]
           sub eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+010h]
           jbe l1001E7B9
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1001E7AE(C) 
;
l1001E7B9: mov dword ptr [ebp-004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           lea eax, [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A0h]
           call [edx+004h]
           add esp, 00000001Ch
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+018h]
           lea ecx, [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000001A8h]
           call [eax+004h]
           add esp, 000000010h
           mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [eax], edx
           mov esp, ebp
           pop ebp
           ret
l1001E788 ENDP
;
l1001E829 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+018h], 000000000h
           jne l1001E871
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+01Ch]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], eax
;
;* Jump:
; 1001E842(C) 
;
l1001E871: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A0h]
           call [edx+004h]
           add esp, 00000001Ch
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+018h]
           cmp ecx, dword ptr [ebp-00Ch]
           jbe l1001E8F8
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+018h]
           sub eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A8h]
           call [edx+004h]
           add esp, 000000010h
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+01Ch]
           mov dword ptr [edx], ecx
;
;* Jump:
; 1001E8B7(C) 
;
l1001E8F8: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+018h]
           cmp edx, dword ptr [ecx+010h]
           jb l1001E922
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp-008h]
           add ecx, dword ptr [edx+010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], ecx
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
;
;* Jump:
; 1001E904(C) 
;
l1001E922: mov esp, ebp
           pop ebp
           ret
l1001E829 ENDP
;
l1001E926 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00000018Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+018h], 000000000h
           jne l1001E96E
           push 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+01Ch]
           add esp, 000000014h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], eax
;
;* Jump:
; 1001E93F(C) 
;
l1001E96E: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+010h]
           sub ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [ebp+020h]
           sub eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-00Ch]
           jbe l1001E996
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001E98E(C) 
;
l1001E996: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+060h]
           sub edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l1001E9B3
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001E9AB(C) 
;
l1001E9B3: mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+018h]
           lea eax, [edx+ecx*04h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           lea edx, [ecx+edx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000001A8h]
           call [edx+004h]
           add esp, 000000010h
           mov eax, dword ptr [ebp+01Ch]
           mov ecx, dword ptr [eax]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+01Ch]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+018h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+018h]
           cmp edx, dword ptr [ecx+010h]
           jb l1001EA2C
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp-008h]
           add ecx, dword ptr [edx+010h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], ecx
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], 000000000h
;
;* Jump:
; 1001EA0E(C) 
;
l1001EA2C: mov esp, ebp
           pop ebp
           ret
l1001E926 ENDP
;
;* Call:
; 1001C468 
;
l1001EA30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push esi
           push 0000000A0h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+0000001A0h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx], offset l1001ED04
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], offset l1001ED33
           mov ecx, dword ptr [ebp-014h]
           mov byte ptr [ecx+008h], 000h
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+00000010Ah]
           test eax, eax
           je l1001EA9F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000019h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1001EA83(C) 
;
l1001EA9F: mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+048h]
           test ecx, ecx
           je l1001EAC0
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+000000118h], 000000001h
           jle l1001EAC0
           mov dword ptr [ebp-028h], 000000001h
           jmp l1001EAC7
;
;* Jump:
; 1001EAA9(C), 1001EAB5(C) 
;
l1001EAC0: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 1001EABE(U) 
;
l1001EAC7: mov al, byte ptr [ebp-028h]
           mov byte ptr [ebp-004h], al
           mov dword ptr [ebp-01Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+0000000C4h]
           mov dword ptr [ebp-018h], edx
           jmp l1001EAF4
;
;* Jump:
; 1001ECFA(U) 
;
l1001EAE2: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000054h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001EAE0(U) 
;
l1001EAF4: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+024h]
           jnl l1001ECFF
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+024h]
           mov ecx, dword ptr [ebp+008h]
           cdq
           idiv dword ptr [ecx+000000118h]
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+00Ch]
           imul ecx, dword ptr [eax+024h]
           mov esi, dword ptr [ebp+008h]
           mov eax, ecx
           cdq
           idiv dword ptr [esi+000000118h]
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000110h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000114h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+eax*04h+064h], edx
           mov byte ptr [ebp-020h], 001h
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+030h]
           test ecx, ecx
           jne l1001EB85
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+edx*04h+034h], offset l1001EE9B
           mov byte ptr [ebp-020h], 000h
           jmp near ptr l1001ECAD
;
;* Jump:
; 1001EB6C(C) 
;
l1001EB85: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp-008h]
           jne l1001EBAC
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-00Ch]
           jne l1001EBAC
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+eax*04h+034h], offset l1001EE8E
           mov byte ptr [ebp-020h], 000h
           jmp near ptr l1001ECAD
;
;* Jump:
; 1001EB8B(C), 1001EB93(C) 
;
l1001EBAC: mov edx, dword ptr [ebp-024h]
           shl edx, 001h
           cmp edx, dword ptr [ebp-008h]
           jne l1001EBF7
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [ebp-00Ch]
           jne l1001EBF7
           mov ecx, dword ptr [ebp-004h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1001EBE4
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+028h], 000000002h
           jbe l1001EBE4
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+eax*04h+034h], offset l1001F121
           jmp l1001EBF2
;
;* Jump:
; 1001EBC9(C), 1001EBD2(C) 
;
l1001EBE4: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+edx*04h+034h], offset l1001EFBF
;
;* Jump:
; 1001EBE2(U) 
;
l1001EBF2: jmp near ptr l1001ECAD
;
;* Jump:
; 1001EBB4(C), 1001EBBC(C) 
;
l1001EBF7: mov ecx, dword ptr [ebp-024h]
           shl ecx, 001h
           cmp ecx, dword ptr [ebp-008h]
           jne l1001EC47
           mov edx, dword ptr [ebp-010h]
           shl edx, 001h
           cmp edx, dword ptr [ebp-00Ch]
           jne l1001EC47
           mov eax, dword ptr [ebp-004h]
           and eax, 0000000FFh
           test eax, eax
           je l1001EC37
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+028h], 000000002h
           jbe l1001EC37
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+edx*04h+034h], offset l1001F26C
           mov ecx, dword ptr [ebp-014h]
           mov byte ptr [ecx+008h], 001h
           jmp l1001EC45
;
;* Jump:
; 1001EC15(C), 1001EC1E(C) 
;
l1001EC37: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+edx*04h+034h], offset l1001F054
;
;* Jump:
; 1001EC35(U) 
;
l1001EC45: jmp l1001ECAD
;
;* Jump:
; 1001EBFF(C), 1001EC09(C) 
;
l1001EC47: mov eax, dword ptr [ebp-008h]
           cdq
           idiv dword ptr [ebp-024h]
           test edx, edx
           jne l1001EC93
           mov eax, dword ptr [ebp-00Ch]
           cdq
           idiv dword ptr [ebp-010h]
           test edx, edx
           jne l1001EC93
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+ecx*04h+034h], offset l1001EEA9
           mov eax, dword ptr [ebp-008h]
           cdq
           idiv dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-01Ch]
           mov byte ptr [ecx+00000008Ch], al
           mov eax, dword ptr [ebp-00Ch]
           cdq
           idiv dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ebp-01Ch]
           mov byte ptr [edx+000000096h], al
           jmp l1001ECAD
;
;* Jump:
; 1001EC50(C), 1001EC5B(C) 
;
l1001EC93: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000026h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001EB80(U), 1001EBA7(U), 1001EBF2(U), 1001EC45(U), 1001EC91(U) 
;
l1001ECAD: mov edx, dword ptr [ebp-020h]
           and edx, 0000000FFh
           test edx, edx
           je l1001ECFA
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000114h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000110h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           push edx
           call l100268B3
           add esp, 000000008h
           push eax
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+008h]
           add esp, 000000010h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+ecx*04h+00Ch], eax
;
;* Jump:
; 1001ECB8(C) 
;
l1001ECFA: jmp near ptr l1001EAE2
;
;* Jump:
; 1001EAFD(C) 
;
l1001ECFF: pop esi
           mov esp, ebp
           pop ebp
           ret
l1001EA30 ENDP
;
l1001ED04 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000114h]
           mov dword ptr [edx+05Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [edx+060h], ecx
           mov esp, ebp
           pop ebp
           ret
l1001ED04 ENDP
;
l1001ED33 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+05Ch]
           cmp ecx, dword ptr [eax+000000114h]
           jl l1001EDD1
           mov dword ptr [ebp-010h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+0000000C4h]
           mov dword ptr [ebp-00Ch], eax
           jmp l1001ED7D
;
;* Jump:
; 1001EDC5(U) 
;
l1001ED6B: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000054h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001ED69(U) 
;
l1001ED7D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+024h]
           jnl l1001EDC7
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           lea ecx, [eax+edx*04h+00Ch]
           push ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [edx]
           imul edx, dword ptr [ecx+eax*04h+064h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+eax*04h]
           lea ecx, [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           call [edx+ecx*04h+034h]
           add esp, 000000010h
           jmp l1001ED6B
;
;* Jump:
; 1001ED86(C) 
;
l1001EDC7: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+05Ch], 000000000h
;
;* Jump:
; 1001ED54(C) 
;
l1001EDD1: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+000000114h]
           sub eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+060h]
           jbe l1001EDF7
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001EDEC(C) 
;
l1001EDF7: mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [ebp+020h]
           sub eax, dword ptr [edx]
           mov dword ptr [ebp+020h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp+020h]
           jbe l1001EE10
           mov edx, dword ptr [ebp+020h]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001EE08(C) 
;
l1001EE10: mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+01Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+018h]
           lea ecx, [eax+edx*04h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+05Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A4h]
           call [ecx+004h]
           add esp, 000000014h
           mov edx, dword ptr [ebp+01Ch]
           mov eax, dword ptr [edx]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+060h]
           sub eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+060h], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+05Ch]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+05Ch], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+05Ch]
           cmp ecx, dword ptr [eax+000000114h]
           jl l1001EE8A
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1001EE7B(C) 
;
l1001EE8A: mov esp, ebp
           pop ebp
           ret
l1001ED33 ENDP
;
l1001EE8E PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax], ecx
           pop ebp
           ret
l1001EE8E ENDP
;
l1001EE9B PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [eax], 000000000h
           pop ebp
           ret
l1001EE9B ENDP
;
l1001EEA9 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A0h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+edx+00000008Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+eax+000000096h]
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 1001EFB6(U) 
;
l1001EEFA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+000000114h]
           jnl l1001EFBB
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [eax+05Ch]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1001EF73(U) 
;
l1001EF30: mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ebp-014h]
           jnb l1001EF75
           mov eax, dword ptr [ebp-024h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-004h], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-010h], eax
           jmp l1001EF5A
;
;* Jump:
; 1001EF71(U) 
;
l1001EF51: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1001EF4F(U) 
;
l1001EF5A: cmp dword ptr [ebp-010h], 000000000h
           jle l1001EF73
           mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           jmp l1001EF51
;
;* Jump:
; 1001EF5E(C) 
;
l1001EF73: jmp l1001EF30
;
;* Jump:
; 1001EF36(C) 
;
l1001EF75: cmp dword ptr [ebp-01Ch], 000000001h
           jle l1001EFA4
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           push edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l100268D1
           add esp, 000000018h
;
;* Jump:
; 1001EF79(C) 
;
l1001EFA4: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l1001EEFA
;
;* Jump:
; 1001EF06(C) 
;
l1001EFBB: mov esp, ebp
           pop ebp
           ret
l1001EEA9 ENDP
;
l1001EFBF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-018h], 000000000h
           jmp l1001EFDF
;
;* Jump:
; 1001F04E(U) 
;
l1001EFD6: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1001EFD4(U) 
;
l1001EFDF: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+000000114h]
           jnl l1001F050
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001F04C(U) 
;
l1001F011: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-008h]
           jnb l1001F04E
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-004h], al
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp l1001F011
;
;* Jump:
; 1001F017(C) 
;
l1001F04E: jmp l1001EFD6
;
;* Jump:
; 1001EFEB(C) 
;
l1001F050: mov esp, ebp
           pop ebp
           ret
l1001EFBF ENDP
;
l1001F054 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1001F118(U) 
;
l1001F06F: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+000000114h]
           jnl l1001F11D
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1001F0E0(U) 
;
l1001F0A5: mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l1001F0E2
           mov edx, dword ptr [ebp-014h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-004h], al
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           jmp l1001F0A5
;
;* Jump:
; 1001F0AB(C) 
;
l1001F0E2: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100268D1
           add esp, 000000018h
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000002h
           mov dword ptr [ebp-008h], eax
           jmp near ptr l1001F06F
;
;* Jump:
; 1001F07B(C) 
;
l1001F11D: mov esp, ebp
           pop ebp
           ret
l1001F054 ENDP
;
l1001F121 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l1001F141
;
;* Jump:
; 1001F263(U) 
;
l1001F138: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1001F136(U) 
;
l1001F141: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+000000114h]
           jnl l1001F268
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov al, byte ptr [ebp-004h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           lea edx, [edx+ecx+002h]
           sar edx, 002h
           mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+028h]
           sub eax, 000000002h
           mov dword ptr [ebp-018h], eax
           jmp l1001F1C8
;
;* Jump:
; 1001F223(U) 
;
l1001F1BF: mov ecx, dword ptr [ebp-018h]
           sub ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001F1BD(U) 
;
l1001F1C8: cmp dword ptr [ebp-018h], 000000000h
           jbe l1001F225
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx-002h]
           mov ecx, dword ptr [ebp-004h]
           lea edx, [ecx+eax+001h]
           sar edx, 002h
           mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           lea edx, [ecx+eax+002h]
           sar edx, 002h
           mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp l1001F1BF
;
;* Jump:
; 1001F1CC(C) 
;
l1001F225: mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx-001h]
           lea ecx, [ecx+eax+001h]
           sar ecx, 002h
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dl, byte ptr [ebp-004h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           jmp near ptr l1001F138
;
;* Jump:
; 1001F14D(C) 
;
l1001F268: mov esp, ebp
           pop ebp
           ret
l1001F121 ENDP
;
l1001F26C PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 1001F466(U) 
;
l1001F287: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+000000114h]
           jnl l1001F46B
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l1001F2AB
;
;* Jump:
; 1001F458(U) 
;
l1001F2A2: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001F2A0(U) 
;
l1001F2AB: cmp dword ptr [ebp-00Ch], 000000002h
           jnl l1001F45D
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l1001F2D6
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h-004h]
           mov dword ptr [ebp-008h], edx
           jmp l1001F2E3
;
;* Jump:
; 1001F2C5(C) 
;
l1001F2D6: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h+004h]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1001F2D4(U) 
;
l1001F2E3: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov dword ptr [ebp-010h], edx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-004h]
           lea edx, [000000008h+ecx*04h]
           sar edx, 004h
           mov eax, dword ptr [ebp-01Ch]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-010h]
           lea ecx, [edx+eax+007h]
           sar ecx, 004h
           mov edx, dword ptr [ebp-01Ch]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+028h]
           sub ecx, 000000002h
           mov dword ptr [ebp-028h], ecx
           jmp l1001F3A4
;
;* Jump:
; 1001F41A(U) 
;
l1001F39B: mov edx, dword ptr [ebp-028h]
           sub edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 1001F399(U) 
;
l1001F3A4: cmp dword ptr [ebp-028h], 000000000h
           jbe l1001F41F
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov dword ptr [ebp-010h], ecx
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [eax+ecx+008h]
           sar edx, 004h
           mov eax, dword ptr [ebp-01Ch]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-010h]
           lea ecx, [edx+eax+007h]
           sar ecx, 004h
           mov edx, dword ptr [ebp-01Ch]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], edx
           jmp near ptr l1001F39B
;
;* Jump:
; 1001F3A8(C) 
;
l1001F41F: mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [eax+ecx+008h]
           sar edx, 004h
           mov eax, dword ptr [ebp-01Ch]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           lea eax, [000000007h+edx*04h]
           sar eax, 004h
           mov ecx, dword ptr [ebp-01Ch]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           jmp near ptr l1001F2A2
;
;* Jump:
; 1001F2AF(C) 
;
l1001F45D: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           jmp near ptr l1001F287
;
;* Jump:
; 1001F293(C) 
;
l1001F46B: mov esp, ebp
           pop ebp
           ret
l1001F26C ENDP
;
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000CAh
           jne l1001F496
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001F5B0
           add esp, 000000004h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000D1h
;
;* Jump:
; 1001F47E(C) 
;
l1001F496: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000D1h
           jne l1001F550
;
;* Jump:
; 1001F541(U) 
;
l1001F4A6: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1001F4BE
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1001F4AD(C) 
;
l1001F4BE: mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           call [ecx]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l1001F4E0
           xor eax, eax
           jmp near ptr l1001F5AC
;
;* Jump:
; 1001F4D7(C) 
;
l1001F4E0: cmp dword ptr [ebp-004h], 000000002h
           jne l1001F4E8
           jmp l1001F546
;
;* Jump:
; 1001F4E4(C) 
;
l1001F4E8: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+008h], 000000000h
           je l1001F541
           cmp dword ptr [ebp-004h], 000000003h
           je l1001F4FD
           cmp dword ptr [ebp-004h], 000000001h
           jne l1001F541
;
;* Jump:
; 1001F4F5(C) 
;
l1001F4FD: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+004h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+004h], edx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [eax+004h]
           cmp eax, dword ptr [edx+008h]
           jl l1001F541
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           add eax, dword ptr [ecx+00000011Ch]
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 1001F4EF(C), 1001F4FB(C), 1001F524(C) 
;
l1001F541: jmp near ptr l1001F4A6
;
;* Jump:
; 1001F4E6(U) 
;
l1001F546: mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+014h], 0000000D2h
;
;* Jump:
; 1001F4A0(C) 
;
l1001F550: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+014h], 0000000D2h
           je l1001F568
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+014h], 0000000CFh
           jne l1001F582
;
;* Jump:
; 1001F55A(C) 
;
l1001F568: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+040h]
           test eax, eax
           je l1001F582
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000188h]
           mov eax, dword ptr [edx+010h]
           jmp l1001F5AC
;
;* Jump:
; 1001F566(C), 1001F572(C) 
;
l1001F582: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000014h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
           xor eax, eax
;
;* Jump:
; 1001F4DB(U), 1001F580(U) 
;
l1001F5AC: mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 1001F484 
;
l1001F5B0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov byte ptr [eax+040h], 001h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000000C9h]
           test edx, edx
           je l1001F5E6
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           jmp l1001F60F
;
;* Jump:
; 1001F5C8(C) 
;
l1001F5E6: mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000C8h]
           test eax, eax
           je l1001F603
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1001D220
           add esp, 000000004h
           jmp l1001F60F
;
;* Jump:
; 1001F5F3(C) 
;
l1001F603: mov edx, dword ptr [ebp+008h]
           push edx
           call l10016F06
           add esp, 000000004h
;
;* Jump:
; 1001F5E4(U), 1001F601(U) 
;
l1001F60F: push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100145B0
           add esp, 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+018h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000190h]
           call [eax+008h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1001F6CE
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+0000000C8h]
           test eax, eax
           je l1001F66D
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+024h]
           imul edx, edx, 000000003h
           add edx, 000000002h
           mov dword ptr [ebp-004h], edx
           jmp l1001F691
;
;* Jump:
; 1001F65A(C) 
;
l1001F66D: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000190h]
           xor edx, edx
           mov dl, byte ptr [ecx+010h]
           test edx, edx
           je l1001F68A
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-004h], ecx
           jmp l1001F691
;
;* Jump:
; 1001F67D(C) 
;
l1001F68A: mov dword ptr [ebp-004h], 000000001h
;
;* Jump:
; 1001F66B(U), 1001F688(U) 
;
l1001F691: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00000011Ch]
           imul edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ecx+008h], edx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [edx+010h], 000000001h
;
;* Jump:
; 1001F647(C) 
;
l1001F6CE: mov esp, ebp
           pop ebp
           ret
l1001F5B0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10029526, 10029716 
;
l1001F6E0 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], offset l1001F76C
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+004h], offset l1001F7D6
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+008h], offset l1001F794
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+00Ch], offset l1001F834
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+010h], offset l1001F977
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+068h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+06Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+070h], offset g10042848
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+074h], 00000007Bh
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+078h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+07Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+000000080h], 000000000h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1001F6E0 ENDP
;
l1001F76C PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx+008h]
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000F640
           add esp, 000000004h
           push 000000001h
           call [__imp_exit]; [BICRT.exit].
           pop ebp
           ret
l1001F76C ENDP
;
l1001F794 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000C8h
           lea eax, [ebp-0000000C8h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax+00Ch]
           add esp, 000000008h
           lea ecx, [ebp-0000000C8h]
           push ecx
;
;* String: "%s
;          "
;
           push offset g100487B4
           mov edx, dword ptr [__imp__iob]; [BICRT._iob].
           add edx, 000000040h
           push edx
           call [__imp_fprintf]; [BICRT.fprintf].
           add esp, 00000000Ch
           mov esp, ebp
           pop ebp
           ret
l1001F794 ENDP
;
l1001F7D6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jnl l1001F818
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+06Ch], 000000000h
           je l1001F7FA
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+068h], 000000003h
           jl l1001F807
;
;* Jump:
; 1001F7EF(C) 
;
l1001F7FA: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           call [edx+008h]
           add esp, 000000004h
;
;* Jump:
; 1001F7F8(C) 
;
l1001F807: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+06Ch]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+06Ch], ecx
           jmp l1001F830
;
;* Jump:
; 1001F7E6(C) 
;
l1001F818: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+068h]
           cmp ecx, dword ptr [ebp+00Ch]
           jl l1001F830
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           call [eax+008h]
           add esp, 000000004h
;
;* Jump:
; 1001F816(U), 1001F821(C) 
;
l1001F830: mov esp, ebp
           pop ebp
           ret
l1001F7D6 ENDP
;
l1001F834 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-010h], 000000000h
           cmp dword ptr [ebp-004h], 000000000h
           jle l1001F874
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+074h]
           jg l1001F874
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+070h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-010h], eax
           jmp l1001F8AB
;
;* Jump:
; 1001F856(C), 1001F861(C) 
;
l1001F874: mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+078h], 000000000h
           je l1001F8AB
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+07Ch]
           jl l1001F8AB
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000080h]
           jg l1001F8AB
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [eax+07Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+078h]
           mov ecx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1001F872(U), 1001F87B(C), 1001F886(C), 1001F894(C) 
;
l1001F8AB: cmp dword ptr [ebp-010h], 000000000h
           jne l1001F8C5
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+070h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1001F8AF(C) 
;
l1001F8C5: mov byte ptr [ebp-00Ch], 000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1001F902(U) 
;
l1001F8CF: mov edx, dword ptr [ebp-018h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-014h], al
           movsx ecx, byte ptr [ebp-014h]
           mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           test ecx, ecx
           je l1001F904
           movsx eax, byte ptr [ebp-014h]
           cmp eax, 000000025h
           jne l1001F902
           mov ecx, dword ptr [ebp-018h]
           movsx edx, byte ptr [ecx]
           cmp edx, 000000073h
           jne l1001F900
           mov byte ptr [ebp-00Ch], 001h
;
;* Jump:
; 1001F8FA(C) 
;
l1001F900: jmp l1001F904
;
;* Jump:
; 1001F8EF(C) 
;
l1001F902: jmp l1001F8CF
;
;* Jump:
; 1001F8E6(C), 1001F900(U) 
;
l1001F904: mov eax, dword ptr [ebp-00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l1001F92A
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_sprintf]; [BICRT.sprintf].
           add esp, 00000000Ch
           jmp l1001F973
;
;* Jump:
; 1001F90E(C) 
;
l1001F92A: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+034h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+030h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+02Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+028h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+024h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_sprintf]; [BICRT.sprintf].
           add esp, 000000028h
;
;* Jump:
; 1001F928(U) 
;
l1001F973: mov esp, ebp
           pop ebp
           ret
l1001F834 ENDP
;
l1001F977 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000000h
           pop ebp
           ret
l1001F977 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1001F9A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-04Ch], eax
           mov dword ptr [ebp-038h], 000000007h
           jmp l1001F9BE
;
;* Jump:
; 1001FB3C(U) 
;
l1001F9B5: mov ecx, dword ptr [ebp-038h]
           sub ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1001F9B3(U) 
;
l1001F9BE: cmp dword ptr [ebp-038h], 000000000h
           jl l1001FB41
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx]
           fadd dword ptr [eax+01Ch]
           fstp dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx]
           fsub dword ptr [edx+01Ch]
           fstp dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [eax+004h]
           fadd dword ptr [ecx+018h]
           fstp dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx+004h]
           fsub dword ptr [eax+018h]
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+008h]
           fadd dword ptr [edx+014h]
           fstp dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [eax+008h]
           fsub dword ptr [ecx+014h]
           fstp dword ptr [ebp-054h]
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx+00Ch]
           fadd dword ptr [eax+010h]
           fstp dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+00Ch]
           fsub dword ptr [edx+010h]
           fstp dword ptr [ebp-050h]
           fld dword ptr [ebp-03Ch]
           fadd dword ptr [ebp-048h]
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-03Ch]
           fsub dword ptr [ebp-048h]
           fstp dword ptr [ebp-030h]
           fld dword ptr [ebp-040h]
           fadd dword ptr [ebp-044h]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-040h]
           fsub dword ptr [ebp-044h]
           fstp dword ptr [ebp-028h]
           fld dword ptr [ebp-010h]
           fadd dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+010h]
           fld dword ptr [ebp-028h]
           fadd dword ptr [ebp-030h]
           fmul dword ptr [g10042A48]
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-030h]
           fadd dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-04Ch]
           fstp dword ptr [edx+008h]
           fld dword ptr [ebp-030h]
           fsub dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+018h]
           fld dword ptr [ebp-050h]
           fadd dword ptr [ebp-054h]
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-054h]
           fadd dword ptr [ebp-008h]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-014h]
           fstp dword ptr [ebp-028h]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-028h]
           fmul dword ptr [g10042A44]
           fstp dword ptr [ebp-02Ch]
           fld dword ptr [g10042A40]
           fmul dword ptr [ebp-010h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [g10042A3C]
           fmul dword ptr [ebp-028h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-024h]
           fld dword ptr [ebp-01Ch]
           fmul dword ptr [g10042A48]
           fstp dword ptr [ebp-018h]
           fld dword ptr [ebp-014h]
           fadd dword ptr [ebp-018h]
           fstp dword ptr [ebp-020h]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-018h]
           fst dword ptr [ebp-034h]
           fadd dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+014h]
           fld dword ptr [ebp-034h]
           fsub dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-04Ch]
           fstp dword ptr [edx+00Ch]
           fld dword ptr [ebp-020h]
           fadd dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+004h]
           fld dword ptr [ebp-020h]
           fsub dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000020h
           mov dword ptr [ebp-04Ch], edx
           jmp near ptr l1001F9B5
;
;* Jump:
; 1001F9C2(C) 
;
l1001FB41: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-04Ch], eax
           mov dword ptr [ebp-038h], 000000007h
           jmp l1001FB59
;
;* Jump:
; 1001FCFB(U) 
;
l1001FB50: mov ecx, dword ptr [ebp-038h]
           sub ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1001FB4E(U) 
;
l1001FB59: cmp dword ptr [ebp-038h], 000000000h
           jl l1001FD00
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx]
           fadd dword ptr [eax+0000000E0h]
           fstp dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx]
           fsub dword ptr [edx+0000000E0h]
           fstp dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [eax+020h]
           fadd dword ptr [ecx+0000000C0h]
           fstp dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx+020h]
           fsub dword ptr [eax+0000000C0h]
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+040h]
           fadd dword ptr [edx+0000000A0h]
           fstp dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [eax+040h]
           fsub dword ptr [ecx+0000000A0h]
           fstp dword ptr [ebp-054h]
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [edx+060h]
           fadd dword ptr [eax+000000080h]
           fstp dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+060h]
           fsub dword ptr [edx+000000080h]
           fstp dword ptr [ebp-050h]
           fld dword ptr [ebp-03Ch]
           fadd dword ptr [ebp-048h]
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-03Ch]
           fsub dword ptr [ebp-048h]
           fstp dword ptr [ebp-030h]
           fld dword ptr [ebp-040h]
           fadd dword ptr [ebp-044h]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-040h]
           fsub dword ptr [ebp-044h]
           fstp dword ptr [ebp-028h]
           fld dword ptr [ebp-010h]
           fadd dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+000000080h]
           fld dword ptr [ebp-028h]
           fadd dword ptr [ebp-030h]
           fmul dword ptr [g10042A48]
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-030h]
           fadd dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-04Ch]
           fstp dword ptr [edx+040h]
           fld dword ptr [ebp-030h]
           fsub dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+0000000C0h]
           fld dword ptr [ebp-050h]
           fadd dword ptr [ebp-054h]
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-054h]
           fadd dword ptr [ebp-008h]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-014h]
           fstp dword ptr [ebp-028h]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-028h]
           fmul dword ptr [g10042A44]
           fstp dword ptr [ebp-02Ch]
           fld dword ptr [g10042A40]
           fmul dword ptr [ebp-010h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [g10042A3C]
           fmul dword ptr [ebp-028h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-024h]
           fld dword ptr [ebp-01Ch]
           fmul dword ptr [g10042A48]
           fstp dword ptr [ebp-018h]
           fld dword ptr [ebp-014h]
           fadd dword ptr [ebp-018h]
           fstp dword ptr [ebp-020h]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-018h]
           fst dword ptr [ebp-034h]
           fadd dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+0000000A0h]
           fld dword ptr [ebp-034h]
           fsub dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-04Ch]
           fstp dword ptr [edx+060h]
           fld dword ptr [ebp-020h]
           fadd dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+020h]
           fld dword ptr [ebp-020h]
           fsub dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+0000000E0h]
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000004h
           mov dword ptr [ebp-04Ch], edx
           jmp near ptr l1001FB50
;
;* Jump:
; 1001FB5D(C) 
;
l1001FD00: mov esp, ebp
           pop ebp
           ret
l1001F9A0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1001FD10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-04Ch], eax
           mov dword ptr [ebp-038h], 000000007h
           jmp l1001FD2E
;
;* Jump:
; 1001FEBB(U) 
;
l1001FD25: mov ecx, dword ptr [ebp-038h]
           sub ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1001FD23(U) 
;
l1001FD2E: cmp dword ptr [ebp-038h], 000000000h
           jl l1001FEC0
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-03Ch], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx]
           sub ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+018h]
           mov dword ptr [ebp-040h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+004h]
           sub ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+014h]
           mov dword ptr [ebp-044h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+008h]
           sub ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+010h]
           mov dword ptr [ebp-048h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+00Ch]
           sub ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-050h], ecx
           mov edx, dword ptr [ebp-03Ch]
           add edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-03Ch]
           sub eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, dword ptr [ebp-044h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-040h]
           sub edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-010h]
           sub edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-030h]
           imul ecx, ecx, 0000000B5h
           sar ecx, 008h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+008h], edx
           mov ecx, dword ptr [ebp-030h]
           sub ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+018h], ecx
           mov eax, dword ptr [ebp-050h]
           add eax, dword ptr [ebp-054h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-054h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-010h]
           sub eax, dword ptr [ebp-028h]
           imul eax, eax, 000000062h
           sar eax, 008h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 00000008Bh
           sar ecx, 008h
           add ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 00000014Eh
           sar edx, 008h
           add edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 0000000B5h
           sar eax, 008h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+014h], eax
           mov edx, dword ptr [ebp-034h]
           sub edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+00Ch], edx
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-020h]
           sub eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000020h
           mov dword ptr [ebp-04Ch], edx
           jmp near ptr l1001FD25
;
;* Jump:
; 1001FD32(C) 
;
l1001FEC0: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-04Ch], eax
           mov dword ptr [ebp-038h], 000000007h
           jmp l1001FED8
;
;* Jump:
; 10020089(U) 
;
l1001FECF: mov ecx, dword ptr [ebp-038h]
           sub ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 1001FECD(U) 
;
l1001FED8: cmp dword ptr [ebp-038h], 000000000h
           jl l1002008E
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+0000000E0h]
           mov dword ptr [ebp-03Ch], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx]
           sub ecx, dword ptr [eax+0000000E0h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+0000000C0h]
           mov dword ptr [ebp-040h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+020h]
           sub ecx, dword ptr [eax+0000000C0h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+040h]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+0000000A0h]
           mov dword ptr [ebp-044h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+040h]
           sub ecx, dword ptr [eax+0000000A0h]
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+060h]
           mov ecx, dword ptr [ebp-04Ch]
           add eax, dword ptr [ecx+000000080h]
           mov dword ptr [ebp-048h], eax
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+060h]
           sub ecx, dword ptr [eax+000000080h]
           mov dword ptr [ebp-050h], ecx
           mov edx, dword ptr [ebp-03Ch]
           add edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-03Ch]
           sub eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, dword ptr [ebp-044h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-040h]
           sub edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-010h]
           sub edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+000000080h], edx
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-030h]
           imul ecx, ecx, 0000000B5h
           sar ecx, 008h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+040h], edx
           mov ecx, dword ptr [ebp-030h]
           sub ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+0000000C0h], ecx
           mov eax, dword ptr [ebp-050h]
           add eax, dword ptr [ebp-054h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-054h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-010h]
           sub eax, dword ptr [ebp-028h]
           imul eax, eax, 000000062h
           sar eax, 008h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 00000008Bh
           sar ecx, 008h
           add ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 00000014Eh
           sar edx, 008h
           add edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 0000000B5h
           sar eax, 008h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+0000000A0h], eax
           mov edx, dword ptr [ebp-034h]
           sub edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+060h], edx
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+020h], ecx
           mov eax, dword ptr [ebp-020h]
           sub eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+0000000E0h], eax
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000004h
           mov dword ptr [ebp-04Ch], edx
           jmp near ptr l1001FECF
;
;* Jump:
; 1001FEDC(C) 
;
l1002008E: mov esp, ebp
           pop ebp
           ret
l1001FD10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l100200A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-044h], eax
           mov dword ptr [ebp-030h], 000000007h
           jmp l100200BE
;
;* Jump:
; 100202D8(U) 
;
l100200B5: mov ecx, dword ptr [ebp-030h]
           sub ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 100200B3(U) 
;
l100200BE: cmp dword ptr [ebp-030h], 000000000h
           jl l100202DD
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-034h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx]
           sub ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+018h]
           mov dword ptr [ebp-038h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+004h]
           sub ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+014h]
           mov dword ptr [ebp-03Ch], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+008h]
           sub ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+010h]
           mov dword ptr [ebp-040h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+00Ch]
           sub ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-034h]
           sub eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-038h]
           sub edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-01Ch]
           shl eax, 002h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-010h]
           sub edx, dword ptr [ebp-01Ch]
           shl edx, 002h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp-024h]
           add ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 000001151h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 00000187Eh
           mov eax, dword ptr [ebp-004h]
           lea ecx, [eax+edx+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+008h], ecx
           mov eax, dword ptr [ebp-024h]
           imul eax, eax, -000003B21h
           mov ecx, dword ptr [ebp-004h]
           lea edx, [ecx+eax+000000400h]
           sar edx, 00Bh
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+018h], edx
           mov ecx, dword ptr [ebp-048h]
           add ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-04Ch]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-048h]
           add eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-020h]
           imul edx, edx, 0000025A1h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-048h]
           imul eax, eax, 00000098Eh
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-04Ch]
           imul ecx, ecx, 0000041B3h
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000006254h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-014h]
           imul eax, eax, 00000300Bh
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, -000001CCDh
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           imul edx, edx, -000005203h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-018h]
           imul eax, eax, -000003EC5h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, -000000C7Ch
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-048h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-018h]
           lea eax, [ecx+edx+000000400h]
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-04Ch]
           add edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-020h]
           lea ecx, [edx+eax+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx+000000400h]
           sar edx, 00Bh
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+00Ch], edx
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-020h]
           lea eax, [ecx+edx+000000400h]
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-044h]
           add edx, 000000020h
           mov dword ptr [ebp-044h], edx
           jmp near ptr l100200B5
;
;* Jump:
; 100200C2(C) 
;
l100202DD: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-044h], eax
           mov dword ptr [ebp-030h], 000000007h
           jmp l100202F5
;
;* Jump:
; 1002053A(U) 
;
l100202EC: mov ecx, dword ptr [ebp-030h]
           sub ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 100202EA(U) 
;
l100202F5: cmp dword ptr [ebp-030h], 000000000h
           jl l1002053F
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+0000000E0h]
           mov dword ptr [ebp-034h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx]
           sub ecx, dword ptr [eax+0000000E0h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+020h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+0000000C0h]
           mov dword ptr [ebp-038h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+020h]
           sub ecx, dword ptr [eax+0000000C0h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+040h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+0000000A0h]
           mov dword ptr [ebp-03Ch], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+040h]
           sub ecx, dword ptr [eax+0000000A0h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+060h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+000000080h]
           mov dword ptr [ebp-040h], eax
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+060h]
           sub ecx, dword ptr [eax+000000080h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-034h]
           sub eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-038h]
           add ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-038h]
           sub edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-010h]
           lea edx, [ecx+eax+002h]
           sar edx, 002h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-010h]
           sub ecx, dword ptr [ebp-01Ch]
           add ecx, 000000002h
           sar ecx, 002h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+000000080h], ecx
           mov eax, dword ptr [ebp-024h]
           add eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000001151h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 00000187Eh
           mov edx, dword ptr [ebp-004h]
           lea eax, [edx+ecx+000004000h]
           sar eax, 00Fh
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+040h], eax
           mov edx, dword ptr [ebp-024h]
           imul edx, edx, -000003B21h
           mov eax, dword ptr [ebp-004h]
           lea ecx, [eax+edx+000004000h]
           sar ecx, 00Fh
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+0000000C0h], ecx
           mov eax, dword ptr [ebp-048h]
           add eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-048h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-04Ch]
           add eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 0000025A1h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-048h]
           imul edx, edx, 00000098Eh
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-04Ch]
           imul eax, eax, 0000041B3h
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000006254h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-014h]
           imul edx, edx, 00000300Bh
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, -000001CCDh
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, -000005203h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, -000003EC5h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, -000000C7Ch
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-048h]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx+000004000h]
           sar edx, 00Fh
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+0000000E0h], edx
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-020h]
           lea eax, [ecx+edx+000004000h]
           sar eax, 00Fh
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+0000000A0h], eax
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-018h]
           lea ecx, [edx+eax+000004000h]
           sar ecx, 00Fh
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+060h], ecx
           mov eax, dword ptr [ebp-014h]
           add eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-020h]
           lea edx, [eax+ecx+000004000h]
           sar edx, 00Fh
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+020h], edx
           mov ecx, dword ptr [ebp-044h]
           add ecx, 000000004h
           mov dword ptr [ebp-044h], ecx
           jmp near ptr l100202EC
;
;* Jump:
; 100202F9(C) 
;
l1002053F: mov esp, ebp
           pop ebp
           ret
l100200A0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10020550 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000184h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-018h], ecx
           lea edx, [ebp-000000138h]
           mov dword ptr [ebp-038h], edx
           mov dword ptr [ebp-00000013Ch], 000000008h
           jmp l100205A1
;
;* Jump:
; 100206D8(U), 100209AC(U) 
;
l10020592: mov eax, dword ptr [ebp-00000013Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00000013Ch], eax
;
;* Jump:
; 10020590(U) 
;
l100205A1: cmp dword ptr [ebp-00000013Ch], 000000000h
           jle l100209B1
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+010h]
           test edx, edx
           jne l100206DD
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+020h]
           test ecx, ecx
           jne l100206DD
           mov edx, dword ptr [ebp-000000144h]
           movsx eax, word ptr [edx+030h]
           test eax, eax
           jne l100206DD
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+040h]
           test edx, edx
           jne l100206DD
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+050h]
           test ecx, ecx
           jne l100206DD
           mov edx, dword ptr [ebp-000000144h]
           movsx eax, word ptr [edx+060h]
           test eax, eax
           jne l100206DD
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+070h]
           test edx, edx
           jne l100206DD
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax]
           mov dword ptr [ebp-000000164h], ecx
           fild dword ptr [ebp-000000164h]
           mov edx, dword ptr [ebp-018h]
           fmul dword ptr [edx]
           fstp dword ptr [ebp-000000160h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-000000160h]
           mov dword ptr [ecx+040h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax+060h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+000000080h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-000000160h]
           mov dword ptr [ecx+0000000A0h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax+0000000C0h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+0000000E0h], eax
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, 000000002h
           mov dword ptr [ebp-000000144h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000004h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-038h]
           add eax, 000000004h
           mov dword ptr [ebp-038h], eax
           jmp near ptr l10020592
;
;* Jump:
; 100205BA(C), 100205CC(C), 100205DE(C), 100205F0(C), 10020602(C), 
; 10020614(C), 10020626(C) 
;
l100206DD: mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx]
           mov dword ptr [ebp-000000168h], edx
           fild dword ptr [ebp-000000168h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax]
           fstp dword ptr [ebp-000000148h]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+020h]
           mov dword ptr [ebp-00000016Ch], edx
           fild dword ptr [ebp-00000016Ch]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+040h]
           fstp dword ptr [ebp-00000014Ch]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+040h]
           mov dword ptr [ebp-000000170h], edx
           fild dword ptr [ebp-000000170h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+000000080h]
           fstp dword ptr [ebp-000000150h]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+060h]
           mov dword ptr [ebp-000000174h], edx
           fild dword ptr [ebp-000000174h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+0000000C0h]
           fstp dword ptr [ebp-000000154h]
           fld dword ptr [ebp-000000148h]
           fadd dword ptr [ebp-000000150h]
           fstp dword ptr [ebp-008h]
           fld dword ptr [ebp-000000148h]
           fsub dword ptr [ebp-000000150h]
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-00000014Ch]
           fadd dword ptr [ebp-000000154h]
           fstp dword ptr [ebp-02Ch]
           fld dword ptr [ebp-00000014Ch]
           fsub dword ptr [ebp-000000154h]
           fmul dword ptr [g10042A58]
           fsub dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-020h]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-000000148h]
           fld dword ptr [ebp-008h]
           fsub dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-000000154h]
           fld dword ptr [ebp-014h]
           fadd dword ptr [ebp-020h]
           fstp dword ptr [ebp-00000014Ch]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-020h]
           fstp dword ptr [ebp-000000150h]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+010h]
           mov dword ptr [ebp-000000178h], edx
           fild dword ptr [ebp-000000178h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+020h]
           fstp dword ptr [ebp-000000158h]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+030h]
           mov dword ptr [ebp-00000017Ch], edx
           fild dword ptr [ebp-00000017Ch]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+060h]
           fstp dword ptr [ebp-00000015Ch]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+050h]
           mov dword ptr [ebp-000000180h], edx
           fild dword ptr [ebp-000000180h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+0000000A0h]
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+070h]
           mov dword ptr [ebp-000000184h], edx
           fild dword ptr [ebp-000000184h]
           mov eax, dword ptr [ebp-018h]
           fmul dword ptr [eax+0000000E0h]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [ebp-004h]
           fadd dword ptr [ebp-00000015Ch]
           fstp dword ptr [ebp-034h]
           fld dword ptr [ebp-004h]
           fsub dword ptr [ebp-00000015Ch]
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-000000158h]
           fadd dword ptr [ebp-00Ch]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-000000158h]
           fsub dword ptr [ebp-00Ch]
           fstp dword ptr [ebp-024h]
           fld dword ptr [ebp-01Ch]
           fadd dword ptr [ebp-034h]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [ebp-01Ch]
           fsub dword ptr [ebp-034h]
           fmul dword ptr [g10042A58]
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-010h]
           fadd dword ptr [ebp-024h]
           fmul dword ptr [g10042A54]
           fstp dword ptr [ebp-028h]
           fld dword ptr [g10042A50]
           fmul dword ptr [ebp-024h]
           fsub dword ptr [ebp-028h]
           fstp dword ptr [ebp-008h]
           fld dword ptr [g10042A4C]
           fmul dword ptr [ebp-010h]
           fadd dword ptr [ebp-028h]
           fst dword ptr [ebp-020h]
           fsub dword ptr [ebp-00Ch]
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-004h]
           fstp dword ptr [ebp-00000015Ch]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-00000015Ch]
           fstp dword ptr [ebp-000000158h]
           fld dword ptr [ebp-000000148h]
           fadd dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx]
           fld dword ptr [ebp-000000148h]
           fsub dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+0000000E0h]
           fld dword ptr [ebp-00000014Ch]
           fadd dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax+020h]
           fld dword ptr [ebp-00000014Ch]
           fsub dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx+0000000C0h]
           fld dword ptr [ebp-000000150h]
           fadd dword ptr [ebp-00000015Ch]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+040h]
           fld dword ptr [ebp-000000150h]
           fsub dword ptr [ebp-00000015Ch]
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax+0000000A0h]
           fld dword ptr [ebp-000000154h]
           fadd dword ptr [ebp-000000158h]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx+000000080h]
           fld dword ptr [ebp-000000154h]
           fsub dword ptr [ebp-000000158h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+060h]
           mov eax, dword ptr [ebp-000000144h]
           add eax, 000000002h
           mov dword ptr [ebp-000000144h], eax
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000004h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-038h]
           add edx, 000000004h
           mov dword ptr [ebp-038h], edx
           jmp near ptr l10020592
;
;* Jump:
; 100205A8(C) 
;
l100209B1: lea eax, [ebp-000000138h]
           mov dword ptr [ebp-038h], eax
           mov dword ptr [ebp-00000013Ch], 000000000h
           jmp l100209D5
;
;* Jump:
; 10020C60(U) 
;
l100209C6: mov ecx, dword ptr [ebp-00000013Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000013Ch], ecx
;
;* Jump:
; 100209C4(U) 
;
l100209D5: cmp dword ptr [ebp-00000013Ch], 000000008h
           jnl l10020C65
           mov edx, dword ptr [ebp-00000013Ch]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           add ecx, dword ptr [ebp+018h]
           mov dword ptr [ebp-000000140h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           fld dword ptr [edx]
           fadd dword ptr [eax+010h]
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           fld dword ptr [ecx]
           fsub dword ptr [edx+010h]
           fstp dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-038h]
           fld dword ptr [eax+008h]
           fadd dword ptr [ecx+018h]
           fstp dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           fld dword ptr [edx+008h]
           fsub dword ptr [eax+018h]
           fmul dword ptr [g10042A58]
           fsub dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-020h]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-000000148h]
           fld dword ptr [ebp-008h]
           fsub dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-000000154h]
           fld dword ptr [ebp-014h]
           fadd dword ptr [ebp-020h]
           fstp dword ptr [ebp-00000014Ch]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-020h]
           fstp dword ptr [ebp-000000150h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           fld dword ptr [ecx+014h]
           fadd dword ptr [edx+00Ch]
           fstp dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-038h]
           fld dword ptr [eax+014h]
           fsub dword ptr [ecx+00Ch]
           fstp dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           fld dword ptr [edx+004h]
           fadd dword ptr [eax+01Ch]
           fstp dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           fld dword ptr [ecx+004h]
           fsub dword ptr [edx+01Ch]
           fstp dword ptr [ebp-024h]
           fld dword ptr [ebp-01Ch]
           fadd dword ptr [ebp-034h]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [ebp-01Ch]
           fsub dword ptr [ebp-034h]
           fmul dword ptr [g10042A58]
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-010h]
           fadd dword ptr [ebp-024h]
           fmul dword ptr [g10042A54]
           fstp dword ptr [ebp-028h]
           fld dword ptr [g10042A50]
           fmul dword ptr [ebp-024h]
           fsub dword ptr [ebp-028h]
           fstp dword ptr [ebp-008h]
           fld dword ptr [g10042A4C]
           fmul dword ptr [ebp-010h]
           fadd dword ptr [ebp-028h]
           fst dword ptr [ebp-020h]
           fsub dword ptr [ebp-00Ch]
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-004h]
           fstp dword ptr [ebp-00000015Ch]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp-00000015Ch]
           fstp dword ptr [ebp-000000158h]
           fld dword ptr [ebp-000000148h]
           fadd dword ptr [ebp-00Ch]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           fld dword ptr [ebp-000000148h]
           fsub dword ptr [ebp-00Ch]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+007h], al
           fld dword ptr [ebp-00000014Ch]
           fadd dword ptr [ebp-004h]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           fld dword ptr [ebp-00000014Ch]
           fsub dword ptr [ebp-004h]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+006h], al
           fld dword ptr [ebp-000000150h]
           fadd dword ptr [ebp-00000015Ch]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           fld dword ptr [ebp-000000150h]
           fsub dword ptr [ebp-00000015Ch]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+005h], al
           fld dword ptr [ebp-000000154h]
           fadd dword ptr [ebp-000000158h]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+004h], al
           fld dword ptr [ebp-000000154h]
           fsub dword ptr [ebp-000000158h]
           call l10041630; [BICRT._ftol].
           add eax, 000000004h
           sar eax, 003h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+003h], al
           mov ecx, dword ptr [ebp-038h]
           add ecx, 000000020h
           mov dword ptr [ebp-038h], ecx
           jmp near ptr l100209C6
;
;* Jump:
; 100209DC(C) 
;
l10020C65: mov esp, ebp
           pop ebp
           ret
l10020550 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10020C70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000164h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-018h], ecx
           lea edx, [ebp-000000138h]
           mov dword ptr [ebp-038h], edx
           mov dword ptr [ebp-00000013Ch], 000000008h
           jmp l10020CC1
;
;* Jump:
; 10020DED(U), 1002107B(U) 
;
l10020CB2: mov eax, dword ptr [ebp-00000013Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00000013Ch], eax
;
;* Jump:
; 10020CB0(U) 
;
l10020CC1: cmp dword ptr [ebp-00000013Ch], 000000000h
           jle l10021080
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+010h]
           test edx, edx
           jne l10020DF2
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+020h]
           test ecx, ecx
           jne l10020DF2
           mov edx, dword ptr [ebp-000000144h]
           movsx eax, word ptr [edx+030h]
           test eax, eax
           jne l10020DF2
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+040h]
           test edx, edx
           jne l10020DF2
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+050h]
           test ecx, ecx
           jne l10020DF2
           mov edx, dword ptr [ebp-000000144h]
           movsx eax, word ptr [edx+060h]
           test eax, eax
           jne l10020DF2
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+070h]
           test edx, edx
           jne l10020DF2
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx]
           mov dword ptr [ebp-000000160h], ecx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-000000160h]
           mov dword ptr [ecx+040h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax+060h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+000000080h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-000000160h]
           mov dword ptr [ecx+0000000A0h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-000000160h]
           mov dword ptr [eax+0000000C0h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx+0000000E0h], eax
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, 000000002h
           mov dword ptr [ebp-000000144h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000004h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-038h]
           add eax, 000000004h
           mov dword ptr [ebp-038h], eax
           jmp near ptr l10020CB2
;
;* Jump:
; 10020CDA(C), 10020CEC(C), 10020CFE(C), 10020D10(C), 10020D22(C), 
; 10020D34(C), 10020D46(C) 
;
l10020DF2: mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax]
           mov dword ptr [ebp-000000148h], edx
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+020h]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax+040h]
           mov dword ptr [ebp-00000014Ch], edx
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+040h]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax+000000080h]
           mov dword ptr [ebp-000000150h], edx
           mov ecx, dword ptr [ebp-000000144h]
           movsx edx, word ptr [ecx+060h]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax+0000000C0h]
           mov dword ptr [ebp-000000154h], edx
           mov ecx, dword ptr [ebp-000000148h]
           add ecx, dword ptr [ebp-000000150h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-000000148h]
           sub edx, dword ptr [ebp-000000150h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00000014Ch]
           add eax, dword ptr [ebp-000000154h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-00000014Ch]
           sub ecx, dword ptr [ebp-000000154h]
           imul ecx, ecx, 00000016Ah
           sar ecx, 008h
           sub ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-000000148h], edx
           mov eax, dword ptr [ebp-008h]
           sub eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-000000154h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-000000150h], edx
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+020h]
           mov dword ptr [ebp-000000158h], ecx
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+030h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+060h]
           mov dword ptr [ebp-00000015Ch], ecx
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+050h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+0000000A0h]
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-000000144h]
           movsx ecx, word ptr [eax+070h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+0000000E0h]
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-000000158h]
           add edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-000000158h]
           sub eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           sub edx, dword ptr [ebp-034h]
           imul edx, edx, 00000016Ah
           sar edx, 008h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-024h]
           imul eax, eax, 0000001D9h
           sar eax, 008h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-024h]
           imul ecx, ecx, 000000115h
           sar ecx, 008h
           sub ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, -00000029Dh
           sar edx, 008h
           add edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           sub eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-014h]
           sub ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00000015Ch], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-000000158h], edx
           mov eax, dword ptr [ebp-000000148h]
           add eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-000000148h]
           sub edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+0000000E0h], edx
           mov ecx, dword ptr [ebp-00000014Ch]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+020h], ecx
           mov eax, dword ptr [ebp-00000014Ch]
           sub eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+0000000C0h], eax
           mov edx, dword ptr [ebp-000000150h]
           add edx, dword ptr [ebp-00000015Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+040h], edx
           mov ecx, dword ptr [ebp-000000150h]
           sub ecx, dword ptr [ebp-00000015Ch]
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+0000000A0h], ecx
           mov eax, dword ptr [ebp-000000154h]
           add eax, dword ptr [ebp-000000158h]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+000000080h], eax
           mov edx, dword ptr [ebp-000000154h]
           sub edx, dword ptr [ebp-000000158h]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+060h], edx
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, 000000002h
           mov dword ptr [ebp-000000144h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000004h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-038h]
           add eax, 000000004h
           mov dword ptr [ebp-038h], eax
           jmp near ptr l10020CB2
;
;* Jump:
; 10020CC8(C) 
;
l10021080: lea ecx, [ebp-000000138h]
           mov dword ptr [ebp-038h], ecx
           mov dword ptr [ebp-00000013Ch], 000000000h
           jmp l100210A4
;
;* Jump:
; 100211BB(U), 10021401(U) 
;
l10021095: mov edx, dword ptr [ebp-00000013Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000013Ch], edx
;
;* Jump:
; 10021093(U) 
;
l100210A4: cmp dword ptr [ebp-00000013Ch], 000000008h
           jnl l10021406
           mov eax, dword ptr [ebp-00000013Ch]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+eax*04h]
           add edx, dword ptr [ebp+018h]
           mov dword ptr [ebp-000000140h], edx
           mov eax, dword ptr [ebp-038h]
           cmp dword ptr [eax+004h], 000000000h
           jne l100211C0
           mov ecx, dword ptr [ebp-038h]
           cmp dword ptr [ecx+008h], 000000000h
           jne l100211C0
           mov edx, dword ptr [ebp-038h]
           cmp dword ptr [edx+00Ch], 000000000h
           jne l100211C0
           mov eax, dword ptr [ebp-038h]
           cmp dword ptr [eax+010h], 000000000h
           jne l100211C0
           mov ecx, dword ptr [ebp-038h]
           cmp dword ptr [ecx+014h], 000000000h
           jne l100211C0
           mov edx, dword ptr [ebp-038h]
           cmp dword ptr [edx+018h], 000000000h
           jne l100211C0
           mov eax, dword ptr [ebp-038h]
           cmp dword ptr [eax+01Ch], 000000000h
           jne l100211C0
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx]
           sar edx, 005h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-030h]
           mov cl, byte ptr [eax+edx]
           mov byte ptr [ebp-000000164h], cl
           mov edx, dword ptr [ebp-000000140h]
           mov al, byte ptr [ebp-000000164h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-000000140h]
           mov dl, byte ptr [ebp-000000164h]
           mov byte ptr [ecx+001h], dl
           mov eax, dword ptr [ebp-000000140h]
           mov cl, byte ptr [ebp-000000164h]
           mov byte ptr [eax+002h], cl
           mov edx, dword ptr [ebp-000000140h]
           mov al, byte ptr [ebp-000000164h]
           mov byte ptr [edx+003h], al
           mov ecx, dword ptr [ebp-000000140h]
           mov dl, byte ptr [ebp-000000164h]
           mov byte ptr [ecx+004h], dl
           mov eax, dword ptr [ebp-000000140h]
           mov cl, byte ptr [ebp-000000164h]
           mov byte ptr [eax+005h], cl
           mov edx, dword ptr [ebp-000000140h]
           mov al, byte ptr [ebp-000000164h]
           mov byte ptr [edx+006h], al
           mov ecx, dword ptr [ebp-000000140h]
           mov dl, byte ptr [ebp-000000164h]
           mov byte ptr [ecx+007h], dl
           mov eax, dword ptr [ebp-038h]
           add eax, 000000020h
           mov dword ptr [ebp-038h], eax
           jmp near ptr l10021095
;
;* Jump:
; 100210CD(C), 100210DA(C), 100210E7(C), 100210F4(C), 10021101(C), 
; 1002110E(C), 1002111B(C) 
;
l100211C0: mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-038h]
           add edx, dword ptr [eax+010h]
           mov dword ptr [ebp-008h], edx
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ecx]
           sub eax, dword ptr [edx+010h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-038h]
           add edx, dword ptr [eax+018h]
           mov dword ptr [ebp-02Ch], edx
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ecx+008h]
           sub eax, dword ptr [edx+018h]
           imul eax, eax, 00000016Ah
           sar eax, 008h
           sub eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-000000148h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-000000154h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-00000014Ch], eax
           mov ecx, dword ptr [ebp-014h]
           sub ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-000000150h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [ebp-038h]
           add eax, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-034h], eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [edx+014h]
           sub ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-038h]
           add eax, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [edx+004h]
           sub ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-034h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           sub eax, dword ptr [ebp-034h]
           imul eax, eax, 00000016Ah
           sar eax, 008h
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-024h]
           imul ecx, ecx, 0000001D9h
           sar ecx, 008h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-024h]
           imul edx, edx, 000000115h
           sar edx, 008h
           sub edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           imul eax, eax, -00000029Dh
           sar eax, 008h
           add eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           sub ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00000015Ch], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-000000158h], eax
           mov ecx, dword ptr [ebp-000000148h]
           add ecx, dword ptr [ebp-00Ch]
           sar ecx, 005h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000140h]
           mov eax, dword ptr [ebp-030h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-000000148h]
           sub edx, dword ptr [ebp-00Ch]
           sar edx, 005h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-000000140h]
           mov ecx, dword ptr [ebp-030h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+007h], dl
           mov eax, dword ptr [ebp-00000014Ch]
           add eax, dword ptr [ebp-004h]
           sar eax, 005h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-00000014Ch]
           sub ecx, dword ptr [ebp-004h]
           sar ecx, 005h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000140h]
           mov eax, dword ptr [ebp-030h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+006h], cl
           mov edx, dword ptr [ebp-000000150h]
           add edx, dword ptr [ebp-00000015Ch]
           sar edx, 005h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-000000140h]
           mov ecx, dword ptr [ebp-030h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+002h], dl
           mov eax, dword ptr [ebp-000000150h]
           sub eax, dword ptr [ebp-00000015Ch]
           sar eax, 005h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-030h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+005h], al
           mov ecx, dword ptr [ebp-000000154h]
           add ecx, dword ptr [ebp-000000158h]
           sar ecx, 005h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000140h]
           mov eax, dword ptr [ebp-030h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-000000154h]
           sub edx, dword ptr [ebp-000000158h]
           sar edx, 005h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-000000140h]
           mov ecx, dword ptr [ebp-030h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+003h], dl
           mov eax, dword ptr [ebp-038h]
           add eax, 000000020h
           mov dword ptr [ebp-038h], eax
           jmp near ptr l10021095
;
;* Jump:
; 100210AB(C) 
;
l10021406: mov esp, ebp
           pop ebp
           ret
l10020C70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10021410 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000154h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-00000013Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-018h], ecx
           lea edx, [ebp-000000130h]
           mov dword ptr [ebp-030h], edx
           mov dword ptr [ebp-000000134h], 000000008h
           jmp l10021461
;
;* Jump:
; 10021590(U), 100218ED(U) 
;
l10021452: mov eax, dword ptr [ebp-000000134h]
           sub eax, 000000001h
           mov dword ptr [ebp-000000134h], eax
;
;* Jump:
; 10021450(U) 
;
l10021461: cmp dword ptr [ebp-000000134h], 000000000h
           jle l100218F2
           mov ecx, dword ptr [ebp-00000013Ch]
           movsx edx, word ptr [ecx+010h]
           test edx, edx
           jne l10021595
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+020h]
           test ecx, ecx
           jne l10021595
           mov edx, dword ptr [ebp-00000013Ch]
           movsx eax, word ptr [edx+030h]
           test eax, eax
           jne l10021595
           mov ecx, dword ptr [ebp-00000013Ch]
           movsx edx, word ptr [ecx+040h]
           test edx, edx
           jne l10021595
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+050h]
           test ecx, ecx
           jne l10021595
           mov edx, dword ptr [ebp-00000013Ch]
           movsx eax, word ptr [edx+060h]
           test eax, eax
           jne l10021595
           mov ecx, dword ptr [ebp-00000013Ch]
           movsx edx, word ptr [ecx+070h]
           test edx, edx
           jne l10021595
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx]
           shl ecx, 002h
           mov dword ptr [ebp-000000150h], ecx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-000000150h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-000000150h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-000000150h]
           mov dword ptr [ecx+040h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-000000150h]
           mov dword ptr [eax+060h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-000000150h]
           mov dword ptr [edx+000000080h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-000000150h]
           mov dword ptr [ecx+0000000A0h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-000000150h]
           mov dword ptr [eax+0000000C0h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-000000150h]
           mov dword ptr [edx+0000000E0h], eax
           mov ecx, dword ptr [ebp-00000013Ch]
           add ecx, 000000002h
           mov dword ptr [ebp-00000013Ch], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000004h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000004h
           mov dword ptr [ebp-030h], eax
           jmp near ptr l10021452
;
;* Jump:
; 1002147A(C), 1002148C(C), 1002149E(C), 100214B0(C), 100214C2(C), 
; 100214D4(C), 100214E6(C) 
;
l10021595: mov ecx, dword ptr [ebp-00000013Ch]
           movsx edx, word ptr [ecx+020h]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], edx
           mov ecx, dword ptr [ebp-00000013Ch]
           movsx edx, word ptr [ecx+060h]
           mov eax, dword ptr [ebp-018h]
           imul edx, dword ptr [eax+0000000C0h]
           mov dword ptr [ebp-010h], edx
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 000001151h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, -000003B21h
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           mov dword ptr [ebp-000000148h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 00000187Eh
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-00000014Ch], edx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx]
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+040h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+000000080h]
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-010h]
           shl eax, 00Dh
           mov dword ptr [ebp-000000140h], eax
           mov ecx, dword ptr [ebp-008h]
           sub ecx, dword ptr [ebp-010h]
           shl ecx, 00Dh
           mov dword ptr [ebp-000000144h], ecx
           mov edx, dword ptr [ebp-000000140h]
           add edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-000000140h]
           sub eax, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-000000144h]
           sub edx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+070h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+0000000E0h]
           mov dword ptr [ebp-000000140h], ecx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+050h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+0000000A0h]
           mov dword ptr [ebp-000000144h], ecx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+030h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+060h]
           mov dword ptr [ebp-000000148h], ecx
           mov eax, dword ptr [ebp-00000013Ch]
           movsx ecx, word ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           imul ecx, dword ptr [edx+020h]
           mov dword ptr [ebp-00000014Ch], ecx
           mov eax, dword ptr [ebp-000000140h]
           add eax, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-000000140h]
           add edx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-000000144h]
           add eax, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-01Ch]
           imul ecx, ecx, 0000025A1h
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-000000140h]
           imul edx, edx, 00000098Eh
           mov dword ptr [ebp-000000140h], edx
           mov eax, dword ptr [ebp-000000144h]
           imul eax, eax, 0000041B3h
           mov dword ptr [ebp-000000144h], eax
           mov ecx, dword ptr [ebp-000000148h]
           imul ecx, ecx, 000006254h
           mov dword ptr [ebp-000000148h], ecx
           mov edx, dword ptr [ebp-00000014Ch]
           imul edx, edx, 00000300Bh
           mov dword ptr [ebp-00000014Ch], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, -000001CCDh
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, -000005203h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, -000003EC5h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, -000000C7Ch
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-000000140h]
           add ecx, eax
           mov dword ptr [ebp-000000140h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-000000144h]
           add eax, edx
           mov dword ptr [ebp-000000144h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-000000148h]
           add edx, ecx
           mov dword ptr [ebp-000000148h], edx
           mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-00000014Ch]
           add ecx, eax
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-00000014Ch]
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-00Ch]
           sub eax, dword ptr [ebp-00000014Ch]
           add eax, 000000400h
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+0000000E0h], eax
           mov edx, dword ptr [ebp-000000148h]
           mov eax, dword ptr [ebp-014h]
           lea ecx, [eax+edx+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+020h], ecx
           mov eax, dword ptr [ebp-014h]
           sub eax, dword ptr [ebp-000000148h]
           add eax, 000000400h
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+0000000C0h], eax
           mov edx, dword ptr [ebp-000000144h]
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+040h], ecx
           mov eax, dword ptr [ebp-020h]
           sub eax, dword ptr [ebp-000000144h]
           add eax, 000000400h
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+0000000A0h], eax
           mov edx, dword ptr [ebp-000000140h]
           mov eax, dword ptr [ebp-028h]
           lea ecx, [eax+edx+000000400h]
           sar ecx, 00Bh
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+060h], ecx
           mov eax, dword ptr [ebp-028h]
           sub eax, dword ptr [ebp-000000140h]
           add eax, 000000400h
           sar eax, 00Bh
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+000000080h], eax
           mov edx, dword ptr [ebp-00000013Ch]
           add edx, 000000002h
           mov dword ptr [ebp-00000013Ch], edx
           mov eax, dword ptr [ebp-018h]
           add eax, 000000004h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-030h]
           add ecx, 000000004h
           mov dword ptr [ebp-030h], ecx
           jmp near ptr l10021452
;
;* Jump:
; 10021468(C) 
;
l100218F2: lea edx, [ebp-000000130h]
           mov dword ptr [ebp-030h], edx
           mov dword ptr [ebp-000000134h], 000000000h
           jmp l10021916
;
;* Jump:
; 10021A2F(U), 10021D76(U) 
;
l10021907: mov eax, dword ptr [ebp-000000134h]
           add eax, 000000001h
           mov dword ptr [ebp-000000134h], eax
;
;* Jump:
; 10021905(U) 
;
l10021916: cmp dword ptr [ebp-000000134h], 000000008h
           jnl l10021D7B
           mov ecx, dword ptr [ebp-000000134h]
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, dword ptr [ebp+018h]
           mov dword ptr [ebp-000000138h], eax
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+004h], 000000000h
           jne l10021A34
           mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+008h], 000000000h
           jne l10021A34
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+00Ch], 000000000h
           jne l10021A34
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10021A34
           mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+014h], 000000000h
           jne l10021A34
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+018h], 000000000h
           jne l10021A34
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+01Ch], 000000000h
           jne l10021A34
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx]
           add eax, 000000010h
           sar eax, 005h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-02Ch]
           mov dl, byte ptr [ecx+eax]
           mov byte ptr [ebp-000000154h], dl
           mov eax, dword ptr [ebp-000000138h]
           mov cl, byte ptr [ebp-000000154h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000000138h]
           mov al, byte ptr [ebp-000000154h]
           mov byte ptr [edx+001h], al
           mov ecx, dword ptr [ebp-000000138h]
           mov dl, byte ptr [ebp-000000154h]
           mov byte ptr [ecx+002h], dl
           mov eax, dword ptr [ebp-000000138h]
           mov cl, byte ptr [ebp-000000154h]
           mov byte ptr [eax+003h], cl
           mov edx, dword ptr [ebp-000000138h]
           mov al, byte ptr [ebp-000000154h]
           mov byte ptr [edx+004h], al
           mov ecx, dword ptr [ebp-000000138h]
           mov dl, byte ptr [ebp-000000154h]
           mov byte ptr [ecx+005h], dl
           mov eax, dword ptr [ebp-000000138h]
           mov cl, byte ptr [ebp-000000154h]
           mov byte ptr [eax+006h], cl
           mov edx, dword ptr [ebp-000000138h]
           mov al, byte ptr [ebp-000000154h]
           mov byte ptr [edx+007h], al
           mov ecx, dword ptr [ebp-030h]
           add ecx, 000000020h
           mov dword ptr [ebp-030h], ecx
           jmp near ptr l10021907
;
;* Jump:
; 1002193F(C), 1002194C(C), 10021959(C), 10021966(C), 10021973(C), 
; 10021980(C), 1002198D(C) 
;
l10021A34: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-010h]
           imul eax, eax, 000001151h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, -000003B21h
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-000000148h], edx
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 00000187Eh
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-030h]
           add eax, dword ptr [ecx+010h]
           shl eax, 00Dh
           mov dword ptr [ebp-000000140h], eax
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [edx]
           sub ecx, dword ptr [eax+010h]
           shl ecx, 00Dh
           mov dword ptr [ebp-000000144h], ecx
           mov edx, dword ptr [ebp-000000140h]
           add edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-000000140h]
           sub eax, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-000000144h]
           add ecx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-000000144h]
           sub edx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-000000140h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-000000144h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-000000148h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-000000140h]
           add edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-000000144h]
           add eax, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-000000140h]
           add ecx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-000000144h]
           add edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-01Ch]
           imul eax, eax, 0000025A1h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-000000140h]
           imul ecx, ecx, 00000098Eh
           mov dword ptr [ebp-000000140h], ecx
           mov edx, dword ptr [ebp-000000144h]
           imul edx, edx, 0000041B3h
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-000000148h]
           imul eax, eax, 000006254h
           mov dword ptr [ebp-000000148h], eax
           mov ecx, dword ptr [ebp-00000014Ch]
           imul ecx, ecx, 00000300Bh
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -000001CCDh
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, -000005203h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, -000003EC5h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           imul edx, edx, -000000C7Ch
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-000000140h]
           add eax, edx
           mov dword ptr [ebp-000000140h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-000000144h]
           add edx, ecx
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-000000148h]
           add ecx, eax
           mov dword ptr [ebp-000000148h], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-00000014Ch]
           add eax, edx
           mov dword ptr [ebp-00000014Ch], eax
           mov ecx, dword ptr [ebp-00000014Ch]
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+000020000h]
           sar eax, 012h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov edx, dword ptr [ebp-02Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-00Ch]
           sub ecx, dword ptr [ebp-00000014Ch]
           add ecx, 000020000h
           sar ecx, 012h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000138h]
           mov eax, dword ptr [ebp-02Ch]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+007h], cl
           mov edx, dword ptr [ebp-000000148h]
           mov eax, dword ptr [ebp-014h]
           lea ecx, [eax+edx+000020000h]
           sar ecx, 012h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000138h]
           mov eax, dword ptr [ebp-02Ch]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+001h], cl
           mov edx, dword ptr [ebp-014h]
           sub edx, dword ptr [ebp-000000148h]
           add edx, 000020000h
           sar edx, 012h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-000000138h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+006h], dl
           mov eax, dword ptr [ebp-000000144h]
           mov ecx, dword ptr [ebp-020h]
           lea edx, [ecx+eax+000020000h]
           sar edx, 012h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-000000138h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+002h], dl
           mov eax, dword ptr [ebp-020h]
           sub eax, dword ptr [ebp-000000144h]
           add eax, 000020000h
           sar eax, 012h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov edx, dword ptr [ebp-02Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+005h], al
           mov ecx, dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-028h]
           lea eax, [edx+ecx+000020000h]
           sar eax, 012h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-000000138h]
           mov edx, dword ptr [ebp-02Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+003h], al
           mov ecx, dword ptr [ebp-028h]
           sub ecx, dword ptr [ebp-000000140h]
           add ecx, 000020000h
           sar ecx, 012h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-000000138h]
           mov eax, dword ptr [ebp-02Ch]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-030h]
           add edx, 000000020h
           mov dword ptr [ebp-030h], edx
           jmp near ptr l10021907
;
;* Jump:
; 1002191D(C) 
;
l10021D7B: mov esp, ebp
           pop ebp
           ret
l10021410 ENDP
;
           int 03h
l10021D80 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000C0h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-0000000B0h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-014h], ecx
           lea edx, [ebp-0000000A4h]
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-0000000A8h], 000000008h
           jmp l10021DF2
;
;* Jump:
; 10021E08(U), 10021EAD(U), 10022050(U) 
;
l10021DC2: mov eax, dword ptr [ebp-0000000B0h]
           add eax, 000000002h
           mov dword ptr [ebp-0000000B0h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000004h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 000000004h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-0000000A8h]
           sub eax, 000000001h
           mov dword ptr [ebp-0000000A8h], eax
;
;* Jump:
; 10021DC0(U) 
;
l10021DF2: cmp dword ptr [ebp-0000000A8h], 000000000h
           jle l10022055
           cmp dword ptr [ebp-0000000A8h], 000000004h
           jne l10021E0A
           jmp l10021DC2
;
;* Jump:
; 10021E06(C) 
;
l10021E0A: mov ecx, dword ptr [ebp-0000000B0h]
           movsx edx, word ptr [ecx+010h]
           test edx, edx
           jne l10021EB2
           mov eax, dword ptr [ebp-0000000B0h]
           movsx ecx, word ptr [eax+020h]
           test ecx, ecx
           jne l10021EB2
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+030h]
           test eax, eax
           jne l10021EB2
           mov ecx, dword ptr [ebp-0000000B0h]
           movsx edx, word ptr [ecx+050h]
           test edx, edx
           jne l10021EB2
           mov eax, dword ptr [ebp-0000000B0h]
           movsx ecx, word ptr [eax+060h]
           test ecx, ecx
           jne l10021EB2
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+070h]
           test eax, eax
           jne l10021EB2
           mov ecx, dword ptr [ebp-0000000B0h]
           movsx edx, word ptr [ecx]
           mov eax, dword ptr [ebp-014h]
           imul edx, dword ptr [eax]
           shl edx, 002h
           mov dword ptr [ebp-0000000BCh], edx
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-0000000BCh]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-0000000BCh]
           mov dword ptr [eax+020h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-0000000BCh]
           mov dword ptr [edx+040h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-0000000BCh]
           mov dword ptr [ecx+060h], edx
           jmp near ptr l10021DC2
;
;* Jump:
; 10021E16(C), 10021E28(C), 10021E3A(C), 10021E48(C), 10021E56(C), 
; 10021E64(C) 
;
l10021EB2: mov eax, dword ptr [ebp-0000000B0h]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-014h]
           imul ecx, dword ptr [edx]
           mov dword ptr [ebp-0000000B4h], ecx
           mov eax, dword ptr [ebp-0000000B4h]
           shl eax, 00Eh
           mov dword ptr [ebp-0000000B4h], eax
           mov ecx, dword ptr [ebp-0000000B0h]
           movsx edx, word ptr [ecx+020h]
           mov eax, dword ptr [ebp-014h]
           imul edx, dword ptr [eax+040h]
           mov dword ptr [ebp-008h], edx
           mov ecx, dword ptr [ebp-0000000B0h]
           movsx edx, word ptr [ecx+060h]
           mov eax, dword ptr [ebp-014h]
           imul edx, dword ptr [eax+0000000C0h]
           mov dword ptr [ebp-010h], edx
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000003B21h
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, -00000187Eh
           add ecx, edx
           mov dword ptr [ebp-0000000B8h], ecx
           mov eax, dword ptr [ebp-0000000B4h]
           add eax, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-0000000B4h]
           sub ecx, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+070h]
           mov ecx, dword ptr [ebp-014h]
           imul eax, dword ptr [ecx+0000000E0h]
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+050h]
           mov ecx, dword ptr [ebp-014h]
           imul eax, dword ptr [ecx+0000000A0h]
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+030h]
           mov ecx, dword ptr [ebp-014h]
           imul eax, dword ptr [ecx+060h]
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-0000000B0h]
           movsx eax, word ptr [edx+010h]
           mov ecx, dword ptr [ebp-014h]
           imul eax, dword ptr [ecx+020h]
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -0000006C2h
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 000002E75h
           add edx, eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, -000004587h
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           imul eax, eax, 0000021F9h
           add edx, eax
           mov dword ptr [ebp-0000000B4h], edx
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, -000001050h
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, -00000133Eh
           add ecx, edx
           mov eax, dword ptr [ebp-010h]
           imul eax, eax, 000001CCDh
           add ecx, eax
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000005203h
           add ecx, edx
           mov dword ptr [ebp-0000000B8h], ecx
           mov eax, dword ptr [ebp-0000000B8h]
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+000000800h]
           sar edx, 00Ch
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-00Ch]
           sub ecx, dword ptr [ebp-0000000B8h]
           add ecx, 000000800h
           sar ecx, 00Ch
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+060h], ecx
           mov eax, dword ptr [ebp-0000000B4h]
           mov ecx, dword ptr [ebp-01Ch]
           lea edx, [ecx+eax+000000800h]
           sar edx, 00Ch
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+020h], edx
           mov ecx, dword ptr [ebp-01Ch]
           sub ecx, dword ptr [ebp-0000000B4h]
           add ecx, 000000800h
           sar ecx, 00Ch
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+040h], ecx
           jmp near ptr l10021DC2
;
;* Jump:
; 10021DF9(C) 
;
l10022055: lea eax, [ebp-0000000A4h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-0000000A8h], 000000000h
           jmp l10022079
;
;* Jump:
; 1002213D(U), 100222B6(U) 
;
l1002206A: mov ecx, dword ptr [ebp-0000000A8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000A8h], ecx
;
;* Jump:
; 10022068(U) 
;
l10022079: cmp dword ptr [ebp-0000000A8h], 000000004h
           jnl l100222BB
           mov edx, dword ptr [ebp-0000000A8h]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           add ecx, dword ptr [ebp+018h]
           mov dword ptr [ebp-0000000ACh], ecx
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+004h], 000000000h
           jne l10022142
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+008h], 000000000h
           jne l10022142
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+00Ch], 000000000h
           jne l10022142
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+014h], 000000000h
           jne l10022142
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+018h], 000000000h
           jne l10022142
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+01Ch], 000000000h
           jne l10022142
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           add eax, 000000010h
           sar eax, 005h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+eax]
           mov byte ptr [ebp-0000000C0h], dl
           mov eax, dword ptr [ebp-0000000ACh]
           mov cl, byte ptr [ebp-0000000C0h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-0000000ACh]
           mov al, byte ptr [ebp-0000000C0h]
           mov byte ptr [edx+001h], al
           mov ecx, dword ptr [ebp-0000000ACh]
           mov dl, byte ptr [ebp-0000000C0h]
           mov byte ptr [ecx+002h], dl
           mov eax, dword ptr [ebp-0000000ACh]
           mov cl, byte ptr [ebp-0000000C0h]
           mov byte ptr [eax+003h], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000020h
           mov dword ptr [ebp-024h], edx
           jmp near ptr l1002206A
;
;* Jump:
; 100220A2(C), 100220AF(C), 100220BC(C), 100220C9(C), 100220D2(C), 
; 100220DB(C) 
;
l10022142: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           shl ecx, 00Eh
           mov dword ptr [ebp-0000000B4h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+008h]
           imul eax, eax, 000003B21h
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+018h]
           imul edx, edx, -00000187Eh
           add eax, edx
           mov dword ptr [ebp-0000000B8h], eax
           mov eax, dword ptr [ebp-0000000B4h]
           add eax, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-0000000B4h]
           sub ecx, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, -0000006C2h
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000002E75h
           add ecx, edx
           mov eax, dword ptr [ebp-010h]
           imul eax, eax, -000004587h
           add ecx, eax
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 0000021F9h
           add ecx, edx
           mov dword ptr [ebp-0000000B4h], ecx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, -000001050h
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, -00000133Eh
           add eax, ecx
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, 000001CCDh
           add eax, edx
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000005203h
           add eax, ecx
           mov dword ptr [ebp-0000000B8h], eax
           mov edx, dword ptr [ebp-0000000B8h]
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000040000h]
           sar ecx, 013h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-0000000ACh]
           mov eax, dword ptr [ebp-020h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-00Ch]
           sub edx, dword ptr [ebp-0000000B8h]
           add edx, 000040000h
           sar edx, 013h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-0000000ACh]
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+003h], dl
           mov eax, dword ptr [ebp-0000000B4h]
           mov ecx, dword ptr [ebp-01Ch]
           lea edx, [ecx+eax+000040000h]
           sar edx, 013h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-0000000ACh]
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax+001h], dl
           mov eax, dword ptr [ebp-01Ch]
           sub eax, dword ptr [ebp-0000000B4h]
           add eax, 000040000h
           sar eax, 013h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+002h], al
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000020h
           mov dword ptr [ebp-024h], ecx
           jmp near ptr l1002206A
;
;* Jump:
; 10022080(C) 
;
l100222BB: mov esp, ebp
           pop ebp
           ret
l10021D80 ENDP
;
l100222BF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000006Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+050h]
           mov dword ptr [ebp-00Ch], ecx
           lea edx, [ebp-054h]
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-058h], 000000008h
           jmp l10022319
;
;* Jump:
; 10022335(U), 10022386(U), 10022456(U) 
;
l100222F5: mov eax, dword ptr [ebp-060h]
           add eax, 000000002h
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000004h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-058h]
           sub eax, 000000001h
           mov dword ptr [ebp-058h], eax
;
;* Jump:
; 100222F3(U) 
;
l10022319: cmp dword ptr [ebp-058h], 000000000h
           jle l1002245B
           cmp dword ptr [ebp-058h], 000000006h
           je l10022335
           cmp dword ptr [ebp-058h], 000000004h
           je l10022335
           cmp dword ptr [ebp-058h], 000000002h
           jne l10022337
;
;* Jump:
; 10022327(C), 1002232D(C) 
;
l10022335: jmp l100222F5
;
;* Jump:
; 10022333(C) 
;
l10022337: mov ecx, dword ptr [ebp-060h]
           movsx edx, word ptr [ecx+010h]
           test edx, edx
           jne l1002238B
           mov eax, dword ptr [ebp-060h]
           movsx ecx, word ptr [eax+030h]
           test ecx, ecx
           jne l1002238B
           mov edx, dword ptr [ebp-060h]
           movsx eax, word ptr [edx+050h]
           test eax, eax
           jne l1002238B
           mov ecx, dword ptr [ebp-060h]
           movsx edx, word ptr [ecx+070h]
           test edx, edx
           jne l1002238B
           mov eax, dword ptr [ebp-060h]
           movsx ecx, word ptr [eax]
           mov edx, dword ptr [ebp-00Ch]
           imul ecx, dword ptr [edx]
           shl ecx, 002h
           mov dword ptr [ebp-068h], ecx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-068h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-068h]
           mov dword ptr [edx+020h], eax
           jmp near ptr l100222F5
;
;* Jump:
; 10022340(C), 1002234B(C), 10022356(C), 10022361(C) 
;
l1002238B: mov ecx, dword ptr [ebp-060h]
           movsx edx, word ptr [ecx]
           mov eax, dword ptr [ebp-00Ch]
           imul edx, dword ptr [eax]
           mov dword ptr [ebp-004h], edx
           mov ecx, dword ptr [ebp-004h]
           shl ecx, 00Fh
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-060h]
           movsx eax, word ptr [edx+070h]
           mov ecx, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ecx+0000000E0h]
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -000001712h
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-060h]
           movsx ecx, word ptr [eax+050h]
           mov edx, dword ptr [ebp-00Ch]
           imul ecx, dword ptr [edx+0000000A0h]
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000001B37h
           mov ecx, dword ptr [ebp-064h]
           add ecx, eax
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-060h]
           movsx eax, word ptr [edx+030h]
           mov ecx, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ecx+060h]
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, -0000028BAh
           mov eax, dword ptr [ebp-064h]
           add eax, edx
           mov dword ptr [ebp-064h], eax
           mov ecx, dword ptr [ebp-060h]
           movsx edx, word ptr [ecx+010h]
           mov eax, dword ptr [ebp-00Ch]
           imul edx, dword ptr [eax+020h]
           mov dword ptr [ebp-004h], edx
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 0000073FCh
           mov edx, dword ptr [ebp-064h]
           add edx, ecx
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-008h]
           lea edx, [ecx+eax+000001000h]
           sar edx, 00Dh
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-008h]
           sub ecx, dword ptr [ebp-064h]
           add ecx, 000001000h
           sar ecx, 00Dh
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+020h], ecx
           jmp near ptr l100222F5
;
;* Jump:
; 1002231D(C) 
;
l1002245B: lea eax, [ebp-054h]
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-058h], 000000000h
           jmp l10022473
;
;* Jump:
; 100224E4(U), 10022573(U) 
;
l1002246A: mov ecx, dword ptr [ebp-058h]
           add ecx, 000000001h
           mov dword ptr [ebp-058h], ecx
;
;* Jump:
; 10022468(U) 
;
l10022473: cmp dword ptr [ebp-058h], 000000002h
           jnl l10022578
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+edx*04h]
           add ecx, dword ptr [ebp+018h]
           mov dword ptr [ebp-05Ch], ecx
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+004h], 000000000h
           jne l100224E6
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+00Ch], 000000000h
           jne l100224E6
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+014h], 000000000h
           jne l100224E6
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+01Ch], 000000000h
           jne l100224E6
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax]
           add ecx, 000000010h
           sar ecx, 005h
           and ecx, 0000003FFh
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [edx+ecx]
           mov byte ptr [ebp-06Ch], al
           mov ecx, dword ptr [ebp-05Ch]
           mov dl, byte ptr [ebp-06Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-05Ch]
           mov cl, byte ptr [ebp-06Ch]
           mov byte ptr [eax+001h], cl
           mov edx, dword ptr [ebp-014h]
           add edx, 000000020h
           mov dword ptr [ebp-014h], edx
           jmp l1002246A
;
;* Jump:
; 10022493(C), 1002249C(C), 100224A5(C), 100224AE(C) 
;
l100224E6: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax]
           shl ecx, 00Fh
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+01Ch]
           imul eax, eax, -000001712h
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+014h]
           imul edx, edx, 000001B37h
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00Ch]
           imul edx, edx, -0000028BAh
           add eax, edx
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 0000073FCh
           add eax, edx
           mov dword ptr [ebp-064h], eax
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-008h]
           lea edx, [ecx+eax+000080000h]
           sar edx, 014h
           and edx, 0000003FFh
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp-010h]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-008h]
           sub eax, dword ptr [ebp-064h]
           add eax, 000080000h
           sar eax, 014h
           and eax, 0000003FFh
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx+001h], al
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000020h
           mov dword ptr [ebp-014h], ecx
           jmp near ptr l1002246A
;
;* Jump:
; 10022477(C) 
;
l10022578: mov esp, ebp
           pop ebp
           ret
l100222BF ENDP
;
l1002257C PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           add ecx, 000000080h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+050h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+010h]
           movsx edx, word ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           imul edx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], edx
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           sar ecx, 003h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           and edx, 0000003FFh
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax]
           mov eax, dword ptr [ebp+018h]
           mov esi, dword ptr [ebp-008h]
           mov dl, byte ptr [esi+edx]
           mov byte ptr [ecx+eax], dl
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1002257C ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000975B, 1001354B 
;
l100225E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], 000000000h
           xor ecx, ecx
           test ecx, ecx
           je l10022610
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000002h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100225F4(C) 
;
l10022610: mov dword ptr [ebp-010h], 03B9ACA00h
           cmp dword ptr [ebp-010h], 03B9ACA00h
           jne l10022626
           xor ecx, ecx
           test ecx, ecx
           je l10022640
;
;* Jump:
; 1002261E(C) 
;
l10022626: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000003h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10022624(C) 
;
l10022640: mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023A1F
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           push 000000054h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100239B0
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jne l10022698
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10023A26
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000036h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10022664(C) 
;
l10022698: mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], offset l100227DF
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], offset l100229CF
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], offset l10022AC1
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], offset l10022BC2
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], offset l10022CD7
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], offset l10022D76
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+018h], offset l10022E15
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+01Ch], offset l100230E4
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+020h], offset l1002343B
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+024h], offset l10023798
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+028h], offset l1002394E
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+030h], 03B9ACA00h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+02Ch], eax
           mov dword ptr [ebp-004h], 000000001h
           jmp l1002272A
;
;* Jump:
; 1002274C(U) 
;
l10022721: mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002271F(U) 
;
l1002272A: cmp dword ptr [ebp-004h], 000000000h
           jl l1002274E
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h+034h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx*04h+03Ch], 000000000h
           jmp l10022721
;
;* Jump:
; 1002272E(C) 
;
l1002274E: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+048h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+04Ch], 000000054h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], ecx
;
;* String: "JPEGMEM"
;
           push offset g100487B8
           call [__imp_getenv]; [BICRT.getenv].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l100227DB
           mov byte ptr [ebp-018h], 078h
           lea edx, [ebp-018h]
           push edx
           lea eax, [ebp-00Ch]
           push eax
;
;* String: "%ld%c"
;
           push offset g100487C0
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_sscanf]; [BICRT.sscanf].
           add esp, 000000010h
           test eax, eax
           jle l100227DB
           movsx edx, byte ptr [ebp-018h]
           cmp edx, 00000006Dh
           je l100227C0
           movsx eax, byte ptr [ebp-018h]
           cmp eax, 00000004Dh
           jne l100227CC
;
;* Jump:
; 100227B5(C) 
;
l100227C0: mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, 0000003E8h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100227BE(C) 
;
l100227CC: mov edx, dword ptr [ebp-00Ch]
           imul edx, edx, 0000003E8h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+02Ch], edx
;
;* Jump:
; 1002278A(C), 100227AC(C) 
;
l100227DB: mov esp, ebp
           pop ebp
           ret
l100225E0 ENDP
;
;* Call:
; 10022B2B, 10022C31, 10022D1B, 10022DBA 
;
l100227DF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp+010h], 03B9AC9F4h
           jbe l10022805
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100229A5
           add esp, 000000008h
;
;* Jump:
; 100227F5(C) 
;
l10022805: mov eax, dword ptr [ebp+010h]
           xor edx, edx
           mov ecx, 000000008h
           div ecx
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           jbe l1002282A
           mov edx, 000000008h
           sub edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+010h]
           add eax, edx
           mov dword ptr [ebp+010h], eax
;
;* Jump:
; 10022818(C) 
;
l1002282A: cmp dword ptr [ebp+00Ch], 000000000h
           jl l10022836
           cmp dword ptr [ebp+00Ch], 000000002h
           jl l1002285B
;
;* Jump:
; 1002282E(C) 
;
l10022836: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Eh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10022834(C) 
;
l1002285B: mov dword ptr [ebp-018h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+eax*04h+034h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10022890(U) 
;
l1002286F: cmp dword ptr [ebp-01Ch], 000000000h
           je l10022892
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp+010h]
           jb l10022882
           jmp l10022892
;
;* Jump:
; 1002287E(C) 
;
l10022882: mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           jmp l1002286F
;
;* Jump:
; 10022873(C), 10022880(U) 
;
l10022892: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1002296B
           mov edx, dword ptr [ebp+010h]
           add edx, 00000000Ch
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-018h], 000000000h
           jne l100228BA
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [offset g10042A5C+eax*04h]
           mov dword ptr [ebp-004h], ecx
           jmp l100228C7
;
;* Jump:
; 100228A9(C) 
;
l100228BA: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [offset g10042A64+edx*04h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100228B8(U) 
;
l100228C7: mov ecx, 03B9ACA00h
           sub ecx, dword ptr [ebp-010h]
           cmp dword ptr [ebp-004h], ecx
           jbe l100228DF
           mov edx, 03B9ACA00h
           sub edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100228D2(C), 10022919(U) 
;
l100228DF: mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100239B0
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l100228FD
           jmp l1002291B
;
;* Jump:
; 100228F9(C) 
;
l100228FD: mov edx, dword ptr [ebp-004h]
           shr edx, 001h
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000032h
           jnb l10022919
           push 000000002h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100229A5
           add esp, 000000008h
;
;* Jump:
; 10022909(C) 
;
l10022919: jmp l100228DF
;
;* Jump:
; 100228FB(U) 
;
l1002291B: mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+04Ch]
           add eax, ecx
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+04Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp+010h]
           add ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+008h], ecx
           cmp dword ptr [ebp-018h], 000000000h
           jne l10022963
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+eax*04h+034h], edx
           jmp l1002296B
;
;* Jump:
; 10022952(C) 
;
l10022963: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax], ecx
;
;* Jump:
; 10022896(C), 10022961(U) 
;
l1002296B: mov edx, dword ptr [ebp-01Ch]
           add edx, 00000000Ch
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+004h]
           add eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+008h]
           sub eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l100227DF ENDP
;
;* Call:
; 100227FD, 10022911, 100229ED, 10022A6D 
;
l100229A5 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000036h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           pop ebp
           ret
l100229A5 ENDP
;
;* Call:
; 10022B77, 10022C84 
;
l100229CF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+010h], 03B9AC9F4h
           jbe l100229F5
           push 000000003h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100229A5
           add esp, 000000008h
;
;* Jump:
; 100229E5(C) 
;
l100229F5: mov eax, dword ptr [ebp+010h]
           xor edx, edx
           mov ecx, 000000008h
           div ecx
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           jbe l10022A1A
           mov edx, 000000008h
           sub edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+010h]
           add eax, edx
           mov dword ptr [ebp+010h], eax
;
;* Jump:
; 10022A08(C) 
;
l10022A1A: cmp dword ptr [ebp+00Ch], 000000000h
           jl l10022A26
           cmp dword ptr [ebp+00Ch], 000000002h
           jl l10022A4B
;
;* Jump:
; 10022A1E(C) 
;
l10022A26: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000000Eh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10022A24(C) 
;
l10022A4B: mov eax, dword ptr [ebp+010h]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100239D4
           add esp, 000000008h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l10022A75
           push 000000004h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100229A5
           add esp, 000000008h
;
;* Jump:
; 10022A65(C) 
;
l10022A75: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+04Ch]
           mov edx, dword ptr [ebp+010h]
           lea eax, [ecx+edx+00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+04Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+eax*04h+03Ch]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h+03Ch], eax
           mov eax, dword ptr [ebp-00Ch]
           add eax, 00000000Ch
           mov esp, ebp
           pop ebp
           ret
l100229CF ENDP
;
;* Call:
; 10022FC8 
;
l10022AC1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov eax, 03B9AC9F4h
           xor edx, edx
           div dword ptr [ebp+010h]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jg l10022AFD
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000046h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10022AE1(C) 
;
l10022AFD: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnl l10022B0D
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-018h], edx
           jmp l10022B13
;
;* Jump:
; 10022B03(C) 
;
l10022B0D: mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10022B0B(U) 
;
l10022B13: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ecx+050h], edx
           mov eax, dword ptr [ebp+014h]
           shl eax, 002h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100227DF
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10022BB9(U) 
;
l10022B3D: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp+014h]
           jnb l10022BBB
           mov ecx, dword ptr [ebp+014h]
           sub ecx, dword ptr [ebp-008h]
           cmp dword ptr [ebp-018h], ecx
           jnb l10022B58
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], edx
           jmp l10022B61
;
;* Jump:
; 10022B4E(C) 
;
l10022B58: mov eax, dword ptr [ebp+014h]
           sub eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10022B56(U) 
;
l10022B61: mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100229CF
           add esp, 00000000Ch
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], edx
           jmp l10022B93
;
;* Jump:
; 10022BB7(U) 
;
l10022B8A: mov eax, dword ptr [ebp-014h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10022B88(U) 
;
l10022B93: cmp dword ptr [ebp-014h], 000000000h
           jbe l10022BB9
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], edx
           jmp l10022B8A
;
;* Jump:
; 10022B97(C) 
;
l10022BB9: jmp l10022B3D
;
;* Jump:
; 10022B43(C) 
;
l10022BBB: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10022AC1 ENDP
;
;* Call:
; 100230A7 
;
l10022BC2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov ecx, dword ptr [ebp+010h]
           shl ecx, 007h
           mov eax, 03B9AC9F4h
           xor edx, edx
           div ecx
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jg l10022C03
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000046h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10022BE7(C) 
;
l10022C03: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnl l10022C13
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-018h], edx
           jmp l10022C19
;
;* Jump:
; 10022C09(C) 
;
l10022C13: mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10022C11(U) 
;
l10022C19: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ecx+050h], edx
           mov eax, dword ptr [ebp+014h]
           shl eax, 002h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100227DF
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10022CCB(U) 
;
l10022C43: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp+014h]
           jnb l10022CD0
           mov ecx, dword ptr [ebp+014h]
           sub ecx, dword ptr [ebp-008h]
           cmp dword ptr [ebp-018h], ecx
           jnb l10022C62
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], edx
           jmp l10022C6B
;
;* Jump:
; 10022C58(C) 
;
l10022C62: mov eax, dword ptr [ebp+014h]
           sub eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10022C60(U) 
;
l10022C6B: mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, dword ptr [ebp+010h]
           shl edx, 007h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100229CF
           add esp, 00000000Ch
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], edx
           jmp l10022CA0
;
;* Jump:
; 10022CC9(U) 
;
l10022C97: mov eax, dword ptr [ebp-014h]
           sub eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10022C95(U) 
;
l10022CA0: cmp dword ptr [ebp-014h], 000000000h
           jbe l10022CCB
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+010h]
           shl edx, 007h
           mov eax, dword ptr [ebp-010h]
           add eax, edx
           mov dword ptr [ebp-010h], eax
           jmp l10022C97
;
;* Jump:
; 10022CA4(C) 
;
l10022CCB: jmp near ptr l10022C43
;
;* Jump:
; 10022C49(C) 
;
l10022CD0: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10022BC2 ENDP
;
l10022CD7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+00Ch], 000000001h
           je l10022D11
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Eh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10022CEA(C) 
;
l10022D11: push 000000078h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100227DF
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+010h]
           mov byte ptr [ecx+020h], dl
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+022h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+044h]
           mov dword ptr [ecx+024h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+044h], edx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10022CD7 ENDP
;
l10022D76 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+00Ch], 000000001h
           je l10022DB0
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Eh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10022D89(C) 
;
l10022DB0: push 000000078h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100227DF
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+010h]
           mov byte ptr [ecx+020h], dl
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax+022h], 000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+048h]
           mov dword ptr [ecx+024h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10022D76 ENDP
;
l10022E15 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+044h]
           mov dword ptr [ebp-018h], eax
           jmp l10022E46
;
;* Jump:
; 10022E7E(U) 
;
l10022E3D: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10022E3B(U) 
;
l10022E46: cmp dword ptr [ebp-018h], 000000000h
           je l10022E80
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax], 000000000h
           jne l10022E7E
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+00Ch]
           imul eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+004h]
           imul ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10022E52(C) 
;
l10022E7E: jmp l10022E3D
;
;* Jump:
; 10022E4A(C) 
;
l10022E80: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+048h]
           mov dword ptr [ebp-008h], ecx
           jmp l10022E94
;
;* Jump:
; 10022ED2(U) 
;
l10022E8B: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10022E89(U) 
;
l10022E94: cmp dword ptr [ebp-008h], 000000000h
           je l10022ED4
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx], 000000000h
           jne l10022ED2
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+00Ch]
           imul ecx, dword ptr [eax+008h]
           shl ecx, 007h
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           shl edx, 007h
           mov eax, dword ptr [ebp-00Ch]
           add eax, edx
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10022EA0(C) 
;
l10022ED2: jmp l10022E8B
;
;* Jump:
; 10022E98(C) 
;
l10022ED4: cmp dword ptr [ebp-004h], 000000000h
           jg l10022EDF
           jmp near ptr l100230E0
;
;* Jump:
; 10022ED8(C) 
;
l10022EDF: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+04Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100239F8
           add esp, 000000010h
           mov dword ptr [ebp-020h], eax
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [ebp-00Ch]
           jl l10022F0E
           mov dword ptr [ebp-014h], 03B9ACA00h
           jmp l10022F25
;
;* Jump:
; 10022F03(C) 
;
l10022F0E: mov eax, dword ptr [ebp-020h]
           cdq
           idiv dword ptr [ebp-004h]
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jg l10022F25
           mov dword ptr [ebp-014h], 000000001h
;
;* Jump:
; 10022F0C(U), 10022F1C(C) 
;
l10022F25: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+044h]
           mov dword ptr [ebp-018h], edx
           jmp l10022F39
;
;* Jump:
; 10022FFC(U) 
;
l10022F30: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10022F2E(U) 
;
l10022F39: cmp dword ptr [ebp-018h], 000000000h
           je l10023001
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx], 000000000h
           jne l10022FFC
           mov eax, dword ptr [ebp-018h]
           mov eax, dword ptr [eax+004h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ebp-014h]
           jg l10022F7C
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+010h], edx
           jmp l10022FB4
;
;* Jump:
; 10022F6C(C) 
;
l10022F7C: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-014h]
           imul ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp-018h]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023A00
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-018h]
           mov byte ptr [edx+022h], 001h
;
;* Jump:
; 10022F7A(U) 
;
l10022FB4: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+008h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10022AC1
           add esp, 000000010h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx], eax
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+050h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+018h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+01Ch], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov byte ptr [edx+021h], 000h
;
;* Jump:
; 10022F49(C) 
;
l10022FFC: jmp near ptr l10022F30
;
;* Jump:
; 10022F3D(C) 
;
l10023001: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+048h]
           mov dword ptr [ebp-008h], ecx
           jmp l10023015
;
;* Jump:
; 100230DB(U) 
;
l1002300C: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1002300A(U) 
;
l10023015: cmp dword ptr [ebp-008h], 000000000h
           je l100230E0
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx], 000000000h
           jne l100230DB
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ebp-014h]
           jg l10023058
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+010h], edx
           jmp l10023093
;
;* Jump:
; 10023048(C) 
;
l10023058: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-014h]
           imul ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           shl edx, 007h
           push edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023A00
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+022h], 001h
;
;* Jump:
; 10023056(U) 
;
l10023093: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10022BC2
           add esp, 000000010h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], eax
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+050h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+018h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+01Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+021h], 000h
;
;* Jump:
; 10023025(C) 
;
l100230DB: jmp near ptr l1002300C
;
;* Jump:
; 10022EDA(U), 10023019(C) 
;
l100230E0: mov esp, ebp
           pop ebp
           ret
l10022E15 ENDP
;
l100230E4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+010h]
           add eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+004h]
           ja l10023111
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+014h]
           cmp ecx, dword ptr [eax+00Ch]
           ja l10023111
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx], 000000000h
           jne l1002312B
;
;* Jump:
; 100230FC(C), 10023107(C) 
;
l10023111: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000016h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 1002310F(C) 
;
l1002312B: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           cmp eax, dword ptr [edx+018h]
           jb l1002314B
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp+00Ch]
           add edx, dword ptr [eax+010h]
           cmp dword ptr [ebp-004h], edx
           jbe l100231E0
;
;* Jump:
; 10023134(C) 
;
l1002314B: mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+022h]
           test edx, edx
           jne l10023171
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000045h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10023155(C) 
;
l10023171: mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+021h]
           test eax, eax
           je l10023196
           push 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100232EE
           add esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           mov byte ptr [eax+021h], 000h
;
;* Jump:
; 1002317B(C) 
;
l10023196: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           cmp edx, dword ptr [ecx+018h]
           jbe l100231AC
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+018h], ecx
           jmp l100231CE
;
;* Jump:
; 1002319F(C) 
;
l100231AC: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [edx+010h]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jnl l100231C5
           mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 100231BC(C) 
;
l100231C5: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+018h], edx
;
;* Jump:
; 100231AA(U) 
;
l100231CE: push 000000000h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100232EE
           add esp, 00000000Ch
;
;* Jump:
; 10023145(C) 
;
l100231E0: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+01Ch]
           cmp eax, dword ptr [ebp-004h]
           jnb l100232C6
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+01Ch]
           cmp edx, dword ptr [ebp+010h]
           jnb l10023228
           mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l10023220
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000016h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10023204(C) 
;
l10023220: mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-008h], eax
           jmp l10023231
;
;* Jump:
; 100231F8(C) 
;
l10023228: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10023226(U) 
;
l10023231: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l10023246
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], edx
;
;* Jump:
; 1002323B(C) 
;
l10023246: mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+020h]
           test ecx, ecx
           je l100232A0
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           sub edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002329C(U) 
;
l10023273: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-004h]
           jnb l1002329E
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           call l10026972
           add esp, 000000008h
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp l10023273
;
;* Jump:
; 10023279(C) 
;
l1002329E: jmp l100232C6
;
;* Jump:
; 10023250(C) 
;
l100232A0: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           jne l100232C6
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000016h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 100231E9(C), 1002329E(U), 100232AA(C) 
;
l100232C6: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l100232D9
           mov ecx, dword ptr [ebp+00Ch]
           mov byte ptr [ecx+021h], 001h
;
;* Jump:
; 100232D0(C) 
;
l100232D9: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           sub eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           lea eax, [edx+eax*04h]
           mov esp, ebp
           pop ebp
           ret
l100230E4 ENDP
;
;* Call:
; 10023187, 100231D8 
;
l100232EE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+018h]
           imul eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l1002331F
;
;* Jump:
; 10023432(U) 
;
l10023313: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10023311(U) 
;
l1002331F: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+010h]
           jnl l10023437
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           sub eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+014h], eax
           jnl l1002334A
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-01Ch], eax
           jmp l10023356
;
;* Jump:
; 1002333D(C) 
;
l1002334A: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           sub edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10023348(U) 
;
l10023356: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+018h]
           add edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           sub ecx, dword ptr [ebp-018h]
           cmp dword ptr [ebp-010h], ecx
           jnl l1002337E
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], edx
           jmp l1002338A
;
;* Jump:
; 10023374(C) 
;
l1002337E: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           sub ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1002337C(U) 
;
l1002338A: mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           sub ecx, dword ptr [ebp-018h]
           cmp dword ptr [ebp-010h], ecx
           jnl l100233A6
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-024h], edx
           jmp l100233B2
;
;* Jump:
; 1002339C(C) 
;
l100233A6: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           sub ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 100233A4(U) 
;
l100233B2: mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-010h], 000000000h
           jg l100233C0
           jmp l10023437
;
;* Jump:
; 100233BC(C) 
;
l100233C0: mov eax, dword ptr [ebp-010h]
           imul eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+010h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l10023401
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000028h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call [ecx+02Ch]
           add esp, 000000014h
           jmp l10023429
;
;* Jump:
; 100233D5(C) 
;
l10023401: mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000028h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call [ecx+028h]
           add esp, 000000014h
;
;* Jump:
; 100233FF(U) 
;
l10023429: mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-008h], edx
           jmp near ptr l10023313
;
;* Jump:
; 10023328(C), 100233BE(U) 
;
l10023437: mov esp, ebp
           pop ebp
           ret
l100232EE ENDP
;
l1002343B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+010h]
           add eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+004h]
           ja l10023468
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+014h]
           cmp ecx, dword ptr [eax+00Ch]
           ja l10023468
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx], 000000000h
           jne l10023482
;
;* Jump:
; 10023453(C), 1002345E(C) 
;
l10023468: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000016h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10023466(C) 
;
l10023482: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           cmp eax, dword ptr [edx+018h]
           jb l100234A2
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp+00Ch]
           add edx, dword ptr [eax+010h]
           cmp dword ptr [ebp-004h], edx
           jbe l10023537
;
;* Jump:
; 1002348B(C) 
;
l100234A2: mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+022h]
           test edx, edx
           jne l100234C8
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000045h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 100234AC(C) 
;
l100234C8: mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx+021h]
           test eax, eax
           je l100234ED
           push 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10023648
           add esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           mov byte ptr [eax+021h], 000h
;
;* Jump:
; 100234D2(C) 
;
l100234ED: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           cmp edx, dword ptr [ecx+018h]
           jbe l10023503
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+018h], ecx
           jmp l10023525
;
;* Jump:
; 100234F6(C) 
;
l10023503: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [edx+010h]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jnl l1002351C
           mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 10023513(C) 
;
l1002351C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+018h], edx
;
;* Jump:
; 10023501(U) 
;
l10023525: push 000000000h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023648
           add esp, 00000000Ch
;
;* Jump:
; 1002349C(C) 
;
l10023537: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+01Ch]
           cmp eax, dword ptr [ebp-004h]
           jnb l10023620
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+01Ch]
           cmp edx, dword ptr [ebp+010h]
           jnb l1002357F
           mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l10023577
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000016h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 1002355B(C) 
;
l10023577: mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-008h], eax
           jmp l10023588
;
;* Jump:
; 1002354F(C) 
;
l1002357F: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1002357D(U) 
;
l10023588: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l1002359D
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+01Ch], edx
;
;* Jump:
; 10023592(C) 
;
l1002359D: mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+020h]
           test ecx, ecx
           je l100235FA
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           shl eax, 007h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           sub edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100235F6(U) 
;
l100235CD: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-004h]
           jnb l100235F8
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           call l10026972
           add esp, 000000008h
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp l100235CD
;
;* Jump:
; 100235D3(C) 
;
l100235F8: jmp l10023620
;
;* Jump:
; 100235A7(C) 
;
l100235FA: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           jne l10023620
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000016h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10023540(C), 100235F8(U), 10023604(C) 
;
l10023620: mov eax, dword ptr [ebp+018h]
           and eax, 0000000FFh
           test eax, eax
           je l10023633
           mov ecx, dword ptr [ebp+00Ch]
           mov byte ptr [ecx+021h], 001h
;
;* Jump:
; 1002362A(C) 
;
l10023633: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           sub eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           lea eax, [edx+eax*04h]
           mov esp, ebp
           pop ebp
           ret
l1002343B ENDP
;
;* Call:
; 100234DE, 1002352F 
;
l10023648 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           shl ecx, 007h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+018h]
           imul eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l1002367C
;
;* Jump:
; 1002378F(U) 
;
l10023670: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 1002366E(U) 
;
l1002367C: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+010h]
           jnl l10023794
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           sub eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+014h], eax
           jnl l100236A7
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-01Ch], eax
           jmp l100236B3
;
;* Jump:
; 1002369A(C) 
;
l100236A7: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           sub edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 100236A5(U) 
;
l100236B3: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+018h]
           add edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           sub ecx, dword ptr [ebp-018h]
           cmp dword ptr [ebp-010h], ecx
           jnl l100236DB
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], edx
           jmp l100236E7
;
;* Jump:
; 100236D1(C) 
;
l100236DB: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+01Ch]
           sub ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 100236D9(U) 
;
l100236E7: mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           sub ecx, dword ptr [ebp-018h]
           cmp dword ptr [ebp-010h], ecx
           jnl l10023703
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-024h], edx
           jmp l1002370F
;
;* Jump:
; 100236F9(C) 
;
l10023703: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           sub ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10023701(U) 
;
l1002370F: mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-010h], 000000000h
           jg l1002371D
           jmp l10023794
;
;* Jump:
; 10023719(C) 
;
l1002371D: mov eax, dword ptr [ebp-010h]
           imul eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+010h]
           and ecx, 0000000FFh
           test ecx, ecx
           je l1002375E
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000028h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call [ecx+02Ch]
           add esp, 000000014h
           jmp l10023786
;
;* Jump:
; 10023732(C) 
;
l1002375E: mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000028h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call [ecx+028h]
           add esp, 000000014h
;
;* Jump:
; 1002375C(U) 
;
l10023786: mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-008h], edx
           jmp near ptr l10023670
;
;* Jump:
; 10023685(C), 1002371B(U) 
;
l10023794: mov esp, ebp
           pop ebp
           ret
l10023648 ENDP
;
;* Call:
; 10023972 
;
l10023798 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jl l100237B3
           cmp dword ptr [ebp+00Ch], 000000002h
           jl l100237D8
;
;* Jump:
; 100237AB(C) 
;
l100237B3: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 00000000Eh
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 100237B1(C) 
;
l100237D8: cmp dword ptr [ebp+00Ch], 000000001h
           jne l1002387C
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+044h]
           mov dword ptr [ebp-018h], edx
           jmp l100237F6
;
;* Jump:
; 10023823(U) 
;
l100237ED: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100237EB(U) 
;
l100237F6: cmp dword ptr [ebp-018h], 000000000h
           je l10023825
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx+022h]
           test eax, eax
           je l10023823
           mov ecx, dword ptr [ebp-018h]
           mov byte ptr [ecx+022h], 000h
           mov edx, dword ptr [ebp-018h]
           add edx, 000000028h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           call [ecx+030h]
           add esp, 000000008h
;
;* Jump:
; 10023806(C) 
;
l10023823: jmp l100237ED
;
;* Jump:
; 100237FA(C) 
;
l10023825: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+044h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+048h]
           mov dword ptr [ebp-014h], ecx
           jmp l10023843
;
;* Jump:
; 10023870(U) 
;
l1002383A: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+024h]
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10023838(U) 
;
l10023843: cmp dword ptr [ebp-014h], 000000000h
           je l10023872
           mov ecx, dword ptr [ebp-014h]
           xor edx, edx
           mov dl, byte ptr [ecx+022h]
           test edx, edx
           je l10023870
           mov eax, dword ptr [ebp-014h]
           mov byte ptr [eax+022h], 000h
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000028h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           call [eax+030h]
           add esp, 000000008h
;
;* Jump:
; 10023853(C) 
;
l10023870: jmp l1002383A
;
;* Jump:
; 10023847(C) 
;
l10023872: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+048h], 000000000h
;
;* Jump:
; 100237DC(C) 
;
l1002387C: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+03Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+edx*04h+03Ch], 000000000h
;
;* Jump:
; 100238E1(U) 
;
l10023897: cmp dword ptr [ebp-008h], 000000000h
           je l100238E3
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           lea ecx, [ecx+eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100239E6
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+04Ch]
           sub eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+04Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-008h], edx
           jmp l10023897
;
;* Jump:
; 1002389B(C) 
;
l100238E3: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+034h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+eax*04h+034h], 000000000h
;
;* Jump:
; 10023948(U) 
;
l100238FE: cmp dword ptr [ebp-010h], 000000000h
           je l1002394A
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+008h]
           lea edx, [edx+ecx+00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100239C2
           add esp, 00000000Ch
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+04Ch]
           sub ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+04Ch], ecx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-010h], eax
           jmp l100238FE
;
;* Jump:
; 10023902(C) 
;
l1002394A: mov esp, ebp
           pop ebp
           ret
l10023798 ENDP
;
l1002394E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], 000000001h
           jmp l10023964
;
;* Jump:
; 1002397A(U) 
;
l1002395B: mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10023959(U) 
;
l10023964: cmp dword ptr [ebp-004h], 000000000h
           jl l1002397C
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10023798
           add esp, 000000008h
           jmp l1002395B
;
;* Jump:
; 10023968(C) 
;
l1002397C: push 000000054h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100239C2
           add esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023A26
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l1002394E ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10022655, 100228EA 
;
l100239B0 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           pop ebp
           ret
l100239B0 ENDP
;
;* Call:
; 1002392B, 10023989 
;
l100239C2 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_free]; [BICRT.free].
           add esp, 000000004h
           pop ebp
           ret
l100239C2 ENDP
;
;* Call:
; 10022A56 
;
l100239D4 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           pop ebp
           ret
l100239D4 ENDP
;
;* Call:
; 100238C4 
;
l100239E6 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_free]; [BICRT.free].
           add esp, 000000004h
           pop ebp
           ret
l100239E6 ENDP
;
;* Call:
; 10022EF2 
;
l100239F8 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+010h]
           pop ebp
           ret
l100239F8 ENDP
;
;* Call:
; 10022FA5, 10023084 
;
l10023A00 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000031h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           pop ebp
           ret
l10023A00 ENDP
;
;* Call:
; 10022644 
;
l10023A1F PROC
           push ebp
           mov ebp, esp
           xor eax, eax
           pop ebp
           ret
l10023A1F ENDP
;
;* Call:
; 1002266A, 1002399F 
;
l10023A26 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10023A26 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C3E8 
;
l10023A30 PROC
           push ebp
           mov ebp, esp
           push ecx
           push 000000058h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+0000001A8h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset l10024094
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], offset l10024A44
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], offset l10024A49
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+044h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+034h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+064h], 000000004h
           jle l10023AB6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000037h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10023A8E(C) 
;
l10023AB6: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+054h], 000000100h
           jle l10023AE8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000039h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 000000100h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10023AC0(C) 
;
l10023AE8: mov edx, dword ptr [ebp+008h]
           push edx
           call l10023B19
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10023E6E
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+04Ch], 000000002h
           jne l10023B15
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10024032
           add esp, 000000004h
;
;* Jump:
; 10023B07(C) 
;
l10023B15: mov esp, ebp
           pop ebp
           ret
l10023A30 ENDP
;
;* Call:
; 10023AEC 
;
l10023B19 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000020h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10023CDA
           add esp, 000000008h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+064h], 000000003h
           jne l10023BA6
;
;* Jump:
; 10023BA2(C) 
;
l10023B4A: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           add eax, 000000018h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+028h]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000005Eh
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           xor edx, edx
           test edx, edx
           jne l10023B4A
           jmp l10023BCE
;
;* Jump:
; 10023B48(C) 
;
l10023BA6: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000005Fh
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+018h], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
;
;* Jump:
; 10023BA4(U) 
;
l10023BCE: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+008h]
           add esp, 000000010h
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-020h], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10023C06
;
;* Jump:
; 10023CBF(U) 
;
l10023BFD: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10023BFB(U) 
;
l10023C06: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+064h]
           jnl l10023CC4
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+eax*04h+020h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-020h]
           cdq
           idiv dword ptr [ebp-028h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l10023C3E
;
;* Jump:
; 10023CB4(U) 
;
l10023C35: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10023C33(U) 
;
l10023C3E: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp-028h]
           jnl l10023CB9
           mov edx, dword ptr [ebp-028h]
           sub edx, 000000001h
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10023E52
           add esp, 000000010h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-014h]
           imul eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           jmp l10023C79
;
;* Jump:
; 10023CB2(U) 
;
l10023C70: mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10023C6E(U) 
;
l10023C79: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-02Ch]
           jnl l10023CB4
           mov dword ptr [ebp-018h], 000000000h
           jmp l10023C93
;
;* Jump:
; 10023CB0(U) 
;
l10023C8A: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10023C88(U) 
;
l10023C93: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnl l10023CB2
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-024h]
           mov eax, dword ptr [ecx+eax*04h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+edx], cl
           jmp l10023C8A
;
;* Jump:
; 10023C99(C) 
;
l10023CB2: jmp l10023C70
;
;* Jump:
; 10023C7F(C) 
;
l10023CB4: jmp near ptr l10023C35
;
;* Jump:
; 10023C44(C) 
;
l10023CB9: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-020h], edx
           jmp near ptr l10023BFD
;
;* Jump:
; 10023C0F(C) 
;
l10023CC4: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [edx+014h], eax
           mov esp, ebp
           pop ebp
           ret
l10023B19 ENDP
;
;* Call:
; 10023B36 
;
l10023CDA PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           push esi
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+064h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+054h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-01Ch], 000000001h
;
;* Jump:
; 10023D35(C) 
;
l10023CFA: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-014h], 000000001h
           jmp l10023D1B
;
;* Jump:
; 10023D2D(U) 
;
l10023D12: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10023D10(U) 
;
l10023D1B: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp-004h]
           jnl l10023D2F
           mov edx, dword ptr [ebp-010h]
           imul edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-010h], edx
           jmp l10023D12
;
;* Jump:
; 10023D21(C) 
;
l10023D2F: mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [ebp-00Ch]
           jle l10023CFA
           mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           cmp dword ptr [ebp-01Ch], 000000002h
           jnl l10023D6B
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000038h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           call [eax]
           add esp, 000000004h
;
;* Jump:
; 10023D44(C) 
;
l10023D6B: mov dword ptr [ebp-020h], 000000001h
           mov dword ptr [ebp-014h], 000000000h
           jmp l10023D84
;
;* Jump:
; 10023DA2(U) 
;
l10023D7B: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10023D79(U) 
;
l10023D84: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp-004h]
           jnl l10023DA4
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+eax*04h], edx
           mov eax, dword ptr [ebp-020h]
           imul eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-020h], eax
           jmp l10023D7B
;
;* Jump:
; 10023D8A(C), 10023E44(C) 
;
l10023DA4: mov byte ptr [ebp-008h], 000h
           mov dword ptr [ebp-014h], 000000000h
           jmp l10023DBA
;
;* Jump:
; 10023E34(U) 
;
l10023DB1: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10023DAF(U) 
;
l10023DBA: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp-004h]
           jnl l10023E39
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+02Ch], 000000002h
           jne l10023DDA
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [offset g10042B6C+ecx*04h]
           mov dword ptr [ebp-024h], edx
           jmp l10023DE0
;
;* Jump:
; 10023DC9(C) 
;
l10023DDA: mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10023DD8(U) 
;
l10023DE0: mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-018h], ecx
           mov ecx, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-020h]
           cdq
           idiv dword ptr [esi+ecx*04h]
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-010h]
           imul edx, ecx
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [ebp-00Ch]
           jle l10023E15
           jmp l10023E39
;
;* Jump:
; 10023E11(C) 
;
l10023E15: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+ecx*04h], eax
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], eax
           mov byte ptr [ebp-008h], 001h
           jmp near ptr l10023DB1
;
;* Jump:
; 10023DC0(C), 10023E13(U) 
;
l10023E39: mov ecx, dword ptr [ebp-008h]
           and ecx, 0000000FFh
           test ecx, ecx
           jne l10023DA4
           mov eax, dword ptr [ebp-020h]
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10023CDA ENDP
;
;* Call:
; 10023C59 
;
l10023E52 PROC
           push ebp
           mov ebp, esp
           mov ecx, dword ptr [ebp+010h]
           imul ecx, ecx, 0000000FFh
           mov eax, dword ptr [ebp+014h]
           cdq
           sub eax, edx
           sar eax, 001h
           add eax, ecx
           cdq
           idiv dword ptr [ebp+014h]
           pop ebp
           ret
l10023E52 ENDP
;
;* Call:
; 10023AF8, 1002413F 
;
l10023E6E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+04Ch], 000000001h
           jne l10023E99
           mov dword ptr [ebp-00Ch], 0000001FEh
           mov eax, dword ptr [ebp-01Ch]
           mov byte ptr [eax+01Ch], 001h
           jmp l10023EA7
;
;* Jump:
; 10023E87(C) 
;
l10023E99: mov dword ptr [ebp-00Ch], 000000000h
           mov ecx, dword ptr [ebp-01Ch]
           mov byte ptr [ecx+01Ch], 000h
;
;* Jump:
; 10023E97(U) 
;
l10023EA7: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000100h
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+008h]
           add esp, 000000010h
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+018h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10023EEB
;
;* Jump:
; 1002400C(U) 
;
l10023EE2: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10023EE0(U) 
;
l10023EEB: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+064h]
           jnl l10024011
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+edx*04h+020h]
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-008h]
           cdq
           idiv dword ptr [ebp-024h]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10023F35
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [eax+ecx*04h]
           add edx, 0000000FFh
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+018h]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ecx+eax*04h], edx
;
;* Jump:
; 10023F15(C) 
;
l10023F35: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov edx, dword ptr [ebp-024h]
           sub edx, 000000001h
           push edx
           push 000000000h
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10024015
           add esp, 000000010h
           mov dword ptr [ebp-018h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l10023F79
;
;* Jump:
; 10023FC2(U) 
;
l10023F70: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10023F6E(U) 
;
l10023F79: cmp dword ptr [ebp-014h], 0000000FFh
           jg l10023FC4
;
;* Jump:
; 10023FB1(U) 
;
l10023F82: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-018h]
           jle l10023FB3
           mov ecx, dword ptr [ebp-024h]
           sub ecx, 000000001h
           push ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10024015
           add esp, 000000010h
           mov dword ptr [ebp-018h], eax
           jmp l10023F82
;
;* Jump:
; 10023F88(C) 
;
l10023FB3: mov eax, dword ptr [ebp-004h]
           imul eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-014h]
           mov byte ptr [ecx], al
           jmp l10023F70
;
;* Jump:
; 10023F80(C) 
;
l10023FC4: cmp dword ptr [ebp-00Ch], 000000000h
           je l1002400C
           mov dword ptr [ebp-014h], 000000001h
           jmp l10023FDC
;
;* Jump:
; 1002400A(U) 
;
l10023FD3: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10023FD1(U) 
;
l10023FDC: cmp dword ptr [ebp-014h], 0000000FFh
           jg l1002400C
           mov eax, dword ptr [ebp-014h]
           neg eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           mov dl, byte ptr [edx]
           mov byte ptr [ecx+eax], dl
           mov eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+0000000FFh]
           mov byte ptr [eax+0000000FFh], dl
           jmp l10023FD3
;
;* Jump:
; 10023FC8(C), 10023FE3(C) 
;
l1002400C: jmp near ptr l10023EE2
;
;* Jump:
; 10023EF4(C) 
;
l10024011: mov esp, ebp
           pop ebp
           ret
l10023E6E ENDP
;
;* Call:
; 10023F5C, 10023FA6 
;
l10024015 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+010h]
           lea eax, [eax+eax+001h]
           imul eax, eax, 0000000FFh
           add eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [ebp+014h]
           shl ecx, 001h
           cdq
           idiv ecx
           pop ebp
           ret
l10024015 ENDP
;
;* Call:
; 10023B0D, 1002417F 
;
l10024032 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           lea ecx, [eax+eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10024063
;
;* Jump:
; 1002408E(U) 
;
l1002405A: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10024058(U) 
;
l10024063: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+064h]
           jnl l10024090
           mov edx, dword ptr [ebp-004h]
           push edx
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+004h]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+ecx*04h+044h], eax
           jmp l1002405A
;
;* Jump:
; 1002406C(C) 
;
l10024090: mov esp, ebp
           pop ebp
           ret
l10024032 ENDP
;
l10024094 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+074h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+070h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+04Ch]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l100240E2
           cmp dword ptr [ebp-010h], 000000001h
           je l10024106
           cmp dword ptr [ebp-010h], 000000002h
           je l10024161
           jmp near ptr l100241CC
;
;* Jump:
; 100240CB(C) 
;
l100240E2: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+064h], 000000003h
           jne l100240F7
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], offset l10024436
           jmp l10024101
;
;* Jump:
; 100240E9(C) 
;
l100240F7: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], offset l10024357
;
;* Jump:
; 100240F5(U) 
;
l10024101: jmp near ptr l100241E6
;
;* Jump:
; 100240D1(C) 
;
l10024106: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+064h], 000000003h
           jne l1002411B
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], offset l10024677
           jmp l10024125
;
;* Jump:
; 1002410D(C) 
;
l1002411B: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], offset l10024538
;
;* Jump:
; 10024119(U) 
;
l10024125: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+030h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx+01Ch]
           test eax, eax
           jne l10024147
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10023E6E
           add esp, 000000004h
;
;* Jump:
; 10024139(C) 
;
l10024147: mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+034h], 000000000h
           jne l1002415C
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100241EA
           add esp, 000000004h
;
;* Jump:
; 1002414E(C) 
;
l1002415C: jmp near ptr l100241E6
;
;* Jump:
; 100240D7(C) 
;
l10024161: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], offset l100247FF
           mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx+054h], 000h
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+044h], 000000000h
           jne l10024187
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10024032
           add esp, 000000004h
;
;* Jump:
; 10024179(C) 
;
l10024187: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           lea ecx, [eax+eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l100241A6
;
;* Jump:
; 100241C8(U) 
;
l1002419D: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1002419B(U) 
;
l100241A6: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+064h]
           jnl l100241CA
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+eax*04h+044h]
           push edx
           call l10026972
           add esp, 000000008h
           jmp l1002419D
;
;* Jump:
; 100241AF(C) 
;
l100241CA: jmp l100241E6
;
;* Jump:
; 100240DD(U) 
;
l100241CC: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000030h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10024101(U), 1002415C(U), 100241CA(U) 
;
l100241E6: mov esp, ebp
           pop ebp
           ret
l10024094 ENDP
;
;* Call:
; 10024154 
;
l100241EA PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002420E
;
;* Jump:
; 1002428D(U) 
;
l10024205: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10024203(U) 
;
l1002420E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+064h]
           jnl l10024292
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+020h]
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002423F
;
;* Jump:
; 10024265(U) 
;
l10024236: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10024234(U) 
;
l1002423F: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-004h]
           jnl l10024267
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+ecx*04h+020h]
           jne l10024265
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+034h]
           mov dword ptr [ebp-010h], eax
           jmp l10024267
;
;* Jump:
; 10024254(C) 
;
l10024265: jmp l10024236
;
;* Jump:
; 10024245(C), 10024263(U) 
;
l10024267: cmp dword ptr [ebp-010h], 000000000h
           jne l10024280
           mov ecx, dword ptr [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10024296
           add esp, 000000008h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1002426B(C) 
;
l10024280: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+eax*04h+034h], edx
           jmp near ptr l10024205
;
;* Jump:
; 10024217(C) 
;
l10024292: mov esp, ebp
           pop ebp
           ret
l100241EA ENDP
;
;* Call:
; 10024275 
;
l10024296 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push 000000400h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp+00Ch]
           sub eax, 000000001h
           shl eax, 009h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l100242D3
;
;* Jump:
; 1002434B(U) 
;
l100242CA: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 100242C8(U) 
;
l100242D3: cmp dword ptr [ebp-008h], 000000010h
           jnl l10024350
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l100242EB
;
;* Jump:
; 10024349(U) 
;
l100242E2: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100242E0(U) 
;
l100242EB: cmp dword ptr [ebp-00Ch], 000000010h
           jnl l1002434B
           mov eax, dword ptr [ebp-008h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-00Ch]
           xor edx, edx
           mov dl, byte ptr [eax+ecx+offset g10042A6C]
           shl edx, 001h
           mov eax, 0000000FFh
           sub eax, edx
           imul eax, eax, 0000000FFh
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jnl l1002432B
           mov eax, dword ptr [ebp-010h]
           neg eax
           cdq
           idiv dword ptr [ebp-004h]
           neg eax
           mov dword ptr [ebp-018h], eax
           jmp l10024335
;
;* Jump:
; 10024319(C) 
;
l1002432B: mov eax, dword ptr [ebp-010h]
           cdq
           idiv dword ptr [ebp-004h]
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10024329(U) 
;
l10024335: mov ecx, dword ptr [ebp-008h]
           shl ecx, 006h
           mov edx, dword ptr [ebp-014h]
           add edx, ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [edx+eax*04h], ecx
           jmp l100242E2
;
;* Jump:
; 100242EF(C) 
;
l1002434B: jmp near ptr l100242CA
;
;* Jump:
; 100242D7(C) 
;
l10024350: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret
l10024296 ENDP
;
l10024357 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+064h]
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10024396
;
;* Jump:
; 1002442D(U) 
;
l1002438D: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1002438B(U) 
;
l10024396: mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [ebp+014h]
           jnl l10024432
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           jmp l100243CB
;
;* Jump:
; 1002442B(U) 
;
l100243C2: mov edx, dword ptr [ebp-004h]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100243C0(U) 
;
l100243CB: cmp dword ptr [ebp-004h], 000000000h
           jbe l1002442D
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l100243EA
;
;* Jump:
; 10024418(U) 
;
l100243E1: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 100243DF(U) 
;
l100243EA: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp-008h]
           jnl l1002441A
           mov edx, dword ptr [ebp-014h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+ecx*04h]
           xor edx, edx
           mov dl, byte ptr [ecx+eax]
           mov eax, dword ptr [ebp-018h]
           add eax, edx
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           jmp l100243E1
;
;* Jump:
; 100243F0(C) 
;
l1002441A: mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [ebp-018h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
           jmp l100243C2
;
;* Jump:
; 100243CF(C) 
;
l1002442D: jmp near ptr l1002438D
;
;* Jump:
; 1002439C(C) 
;
l10024432: mov esp, ebp
           pop ebp
           ret
l10024357 ENDP
;
l10024436 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10024486
;
;* Jump:
; 1002452F(U) 
;
l1002447D: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1002447B(U) 
;
l10024486: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp+014h]
           jnl l10024534
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           jmp l100244BB
;
;* Jump:
; 1002452D(U) 
;
l100244B2: mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100244B0(U) 
;
l100244BB: cmp dword ptr [ebp-004h], 000000000h
           jbe l1002452F
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+eax]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+edx]
           mov edx, dword ptr [ebp-014h]
           add edx, ecx
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+edx]
           mov edx, dword ptr [ebp-014h]
           add edx, ecx
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ebp-014h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
           jmp l100244B2
;
;* Jump:
; 100244BF(C) 
;
l1002452F: jmp near ptr l1002447D
;
;* Jump:
; 1002448C(C) 
;
l10024534: mov esp, ebp
           pop ebp
           ret
l10024436 ENDP
;
l10024538 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l1002456E
;
;* Jump:
; 1002466E(U) 
;
l10024565: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10024563(U) 
;
l1002456E: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp+014h]
           jnl l10024673
           mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           push edx
           call l10026972
           add esp, 000000008h
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+030h]
           mov dword ptr [ebp-024h], ecx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l100245AB
;
;* Jump:
; 10024654(U) 
;
l100245A2: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 100245A0(U) 
;
l100245AB: mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [ebp-00Ch]
           jnl l10024659
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-024h]
           shl edx, 006h
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-030h]
           mov eax, dword ptr [ecx+eax*04h+034h]
           add eax, edx
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-01Ch], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], ecx
           jmp l1002460E
;
;* Jump:
; 10024652(U) 
;
l10024605: mov edx, dword ptr [ebp-004h]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10024603(U) 
;
l1002460E: cmp dword ptr [ebp-004h], 000000000h
           jbe l10024654
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           add ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-020h]
           mov dl, byte ptr [edx]
           add dl, byte ptr [eax+ecx]
           mov eax, dword ptr [ebp-028h]
           mov byte ptr [eax], dl
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           and eax, 00000000Fh
           mov dword ptr [ebp-01Ch], eax
           jmp l10024605
;
;* Jump:
; 10024612(C) 
;
l10024654: jmp near ptr l100245A2
;
;* Jump:
; 100245B1(C) 
;
l10024659: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           and ecx, 00000000Fh
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+030h], eax
           jmp near ptr l10024565
;
;* Jump:
; 10024574(C) 
;
l10024673: mov esp, ebp
           pop ebp
           ret
l10024538 ENDP
;
l10024677 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l100246C7
;
;* Jump:
; 100247F6(U) 
;
l100246BE: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100246BC(U) 
;
l100246C7: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp+014h]
           jnl l100247FB
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+030h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-01Ch]
           shl edx, 006h
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+034h]
           add ecx, edx
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           shl edx, 006h
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+038h]
           add ecx, edx
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-01Ch]
           shl edx, 006h
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-034h], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
           jmp l1002473F
;
;* Jump:
; 100247DC(U) 
;
l10024736: mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10024734(U) 
;
l1002473F: cmp dword ptr [ebp-004h], 000000000h
           jbe l100247E1
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-02Ch]
           add edx, dword ptr [ecx+eax*04h]
           mov eax, dword ptr [ebp-038h]
           xor ecx, ecx
           mov cl, byte ptr [eax+edx]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-024h]
           add ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-028h]
           xor eax, eax
           mov al, byte ptr [edx+ecx]
           mov ecx, dword ptr [ebp-014h]
           add ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-034h]
           add ecx, dword ptr [eax+edx*04h]
           mov edx, dword ptr [ebp-030h]
           xor eax, eax
           mov al, byte ptr [edx+ecx]
           mov ecx, dword ptr [ebp-014h]
           add ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-020h]
           mov cl, byte ptr [ebp-014h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           and eax, 00000000Fh
           mov dword ptr [ebp-018h], eax
           jmp near ptr l10024736
;
;* Jump:
; 10024743(C) 
;
l100247E1: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           and ecx, 00000000Fh
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+030h], eax
           jmp near ptr l100246BE
;
;* Jump:
; 100246CD(C) 
;
l100247FB: mov esp, ebp
           pop ebp
           ret
l10024677 ENDP
;
l100247FF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000050h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+064h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           mov dword ptr [ebp-028h], ecx
           mov dword ptr [ebp-018h], 000000000h
           jmp l10024841
;
;* Jump:
; 10024A3B(U) 
;
l10024838: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10024836(U) 
;
l10024841: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp+014h]
           jnl l10024A40
           mov ecx, dword ptr [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           push ecx
           call l10026972
           add esp, 000000008h
           mov dword ptr [ebp-038h], 000000000h
           jmp l10024875
;
;* Jump:
; 10024A23(U) 
;
l1002486C: mov edx, dword ptr [ebp-038h]
           add edx, 000000001h
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 1002486A(U) 
;
l10024875: mov eax, dword ptr [ebp-038h]
           cmp eax, dword ptr [ebp-00Ch]
           jnl l10024A28
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           add eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+054h]
           test edx, edx
           je l100248EC
           mov eax, dword ptr [ebp-014h]
           sub eax, 000000001h
           imul eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-010h]
           add ecx, eax
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-02Ch]
           lea ecx, [eax+edx-001h]
           mov dword ptr [ebp-02Ch], ecx
           mov dword ptr [ebp-044h], 0FFFFFFFFh
           mov edx, dword ptr [ebp-00Ch]
           neg edx
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+eax*04h+044h]
           mov eax, dword ptr [ebp-014h]
           lea ecx, [edx+eax*02h+002h]
           mov dword ptr [ebp-008h], ecx
           jmp l10024906
;
;* Jump:
; 100248A6(C) 
;
l100248EC: mov dword ptr [ebp-044h], 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+eax*04h+044h]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100248EA(U) 
;
l10024906: mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-048h], ecx
           mov dword ptr [ebp-04Ch], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], eax
           jmp l10024949
;
;* Jump:
; 10024A14(U) 
;
l10024940: mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002493E(U) 
;
l10024949: cmp dword ptr [ebp-004h], 000000000h
           jbe l10024A19
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-008h]
           movsx ecx, word ptr [eax+edx*02h]
           mov edx, dword ptr [ebp-04Ch]
           lea eax, [edx+ecx+008h]
           sar eax, 004h
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-04Ch]
           add eax, edx
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-04Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-04Ch], edx
           mov eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-04Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov al, byte ptr [edx]
           add al, byte ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-048h]
           add edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-04Ch]
           sub ecx, eax
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ebp-04Ch]
           shl eax, 001h
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-008h]
           mov word ptr [eax], dx
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-050h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-02Ch]
           add eax, dword ptr [ebp-044h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-008h]
           lea eax, [edx+ecx*02h]
           mov dword ptr [ebp-008h], eax
           jmp near ptr l10024940
;
;* Jump:
; 1002494D(C) 
;
l10024A19: mov ecx, dword ptr [ebp-008h]
           mov dx, word ptr [ebp-024h]
           mov word ptr [ecx], dx
           jmp near ptr l1002486C
;
;* Jump:
; 1002487B(C) 
;
l10024A28: mov eax, dword ptr [ebp-03Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+054h]
           neg ecx
           sbb ecx, ecx
           inc ecx
           mov edx, dword ptr [ebp-03Ch]
           mov byte ptr [edx+054h], cl
           jmp near ptr l10024838
;
;* Jump:
; 10024847(C) 
;
l10024A40: mov esp, ebp
           pop ebp
           ret
l100247FF ENDP
;
l10024A44 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10024A44 ENDP
;
l10024A49 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 00000002Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
           pop ebp
           ret
l10024A49 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001C41B 
;
l10024A70 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push 00000002Ch
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+0000001A8h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], offset l10024D38
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], offset l10026879
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+020h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+028h], 000000000h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+064h], 000000003h
           je l10024AE2
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 00000002Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10024AC6(C) 
;
l10024AE2: push 000000080h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+018h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l10024B10
;
;* Jump:
; 10024B39(U) 
;
l10024B07: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10024B05(U) 
;
l10024B10: cmp dword ptr [ebp-004h], 000000020h
           jnl l10024B3B
           push 000001000h
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           call [edx+004h]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10024B07
;
;* Jump:
; 10024B14(C) 
;
l10024B3B: mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx+01Ch], 001h
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+05Ah]
           test ecx, ecx
           je l10024BDF
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+054h]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000008h
           jnl l10024B87
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000038h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10024B5F(C) 
;
l10024B87: cmp dword ptr [ebp-00Ch], 000000100h
           jle l10024BB6
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000039h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 000000100h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10024B8E(C) 
;
l10024BB6: push 000000003h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+008h]
           add esp, 000000010h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+014h], eax
           jmp l10024BE9
;
;* Jump:
; 10024B4C(C) 
;
l10024BDF: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10024BDD(U) 
;
l10024BE9: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+04Ch], 000000000h
           je l10024BFC
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+04Ch], 000000002h
;
;* Jump:
; 10024BF0(C) 
;
l10024BFC: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+04Ch], 000000002h
           jne l10024C36
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+05Ch]
           add eax, 000000002h
           imul eax, eax, 000000006h
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax+004h]
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+020h], eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10024C3A
           add esp, 000000004h
;
;* Jump:
; 10024C03(C) 
;
l10024C36: mov esp, ebp
           pop ebp
           ret
l10024A70 ENDP
;
;* Call:
; 10024C2E, 10024E7C 
;
l10024C3A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-010h], ecx
           push 0000007FCh
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           add edx, 0000003FCh
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+028h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10024C9C
;
;* Jump:
; 10024CBE(U) 
;
l10024C8A: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10024C88(U) 
;
l10024C9C: cmp dword ptr [ebp-00Ch], 000000010h
           jnl l10024CC0
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-004h]
           neg ecx
           mov edx, dword ptr [ebp-00Ch]
           neg edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10024C8A
;
;* Jump:
; 10024CA0(C) 
;
l10024CC0: jmp l10024CDE
;
;* Jump:
; 10024D00(U) 
;
l10024CC2: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           and edx, 000000001h
           neg edx
           sbb edx, edx
           inc edx
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10024CC0(U) 
;
l10024CDE: cmp dword ptr [ebp-00Ch], 000000030h
           jnl l10024D02
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-004h]
           neg ecx
           mov edx, dword ptr [ebp-00Ch]
           neg edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10024CC2
;
;* Jump:
; 10024CE2(C) 
;
l10024D02: jmp l10024D0D
;
;* Jump:
; 10024D32(U) 
;
l10024D04: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10024D02(U) 
;
l10024D0D: cmp dword ptr [ebp-00Ch], 0000000FFh
           jg l10024D34
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-004h]
           neg edx
           mov eax, dword ptr [ebp-00Ch]
           neg eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10024D04
;
;* Jump:
; 10024D14(C) 
;
l10024D34: mov esp, ebp
           pop ebp
           ret
l10024C3A ENDP
;
l10024D38 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+04Ch], 000000000h
           je l10024D66
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+04Ch], 000000002h
;
;* Jump:
; 10024D5A(C) 
;
l10024D66: mov eax, dword ptr [ebp+00Ch]
           and eax, 0000000FFh
           test eax, eax
           je l10024D92
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], offset l10024ED3
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], offset l10025E00
           mov eax, dword ptr [ebp-00Ch]
           mov byte ptr [eax+01Ch], 001h
           jmp near ptr l10024E8B
;
;* Jump:
; 10024D70(C) 
;
l10024D92: mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+04Ch], 000000002h
           jne l10024DA7
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+004h], offset l10025A2F
           jmp l10024DB1
;
;* Jump:
; 10024D99(C) 
;
l10024DA7: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], offset l10024FA9
;
;* Jump:
; 10024DA5(U) 
;
l10024DB1: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], offset l10026874
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+070h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000001h
           jnl l10024DF0
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+014h], 000000038h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+018h], 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx]
           add esp, 000000004h
;
;* Jump:
; 10024DC8(C) 
;
l10024DF0: cmp dword ptr [ebp-004h], 000000100h
           jle l10024E1F
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [eax+014h], 000000039h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [edx+018h], 000000100h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           call [edx]
           add esp, 000000004h
;
;* Jump:
; 10024DF7(C) 
;
l10024E1F: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+04Ch], 000000002h
           jne l10024E8B
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           add edx, 000000002h
           imul edx, edx, 000000006h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+020h], 000000000h
           jne l10024E5C
           mov ecx, dword ptr [ebp-010h]
           push ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+004h]
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+020h], eax
;
;* Jump:
; 10024E3E(C) 
;
l10024E5C: mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+020h]
           push edx
           call l10026972
           add esp, 000000008h
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+028h], 000000000h
           jne l10024E84
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10024C3A
           add esp, 000000004h
;
;* Jump:
; 10024E76(C) 
;
l10024E84: mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx+024h], 000h
;
;* Jump:
; 10024D8D(U), 10024E26(C) 
;
l10024E8B: mov eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+01Ch]
           test ecx, ecx
           je l10024ECF
           mov dword ptr [ebp-004h], 000000000h
           jmp l10024EA9
;
;* Jump:
; 10024EC6(U) 
;
l10024EA0: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10024E9E(U) 
;
l10024EA9: cmp dword ptr [ebp-004h], 000000020h
           jnl l10024EC8
           push 000001000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+eax*04h]
           push edx
           call l10026972
           add esp, 000000008h
           jmp l10024EA0
;
;* Jump:
; 10024EAD(C) 
;
l10024EC8: mov eax, dword ptr [ebp-00Ch]
           mov byte ptr [eax+01Ch], 000h
;
;* Jump:
; 10024E95(C) 
;
l10024ECF: mov esp, ebp
           pop ebp
           ret
l10024D38 ENDP
;
l10024ED3 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10024F09
;
;* Jump:
; 10024FA0(U) 
;
l10024F00: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10024EFE(U) 
;
l10024F09: mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [ebp+014h]
           jnl l10024FA5
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
           jmp l10024F32
;
;* Jump:
; 10024F9E(U) 
;
l10024F29: mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10024F27(U) 
;
l10024F32: cmp dword ptr [ebp-004h], 000000000h
           jbe l10024FA0
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sar edx, 003h
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+001h]
           sar ecx, 002h
           shl ecx, 006h
           mov eax, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+edx*04h]
           add edx, ecx
           mov eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+002h]
           sar ecx, 003h
           lea edx, [edx+ecx*02h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov cx, word ptr [eax]
           add cx, 00001h
           mov edx, dword ptr [ebp-014h]
           mov word ptr [edx], cx
           mov eax, dword ptr [ebp-014h]
           xor ecx, ecx
           mov cx, word ptr [eax]
           test ecx, ecx
           jg l10024F95
           mov edx, dword ptr [ebp-014h]
           mov ax, word ptr [edx]
           sub ax, 00001h
           mov ecx, dword ptr [ebp-014h]
           mov word ptr [ecx], ax
;
;* Jump:
; 10024F83(C) 
;
l10024F95: mov edx, dword ptr [ebp-008h]
           add edx, 000000003h
           mov dword ptr [ebp-008h], edx
           jmp l10024F29
;
;* Jump:
; 10024F36(C) 
;
l10024FA0: jmp near ptr l10024F00
;
;* Jump:
; 10024F0F(C) 
;
l10024FA5: mov esp, ebp
           pop ebp
           ret
l10024ED3 ENDP
;
l10024FA9 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10024FDF
;
;* Jump:
; 100250BC(U) 
;
l10024FD6: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10024FD4(U) 
;
l10024FDF: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnl l100250C1
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           jmp l10025014
;
;* Jump:
; 100250B7(U) 
;
l1002500B: mov eax, dword ptr [ebp-004h]
           sub eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10025009(U) 
;
l10025014: cmp dword ptr [ebp-004h], 000000000h
           jbe l100250BC
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sar edx, 003h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sar edx, 002h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           sar edx, 003h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-014h]
           shl ecx, 006h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-024h]
           mov edx, dword ptr [eax+edx*04h]
           add edx, ecx
           mov eax, dword ptr [ebp-018h]
           lea ecx, [edx+eax*02h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           xor eax, eax
           mov ax, word ptr [edx]
           test eax, eax
           jne l1002509E
           mov ecx, dword ptr [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100250C5
           add esp, 000000010h
;
;* Jump:
; 10025084(C) 
;
l1002509E: mov edx, dword ptr [ebp-02Ch]
           xor eax, eax
           mov ax, word ptr [edx]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           jmp near ptr l1002500B
;
;* Jump:
; 10025018(C) 
;
l100250BC: jmp near ptr l10024FD6
;
;* Jump:
; 10024FE5(C) 
;
l100250C1: mov esp, ebp
           pop ebp
           ret
l10024FA9 ENDP
;
;* Call:
; 10025096, 10025C92 
;
l100250C5 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001ACh
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-0000001A8h], ecx
           mov edx, dword ptr [ebp-0000001A8h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           sar ecx, 002h
           mov dword ptr [ebp+00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           sar edx, 003h
           mov dword ptr [ebp+010h], edx
           mov eax, dword ptr [ebp+014h]
           sar eax, 002h
           mov dword ptr [ebp+014h], eax
           mov ecx, dword ptr [ebp+00Ch]
           shl ecx, 005h
           add ecx, 000000004h
           mov dword ptr [ebp-000000110h], ecx
           mov edx, dword ptr [ebp+010h]
           shl edx, 005h
           add edx, 000000002h
           mov dword ptr [ebp-000000114h], edx
           mov eax, dword ptr [ebp+014h]
           shl eax, 005h
           add eax, 000000004h
           mov dword ptr [ebp-000000118h], eax
           lea ecx, [ebp-000000100h]
           push ecx
           mov edx, dword ptr [ebp-000000118h]
           push edx
           mov eax, dword ptr [ebp-000000114h]
           push eax
           mov ecx, dword ptr [ebp-000000110h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100252A3
           add esp, 000000014h
           mov dword ptr [ebp-0000001A0h], eax
           lea eax, [ebp-00000019Ch]
           push eax
           lea ecx, [ebp-000000100h]
           push ecx
           mov edx, dword ptr [ebp-0000001A0h]
           push edx
           mov eax, dword ptr [ebp-000000118h]
           push eax
           mov ecx, dword ptr [ebp-000000114h]
           push ecx
           mov edx, dword ptr [ebp-000000110h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100257D0
           add esp, 00000001Ch
           mov ecx, dword ptr [ebp+00Ch]
           shl ecx, 002h
           mov dword ptr [ebp+00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           shl edx, 003h
           mov dword ptr [ebp+010h], edx
           mov eax, dword ptr [ebp+014h]
           shl eax, 002h
           mov dword ptr [ebp+014h], eax
           lea ecx, [ebp-00000019Ch]
           mov dword ptr [ebp-0000001A4h], ecx
           mov dword ptr [ebp-000000104h], 000000000h
           jmp l100251DA
;
;* Jump:
; 1002529A(U) 
;
l100251CB: mov edx, dword ptr [ebp-000000104h]
           add edx, 000000001h
           mov dword ptr [ebp-000000104h], edx
;
;* Jump:
; 100251C9(U) 
;
l100251DA: cmp dword ptr [ebp-000000104h], 000000004h
           jnl l1002529F
           mov dword ptr [ebp-000000108h], 000000000h
           jmp l10025202
;
;* Jump:
; 10025295(U) 
;
l100251F3: mov eax, dword ptr [ebp-000000108h]
           add eax, 000000001h
           mov dword ptr [ebp-000000108h], eax
;
;* Jump:
; 100251F1(U) 
;
l10025202: cmp dword ptr [ebp-000000108h], 000000008h
           jnl l1002529A
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-000000104h]
           mov edx, dword ptr [ebp+010h]
           add edx, dword ptr [ebp-000000108h]
           shl edx, 006h
           mov eax, dword ptr [ebp-00000011Ch]
           mov ecx, dword ptr [eax+ecx*04h]
           add ecx, edx
           mov edx, dword ptr [ebp+014h]
           lea eax, [ecx+edx*02h]
           mov dword ptr [ebp-0000001ACh], eax
           mov dword ptr [ebp-00000010Ch], 000000000h
           jmp l10025256
;
;* Jump:
; 10025293(U) 
;
l10025247: mov ecx, dword ptr [ebp-00000010Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000010Ch], ecx
;
;* Jump:
; 10025245(U) 
;
l10025256: cmp dword ptr [ebp-00000010Ch], 000000004h
           jnl l10025295
           mov edx, dword ptr [ebp-0000001A4h]
           xor eax, eax
           mov al, byte ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-0000001ACh]
           mov word ptr [ecx], ax
           mov edx, dword ptr [ebp-0000001ACh]
           add edx, 000000002h
           mov dword ptr [ebp-0000001ACh], edx
           mov eax, dword ptr [ebp-0000001A4h]
           add eax, 000000001h
           mov dword ptr [ebp-0000001A4h], eax
           jmp l10025247
;
;* Jump:
; 1002525D(C) 
;
l10025295: jmp near ptr l100251F3
;
;* Jump:
; 10025209(C) 
;
l1002529A: jmp near ptr l100251CB
;
;* Jump:
; 100251E1(C) 
;
l1002529F: mov esp, ebp
           pop ebp
           ret
l100250C5 ENDP
;
;* Call:
; 10025154 
;
l100252A3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000438h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-00000041Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000018h
           mov dword ptr [ebp-000000424h], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-000000424h]
           sar eax, 001h
           mov dword ptr [ebp-000000430h], eax
           mov ecx, dword ptr [ebp+010h]
           add ecx, 00000001Ch
           mov dword ptr [ebp-00000042Ch], ecx
           mov edx, dword ptr [ebp+010h]
           add edx, dword ptr [ebp-00000042Ch]
           sar edx, 001h
           mov dword ptr [ebp-000000438h], edx
           mov eax, dword ptr [ebp+014h]
           add eax, 000000018h
           mov dword ptr [ebp-000000434h], eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, dword ptr [ebp-000000434h]
           sar ecx, 001h
           mov dword ptr [ebp-000000410h], ecx
           mov dword ptr [ebp-000000428h], 07FFFFFFFh
           mov dword ptr [ebp-000000414h], 000000000h
           jmp l10025334
;
;* Jump:
; 10025757(U) 
;
l10025325: mov edx, dword ptr [ebp-000000414h]
           add edx, 000000001h
           mov dword ptr [ebp-000000414h], edx
;
;* Jump:
; 10025323(U) 
;
l10025334: mov eax, dword ptr [ebp-000000414h]
           cmp eax, dword ptr [ebp-00000041Ch]
           jnl l1002575C
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+074h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000414h]
           xor edx, edx
           mov dl, byte ptr [eax+ecx]
           mov dword ptr [ebp-00000040Ch], edx
           mov eax, dword ptr [ebp-00000040Ch]
           cmp eax, dword ptr [ebp+00Ch]
           jnl l100253BA
           mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp+00Ch]
           shl ecx, 001h
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000420h], edx
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp-000000424h]
           shl eax, 001h
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000404h], ecx
           jmp near ptr l1002547A
;
;* Jump:
; 10025368(C) 
;
l100253BA: mov edx, dword ptr [ebp-00000040Ch]
           cmp edx, dword ptr [ebp-000000424h]
           jle l10025415
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp-000000424h]
           shl eax, 001h
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000420h], ecx
           mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp+00Ch]
           shl edx, 001h
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000404h], eax
           jmp l1002547A
;
;* Jump:
; 100253C6(C) 
;
l10025415: mov dword ptr [ebp-000000420h], 000000000h
           mov ecx, dword ptr [ebp-00000040Ch]
           cmp ecx, dword ptr [ebp-000000430h]
           jg l10025456
           mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp-000000424h]
           shl edx, 001h
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000404h], eax
           jmp l1002547A
;
;* Jump:
; 1002542B(C) 
;
l10025456: mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp+00Ch]
           shl ecx, 001h
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000404h], edx
;
;* Jump:
; 100253B5(U), 10025413(U), 10025454(U) 
;
l1002547A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+074h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000414h]
           xor ecx, ecx
           mov cl, byte ptr [edx+eax]
           mov dword ptr [ebp-00000040Ch], ecx
           mov edx, dword ptr [ebp-00000040Ch]
           cmp edx, dword ptr [ebp+010h]
           jnl l10025501
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp+010h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov edx, dword ptr [ebp-000000420h]
           add edx, ecx
           mov dword ptr [ebp-000000420h], edx
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp-00000042Ch]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov edx, dword ptr [ebp-000000404h]
           add edx, ecx
           mov dword ptr [ebp-000000404h], edx
           jmp near ptr l100255DB
;
;* Jump:
; 1002549D(C) 
;
l10025501: mov eax, dword ptr [ebp-00000040Ch]
           cmp eax, dword ptr [ebp-00000042Ch]
           jle l1002556E
           mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp-00000042Ch]
           imul ecx, ecx, 000000003h
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-000000420h]
           add eax, edx
           mov dword ptr [ebp-000000420h], eax
           mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp+010h]
           imul ecx, ecx, 000000003h
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-000000404h]
           add eax, edx
           mov dword ptr [ebp-000000404h], eax
           jmp l100255DB
;
;* Jump:
; 1002550D(C) 
;
l1002556E: mov ecx, dword ptr [ebp-00000040Ch]
           cmp ecx, dword ptr [ebp-000000438h]
           jg l100255AE
           mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp-00000042Ch]
           imul edx, edx, 000000003h
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov ecx, dword ptr [ebp-000000404h]
           add ecx, eax
           mov dword ptr [ebp-000000404h], ecx
           jmp l100255DB
;
;* Jump:
; 1002557A(C) 
;
l100255AE: mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp+010h]
           imul edx, edx, 000000003h
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov ecx, dword ptr [ebp-000000404h]
           add ecx, eax
           mov dword ptr [ebp-000000404h], ecx
;
;* Jump:
; 100254FC(U), 1002556C(U), 100255AC(U) 
;
l100255DB: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+074h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000414h]
           xor eax, eax
           mov al, byte ptr [ecx+edx]
           mov dword ptr [ebp-00000040Ch], eax
           mov ecx, dword ptr [ebp-00000040Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnl l1002565C
           mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp+014h]
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov ecx, dword ptr [ebp-000000420h]
           add ecx, eax
           mov dword ptr [ebp-000000420h], ecx
           mov edx, dword ptr [ebp-00000040Ch]
           sub edx, dword ptr [ebp-000000434h]
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-000000418h]
           imul eax, dword ptr [ebp-000000418h]
           mov ecx, dword ptr [ebp-000000404h]
           add ecx, eax
           mov dword ptr [ebp-000000404h], ecx
           jmp near ptr l1002572A
;
;* Jump:
; 100255FE(C) 
;
l1002565C: mov edx, dword ptr [ebp-00000040Ch]
           cmp edx, dword ptr [ebp-000000434h]
           jle l100256C3
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp-000000434h]
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov edx, dword ptr [ebp-000000420h]
           add edx, ecx
           mov dword ptr [ebp-000000420h], edx
           mov eax, dword ptr [ebp-00000040Ch]
           sub eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000418h]
           imul ecx, dword ptr [ebp-000000418h]
           mov edx, dword ptr [ebp-000000404h]
           add edx, ecx
           mov dword ptr [ebp-000000404h], edx
           jmp l1002572A
;
;* Jump:
; 10025668(C) 
;
l100256C3: mov eax, dword ptr [ebp-00000040Ch]
           cmp eax, dword ptr [ebp-000000410h]
           jg l10025700
           mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp-000000434h]
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-000000404h]
           add eax, edx
           mov dword ptr [ebp-000000404h], eax
           jmp l1002572A
;
;* Jump:
; 100256CF(C) 
;
l10025700: mov ecx, dword ptr [ebp-00000040Ch]
           sub ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-000000418h], ecx
           mov edx, dword ptr [ebp-000000418h]
           imul edx, dword ptr [ebp-000000418h]
           mov eax, dword ptr [ebp-000000404h]
           add eax, edx
           mov dword ptr [ebp-000000404h], eax
;
;* Jump:
; 10025657(U), 100256C1(U), 100256FE(U) 
;
l1002572A: mov ecx, dword ptr [ebp-000000414h]
           mov edx, dword ptr [ebp-000000420h]
           mov dword ptr [ebp+ecx*04h-000000400h], edx
           mov eax, dword ptr [ebp-000000404h]
           cmp eax, dword ptr [ebp-000000428h]
           jnl l10025757
           mov ecx, dword ptr [ebp-000000404h]
           mov dword ptr [ebp-000000428h], ecx
;
;* Jump:
; 10025749(C) 
;
l10025757: jmp near ptr l10025325
;
;* Jump:
; 10025340(C) 
;
l1002575C: mov dword ptr [ebp-000000408h], 000000000h
           mov dword ptr [ebp-000000414h], 000000000h
           jmp l10025781
;
;* Jump:
; 100257C4(U) 
;
l10025772: mov edx, dword ptr [ebp-000000414h]
           add edx, 000000001h
           mov dword ptr [ebp-000000414h], edx
;
;* Jump:
; 10025770(U) 
;
l10025781: mov eax, dword ptr [ebp-000000414h]
           cmp eax, dword ptr [ebp-00000041Ch]
           jnl l100257C6
           mov ecx, dword ptr [ebp-000000414h]
           mov edx, dword ptr [ebp+ecx*04h-000000400h]
           cmp edx, dword ptr [ebp-000000428h]
           jg l100257C4
           mov eax, dword ptr [ebp+018h]
           add eax, dword ptr [ebp-000000408h]
           mov cl, byte ptr [ebp-000000414h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000000408h]
           add edx, 000000001h
           mov dword ptr [ebp-000000408h], edx
;
;* Jump:
; 100257A2(C) 
;
l100257C4: jmp l10025772
;
;* Jump:
; 1002578D(C) 
;
l100257C6: mov eax, dword ptr [ebp-000000408h]
           mov esp, ebp
           pop ebp
           ret
l100252A3 ENDP
;
;* Call:
; 10025190 
;
l100257D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000240h
           lea eax, [ebp-00000022Ch]
           mov dword ptr [ebp-028h], eax
           mov dword ptr [ebp-000000230h], 00000007Fh
           jmp l100257FD
;
;* Jump:
; 10025818(U) 
;
l100257EE: mov ecx, dword ptr [ebp-000000230h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000000230h], ecx
;
;* Jump:
; 100257EC(U) 
;
l100257FD: cmp dword ptr [ebp-000000230h], 000000000h
           jl l1002581A
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx], 07FFFFFFFh
           mov eax, dword ptr [ebp-028h]
           add eax, 000000004h
           mov dword ptr [ebp-028h], eax
           jmp l100257EE
;
;* Jump:
; 10025804(C) 
;
l1002581A: mov dword ptr [ebp-000000230h], 000000000h
           jmp l10025835
;
;* Jump:
; 10025A26(U) 
;
l10025826: mov ecx, dword ptr [ebp-000000230h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000230h], ecx
;
;* Jump:
; 10025824(U) 
;
l10025835: mov edx, dword ptr [ebp-000000230h]
           cmp edx, dword ptr [ebp+018h]
           jnl l10025A2B
           mov eax, dword ptr [ebp+01Ch]
           add eax, dword ptr [ebp-000000230h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-000000238h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+074h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-000000238h]
           xor eax, eax
           mov al, byte ptr [ecx+edx]
           mov ecx, dword ptr [ebp+00Ch]
           sub ecx, eax
           shl ecx, 001h
           mov dword ptr [ebp-00000023Ch], ecx
           mov edx, dword ptr [ebp-00000023Ch]
           imul edx, dword ptr [ebp-00000023Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+074h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000238h]
           xor ecx, ecx
           mov cl, byte ptr [edx+eax]
           mov edx, dword ptr [ebp+010h]
           sub edx, ecx
           imul edx, edx, 000000003h
           mov dword ptr [ebp-000000240h], edx
           mov eax, dword ptr [ebp-000000240h]
           imul eax, dword ptr [ebp-000000240h]
           mov ecx, dword ptr [ebp-014h]
           add ecx, eax
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+074h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000238h]
           xor eax, eax
           mov al, byte ptr [ecx+edx]
           mov ecx, dword ptr [ebp+014h]
           sub ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-014h]
           add eax, edx
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00000023Ch]
           shl ecx, 005h
           add ecx, 000000100h
           mov dword ptr [ebp-00000023Ch], ecx
           mov edx, dword ptr [ebp-000000240h]
           imul edx, edx, 000000018h
           add edx, 000000090h
           mov dword ptr [ebp-000000240h], edx
           mov eax, dword ptr [ebp-004h]
           shl eax, 004h
           add eax, 000000040h
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-00000022Ch]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+020h]
           mov dword ptr [ebp-000000234h], edx
           mov eax, dword ptr [ebp-00000023Ch]
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-01Ch], 000000003h
           jmp l1002594C
;
;* Jump:
; 10025A21(U) 
;
l10025943: mov ecx, dword ptr [ebp-01Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10025941(U) 
;
l1002594C: cmp dword ptr [ebp-01Ch], 000000000h
           jl l10025A26
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-000000240h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-024h], 000000007h
           jmp l10025977
;
;* Jump:
; 10025A08(U) 
;
l1002596E: mov ecx, dword ptr [ebp-024h]
           sub ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 1002596C(U) 
;
l10025977: cmp dword ptr [ebp-024h], 000000000h
           jl l10025A0D
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-010h], eax
           mov dword ptr [ebp-02Ch], 000000003h
           jmp l1002599F
;
;* Jump:
; 100259F1(U) 
;
l10025996: mov ecx, dword ptr [ebp-02Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 10025994(U) 
;
l1002599F: cmp dword ptr [ebp-02Ch], 000000000h
           jl l100259F3
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx]
           jnl l100259C5
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-000000234h]
           mov cl, byte ptr [ebp-000000238h]
           mov byte ptr [eax], cl
;
;* Jump:
; 100259AD(C) 
;
l100259C5: mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000080h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000004h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-000000234h]
           add edx, 000000001h
           mov dword ptr [ebp-000000234h], edx
           jmp l10025996
;
;* Jump:
; 100259A3(C) 
;
l100259F3: mov eax, dword ptr [ebp-018h]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000120h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l1002596E
;
;* Jump:
; 1002597B(C) 
;
l10025A0D: mov edx, dword ptr [ebp-014h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000200h
           mov dword ptr [ebp-008h], eax
           jmp near ptr l10025943
;
;* Jump:
; 10025950(C) 
;
l10025A26: jmp near ptr l10025826
;
;* Jump:
; 1002583E(C) 
;
l10025A2B: mov esp, ebp
           pop ebp
           ret
l100257D0 ENDP
;
l10025A2F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+000000120h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+028h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+074h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+074h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-050h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+074h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-05Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l10025A9D
;
;* Jump:
; 10025DF7(U) 
;
l10025A94: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10025A92(U) 
;
l10025A9D: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp+014h]
           jnl l10025DFC
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-04Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+024h]
           test ecx, ecx
           je l10025B17
           mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-034h]
           add eax, edx
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-030h]
           lea eax, [edx+ecx-001h]
           mov dword ptr [ebp-030h], eax
           mov dword ptr [ebp-054h], 0FFFFFFFFh
           mov dword ptr [ebp-060h], 0FFFFFFFDh
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+020h]
           lea ecx, [eax+ecx*02h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov byte ptr [edx+024h], 000h
           jmp l10025B35
;
;* Jump:
; 10025ACB(C) 
;
l10025B17: mov dword ptr [ebp-054h], 000000001h
           mov dword ptr [ebp-060h], 000000003h
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov byte ptr [edx+024h], 001h
;
;* Jump:
; 10025B15(U) 
;
l10025B35: mov dword ptr [ebp-024h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-048h], 000000000h
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-058h], 000000000h
           mov ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-03Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           jmp l10025B7F
;
;* Jump:
; 10025DD2(U) 
;
l10025B76: mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10025B74(U) 
;
l10025B7F: cmp dword ptr [ebp-004h], 000000000h
           jbe l10025DD7
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-008h]
           movsx ecx, word ptr [eax+edx*02h]
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+008h]
           sar eax, 004h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-008h]
           movsx eax, word ptr [edx+ecx*02h+002h]
           mov ecx, dword ptr [ebp-020h]
           lea edx, [ecx+eax+008h]
           sar edx, 004h
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-008h]
           movsx edx, word ptr [ecx+eax*02h+004h]
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+008h]
           sar ecx, 004h
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-034h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp-018h]
           add ecx, eax
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-034h]
           xor eax, eax
           mov al, byte ptr [edx+001h]
           mov ecx, dword ptr [ebp-020h]
           add ecx, eax
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-034h]
           xor eax, eax
           mov al, byte ptr [edx+002h]
           mov ecx, dword ptr [ebp-024h]
           add ecx, eax
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-028h]
           add edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-028h]
           add eax, dword ptr [ebp-024h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-018h]
           sar edx, 003h
           mov eax, dword ptr [ebp-020h]
           sar eax, 002h
           shl eax, 006h
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+edx*04h]
           add edx, eax
           mov eax, dword ptr [ebp-024h]
           sar eax, 003h
           lea ecx, [edx+eax*02h]
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-064h]
           xor eax, eax
           mov ax, word ptr [edx]
           test eax, eax
           jne l10025C9A
           mov ecx, dword ptr [ebp-024h]
           sar ecx, 003h
           push ecx
           mov edx, dword ptr [ebp-020h]
           sar edx, 002h
           push edx
           mov eax, dword ptr [ebp-018h]
           sar eax, 003h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100250C5
           add esp, 000000010h
;
;* Jump:
; 10025C77(C) 
;
l10025C9A: mov edx, dword ptr [ebp-064h]
           xor eax, eax
           mov ax, word ptr [edx]
           sub eax, 000000001h
           mov dword ptr [ebp-068h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dl, byte ptr [ebp-068h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-040h]
           add eax, dword ptr [ebp-068h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-018h]
           sub edx, ecx
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-050h]
           add eax, dword ptr [ebp-068h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-020h]
           sub edx, ecx
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-05Ch]
           add eax, dword ptr [ebp-068h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-024h]
           sub edx, ecx
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-018h]
           shl ecx, 001h
           mov dword ptr [ebp-06Ch], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-03Ch]
           add eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           mov word ptr [ecx], ax
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-014h]
           add eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-020h]
           shl ecx, 001h
           mov dword ptr [ebp-06Ch], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-044h]
           add eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-008h]
           mov word ptr [ecx+002h], ax
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-024h]
           shl ecx, 001h
           mov dword ptr [ebp-06Ch], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-058h]
           add eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-008h]
           mov word ptr [ecx+004h], ax
           mov edx, dword ptr [ebp-024h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-048h]
           add eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-058h], eax
           mov ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, dword ptr [ebp-060h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-030h]
           add ecx, dword ptr [ebp-054h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-008h]
           lea ecx, [eax+edx*02h]
           mov dword ptr [ebp-008h], ecx
           jmp near ptr l10025B76
;
;* Jump:
; 10025B83(C) 
;
l10025DD7: mov edx, dword ptr [ebp-008h]
           mov ax, word ptr [ebp-03Ch]
           mov word ptr [edx], ax
           mov ecx, dword ptr [ebp-008h]
           mov dx, word ptr [ebp-044h]
           mov word ptr [ecx+002h], dx
           mov eax, dword ptr [ebp-008h]
           mov cx, word ptr [ebp-058h]
           mov word ptr [eax+004h], cx
           jmp near ptr l10025A94
;
;* Jump:
; 10025AA3(C) 
;
l10025DFC: mov esp, ebp
           pop ebp
           ret
l10025A2F ENDP
;
l10025E00 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+074h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10025E3A
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+01Ch], 001h
           mov esp, ebp
           pop ebp
           ret
l10025E00 ENDP
;
;* Call:
; 10025E27 
;
l10025E3A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           shl eax, 005h
           push eax
           push 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           call [eax]
           add esp, 00000000Ch
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-004h], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], 00000001Fh
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 00000003Fh
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+014h], 00000001Fh
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10025F35
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1002642C
           add esp, 000000010h
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10025EDA
;
;* Jump:
; 10025EFE(U) 
;
l10025ED1: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10025ECF(U) 
;
l10025EDA: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-004h]
           jnl l10025F00
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 005h
           mov edx, dword ptr [ebp-008h]
           add edx, ecx
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100266CF
           add esp, 00000000Ch
           jmp l10025ED1
;
;* Jump:
; 10025EE0(C) 
;
l10025F00: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+070h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ecx+014h], 000000060h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], ecx
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           call [ecx+004h]
           add esp, 000000008h
           mov esp, ebp
           pop ebp
           ret
l10025E3A ENDP
;
;* Call:
; 10025EA5, 100265D9, 100265E9 
;
l10025F35 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-030h]
           jle l10026024
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], edx
           jmp l10025FA2
;
;* Jump:
; 1002601F(U) 
;
l10025F99: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10025F97(U) 
;
l10025FA2: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-004h]
           jg l10026024
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], edx
           jmp l10025FBB
;
;* Jump:
; 1002601D(U) 
;
l10025FB2: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10025FB0(U) 
;
l10025FBB: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-008h]
           jg l1002601F
           mov edx, dword ptr [ebp-018h]
           shl edx, 006h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ecx+eax*04h]
           add eax, edx
           mov ecx, dword ptr [ebp-038h]
           lea edx, [eax+ecx*02h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], eax
           jmp l10025FEE
;
;* Jump:
; 1002601B(U) 
;
l10025FE5: mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 10025FE3(U) 
;
l10025FEE: mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ebp-014h]
           jg l1002601D
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cx, word ptr [eax]
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000002h
           mov dword ptr [ebp-01Ch], edx
           test ecx, ecx
           je l1002601B
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ecx], edx
           jmp l10026024
;
;* Jump:
; 10026009(C) 
;
l1002601B: jmp l10025FE5
;
;* Jump:
; 10025FF4(C) 
;
l1002601D: jmp l10025FB2
;
;* Jump:
; 10025FC1(C) 
;
l1002601F: jmp near ptr l10025F99
;
;* Jump:
; 10025F8B(C), 10025FA8(C), 10026019(U) 
;
l10026024: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-030h]
           jle l100260C4
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10026041
;
;* Jump:
; 100260BF(U) 
;
l10026038: mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10026036(U) 
;
l10026041: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-030h]
           jl l100260C4
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], ecx
           jmp l1002605A
;
;* Jump:
; 100260BD(U) 
;
l10026051: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1002604F(U) 
;
l1002605A: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-008h]
           jg l100260BF
           mov ecx, dword ptr [ebp-018h]
           shl ecx, 006h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-03Ch]
           mov edx, dword ptr [eax+edx*04h]
           add edx, ecx
           mov eax, dword ptr [ebp-038h]
           lea ecx, [edx+eax*02h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], edx
           jmp l1002608D
;
;* Jump:
; 100260BB(U) 
;
l10026084: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10026082(U) 
;
l1002608D: mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-014h]
           jg l100260BD
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov ax, word ptr [edx]
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000002h
           mov dword ptr [ebp-01Ch], ecx
           test eax, eax
           je l100260BB
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], ecx
           jmp l100260C4
;
;* Jump:
; 100260A8(C) 
;
l100260BB: jmp l10026084
;
;* Jump:
; 10026093(C) 
;
l100260BD: jmp l10026051
;
;* Jump:
; 10026060(C) 
;
l100260BF: jmp near ptr l10026038
;
;* Jump:
; 1002602A(C), 10026047(C), 100260B9(U) 
;
l100260C4: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-034h]
           jle l10026164
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], eax
           jmp l100260E1
;
;* Jump:
; 1002615F(U) 
;
l100260D8: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100260D6(U) 
;
l100260E1: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-008h]
           jg l10026164
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], eax
           jmp l100260FA
;
;* Jump:
; 1002615D(U) 
;
l100260F1: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100260EF(U) 
;
l100260FA: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-004h]
           jg l1002615F
           mov eax, dword ptr [ebp-018h]
           shl eax, 006h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [edx+ecx*04h]
           add ecx, eax
           mov edx, dword ptr [ebp-038h]
           lea eax, [ecx+edx*02h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], ecx
           jmp l1002612D
;
;* Jump:
; 1002615B(U) 
;
l10026124: mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 10026122(U) 
;
l1002612D: mov eax, dword ptr [ebp-028h]
           cmp eax, dword ptr [ebp-014h]
           jg l1002615D
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           mov dx, word ptr [ecx]
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000002h
           mov dword ptr [ebp-01Ch], eax
           test edx, edx
           je l1002615B
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [edx+008h], eax
           jmp l10026164
;
;* Jump:
; 10026148(C) 
;
l1002615B: jmp l10026124
;
;* Jump:
; 10026133(C) 
;
l1002615D: jmp l100260F1
;
;* Jump:
; 10026100(C) 
;
l1002615F: jmp near ptr l100260D8
;
;* Jump:
; 100260CA(C), 100260E7(C), 10026159(U) 
;
l10026164: mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [ebp-034h]
           jle l10026204
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-018h], edx
           jmp l10026181
;
;* Jump:
; 100261FF(U) 
;
l10026178: mov eax, dword ptr [ebp-018h]
           sub eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10026176(U) 
;
l10026181: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-034h]
           jl l10026204
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], edx
           jmp l1002619A
;
;* Jump:
; 100261FD(U) 
;
l10026191: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1002618F(U) 
;
l1002619A: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-004h]
           jg l100261FF
           mov edx, dword ptr [ebp-018h]
           shl edx, 006h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ecx+eax*04h]
           add eax, edx
           mov ecx, dword ptr [ebp-038h]
           lea edx, [eax+ecx*02h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], eax
           jmp l100261CD
;
;* Jump:
; 100261FB(U) 
;
l100261C4: mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 100261C2(U) 
;
l100261CD: mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ebp-014h]
           jg l100261FD
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cx, word ptr [eax]
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000002h
           mov dword ptr [ebp-01Ch], edx
           test ecx, ecx
           je l100261FB
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], edx
           jmp l10026204
;
;* Jump:
; 100261E8(C) 
;
l100261FB: jmp l100261C4
;
;* Jump:
; 100261D3(C) 
;
l100261FD: jmp l10026191
;
;* Jump:
; 100261A0(C) 
;
l100261FF: jmp near ptr l10026178
;
;* Jump:
; 1002616A(C), 10026187(C), 100261F9(U) 
;
l10026204: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-038h]
           jle l100262A4
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], ecx
           jmp l10026221
;
;* Jump:
; 1002629F(U) 
;
l10026218: mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 10026216(U) 
;
l10026221: mov eax, dword ptr [ebp-028h]
           cmp eax, dword ptr [ebp-014h]
           jg l100262A4
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1002623A
;
;* Jump:
; 1002629D(U) 
;
l10026231: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1002622F(U) 
;
l1002623A: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp-004h]
           jg l1002629F
           mov ecx, dword ptr [ebp-034h]
           shl ecx, 006h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-03Ch]
           mov edx, dword ptr [eax+edx*04h]
           add edx, ecx
           mov eax, dword ptr [ebp-028h]
           lea ecx, [edx+eax*02h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], edx
           jmp l10026276
;
;* Jump:
; 1002629B(U) 
;
l10026264: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000040h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10026262(U) 
;
l10026276: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-008h]
           jg l1002629D
           mov eax, dword ptr [ebp-01Ch]
           xor ecx, ecx
           mov cx, word ptr [eax]
           test ecx, ecx
           je l1002629B
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+010h], ecx
           jmp l100262A4
;
;* Jump:
; 10026288(C) 
;
l1002629B: jmp l10026264
;
;* Jump:
; 1002627C(C) 
;
l1002629D: jmp l10026231
;
;* Jump:
; 10026240(C) 
;
l1002629F: jmp near ptr l10026218
;
;* Jump:
; 1002620A(C), 10026227(C), 10026299(U) 
;
l100262A4: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp-038h]
           jle l10026344
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-028h], eax
           jmp l100262C1
;
;* Jump:
; 1002633F(U) 
;
l100262B8: mov ecx, dword ptr [ebp-028h]
           sub ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 100262B6(U) 
;
l100262C1: mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ebp-038h]
           jl l10026344
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], eax
           jmp l100262DA
;
;* Jump:
; 1002633D(U) 
;
l100262D1: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100262CF(U) 
;
l100262DA: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-004h]
           jg l1002633F
           mov eax, dword ptr [ebp-034h]
           shl eax, 006h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [edx+ecx*04h]
           add ecx, eax
           mov edx, dword ptr [ebp-028h]
           lea eax, [ecx+edx*02h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], ecx
           jmp l10026316
;
;* Jump:
; 1002633B(U) 
;
l10026304: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000040h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10026302(U) 
;
l10026316: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-008h]
           jg l1002633D
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov ax, word ptr [edx]
           test eax, eax
           je l1002633B
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+014h], eax
           jmp l10026344
;
;* Jump:
; 10026328(C) 
;
l1002633B: jmp l10026304
;
;* Jump:
; 1002631C(C) 
;
l1002633D: jmp l100262D1
;
;* Jump:
; 100262E0(C) 
;
l1002633F: jmp near ptr l100262B8
;
;* Jump:
; 100262AA(C), 100262C7(C), 10026339(U) 
;
l10026344: mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-030h]
           shl ecx, 003h
           shl ecx, 001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-008h]
           sub edx, dword ptr [ebp-034h]
           shl edx, 002h
           imul edx, edx, 000000003h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-014h]
           sub eax, dword ptr [ebp-038h]
           shl eax, 003h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-010h]
           imul ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-024h]
           imul edx, dword ptr [ebp-024h]
           add ecx, edx
           mov eax, dword ptr [ebp-02Ch]
           imul eax, dword ptr [ebp-02Ch]
           add ecx, eax
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+018h], ecx
           mov dword ptr [ebp-020h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-00Ch], eax
           jmp l100263A4
;
;* Jump:
; 1002641A(U) 
;
l1002639B: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10026399(U) 
;
l100263A4: mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ebp-004h]
           jg l1002641F
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-018h], eax
           jmp l100263BD
;
;* Jump:
; 10026418(U) 
;
l100263B4: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100263B2(U) 
;
l100263BD: mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ebp-008h]
           jg l1002641A
           mov eax, dword ptr [ebp-018h]
           shl eax, 006h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [edx+ecx*04h]
           add ecx, eax
           mov edx, dword ptr [ebp-038h]
           lea eax, [ecx+edx*02h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-028h], ecx
           jmp l100263F9
;
;* Jump:
; 10026416(U) 
;
l100263E7: mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000002h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100263E5(U) 
;
l100263F9: mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-014h]
           jg l10026418
           mov edx, dword ptr [ebp-01Ch]
           xor eax, eax
           mov ax, word ptr [edx]
           test eax, eax
           je l10026416
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1002640B(C) 
;
l10026416: jmp l100263E7
;
;* Jump:
; 100263FF(C) 
;
l10026418: jmp l100263B4
;
;* Jump:
; 100263C3(C) 
;
l1002641A: jmp near ptr l1002639B
;
;* Jump:
; 100263AA(C) 
;
l1002641F: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+01Ch], eax
           mov esp, ebp
           pop ebp
           ret
l10025F35 ENDP
;
;* Call:
; 10025EBD 
;
l1002642C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
;
;* Jump:
; 100265FA(U) 
;
l10026432: mov eax, dword ptr [ebp+010h]
           cmp eax, dword ptr [ebp+014h]
           jnl l100265FF
           mov ecx, dword ptr [ebp+010h]
           shl ecx, 001h
           cmp ecx, dword ptr [ebp+014h]
           jg l1002645D
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call l10026606
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], eax
           jmp l10026470
;
;* Jump:
; 10026446(C) 
;
l1002645D: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call l1002666F
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1002645B(U) 
;
l10026470: cmp dword ptr [ebp-01Ch], 000000000h
           jne l1002647B
           jmp near ptr l100265FF
;
;* Jump:
; 10026474(C) 
;
l1002647B: mov eax, dword ptr [ebp+010h]
           shl eax, 005h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [edx+014h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+004h]
           sub ecx, dword ptr [eax]
           shl ecx, 003h
           shl ecx, 001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+00Ch]
           sub ecx, dword ptr [eax+008h]
           shl ecx, 002h
           imul ecx, ecx, 000000003h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+014h]
           sub ecx, dword ptr [eax+010h]
           shl ecx, 003h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-020h], edx
           mov dword ptr [ebp-018h], 000000001h
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-020h]
           jle l1002652B
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1002651C(C) 
;
l1002652B: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-020h]
           jle l1002653A
           mov dword ptr [ebp-018h], 000000002h
;
;* Jump:
; 10026531(C) 
;
l1002653A: mov eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-024h], eax
           cmp dword ptr [ebp-024h], 000000000h
           je l10026554
           cmp dword ptr [ebp-024h], 000000001h
           je l1002657D
           cmp dword ptr [ebp-024h], 000000002h
           je l100265A8
           jmp l100265D1
;
;* Jump:
; 10026544(C) 
;
l10026554: mov ecx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-01Ch]
           add eax, dword ptr [edx]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], edx
           jmp l100265D1
;
;* Jump:
; 1002654A(C) 
;
l1002657D: mov ecx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           add eax, dword ptr [edx+008h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], edx
           jmp l100265D1
;
;* Jump:
; 10026550(C) 
;
l100265A8: mov ecx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+014h]
           mov edx, dword ptr [ebp-01Ch]
           add eax, dword ptr [edx+010h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], edx
;
;* Jump:
; 10026552(U), 1002657B(U), 100265A6(U) 
;
l100265D1: mov ecx, dword ptr [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10025F35
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10025F35
           add esp, 000000008h
           mov edx, dword ptr [ebp+010h]
           add edx, 000000001h
           mov dword ptr [ebp+010h], edx
           jmp near ptr l10026432
;
;* Jump:
; 10026438(C), 10026476(U) 
;
l100265FF: mov eax, dword ptr [ebp+010h]
           mov esp, ebp
           pop ebp
           ret
l1002642C ENDP
;
;* Call:
; 10026450 
;
l10026606 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], eax
           jmp l1002663B
;
;* Jump:
; 10026666(U) 
;
l10026629: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000020h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10026627(U) 
;
l1002663B: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp+00Ch]
           jnl l10026668
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+01Ch]
           cmp edx, dword ptr [ebp-008h]
           jle l10026666
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+018h], 000000000h
           jle l10026666
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1002664C(C), 10026655(C) 
;
l10026666: jmp l10026629
;
;* Jump:
; 10026641(C) 
;
l10026668: mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret
l10026606 ENDP
;
;* Call:
; 10026465 
;
l1002666F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], eax
           jmp l100266A4
;
;* Jump:
; 100266C6(U) 
;
l10026692: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000020h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10026690(U) 
;
l100266A4: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp+00Ch]
           jnl l100266C8
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           cmp edx, dword ptr [ebp-00Ch]
           jle l100266C6
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100266B5(C) 
;
l100266C6: jmp l10026692
;
;* Jump:
; 100266AA(C) 
;
l100266C8: mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret
l1002666F ENDP
;
;* Call:
; 10025EF6 
;
l100266CF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-03Ch], eax
           mov dword ptr [ebp-02Ch], 000000000h
           mov dword ptr [ebp-044h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-014h], ecx
           jmp l1002674C
;
;* Jump:
; 10026815(U) 
;
l10026743: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10026741(U) 
;
l1002674C: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-00Ch]
           jg l1002681A
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-01Ch], ecx
           jmp l10026769
;
;* Jump:
; 10026810(U) 
;
l10026760: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1002675E(U) 
;
l10026769: mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-010h]
           jg l10026815
           mov ecx, dword ptr [ebp-01Ch]
           shl ecx, 006h
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-03Ch]
           mov edx, dword ptr [eax+edx*04h]
           add edx, ecx
           mov eax, dword ptr [ebp-038h]
           lea ecx, [edx+eax*02h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ebp-024h], edx
           jmp l100267A0
;
;* Jump:
; 1002680E(U) 
;
l10026797: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10026795(U) 
;
l100267A0: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp-018h]
           jg l10026810
           mov edx, dword ptr [ebp-020h]
           xor eax, eax
           mov ax, word ptr [edx]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-020h]
           add edx, 000000002h
           mov dword ptr [ebp-020h], edx
           test ecx, ecx
           je l1002680E
           mov eax, dword ptr [ebp-02Ch]
           add eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-014h]
           lea edx, [000000004h+ecx*08h]
           imul edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-044h]
           add eax, edx
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-01Ch]
           lea edx, [000000002h+ecx*04h]
           imul edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           lea edx, [000000004h+ecx*08h]
           imul edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-008h]
           add eax, edx
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 100267C1(C) 
;
l1002680E: jmp l10026797
;
;* Jump:
; 100267A6(C) 
;
l10026810: jmp near ptr l10026760
;
;* Jump:
; 1002676F(C) 
;
l10026815: jmp near ptr l10026743
;
;* Jump:
; 10026752(C) 
;
l1002681A: mov ecx, dword ptr [ebp-02Ch]
           sar ecx, 001h
           mov eax, dword ptr [ebp-044h]
           add eax, ecx
           cdq
           idiv dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+074h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+010h]
           mov byte ptr [edx+ecx], al
           mov edx, dword ptr [ebp-02Ch]
           sar edx, 001h
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           cdq
           idiv dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+074h]
           mov ecx, dword ptr [edx+004h]
           mov edx, dword ptr [ebp+010h]
           mov byte ptr [ecx+edx], al
           mov eax, dword ptr [ebp-02Ch]
           sar eax, 001h
           mov ecx, dword ptr [ebp-008h]
           add eax, ecx
           cdq
           idiv dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+074h]
           mov edx, dword ptr [ecx+008h]
           mov ecx, dword ptr [ebp+010h]
           mov byte ptr [edx+ecx], al
           mov esp, ebp
           pop ebp
           ret
l100266CF ENDP
;
l10026874 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10026874 ENDP
;
l10026879 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+0000001A8h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx+01Ch], 001h
           mov esp, ebp
           pop ebp
           ret
l10026879 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000E708, 1000E731, 1000E757, 1000E77D, 1000E7AB, 1000F31A, 1000F33F, 10017A3E, 
; 10017A63, 10017FD8, 10018001, 10018027, 1001804D, 10018085, 1001BD94, 1001BDAB, 
; 1001BDE5, 1001BDFC, 1001BE32, 1001BE49, 1001BF83, 1001BFB5 
;
l100268A0 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           lea eax, [ecx+eax-001h]
           cdq
           idiv dword ptr [ebp+00Ch]
           pop ebp
           ret
l100268A0 ENDP
;
;* Call:
; 10009FC5, 10009FDC, 1001466B, 10014682, 1001E604, 1001ECD5 
;
l100268B3 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax-001h]
           mov dword ptr [ebp+008h], edx
           mov eax, dword ptr [ebp+008h]
           cdq
           idiv dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           sub eax, edx
           pop ebp
           ret
l100268B3 ENDP
;
;* Call:
; 10011B6B, 10011C8F, 100123EA, 10016144, 1001CB9E, 1001EF9C, 1001F0FE 
;
l100268D1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push esi
           push edi
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx*04h]
           mov dword ptr [ebp+008h], eax
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ebp+010h]
           lea eax, [edx+ecx*04h]
           mov dword ptr [ebp+010h], eax
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [ebp-004h], ecx
           jmp l10026908
;
;* Jump:
; 10026947(U) 
;
l100268FF: mov edx, dword ptr [ebp-004h]
           sub edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100268FD(U) 
;
l10026908: cmp dword ptr [ebp-004h], 000000000h
           jle l10026949
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           add edx, 000000004h
           mov dword ptr [ebp+008h], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           add edx, 000000004h
           mov dword ptr [ebp+010h], edx
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-010h]
           mov edi, dword ptr [ebp-00Ch]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp l100268FF
;
;* Jump:
; 1002690C(C) 
;
l10026949: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l100268D1 ENDP
;
;* Call:
; 100154ED 
;
l1002694F PROC
           push ebp
           mov ebp, esp
           push esi
           push edi
           mov ecx, dword ptr [ebp+010h]
           shl ecx, 007h
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           pop edi
           pop esi
           pop ebp
           ret
l1002694F ENDP
;
;* Call:
; 1000A34D, 1000A3AA, 1000A5E2, 1000A68E, 100130E2, 100148BE, 1002328B, 100235E5, 
; 100241C0, 10024588, 1002485B, 10024E67, 10024EBE 
;
l10026972 PROC
           push ebp
           mov ebp, esp
           push edi
           mov ecx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov edi, dword ptr [ebp+008h]
           mov edx, ecx
           shr ecx, 002h
           rep stosd
           mov ecx, edx
           and ecx, 000000003h
           rep stosb
           pop edi
           pop ebp
           ret
l10026972 ENDP
;
           int 03h
l10026990 PROC
           push ebp
           mov ebp, esp
           call l1002699F
           call l100269E0
           pop ebp
           ret
l10026990 ENDP
;
;* Call:
; 10026993 
;
l1002699F PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A52C], 000000010h
           mov dword ptr [g1004A530], 000000000h
           mov dword ptr [g1004A534], 000000000h
           mov dword ptr [g1004A520], offset g10042CB8
           pop ebp
           ret
l1002699F ENDP
;
;* Call:
; 10026998 
;
l100269E0 PROC
           push ebp
           mov ebp, esp
           push offset l100269F2
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l100269E0 ENDP
;
l100269F2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           xor eax, eax
           mov al, byte ptr [g1004A538]
           and eax, 000000001h
           test eax, eax
           jne l10026AD1
           mov cl, byte ptr [g1004A538]
           or cl, 001h
           mov byte ptr [g1004A538], cl
           mov dword ptr [g1004A520], offset g10042CB8
           cmp dword ptr [g1004A530], 000000000h
           je l10026AD1
           mov edx, dword ptr [g1004A534]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [g1004A530], 000000000h
           jne l10026A47
           jmp near ptr l10026AD1
;
;* Jump:
; 10026A40(C) 
;
l10026A47: cmp dword ptr [ebp-014h], 000000000h
           je l10026A9F
           mov dword ptr [ebp-004h], 000000000h
           jmp l10026A5F
;
;* Jump:
; 10026A9D(U) 
;
l10026A56: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10026A54(U) 
;
l10026A5F: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [g1004A528]
           jnb l10026A9F
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l10026A96
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l10026A9D
;
;* Jump:
; 10026A83(C) 
;
l10026A96: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 10026A94(U) 
;
l10026A9D: jmp l10026A56
;
;* Jump:
; 10026A4B(C), 10026A68(C) 
;
l10026A9F: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
;
;* Jump:
; 10026A04(C), 10026A2A(C), 10026A42(U) 
;
l10026AD1: mov esp, ebp
           pop ebp
           ret
l100269F2 ENDP
;
;* Call:
; 1000853D 
;
;* Export: ??0B_BitMap24@@QAE@ABV0@@Z, 0001
;
l10026AD5 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov ecx, dword ptr [g1004A530]
           cmp ecx, dword ptr [g1004A528]
           jbe l10026B1C
           mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
           jmp near ptr l10026BE0
;
;* Jump:
; 10026AF5(C) 
;
l10026B1C: mov eax, dword ptr [g1004A530]
           add eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           cmp dword ptr [g1004A528], 000000000h
           je l10026BA3
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10026B62
;
;* Jump:
; 10026B82(U) 
;
l10026B59: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10026B57(U) 
;
l10026B62: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [g1004A528]
           jnb l10026B84
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-00Ch]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10026B59
;
;* Jump:
; 10026B6B(C) 
;
l10026B84: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [g1004A524], edx
           jmp l10026BC0
;
;* Jump:
; 10026B33(C) 
;
l10026BA3: mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [g1004A524], ecx
;
;* Jump:
; 10026BA1(U) 
;
l10026BC0: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 10026B17(U) 
;
l10026BE0: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax+004h], 000000000h
           je l10026C5B
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+008h], 000000000h
           je l10026C5B
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+004h]
           imul ecx, dword ptr [eax+008h]
           imul ecx, ecx, 000000003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ecx+004h]
           imul ecx, dword ptr [edx+008h]
           imul ecx, ecx, 000000003h
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov edi, dword ptr [edx+00Ch]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           jmp l10026C65
;
;* Jump:
; 10026BFF(C), 10026C08(C) 
;
l10026C5B: mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+00Ch], 000000000h
;
;* Jump:
; 10026C59(U) 
;
l10026C65: mov eax, dword ptr [ebp-01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10026AD5 ENDP
;
;* Export: ?ClearBitMap24Data@B_BitMap24@@SAXXZ, 00A5
;
l10026C70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-004h], 000000000h
           jmp l10026C88
;
;* Jump:
; 10026CD0(U) 
;
l10026C7F: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10026C7D(U) 
;
l10026C88: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [g1004A528]
           jnb l10026CD2
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+00Ch], 000000000h
           jmp l10026C7F
;
;* Jump:
; 10026C91(C) 
;
l10026CD2: cmp dword ptr [g1004A530], 000000000h
           jne l10026CE0
           jmp near ptr l10026D69
;
;* Jump:
; 10026CD9(C) 
;
l10026CE0: xor eax, eax
           test eax, eax
           je l10026D37
           mov dword ptr [ebp-014h], 000000000h
           jmp l10026CF8
;
;* Jump:
; 10026D35(U) 
;
l10026CEF: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10026CED(U) 
;
l10026CF8: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [g1004A528]
           jnb l10026D37
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l10026D2E
           push 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-018h]
           call [edx]
           mov dword ptr [ebp-024h], eax
           jmp l10026D35
;
;* Jump:
; 10026D1B(C) 
;
l10026D2E: mov dword ptr [ebp-024h], 000000000h
;
;* Jump:
; 10026D2C(U) 
;
l10026D35: jmp l10026CEF
;
;* Jump:
; 10026CE4(C), 10026D01(C) 
;
l10026D37: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A524], 000000000h
           mov dword ptr [g1004A528], 000000000h
           mov dword ptr [g1004A530], 000000000h
;
;* Jump:
; 10026CDB(U) 
;
l10026D69: mov esp, ebp
           pop ebp
           ret
l10026C70 ENDP
;
;* Export: ??0B_BitMap24@@QAE@ABVB_BitMap@@@Z, 0002
;
l10026D6D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000048h
           push esi
           push edi
           mov dword ptr [ebp-044h], ecx
           mov eax, dword ptr [ebp-044h]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov ecx, dword ptr [g1004A530]
           cmp ecx, dword ptr [g1004A528]
           jbe l10026DB4
           mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
           jmp near ptr l10026E78
;
;* Jump:
; 10026D8D(C) 
;
l10026DB4: mov eax, dword ptr [g1004A530]
           add eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           cmp dword ptr [g1004A528], 000000000h
           je l10026E3B
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], eax
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ebp-030h], edx
           mov dword ptr [ebp-034h], 000000000h
           jmp l10026DFA
;
;* Jump:
; 10026E1A(U) 
;
l10026DF1: mov eax, dword ptr [ebp-034h]
           add eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 10026DEF(U) 
;
l10026DFA: mov ecx, dword ptr [ebp-034h]
           cmp ecx, dword ptr [g1004A528]
           jnb l10026E1C
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-030h]
           mov esi, dword ptr [ebp-034h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10026DF1
;
;* Jump:
; 10026E03(C) 
;
l10026E1C: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [g1004A524], edx
           jmp l10026E58
;
;* Jump:
; 10026DCB(C) 
;
l10026E3B: mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [g1004A524], ecx
;
;* Jump:
; 10026E39(U) 
;
l10026E58: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 10026DAF(U) 
;
l10026E78: mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10026E8A
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+00Ch], 000000000h
           jne l10026EAD
;
;* Jump:
; 10026E7F(C) 
;
l10026E8A: mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00Ch], 000000000h
           jmp near ptr l100271B3
;
;* Jump:
; 10026E88(C) 
;
l10026EAD: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-048h], eax
           cmp dword ptr [ebp-048h], 000000001h
           je l10026ED5
           cmp dword ptr [ebp-048h], 000000002h
           je l100270A2
           cmp dword ptr [ebp-048h], 000000004h
           je l10027014
           jmp near ptr l10027195
;
;* Jump:
; 10026EBA(C) 
;
l10026ED5: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ecx+004h]
           imul eax, dword ptr [edx+008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-044h]
           cmp dword ptr [eax+00Ch], 000000000h
           jne l10026F34
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+004h], 000000000h
           jmp near ptr l100271B3
;
;* Jump:
; 10026F19(C) 
;
l10026F34: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10026F58
;
;* Jump:
; 1002700A(U) 
;
l10026F4F: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10026F4D(U) 
;
l10026F58: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnl l1002700F
           mov dword ptr [ebp-010h], 000000000h
           jmp l10026F82
;
;* Jump:
; 10027005(U) 
;
l10026F70: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10026F6E(U) 
;
l10026F82: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+004h]
           jnl l1002700A
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+014h]
           call l100093C8
           and eax, 0000000FFh
           shl eax, 001h
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           call l100093E1
           and eax, 0000000FFh
           shl eax, 001h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+014h]
           call l100093FB
           and eax, 0000000FFh
           shl eax, 001h
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l10026F70
;
;* Jump:
; 10026F8B(C) 
;
l1002700A: jmp near ptr l10026F4F
;
;* Jump:
; 10026F61(C) 
;
l1002700F: jmp near ptr l100271B3
;
;* Jump:
; 10026ECA(C) 
;
l10027014: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-044h]
           cmp dword ptr [edx+00Ch], 000000000h
           jne l10027073
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+004h], 000000000h
           jmp near ptr l100271B3
;
;* Jump:
; 10027058(C) 
;
l10027073: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+004h]
           imul ecx, dword ptr [eax+008h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+008h]
           mov esi, dword ptr [edx+010h]
           mov eax, dword ptr [ebp-044h]
           mov edi, dword ptr [eax+00Ch]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           jmp near ptr l100271B3
;
;* Jump:
; 10026EC0(C) 
;
l100270A2: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-044h]
           cmp dword ptr [edx+00Ch], 000000000h
           jne l10027101
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+004h], 000000000h
           jmp near ptr l100271B3
;
;* Jump:
; 100270E6(C) 
;
l10027101: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l10027125
;
;* Jump:
; 10027191(U) 
;
l1002711C: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1002711A(U) 
;
l10027125: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+008h]
           jnl l10027193
           mov dword ptr [ebp-020h], 000000000h
           jmp l1002714B
;
;* Jump:
; 1002718F(U) 
;
l10027139: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10027137(U) 
;
l1002714B: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx+004h]
           jnl l10027191
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-01Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-01Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           jmp l10027139
;
;* Jump:
; 10027154(C) 
;
l10027191: jmp l1002711C
;
;* Jump:
; 1002712E(C) 
;
l10027193: jmp l100271B3
;
;* Jump:
; 10026ED0(U) 
;
l10027195: mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10026EA8(U), 10026F2F(U), 1002700F(U), 1002706E(U), 1002709D(U), 
; 100270FC(U), 10027193(U) 
;
l100271B3: mov eax, dword ptr [ebp-044h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10026D6D ENDP
;
;* Export: ??4B_BitMap24@@QAEAAV0@ABV0@@Z, 003D
;
l100271BE PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           push edi
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           jne l100271E9
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+008h]
           cmp edx, dword ptr [ecx+008h]
           je l10027270
;
;* Jump:
; 100271D5(C) 
;
l100271E9: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+004h], 000000000h
           je l10027228
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+008h], 000000000h
           jne l1002724B
;
;* Jump:
; 1002721D(C) 
;
l10027228: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00Ch], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           jmp l1002729D
;
;* Jump:
; 10027226(C) 
;
l1002724B: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+004h]
           imul ecx, dword ptr [eax+008h]
           imul ecx, ecx, 000000003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 100271E3(C) 
;
l10027270: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ecx+004h]
           imul ecx, dword ptr [edx+008h]
           imul ecx, ecx, 000000003h
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov edi, dword ptr [edx+00Ch]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-00Ch]
;
;* Jump:
; 10027249(U) 
;
l1002729D: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100271BE ENDP
;
;* Export: ?SetBits@B_BitMap24@@QAEIHHPBD0@Z, 010E
;
l100272A5 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           push edi
           mov dword ptr [ebp-00Ch], ecx
;
;* String: "RGB"
;
           mov edi, offset g100487C8
           mov esi, dword ptr [ebp+014h]
           mov ecx, 000000004h
           xor eax, eax
           rep cmpsb
           jne l10027378
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           cmp edx, dword ptr [ebp+008h]
           jne l100272DD
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp+00Ch]
           je l1002734A
;
;* Jump:
; 100272D0(C) 
;
l100272DD: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+00Ch], 000000000h
           jne l1002734A
           push 00000008Dh
;
;* String: "C:\code\BITMAP24\BITMAP24.CPP"
;
           push offset g100487CC
;
;* String: "Bits"
;
           push offset g100487EC
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 100272DB(C), 10027330(C) 
;
l1002734A: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ecx+004h]
           imul ecx, dword ptr [edx+008h]
           imul ecx, ecx, 000000003h
           mov esi, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp-00Ch]
           mov edi, dword ptr [eax+00Ch]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov eax, 000000001h
           jmp l1002737A
;
;* Jump:
; 100272C1(C) 
;
l10027378: xor eax, eax
;
;* Jump:
; 10027376(U) 
;
l1002737A: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l100272A5 ENDP
;
;* Call:
; 10027F50, 1003FEEE 
;
;* Export: ?SaveToBMP@B_BitMap24@@QBEHPBD@Z, 0107
;
l10027382 PROC
           push ebp
           mov ebp, esp
           mov eax, 000004084h
           call l10041600
           mov dword ptr [ebp-000004084h], ecx
           push 000008000h
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001C44
           xor ecx, ecx
           cmp dword ptr [ebp-000004018h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l100273D9
           mov dword ptr [ebp-00000403Ch], 000000000h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-00000403Ch]
           jmp near ptr l10027789
;
;* Jump:
; 100273B7(C) 
;
l100273D9: mov dword ptr [ebp-000004040h], 00000001Dh
           mov word ptr [ebp-000004044h], 00000h
           mov word ptr [ebp-000004048h], 00000h
           mov dword ptr [ebp-00000404Ch], 000000000h
           mov word ptr [ebp-000004050h], 04D42h
           lea edx, [ebp-000004040h]
           push edx
           lea eax, [ebp-000004044h]
           push eax
           lea ecx, [ebp-000004048h]
           push ecx
           lea edx, [ebp-00000404Ch]
           push edx
           lea eax, [ebp-000004050h]
           push eax
           lea ecx, [ebp-000004018h]
           push ecx
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           mov word ptr [ebp-000004054h], 00018h
           mov word ptr [ebp-000004058h], 00001h
           mov edx, dword ptr [ebp-000004084h]
           mov ax, word ptr [edx+008h]
           mov word ptr [ebp-00000405Ch], ax
           mov ecx, dword ptr [ebp-000004084h]
           mov dx, word ptr [ecx+004h]
           mov word ptr [ebp-000004060h], dx
           mov dword ptr [ebp-000004064h], 00000000Ch
           lea eax, [ebp-000004054h]
           push eax
           lea ecx, [ebp-000004058h]
           push ecx
           lea edx, [ebp-00000405Ch]
           push edx
           lea eax, [ebp-000004060h]
           push eax
           lea ecx, [ebp-000004064h]
           push ecx
           lea edx, [ebp-000004018h]
           push edx
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           mov byte ptr [ebp-000004068h], 000h
           mov byte ptr [ebp-00000406Ch], 000h
           mov byte ptr [ebp-000004070h], 000h
           lea eax, [ebp-000004068h]
           push eax
           lea ecx, [ebp-00000406Ch]
           push ecx
           lea edx, [ebp-000004070h]
           push edx
           lea eax, [ebp-000004018h]
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           mov ecx, dword ptr [ebp-000004084h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004074h], eax
           mov eax, dword ptr [ebp-000004074h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-000004084h]
           mov edx, dword ptr [ecx+004h]
           and edx, 080000003h
           jns l10027577
           dec edx
           or edx, 0FFFFFFFCh
           inc edx
;
;* Jump:
; 10027570(C) 
;
l10027577: mov dword ptr [ebp-004h], edx
           mov byte ptr [ebp-000004020h], 000h
           mov byte ptr [ebp-00000401Fh], 000h
           mov byte ptr [ebp-00000401Eh], 000h
           mov byte ptr [ebp-00000401Dh], 000h
           cmp dword ptr [ebp-008h], 000000000h
           jne l100275BC
           mov dword ptr [ebp-000004078h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-000004078h]
           jmp near ptr l10027789
;
;* Jump:
; 1002759A(C) 
;
l100275BC: mov eax, dword ptr [ebp-000004084h]
           mov ecx, dword ptr [eax+008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-00000401Ch], ecx
           jmp l100275DF
;
;* Jump:
; 10027751(U) 
;
l100275D0: mov edx, dword ptr [ebp-00000401Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00000401Ch], edx
;
;* Jump:
; 100275CE(U) 
;
l100275DF: cmp dword ptr [ebp-00000401Ch], 000000000h
           jl l10027756
           mov eax, dword ptr [ebp-000004084h]
           mov ecx, dword ptr [ebp-00000401Ch]
           imul ecx, dword ptr [eax+004h]
           imul ecx, ecx, 000000003h
           mov dword ptr [ebp-000004038h], ecx
           mov dword ptr [ebp-000004030h], 000000000h
           mov dword ptr [ebp-000004034h], 000000000h
           jmp l1002762A
;
;* Jump:
; 10027714(U) 
;
l1002761B: mov edx, dword ptr [ebp-000004030h]
           add edx, 000000001h
           mov dword ptr [ebp-000004030h], edx
;
;* Jump:
; 10027619(U) 
;
l1002762A: mov eax, dword ptr [ebp-000004084h]
           mov ecx, dword ptr [ebp-000004030h]
           cmp ecx, dword ptr [eax+004h]
           jnl l10027719
           mov edx, dword ptr [ebp-000004084h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000004038h]
           mov dl, byte ptr [eax+ecx]
           mov byte ptr [ebp-000004028h], dl
           mov eax, dword ptr [ebp-000004038h]
           add eax, 000000001h
           mov dword ptr [ebp-000004038h], eax
           mov ecx, dword ptr [ebp-000004084h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-000004038h]
           mov cl, byte ptr [edx+eax]
           mov byte ptr [ebp-00000402Ch], cl
           mov edx, dword ptr [ebp-000004038h]
           add edx, 000000001h
           mov dword ptr [ebp-000004038h], edx
           mov eax, dword ptr [ebp-000004084h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-000004038h]
           mov al, byte ptr [ecx+edx]
           mov byte ptr [ebp-000004024h], al
           mov ecx, dword ptr [ebp-000004038h]
           add ecx, 000000001h
           mov dword ptr [ebp-000004038h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-000004034h]
           mov al, byte ptr [ebp-000004024h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-000004034h]
           add ecx, 000000001h
           mov dword ptr [ebp-000004034h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-000004034h]
           mov al, byte ptr [ebp-00000402Ch]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-000004034h]
           add ecx, 000000001h
           mov dword ptr [ebp-000004034h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-000004034h]
           mov al, byte ptr [ebp-000004028h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-000004034h]
           add ecx, 000000001h
           mov dword ptr [ebp-000004034h], ecx
           jmp near ptr l1002761B
;
;* Jump:
; 10027639(C) 
;
l10027719: mov edx, dword ptr [ebp-000004084h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           lea ecx, [ebp-000004018h]
           call l10001E86
           cmp dword ptr [ebp-004h], 000000000h
           je l10027751
           mov edx, dword ptr [ebp-004h]
           push edx
           lea eax, [ebp-000004020h]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001E86
;
;* Jump:
; 10027739(C) 
;
l10027751: jmp near ptr l100275D0
;
;* Jump:
; 100275E6(C) 
;
l10027756: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00000407Ch], ecx
           mov edx, dword ptr [ebp-00000407Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000004080h], 000000001h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-000004080h]
;
;* Jump:
; 100273D4(U), 100275B7(U) 
;
l10027789: mov esp, ebp
           pop ebp
           ret 00004h
l10027382 ENDP
;
;* Export: ?SaveToBMPSized@B_BitMap24@@QBEHPBDHH@Z, 0108
;
l1002778F PROC
           push ebp
           mov ebp, esp
           mov eax, 0000040ACh
           call l10041600
           mov dword ptr [ebp-0000040ACh], ecx
           push 000008000h
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001C44
           xor ecx, ecx
           cmp dword ptr [ebp-000004018h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l100277E6
           mov dword ptr [ebp-000004064h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-000004064h]
           jmp near ptr l10027D80
;
;* Jump:
; 100277C4(C) 
;
l100277E6: mov dword ptr [ebp-000004068h], 00000001Dh
           mov word ptr [ebp-00000406Ch], 00000h
           mov word ptr [ebp-000004070h], 00000h
           mov dword ptr [ebp-000004074h], 000000000h
           mov word ptr [ebp-000004078h], 04D42h
           lea edx, [ebp-000004068h]
           push edx
           lea eax, [ebp-00000406Ch]
           push eax
           lea ecx, [ebp-000004070h]
           push ecx
           lea edx, [ebp-000004074h]
           push edx
           lea eax, [ebp-000004078h]
           push eax
           lea ecx, [ebp-000004018h]
           push ecx
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           mov word ptr [ebp-00000407Ch], 00018h
           mov word ptr [ebp-000004080h], 00001h
           mov dx, word ptr [ebp+010h]
           mov word ptr [ebp-000004084h], dx
           mov ax, word ptr [ebp+00Ch]
           mov word ptr [ebp-000004088h], ax
           mov dword ptr [ebp-00000408Ch], 00000000Ch
           lea ecx, [ebp-00000407Ch]
           push ecx
           lea edx, [ebp-000004080h]
           push edx
           lea eax, [ebp-000004084h]
           push eax
           lea ecx, [ebp-000004088h]
           push ecx
           lea edx, [ebp-00000408Ch]
           push edx
           lea eax, [ebp-000004018h]
           push eax
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           mov byte ptr [ebp-000004090h], 000h
           mov byte ptr [ebp-000004094h], 000h
           mov byte ptr [ebp-000004098h], 000h
           lea ecx, [ebp-000004090h]
           push ecx
           lea edx, [ebp-000004094h]
           push edx
           lea eax, [ebp-000004098h]
           push eax
           lea ecx, [ebp-000004018h]
           push ecx
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000409Ch], eax
           mov eax, dword ptr [ebp-00000409Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           and ecx, 080000003h
           jns l1002796C
           dec ecx
           or ecx, 0FFFFFFFCh
           inc ecx
;
;* Jump:
; 10027965(C) 
;
l1002796C: mov dword ptr [ebp-004h], ecx
           mov byte ptr [ebp-00000401Ch], 000h
           mov byte ptr [ebp-00000401Bh], 000h
           mov byte ptr [ebp-00000401Ah], 000h
           mov byte ptr [ebp-000004019h], 000h
           cmp dword ptr [ebp-008h], 000000000h
           jne l100279B1
           mov dword ptr [ebp-0000040A0h], 000000000h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-0000040A0h]
           jmp near ptr l10027D80
;
;* Jump:
; 1002798F(C) 
;
l100279B1: mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+00000022Ch]
           cmp eax, 000000004h
           jne l10027B72
           mov ecx, dword ptr [ebp+010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000004020h], ecx
           jmp l100279EE
;
;* Jump:
; 10027B68(U) 
;
l100279DF: mov edx, dword ptr [ebp-000004020h]
           sub edx, 000000001h
           mov dword ptr [ebp-000004020h], edx
;
;* Jump:
; 100279DD(U) 
;
l100279EE: cmp dword ptr [ebp-000004020h], 000000000h
           jl l10027B6D
           mov eax, dword ptr [ebp-0000040ACh]
           mov ecx, dword ptr [ebp-000004020h]
           imul ecx, dword ptr [eax+008h]
           mov eax, ecx
           cdq
           idiv dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-0000040ACh]
           imul eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000004038h], eax
           mov dword ptr [ebp-000004030h], 000000000h
           mov dword ptr [ebp-000004034h], 000000000h
           jmp l10027A49
;
;* Jump:
; 10027B31(U) 
;
l10027A3A: mov eax, dword ptr [ebp-000004030h]
           add eax, 000000001h
           mov dword ptr [ebp-000004030h], eax
;
;* Jump:
; 10027A38(U) 
;
l10027A49: mov ecx, dword ptr [ebp-000004030h]
           cmp ecx, dword ptr [ebp+00Ch]
           jnl l10027B36
           mov edx, dword ptr [ebp-0000040ACh]
           mov eax, dword ptr [ebp-000004030h]
           imul eax, dword ptr [edx+004h]
           cdq
           idiv dword ptr [ebp+00Ch]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-00000403Ch], eax
           mov eax, dword ptr [ebp-000004038h]
           add eax, dword ptr [ebp-00000403Ch]
           mov ecx, dword ptr [ebp-0000040ACh]
           mov edx, dword ptr [ecx+00Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ebp-000004028h], al
           mov ecx, dword ptr [ebp-000004038h]
           add ecx, dword ptr [ebp-00000403Ch]
           mov edx, dword ptr [ebp-0000040ACh]
           mov eax, dword ptr [edx+00Ch]
           mov cl, byte ptr [eax+ecx+001h]
           mov byte ptr [ebp-00000402Ch], cl
           mov edx, dword ptr [ebp-000004038h]
           add edx, dword ptr [ebp-00000403Ch]
           mov eax, dword ptr [ebp-0000040ACh]
           mov ecx, dword ptr [eax+00Ch]
           mov dl, byte ptr [ecx+edx+002h]
           mov byte ptr [ebp-000004024h], dl
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-000004034h]
           mov cl, byte ptr [ebp-000004028h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000004034h]
           add edx, 000000001h
           mov dword ptr [ebp-000004034h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-000004034h]
           mov cl, byte ptr [ebp-00000402Ch]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000004034h]
           add edx, 000000001h
           mov dword ptr [ebp-000004034h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-000004034h]
           mov cl, byte ptr [ebp-000004024h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000004034h]
           add edx, 000000001h
           mov dword ptr [ebp-000004034h], edx
           jmp near ptr l10027A3A
;
;* Jump:
; 10027A52(C) 
;
l10027B36: mov eax, dword ptr [ebp+00Ch]
           imul eax, eax, 000000003h
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           lea ecx, [ebp-000004018h]
           call l10001E86
           cmp dword ptr [ebp-004h], 000000000h
           je l10027B68
           mov edx, dword ptr [ebp-004h]
           push edx
           lea eax, [ebp-00000401Ch]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001E86
;
;* Jump:
; 10027B50(C) 
;
l10027B68: jmp near ptr l100279DF
;
;* Jump:
; 100279F5(C) 
;
l10027B6D: jmp near ptr l10027D4D
;
;* Jump:
; 100279CB(C) 
;
l10027B72: mov ecx, dword ptr [ebp+010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-000004040h], ecx
           jmp l10027B8F
;
;* Jump:
; 10027D48(U) 
;
l10027B80: mov edx, dword ptr [ebp-000004040h]
           sub edx, 000000001h
           mov dword ptr [ebp-000004040h], edx
;
;* Jump:
; 10027B7E(U) 
;
l10027B8F: cmp dword ptr [ebp-000004040h], 000000000h
           jl l10027D4D
           mov eax, dword ptr [ebp-0000040ACh]
           mov ecx, dword ptr [ebp-000004040h]
           imul ecx, dword ptr [eax+008h]
           mov eax, ecx
           cdq
           idiv dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-0000040ACh]
           imul eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000004058h], eax
           mov dword ptr [ebp-000004050h], 000000000h
           mov dword ptr [ebp-000004054h], 000000000h
           jmp l10027BEA
;
;* Jump:
; 10027D11(U) 
;
l10027BDB: mov eax, dword ptr [ebp-000004050h]
           add eax, 000000001h
           mov dword ptr [ebp-000004050h], eax
;
;* Jump:
; 10027BD9(U) 
;
l10027BEA: mov ecx, dword ptr [ebp-000004050h]
           cmp ecx, dword ptr [ebp+00Ch]
           jnl l10027D16
           mov edx, dword ptr [ebp-0000040ACh]
           mov eax, dword ptr [ebp-000004050h]
           imul eax, dword ptr [edx+004h]
           cdq
           idiv dword ptr [ebp+00Ch]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000004060h], eax
           mov eax, dword ptr [ebp-000004058h]
           add eax, dword ptr [ebp-000004060h]
           mov ecx, dword ptr [ebp-0000040ACh]
           mov edx, dword ptr [ecx+00Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ebp-000004048h], al
           mov ecx, dword ptr [ebp-000004058h]
           add ecx, dword ptr [ebp-000004060h]
           mov edx, dword ptr [ebp-0000040ACh]
           mov eax, dword ptr [edx+00Ch]
           mov cl, byte ptr [eax+ecx+001h]
           mov byte ptr [ebp-00000404Ch], cl
           mov edx, dword ptr [ebp-000004058h]
           add edx, dword ptr [ebp-000004060h]
           mov eax, dword ptr [ebp-0000040ACh]
           mov ecx, dword ptr [eax+00Ch]
           mov dl, byte ptr [ecx+edx+002h]
           mov byte ptr [ebp-000004044h], dl
           mov eax, dword ptr [ebp-000004048h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-00000404Ch]
           and ecx, 0000000FFh
           add eax, ecx
           mov edx, dword ptr [ebp-000004044h]
           and edx, 0000000FFh
           add eax, edx
           cdq
           mov ecx, 000000003h
           idiv ecx
           mov dword ptr [ebp-00000405Ch], eax
           mov eax, dword ptr [ebp-00000405Ch]
           and eax, 0000000FFh
           cdq
           sub eax, edx
           sar eax, 001h
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-000004054h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-000004054h]
           add eax, 000000001h
           mov dword ptr [ebp-000004054h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-000004054h]
           mov dl, byte ptr [ebp-00000405Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-000004054h]
           add eax, 000000001h
           mov dword ptr [ebp-000004054h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, dword ptr [ebp-000004054h]
           mov dl, byte ptr [ebp-00000405Ch]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-000004054h]
           add eax, 000000001h
           mov dword ptr [ebp-000004054h], eax
           jmp near ptr l10027BDB
;
;* Jump:
; 10027BF3(C) 
;
l10027D16: mov ecx, dword ptr [ebp+00Ch]
           imul ecx, ecx, 000000003h
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           lea ecx, [ebp-000004018h]
           call l10001E86
           cmp dword ptr [ebp-004h], 000000000h
           je l10027D48
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-00000401Ch]
           push ecx
           lea ecx, [ebp-000004018h]
           call l10001E86
;
;* Jump:
; 10027D30(C) 
;
l10027D48: jmp near ptr l10027B80
;
;* Jump:
; 10027B6D(U), 10027B96(C) 
;
l10027D4D: mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-0000040A4h], edx
           mov eax, dword ptr [ebp-0000040A4h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000040A8h], 000000001h
           lea ecx, [ebp-000004018h]
           call l10002082
           mov eax, dword ptr [ebp-0000040A8h]
;
;* Jump:
; 100277E1(U), 100279AC(U) 
;
l10027D80: mov esp, ebp
           pop ebp
           ret 0000Ch
l1002778F ENDP
;
;* Call:
; 10027E4C, 1003FF87 
;
;* Export: ?ReadFromBMP@B_BitMap24@@QAEHPBD@Z, 00F8
;
l10027D86 PROC
           push ebp
           mov ebp, esp
           mov eax, 000004024h
           call l10041600
           mov dword ptr [ebp-000004024h], ecx
           push 000008000h
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-000004018h]
           call l10001788
           xor ecx, ecx
           cmp dword ptr [ebp-000004018h], 0FFFFFFFFh
           setne cl
           test ecx, ecx
           jne l10027DDA
           mov dword ptr [ebp-00000401Ch], 000000000h
           lea ecx, [ebp-000004018h]
           call l10001C31
           mov eax, dword ptr [ebp-00000401Ch]
           jmp l10027E0B
;
;* Jump:
; 10027DBB(C) 
;
l10027DDA: mov edx, dword ptr [ebp-000004024h]
           push edx
           lea eax, [ebp-000004018h]
           push eax
           call l10028021
           add esp, 000000008h
           mov dword ptr [ebp-000004020h], 000000001h
           lea ecx, [ebp-000004018h]
           call l10001C31
           mov eax, dword ptr [ebp-000004020h]
;
;* Jump:
; 10027DD8(U) 
;
l10027E0B: mov esp, ebp
           pop ebp
           ret 00004h
l10027D86 ENDP
;
;* Call:
; 10040162 
;
;* Export: ?ReadFromFile@B_BitMap24@@QAEHPBD@Z, 00F9
;
l10027E11 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-008h]
           call l10003337
           push 000000004h
           lea ecx, [ebp-010h]
           push ecx
           lea ecx, [ebp-008h]
           call l10003821
;
;* String: ".BMP"
;
           push offset g100487F4
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10027E6C
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-02Ch]
           call l10027D86
           mov dword ptr [ebp-014h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-014h]
           jmp near ptr l10027F0F
;
;* Jump:
; 10027E43(C) 
;
;* String: ".JPG"
;
l10027E6C: push offset g100487FC
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10027EA1
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           call l10029510
           mov dword ptr [ebp-018h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-018h]
           jmp l10027F0F
;
;* Jump:
; 10027E7B(C) 
;
l10027EA1: push 000000005h
           lea ecx, [ebp-020h]
           push ecx
           lea ecx, [ebp-008h]
           call l10003821
           push eax
           lea ecx, [ebp-010h]
           call l1000378E
           lea ecx, [ebp-020h]
           call l100039BA
;
;* String: ".JPEG"
;
           push offset g10048804
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10027EF5
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-02Ch]
           call l10029510
           mov dword ptr [ebp-024h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-024h]
           jmp l10027F0F
;
;* Jump:
; 10027ECF(C) 
;
l10027EF5: mov dword ptr [ebp-028h], 000000000h
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-028h]
;
;* Jump:
; 10027E67(U), 10027E9F(U), 10027EF3(U) 
;
l10027F0F: mov esp, ebp
           pop ebp
           ret 00004h
l10027E11 ENDP
;
;* Call:
; 1004020B 
;
;* Export: ?SaveToFile@B_BitMap24@@QBEHPBDH@Z, 0109
;
l10027F15 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-008h]
           call l10003337
           push 000000004h
           lea ecx, [ebp-010h]
           push ecx
           lea ecx, [ebp-008h]
           call l10003821
;
;* String: ".BMP"
;
           push offset g1004880C
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10027F70
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-02Ch]
           call l10027382
           mov dword ptr [ebp-014h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-014h]
           jmp near ptr l1002801B
;
;* Jump:
; 10027F47(C) 
;
;* String: ".JPG"
;
l10027F70: push offset g10048814
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10027FA9
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-02Ch]
           call l10029700
           mov dword ptr [ebp-018h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-018h]
           jmp l1002801B
;
;* Jump:
; 10027F7F(C) 
;
l10027FA9: push 000000005h
           lea edx, [ebp-020h]
           push edx
           lea ecx, [ebp-008h]
           call l10003821
           push eax
           lea ecx, [ebp-010h]
           call l1000378E
           lea ecx, [ebp-020h]
           call l100039BA
;
;* String: ".JPEG"
;
           push offset g1004881C
           lea ecx, [ebp-010h]
           call l10003769
           test eax, eax
           je l10028001
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-02Ch]
           call l10029700
           mov dword ptr [ebp-024h], eax
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-024h]
           jmp l1002801B
;
;* Jump:
; 10027FD7(C) 
;
l10028001: mov dword ptr [ebp-028h], 000000000h
           lea ecx, [ebp-010h]
           call l100039BA
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-028h]
;
;* Jump:
; 10027F6B(U), 10027FA7(U), 10027FFF(U) 
;
l1002801B: mov esp, ebp
           pop ebp
           ret 00008h
l10027F15 ENDP
;
;* Call:
; 100085A3, 100085E2, 10027DE8 
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_BitMap24@@@Z, 005A
;
l10028021 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+00Ch], 000000000h
           je l10028063
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 10028042(C) 
;
l10028063: mov ecx, dword ptr [ebp+008h]
           call l100019AF
           mov dword ptr [ebp-008h], eax
           lea ecx, [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B97
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
           mov ecx, dword ptr [ebp-004h]
           and ecx, 00000FFFFh
           cmp ecx, 000004D42h
           jne l100280C0
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10029217
           add esp, 000000010h
           jmp l100280C5
;
;* Jump:
; 1002809B(C) 
;
l100280C0: mov eax, dword ptr [ebp+008h]
           jmp l100280C8
;
;* Jump:
; 100280BE(U) 
;
l100280C5: mov eax, dword ptr [ebp+008h]
;
;* Jump:
; 100280C3(U) 
;
l100280C8: mov esp, ebp
           pop ebp
           ret
l10028021 ENDP
;
;* Call:
; 1000858B, 100085CA 
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_BitMap24@@@Z, 006C
;
l100280CC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
           mov dword ptr [ebp-02Ch], 00000001Dh
           mov word ptr [ebp-030h], 00000h
           mov word ptr [ebp-034h], 00000h
           mov dword ptr [ebp-038h], 000000000h
           mov word ptr [ebp-03Ch], 04D42h
           lea eax, [ebp-02Ch]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           lea edx, [ebp-034h]
           push edx
           lea eax, [ebp-038h]
           push eax
           lea ecx, [ebp-03Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           mov word ptr [ebp-040h], 00018h
           mov word ptr [ebp-044h], 00001h
           mov eax, dword ptr [ebp+00Ch]
           mov cx, word ptr [eax+008h]
           mov word ptr [ebp-048h], cx
           mov edx, dword ptr [ebp+00Ch]
           mov ax, word ptr [edx+004h]
           mov word ptr [ebp-04Ch], ax
           mov dword ptr [ebp-050h], 00000000Ch
           lea ecx, [ebp-040h]
           push ecx
           lea edx, [ebp-044h]
           push edx
           lea eax, [ebp-048h]
           push eax
           lea ecx, [ebp-04Ch]
           push ecx
           lea edx, [ebp-050h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10002008
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           push eax
           call l10001FC6
           add esp, 000000008h
           mov byte ptr [ebp-054h], 000h
           mov byte ptr [ebp-058h], 000h
           mov byte ptr [ebp-05Ch], 000h
           lea ecx, [ebp-054h]
           push ecx
           lea edx, [ebp-058h]
           push edx
           lea eax, [ebp-05Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           push eax
           call l10001F9A
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-060h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           and eax, 080000003h
           jns l10028206
           dec eax
           or eax, 0FFFFFFFCh
           inc eax
;
;* Jump:
; 100281FF(C) 
;
l10028206: mov dword ptr [ebp-004h], eax
           mov byte ptr [ebp-010h], 000h
           mov byte ptr [ebp-00Fh], 000h
           mov byte ptr [ebp-00Eh], 000h
           mov byte ptr [ebp-00Dh], 000h
           cmp dword ptr [ebp-008h], 000000000h
           jne l10028227
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l1002834F
;
;* Jump:
; 1002821D(C) 
;
l10028227: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           jmp l1002823E
;
;* Jump:
; 10028335(U) 
;
l10028235: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10028233(U) 
;
l1002823E: cmp dword ptr [ebp-00Ch], 000000000h
           jl l1002833A
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-00Ch]
           imul edx, dword ptr [ecx+004h]
           imul edx, edx, 000000003h
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l10028271
;
;* Jump:
; 10028304(U) 
;
l10028268: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10028266(U) 
;
l10028271: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+004h]
           jnl l10028309
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-028h]
           mov al, byte ptr [ecx+edx]
           mov byte ptr [ebp-018h], al
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dl, byte ptr [eax+ecx]
           mov byte ptr [ebp-01Ch], dl
           mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-028h]
           mov cl, byte ptr [edx+eax]
           mov byte ptr [ebp-014h], cl
           mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-024h]
           mov cl, byte ptr [ebp-014h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-024h]
           mov cl, byte ptr [ebp-01Ch]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, dword ptr [ebp-024h]
           mov cl, byte ptr [ebp-018h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
           jmp near ptr l10028268
;
;* Jump:
; 1002827A(C) 
;
l10028309: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 000000003h
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           cmp dword ptr [ebp-004h], 000000000h
           je l10028335
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-010h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
;
;* Jump:
; 10028323(C) 
;
l10028335: jmp near ptr l10028235
;
;* Jump:
; 10028242(C) 
;
l1002833A: mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp+008h]
;
;* Jump:
; 10028222(U) 
;
l1002834F: mov esp, ebp
           pop ebp
           ret
l100280CC ENDP
;
;* Export: ?EscribeArchivoRAW@B_BitMap24@@QBEXPBD@Z, 00B3
;
l10028353 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           mov dword ptr [ebp-008h], edx
;
;* String: "wb"
;
           push offset g10048824
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_fopen]; [BICRT.fopen].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l1002838C
           jmp l100283C7
;
;* Jump:
; 10028388(C) 
;
l1002838C: mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           push 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           call [__imp_fwrite]; [BICRT.fwrite].
           add esp, 000000010h
           cmp dword ptr [ebp-008h], eax
           je l100283BA
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_fclose]; [BICRT.fclose].
           add esp, 000000004h
           jmp l100283C7
;
;* Jump:
; 100283A9(C) 
;
l100283BA: mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_fclose]; [BICRT.fclose].
           add esp, 000000004h
;
;* Jump:
; 1002838A(U), 100283B8(U) 
;
l100283C7: mov esp, ebp
           pop ebp
           ret 00004h
l10028353 ENDP
;
;* Call:
; 1004029D 
;
;* Export: ?ChangeRGBOrder@B_BitMap24@@QAEXXZ, 009F
;
l100283CD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002840A
;
;* Jump:
; 1002842E(U) 
;
l100283F8: mov edx, dword ptr [ebp-004h]
           add edx, 000000003h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 100283F6(U) 
;
l1002840A: mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnl l10028430
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-010h], al
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [edx+002h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp-010h]
           mov byte ptr [ecx+002h], dl
           jmp l100283F8
;
;* Jump:
; 10028410(C) 
;
l10028430: mov esp, ebp
           pop ebp
           ret
l100283CD ENDP
;
;* Export: ?GetPixelAt@B_BitMap24@@QBEIHHAAVB_Color@@@Z, 00C6
;
l10028434 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jl l100284B6
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+004h]
           jnl l100284B6
           cmp dword ptr [ebp+00Ch], 000000000h
           jl l100284B6
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           cmp eax, dword ptr [edx+008h]
           jnl l100284B6
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+00Ch]
           imul edx, dword ptr [ecx+004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000003h
           add edx, eax
           mov dword ptr [ebp-004h], edx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [edx+ecx]
           mov byte ptr [eax+004h], dl
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ecx+eax+001h]
           mov byte ptr [edx+005h], cl
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [eax+edx+002h]
           mov byte ptr [ecx+006h], al
           mov eax, 000000001h
           jmp l100284B8
;
;* Jump:
; 10028441(C), 1002844C(C), 10028452(C), 1002845D(C) 
;
l100284B6: xor eax, eax
;
;* Jump:
; 100284B4(U) 
;
l100284B8: mov esp, ebp
           pop ebp
           ret 0000Ch
l10028434 ENDP
;
           int 03h
           int 03h
l100284C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042CB8
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10028581
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l100284F6
           jmp near ptr l10028581
;
;* Jump:
; 100284EF(C) 
;
l100284F6: cmp dword ptr [ebp-014h], 000000000h
           je l1002854E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002850E
;
;* Jump:
; 1002854C(U) 
;
l10028505: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10028503(U) 
;
l1002850E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002854E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10028545
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002854C
;
;* Jump:
; 10028532(C) 
;
l10028545: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 10028543(U) 
;
l1002854C: jmp l10028505
;
;* Jump:
; 100284FA(C), 10028517(C) 
;
l1002854E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 100284D9(C), 100284F1(U) 
;
l10028581: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10028597
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10028589(C) 
;
l10028597: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100284C0 ENDP
;
;* Call:
; 1002922F 
;
l100285A0 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ah
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B97
           add esp, 000000008h
           push eax
           call l10001BD9
           add esp, 000000008h
           push eax
           call l10001B81
           add esp, 000000008h
           push eax
           call l10001B81
           add esp, 000000008h
           push eax
           call l10001BD9
           add esp, 000000008h
           pop ebp
           ret
l100285A0 ENDP
;
;* Call:
; 1002927A 
;
l100285F5 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push edi
           mov ecx, 000000010h
           xor eax, eax
           mov edi, dword ptr [ebp+00Ch]
           rep stosd
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BD9
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000004h
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx], 00000000Ch
           ja l10028630
           mov dword ptr [ebp-00Ch], 000000001h
           jmp l10028637
;
;* Jump:
; 10028625(C) 
;
l10028630: mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 1002862E(U) 
;
l10028637: cmp dword ptr [ebp-00Ch], 000000000h
           je l10028667
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001B97
           add esp, 000000008h
           mov edx, dword ptr [ebp-008h]
           and edx, 00000FFFFh
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000002h
           mov dword ptr [ebp-004h], ecx
           jmp l10028683
;
;* Jump:
; 1002863B(C) 
;
l10028667: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BC3
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10028665(U) 
;
l10028683: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l10028695
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 1002868B(C) 
;
l10028695: cmp dword ptr [ebp-00Ch], 000000000h
           je l100286C4
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B97
           add esp, 000000008h
           mov eax, dword ptr [ebp-008h]
           and eax, 00000FFFFh
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp-004h]
           add edx, 000000002h
           mov dword ptr [ebp-004h], edx
           jmp l100286E0
;
;* Jump:
; 10028699(C) 
;
l100286C4: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BC3
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100286C2(U) 
;
l100286E0: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l100286F2
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100286E8(C) 
;
l100286F2: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B81
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000002h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l10028720
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028716(C) 
;
l10028720: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Eh
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B97
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 000000002h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx]
           jb l1002874E
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028744(C) 
;
l1002874E: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000010h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BD9
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l1002877C
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028772(C) 
;
l1002877C: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000014h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BD9
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l100287AA
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100287A0(C) 
;
l100287AA: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BD9
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx]
           jb l100287D8
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100287CE(C) 
;
l100287D8: mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BD9
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l10028806
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100287FC(C) 
;
l10028806: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000020h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BD9
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l10028834
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 1002882A(C) 
;
l10028834: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000024h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BD9
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx]
           jb l10028862
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028858(C) 
;
l10028862: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001B97
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000002h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l10028890
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028886(C) 
;
l10028890: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000002Ah
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B97
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000002h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l100288BE
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100288B4(C) 
;
l100288BE: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000002Ch
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B97
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 000000002h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx]
           jb l100288EC
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 100288E2(C) 
;
l100288EC: mov eax, dword ptr [ebp+00Ch]
           add eax, 00000002Eh
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001B97
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000002h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l1002891A
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 10028910(C) 
;
l1002891A: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000030h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BD9
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l10028948
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l100289DF
;
;* Jump:
; 1002893E(C) 
;
l10028948: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000034h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BD9
           add esp, 000000008h
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx]
           jb l10028973
           mov eax, dword ptr [ebp+008h]
           jmp l100289DF
;
;* Jump:
; 1002896C(C) 
;
l10028973: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000038h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BD9
           add esp, 000000008h
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax]
           jb l1002899E
           mov eax, dword ptr [ebp+008h]
           jmp l100289DF
;
;* Jump:
; 10028997(C) 
;
l1002899E: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000003Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BD9
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx]
           jb l100289C9
           mov eax, dword ptr [ebp+008h]
           jmp l100289DF
;
;* Jump:
; 100289C2(C) 
;
l100289C9: push 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           sub edx, dword ptr [ebp-004h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
           mov eax, dword ptr [ebp+008h]
;
;* Jump:
; 10028690(U), 100286ED(U), 1002871B(U), 10028749(U), 10028777(U), 
; 100287A5(U), 100287D3(U), 10028801(U), 1002882F(U), 1002885D(U), 
; 1002888B(U), 100288B9(U), 100288E7(U), 10028915(U), 10028943(U), 
; 10028971(U), 1002899C(U), 100289C7(U) 
;
l100289DF: pop edi
           mov esp, ebp
           pop ebp
           ret
l100285F5 ENDP
;
;* Call:
; 100290C3, 100293B3, 100293ED 
;
l100289E4 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000002h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000001h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B6B
           add esp, 000000008h
           push eax
           call l10001B6B
           add esp, 000000008h
           push eax
           call l10001B6B
           add esp, 000000008h
           pop ebp
           ret
l100289E4 ENDP
;
;* Call:
; 1002949B 
;
l10028A19 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           sub ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
           cmp dword ptr [ebp-030h], 000000017h
           ja l1002913A
           mov eax, dword ptr [ebp-030h]
           xor edx, edx
           mov dl, byte ptr [eax+offset g10029158]
           jmp [offset g10029140+edx*04h]
l10028A4A: mov dword ptr [ebp-01Ch], 000000000h
           mov ecx, dword ptr [ebp+010h]
           and ecx, 08000001Fh
           jns l10028A61
           dec ecx
           or ecx, 0FFFFFFE0h
           inc ecx
;
;* Jump:
; 10028A5A(C) 
;
l10028A61: test ecx, ecx
           je l10028A7A
           mov edx, dword ptr [ebp+010h]
           and edx, 08000001Fh
           jns l10028A75
           dec edx
           or edx, 0FFFFFFE0h
           inc edx
;
;* Jump:
; 10028A6E(C) 
;
l10028A75: cmp edx, 000000018h
           jle l10028A83
;
;* Jump:
; 10028A63(C) 
;
l10028A7A: mov dword ptr [ebp-00Ch], 000000000h
           jmp l10028AC5
;
;* Jump:
; 10028A78(C) 
;
l10028A83: mov eax, dword ptr [ebp+010h]
           and eax, 08000001Fh
           jns l10028A92
           dec eax
           or eax, 0FFFFFFE0h
           inc eax
;
;* Jump:
; 10028A8B(C) 
;
l10028A92: cmp eax, 000000008h
           jg l10028AA0
           mov dword ptr [ebp-00Ch], 000000003h
           jmp l10028AC5
;
;* Jump:
; 10028A95(C) 
;
l10028AA0: mov ecx, dword ptr [ebp+010h]
           and ecx, 08000001Fh
           jns l10028AB0
           dec ecx
           or ecx, 0FFFFFFE0h
           inc ecx
;
;* Jump:
; 10028AA9(C) 
;
l10028AB0: cmp ecx, 000000010h
           jg l10028ABE
           mov dword ptr [ebp-00Ch], 000000002h
           jmp l10028AC5
;
;* Jump:
; 10028AB3(C) 
;
l10028ABE: mov dword ptr [ebp-00Ch], 000000001h
;
;* Jump:
; 10028A81(U), 10028A9E(U), 10028ABC(U) 
;
l10028AC5: mov edx, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], edx
           jmp l10028AD6
;
;* Jump:
; 10028BD8(U) 
;
l10028ACD: mov eax, dword ptr [ebp-008h]
           sub eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10028ACB(U) 
;
l10028AD6: cmp dword ptr [ebp-008h], 000000000h
           jle l10028BDD
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], ecx
           jmp l10028AF1
;
;* Jump:
; 10028BBF(U) 
;
l10028AE8: mov edx, dword ptr [ebp-010h]
           sub edx, 000000008h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 10028AE6(U) 
;
l10028AF1: cmp dword ptr [ebp-010h], 000000000h
           jle l10028BC4
           lea eax, [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001B6B
           add esp, 000000008h
           mov dword ptr [ebp-018h], 000000000h
           jmp l10028B1D
;
;* Jump:
; 10028BBA(U) 
;
l10028B14: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10028B12(U) 
;
l10028B1D: cmp dword ptr [ebp-010h], 000000008h
           jnl l10028B2B
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-034h], eax
           jmp l10028B32
;
;* Jump:
; 10028B21(C) 
;
l10028B2B: mov dword ptr [ebp-034h], 000000008h
;
;* Jump:
; 10028B29(U) 
;
l10028B32: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [ebp-034h]
           jnl l10028BBF
           mov edx, dword ptr [ebp-014h]
           and edx, 0000000FFh
           mov ecx, 000000007h
           sub ecx, dword ptr [ebp-018h]
           mov eax, 000000001h
           shl eax, cl
           and edx, eax
           neg edx
           sbb edx, edx
           neg edx
           mov dword ptr [ebp-004h], edx
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+01Ch]
           mov cl, byte ptr [eax+ecx+002h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+01Ch]
           mov al, byte ptr [edx+eax+001h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+01Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           jmp near ptr l10028B14
;
;* Jump:
; 10028B38(C) 
;
l10028BBF: jmp near ptr l10028AE8
;
;* Jump:
; 10028AF5(C) 
;
l10028BC4: cmp dword ptr [ebp-00Ch], 000000000h
           je l10028BD8
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
;
;* Jump:
; 10028BC8(C) 
;
l10028BD8: jmp near ptr l10028ACD
;
;* Jump:
; 10028ADA(C) 
;
l10028BDD: jmp near ptr l1002913A
l10028BE2: mov dword ptr [ebp-01Ch], 000000000h
           mov edx, dword ptr [ebp+010h]
           and edx, 080000007h
           jns l10028BF9
           dec edx
           or edx, 0FFFFFFF8h
           inc edx
;
;* Jump:
; 10028BF2(C) 
;
l10028BF9: test edx, edx
           je l10028C11
           mov eax, dword ptr [ebp+010h]
           and eax, 080000007h
           jns l10028C0C
           dec eax
           or eax, 0FFFFFFF8h
           inc eax
;
;* Jump:
; 10028C05(C) 
;
l10028C0C: cmp eax, 000000006h
           jle l10028C1A
;
;* Jump:
; 10028BFB(C) 
;
l10028C11: mov dword ptr [ebp-00Ch], 000000000h
           jmp l10028C5D
;
;* Jump:
; 10028C0F(C) 
;
l10028C1A: mov ecx, dword ptr [ebp+010h]
           and ecx, 080000007h
           jns l10028C2A
           dec ecx
           or ecx, 0FFFFFFF8h
           inc ecx
;
;* Jump:
; 10028C23(C) 
;
l10028C2A: cmp ecx, 000000002h
           jg l10028C38
           mov dword ptr [ebp-00Ch], 000000003h
           jmp l10028C5D
;
;* Jump:
; 10028C2D(C) 
;
l10028C38: mov edx, dword ptr [ebp+010h]
           and edx, 080000007h
           jns l10028C48
           dec edx
           or edx, 0FFFFFFF8h
           inc edx
;
;* Jump:
; 10028C41(C) 
;
l10028C48: cmp edx, 000000004h
           jg l10028C56
           mov dword ptr [ebp-00Ch], 000000002h
           jmp l10028C5D
;
;* Jump:
; 10028C4B(C) 
;
l10028C56: mov dword ptr [ebp-00Ch], 000000001h
;
;* Jump:
; 10028C18(U), 10028C36(U), 10028C54(U) 
;
l10028C5D: mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], eax
           jmp l10028C6E
;
;* Jump:
; 10028D91(U) 
;
l10028C65: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10028C63(U) 
;
l10028C6E: cmp dword ptr [ebp-008h], 000000000h
           jle l10028D96
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], edx
           jmp l10028C89
;
;* Jump:
; 10028D78(U) 
;
l10028C80: mov eax, dword ptr [ebp-010h]
           sub eax, 000000002h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10028C7E(U) 
;
l10028C89: cmp dword ptr [ebp-010h], 000000000h
           jle l10028D7D
           lea ecx, [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B6B
           add esp, 000000008h
           mov eax, dword ptr [ebp-014h]
           and eax, 0000000FFh
           sar eax, 004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+01Ch]
           mov cl, byte ptr [eax+ecx+002h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+01Ch]
           mov al, byte ptr [edx+eax+001h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+01Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-010h], 000000001h
           je l10028D78
           mov ecx, dword ptr [ebp-014h]
           and ecx, 0000000FFh
           and ecx, 00000000Fh
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+01Ch]
           mov dl, byte ptr [ecx+edx+002h]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+01Ch]
           mov cl, byte ptr [eax+ecx+001h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+01Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10028D0E(C) 
;
l10028D78: jmp near ptr l10028C80
;
;* Jump:
; 10028C8D(C) 
;
l10028D7D: cmp dword ptr [ebp-00Ch], 000000000h
           je l10028D91
           push 000000001h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
;
;* Jump:
; 10028D81(C) 
;
l10028D91: jmp near ptr l10028C65
;
;* Jump:
; 10028C72(C) 
;
l10028D96: jmp near ptr l1002913A
l10028D9B: mov dword ptr [ebp-01Ch], 000000000h
           mov eax, dword ptr [ebp+010h]
           and eax, 080000003h
           jns l10028DB1
           dec eax
           or eax, 0FFFFFFFCh
           inc eax
;
;* Jump:
; 10028DAA(C) 
;
l10028DB1: test eax, eax
           jne l10028DBE
           mov dword ptr [ebp-038h], 000000000h
           jmp l10028DD8
;
;* Jump:
; 10028DB3(C) 
;
l10028DBE: mov ecx, dword ptr [ebp+010h]
           and ecx, 080000003h
           jns l10028DCE
           dec ecx
           or ecx, 0FFFFFFFCh
           inc ecx
;
;* Jump:
; 10028DC7(C) 
;
l10028DCE: mov edx, 000000004h
           sub edx, ecx
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 10028DBC(U) 
;
l10028DD8: mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], ecx
           jmp l10028DEF
;
;* Jump:
; 10028EA3(U) 
;
l10028DE6: mov edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10028DE4(U) 
;
l10028DEF: cmp dword ptr [ebp-008h], 000000000h
           jle l10028EA8
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], eax
           jmp l10028E0A
;
;* Jump:
; 10028E8A(U) 
;
l10028E01: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10028DFF(U) 
;
l10028E0A: cmp dword ptr [ebp-010h], 000000000h
           jle l10028E8F
           lea edx, [ebp-014h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B6B
           add esp, 000000008h
           mov ecx, dword ptr [ebp-014h]
           and ecx, 0000000FFh
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+01Ch]
           mov cl, byte ptr [eax+ecx+002h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-014h]
           and eax, 0000000FFh
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+01Ch]
           mov al, byte ptr [edx+eax+001h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-014h]
           and edx, 0000000FFh
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+01Ch]
           mov dl, byte ptr [ecx+edx]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           jmp near ptr l10028E01
;
;* Jump:
; 10028E0E(C) 
;
l10028E8F: cmp dword ptr [ebp-00Ch], 000000000h
           je l10028EA3
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
;
;* Jump:
; 10028E93(C) 
;
l10028EA3: jmp near ptr l10028DE6
;
;* Jump:
; 10028DF3(C) 
;
l10028EA8: jmp near ptr l1002913A
l10028EAD: mov dword ptr [ebp-01Ch], 000000000h
           mov edx, dword ptr [ebp+010h]
           and edx, 080000001h
           jns l10028EC4
           dec edx
           or edx, 0FFFFFFFEh
           inc edx
;
;* Jump:
; 10028EBD(C) 
;
l10028EC4: neg edx
           sbb edx, edx
           and edx, 000000002h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], eax
           jmp l10028EDF
;
;* Jump:
; 10028FB4(U) 
;
l10028ED6: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10028ED4(U) 
;
l10028EDF: cmp dword ptr [ebp-008h], 000000000h
           jle l10028FB9
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], edx
           jmp l10028EFA
;
;* Jump:
; 10028F9B(U) 
;
l10028EF1: mov eax, dword ptr [ebp-010h]
           sub eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10028EEF(U) 
;
l10028EFA: cmp dword ptr [ebp-010h], 000000000h
           jle l10028FA0
           lea ecx, [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B6B
           add esp, 000000008h
           mov eax, dword ptr [ebp-014h]
           and eax, 0000000FFh
           shl eax, 008h
           mov dword ptr [ebp-004h], eax
           lea ecx, [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001B6B
           add esp, 000000008h
           mov eax, dword ptr [ebp-014h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-004h]
           or ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+01Ch]
           mov dl, byte ptr [ecx+edx+002h]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+01Ch]
           mov cl, byte ptr [eax+ecx+001h]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+01Ch]
           mov al, byte ptr [edx+eax]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           jmp near ptr l10028EF1
;
;* Jump:
; 10028EFE(C) 
;
l10028FA0: cmp dword ptr [ebp-00Ch], 000000000h
           je l10028FB4
           push 000000001h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
;
;* Jump:
; 10028FA4(C) 
;
l10028FB4: jmp near ptr l10028ED6
;
;* Jump:
; 10028EE3(C) 
;
l10028FB9: jmp near ptr l1002913A
l10028FBE: mov dword ptr [ebp-01Ch], 000000000h
           mov eax, dword ptr [ebp+010h]
           and eax, 080000003h
           jns l10028FD4
           dec eax
           or eax, 0FFFFFFFCh
           inc eax
;
;* Jump:
; 10028FCD(C) 
;
l10028FD4: mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp+010h]
           imul ecx, ecx, 000000003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], eax
           jmp l10029000
;
;* Jump:
; 1002911D(U) 
;
l10028FF7: mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10028FF5(U) 
;
l10029000: cmp dword ptr [ebp-008h], 000000000h
           jle l10029122
           cmp dword ptr [ebp-020h], 000000000h
           je l100290A4
           mov edx, dword ptr [ebp+010h]
           imul edx, edx, 000000003h
           push edx
           mov eax, dword ptr [ebp-020h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], ecx
           jmp l10029038
;
;* Jump:
; 100290A0(U) 
;
l1002902F: mov edx, dword ptr [ebp-010h]
           sub edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1002902D(U) 
;
l10029038: cmp dword ptr [ebp-010h], 000000000h
           jle l100290A2
           mov eax, dword ptr [ebp+010h]
           sub eax, dword ptr [ebp-010h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [edx+eax+002h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp+010h]
           sub edx, dword ptr [ebp-010h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp+00Ch]
           add eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+edx+001h]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+010h]
           sub ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-020h]
           mov cl, byte ptr [eax+ecx]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           jmp l1002902F
;
;* Jump:
; 1002903C(C) 
;
l100290A2: jmp l10029109
;
;* Jump:
; 1002900E(C) 
;
l100290A4: mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-010h], eax
           jmp l100290B5
;
;* Jump:
; 10029107(U) 
;
l100290AC: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100290AA(U) 
;
l100290B5: cmp dword ptr [ebp-010h], 000000000h
           jle l10029109
           lea edx, [ebp-024h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100289E4
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov dl, byte ptr [ebp-022h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov dl, byte ptr [ebp-023h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-01Ch]
           mov dl, byte ptr [ebp-024h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
           jmp l100290AC
;
;* Jump:
; 100290A2(U), 100290B9(C) 
;
l10029109: cmp dword ptr [ebp-00Ch], 000000000h
           je l1002911D
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
;
;* Jump:
; 1002910D(C) 
;
l1002911D: jmp near ptr l10028FF7
;
;* Jump:
; 10029004(C) 
;
l10029122: cmp dword ptr [ebp-020h], 000000000h
           je l1002913A
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10028A32(C), 10028BDD(U), 10028D96(U), 10028EA8(U), 10028FB9(U), 
; 10029126(C) 
;
l1002913A: xor eax, eax
           mov esp, ebp
           pop ebp
           ret
;
g10029140  dd l10028A4A
           dd l10028BE2
           dd l10028D9B
           dd l10028EAD
           dd l10028FBE
           dd l1002913A
g10029158  dd 001050500h
           dd 002050505h
           dd 005050505h
           dd 003050505h
           dd 005050505h
           dd 004050505h
l10028A19 ENDP
l10029170 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           mov eax, dword ptr [ebp+00Ch]
           imul eax, eax, 000000003h
           mov dword ptr [ebp+00Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10029192
;
;* Jump:
; 1002920D(U) 
;
l10029189: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10029187(U) 
;
l10029192: mov eax, dword ptr [ebp+010h]
           cdq
           sub eax, edx
           sar eax, 001h
           cmp dword ptr [ebp-008h], eax
           jnl l10029212
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l100291B1
;
;* Jump:
; 1002920B(U) 
;
l100291A8: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100291A6(U) 
;
l100291B1: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [ebp+00Ch]
           jnl l1002920D
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+ecx]
           mov byte ptr [ebp-004h], al
           mov ecx, dword ptr [ebp+010h]
           sub ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           imul ecx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           imul edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov esi, dword ptr [ebp+008h]
           mov cl, byte ptr [esi+ecx]
           mov byte ptr [eax+edx], cl
           mov edx, dword ptr [ebp+010h]
           sub edx, dword ptr [ebp-008h]
           sub edx, 000000001h
           imul edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+edx], cl
           jmp l100291A8
;
;* Jump:
; 100291B7(C) 
;
l1002920D: jmp near ptr l10029189
;
;* Jump:
; 1002919D(C) 
;
l10029212: pop esi
           mov esp, ebp
           pop ebp
           ret
l10029170 ENDP
;
;* Call:
; 100280B6 
;
l10029217 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000090h
           mov dword ptr [ebp-018h], 000000000h
           lea eax, [ebp-068h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100285A0
           add esp, 000000008h
           mov edx, dword ptr [ebp-068h]
           and edx, 00000FFFFh
           cmp edx, 000004D42h
           je l10029272
           mov eax, dword ptr [ebp-068h]
           and eax, 00000FFFFh
           cmp eax, 000004943h
           je l10029272
           mov ecx, dword ptr [ebp-068h]
           and ecx, 00000FFFFh
           cmp ecx, 000005043h
           je l10029272
           mov eax, 0000003E8h
           jmp near ptr l10029506
;
;* Jump:
; 10029246(C), 10029255(C), 10029266(C) 
;
l10029272: lea edx, [ebp-058h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100285F5
           add esp, 000000008h
           movsx ecx, word ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-04Ah]
           and edx, 00000FFFFh
           imul ecx, edx
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000020h
           jg l100292BF
           cmp dword ptr [ebp-048h], 000000004h
           ja l100292BF
           mov eax, dword ptr [ebp-02Ch]
           and eax, 00000FFFFh
           test eax, eax
           jg l100292BF
           cmp dword ptr [ebp-020h], 000000000h
           ja l100292BF
           cmp dword ptr [ebp-054h], 000000001h
           jl l100292BF
           cmp dword ptr [ebp-050h], 000000000h
           jne l100292C9
;
;* Jump:
; 10029299(C), 1002929F(C), 100292AB(C), 100292B1(C), 100292B7(C) 
;
l100292BF: mov eax, 0000003E9h
           jmp near ptr l10029506
;
;* Jump:
; 100292BD(C) 
;
l100292C9: cmp dword ptr [ebp-050h], 000000000h
           jnl l100292E0
           mov dword ptr [ebp-014h], 000000000h
           mov ecx, dword ptr [ebp-050h]
           neg ecx
           mov dword ptr [ebp-050h], ecx
           jmp l100292E7
;
;* Jump:
; 100292CD(C) 
;
l100292E0: mov dword ptr [ebp-014h], 000000001h
;
;* Jump:
; 100292DE(U) 
;
l100292E7: movsx edx, word ptr [ebp-04Ch]
           cmp edx, 000000001h
           jg l1002933A
           mov eax, dword ptr [ebp-04Ah]
           and eax, 00000FFFFh
           cmp eax, 000000001h
           je l10029334
           mov ecx, dword ptr [ebp-04Ah]
           and ecx, 00000FFFFh
           cmp ecx, 000000004h
           je l10029334
           mov edx, dword ptr [ebp-04Ah]
           and edx, 00000FFFFh
           cmp edx, 000000008h
           je l10029334
           mov eax, dword ptr [ebp-04Ah]
           and eax, 00000FFFFh
           cmp eax, 000000010h
           je l10029334
           mov ecx, dword ptr [ebp-04Ah]
           and ecx, 00000FFFFh
           cmp ecx, 000000018h
           jne l1002933A
;
;* Jump:
; 100292FB(C), 10029309(C), 10029317(C), 10029324(C) 
;
l10029334: cmp dword ptr [ebp-048h], 000000000h
           je l10029344
;
;* Jump:
; 100292EE(C), 10029332(C) 
;
l1002933A: mov eax, 0000003EAh
           jmp near ptr l10029506
;
;* Jump:
; 10029338(C) 
;
l10029344: cmp dword ptr [ebp-00Ch], 000000018h
           jnl l10029400
           mov edx, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           shl edx, cl
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-080h], eax
           mov ecx, dword ptr [ebp-080h]
           mov dword ptr [ebp-018h], ecx
           cmp dword ptr [ebp-018h], 000000000h
           jne l10029383
           mov eax, 0000003EBh
           jmp near ptr l10029506
;
;* Jump:
; 10029377(C) 
;
l10029383: cmp dword ptr [ebp-058h], 00000000Ch
           ja l100293BF
           mov dword ptr [ebp-074h], 000000000h
           jmp l1002939B
;
;* Jump:
; 100293BB(U) 
;
l10029392: mov edx, dword ptr [ebp-074h]
           add edx, 000000001h
           mov dword ptr [ebp-074h], edx
;
;* Jump:
; 10029390(U) 
;
l1002939B: mov eax, dword ptr [ebp-074h]
           cmp eax, dword ptr [ebp-008h]
           jnl l100293BD
           mov ecx, dword ptr [ebp-074h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-018h]
           add edx, ecx
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100289E4
           add esp, 000000008h
           jmp l10029392
;
;* Jump:
; 100293A1(C) 
;
l100293BD: jmp l10029400
;
;* Jump:
; 10029387(C) 
;
l100293BF: mov dword ptr [ebp-07Ch], 000000000h
           jmp l100293D1
;
;* Jump:
; 100293FE(U) 
;
l100293C8: mov ecx, dword ptr [ebp-07Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-07Ch], ecx
;
;* Jump:
; 100293C6(U) 
;
l100293D1: mov edx, dword ptr [ebp-07Ch]
           cmp edx, dword ptr [ebp-008h]
           jnl l10029400
           lea eax, [ebp-078h]
           push eax
           mov ecx, dword ptr [ebp-07Ch]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-018h]
           add edx, ecx
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100289E4
           add esp, 000000008h
           push eax
           call l10001B6B
           add esp, 000000008h
           jmp l100293C8
;
;* Jump:
; 10029348(C), 100293BD(U), 100293D7(C) 
;
l10029400: mov ecx, dword ptr [ebp+008h]
           call l100019AF
           mov dword ptr [ebp-06Ch], eax
           mov ecx, dword ptr [ebp-054h]
           imul ecx, dword ptr [ebp-050h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000084h], eax
           mov eax, dword ptr [ebp-000000084h]
           mov dword ptr [ebp-070h], eax
           cmp dword ptr [ebp-070h], 000000000h
           jne l10029461
           cmp dword ptr [ebp-018h], 000000000h
           je l10029457
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-000000088h], ecx
           mov edx, dword ptr [ebp-000000088h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002943D(C) 
;
l10029457: mov eax, 0000003ECh
           jmp near ptr l10029506
;
;* Jump:
; 10029437(C) 
;
l10029461: push 000000000h
           mov eax, dword ptr [ebp-05Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ebp-000000090h], ecx
           cmp dword ptr [ebp-000000090h], 000000000h
           je l10029483
           jmp l100294A6
;
;* Jump:
; 1002947F(C) 
;
l10029483: mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-050h]
           push ecx
           mov edx, dword ptr [ebp-054h]
           push edx
           mov eax, dword ptr [ebp-070h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10028A19
           add esp, 000000018h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10029481(U) 
;
l100294A6: cmp dword ptr [ebp-014h], 000000000h
           je l100294C0
           mov edx, dword ptr [ebp-050h]
           push edx
           mov eax, dword ptr [ebp-054h]
           push eax
           mov ecx, dword ptr [ebp-070h]
           push ecx
           call l10029170
           add esp, 00000000Ch
;
;* Jump:
; 100294AA(C) 
;
l100294C0: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-070h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-054h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [eax], ecx
           push 000000000h
           mov edx, dword ptr [ebp-06Ch]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100018A6
           cmp dword ptr [ebp-018h], 000000000h
           je l10029504
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-00000008Ch], eax
           mov ecx, dword ptr [ebp-00000008Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100294EA(C) 
;
l10029504: xor eax, eax
;
;* Jump:
; 1002926D(U), 100292C4(U), 1002933F(U), 1002937E(U), 1002945C(U) 
;
l10029506: mov esp, ebp
           pop ebp
           ret
l10029217 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10027E84, 10027ED8, 100400C9 
;
;* Export: ?ReadFromJPEG@B_BitMap24@@QAEHPBD@Z, 00FA
;
l10029510 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000244h
           mov dword ptr [ebp-000000244h], ecx
           lea eax, [ebp-000000234h]
           push eax
           call l1001F6E0
           add esp, 000000004h
           mov dword ptr [ebp-0000001ACh], eax
           push 0000001ACh
           push 00000003Eh
           lea ecx, [ebp-0000001ACh]
           push ecx
           call l10013490
           add esp, 00000000Ch
;
;* String: "rb"
;
           push offset g10048828
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_fopen]; [BICRT.fopen].
           add esp, 000000008h
           mov dword ptr [ebp-0000001B0h], eax
           cmp dword ptr [ebp-0000001B0h], 000000000h
           jne l10029591
           mov eax, dword ptr [ebp+008h]
           push eax
;
;* String: "B_BitMap24: can't open %s
;          "
;
           push offset g1004882C
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l100296FA
;
;* Jump:
; 10029569(C) 
;
l10029591: mov ecx, dword ptr [ebp-0000001B0h]
           push ecx
           lea edx, [ebp-0000001ACh]
           push edx
           call l100143E0
           add esp, 000000008h
           push 000000001h
           lea eax, [ebp-0000001ACh]
           push eax
           call l10013624
           add esp, 000000008h
           cmp dword ptr [ebp-000000188h], 000000003h
           je l100295DA
;
;* String: "B_BitMap24: wrong number of components
;          "
;
           push offset g10048848
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l100296FA
;
;* Jump:
; 100295BF(C) 
;
l100295DA: mov ecx, dword ptr [ebp-000000244h]
           mov edx, dword ptr [ecx+004h]
           cmp edx, dword ptr [ebp-000000190h]
           jne l100295FC
           mov eax, dword ptr [ebp-000000244h]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp-00000018Ch]
           je l1002966C
;
;* Jump:
; 100295E9(C) 
;
l100295FC: mov edx, dword ptr [ebp-000000244h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00000023Ch], eax
           mov ecx, dword ptr [ebp-00000023Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000244h]
           mov eax, dword ptr [ebp-000000190h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-000000244h]
           mov edx, dword ptr [ebp-00000018Ch]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-000000244h]
           mov ecx, dword ptr [ebp-000000244h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000240h], eax
           mov eax, dword ptr [ebp-000000244h]
           mov ecx, dword ptr [ebp-000000240h]
           mov dword ptr [eax+00Ch], ecx
;
;* Jump:
; 100295FA(C) 
;
l1002966C: lea edx, [ebp-0000001ACh]
           push edx
           call l10013C80
           add esp, 000000004h
;
;* Jump:
; 100296C5(U) 
;
l1002967B: mov eax, dword ptr [ebp-000000134h]
           cmp eax, dword ptr [ebp-00000014Ch]
           jnb l100296C7
           mov ecx, dword ptr [ebp-000000244h]
           mov edx, dword ptr [ebp-000000134h]
           imul edx, dword ptr [ecx+004h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-000000244h]
           mov ecx, dword ptr [eax+00Ch]
           add ecx, edx
           mov dword ptr [ebp-000000238h], ecx
           push 000000001h
           lea edx, [ebp-000000238h]
           push edx
           lea eax, [ebp-0000001ACh]
           push eax
           call l10013EFA
           add esp, 00000000Ch
           jmp l1002967B
;
;* Jump:
; 10029687(C) 
;
l100296C7: lea ecx, [ebp-0000001ACh]
           push ecx
           call l10013B69
           add esp, 000000004h
           lea edx, [ebp-0000001ACh]
           push edx
           call l10013602
           add esp, 000000004h
           mov eax, dword ptr [ebp-0000001B0h]
           push eax
           call [__imp_fclose]; [BICRT.fclose].
           add esp, 000000004h
           mov eax, 000000001h
;
;* Jump:
; 1002958C(U), 100295D5(U) 
;
l100296FA: mov esp, ebp
           pop ebp
           ret 00004h
l10029510 ENDP
;
;* Call:
; 10027F8C, 10027FE4, 10040030 
;
;* Export: ?SaveToJPEG@B_BitMap24@@QBEHPBDH@Z, 010A
;
l10029700 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001FCh
           mov dword ptr [ebp-0000001FCh], ecx
           lea eax, [ebp-0000001F4h]
           push eax
           call l1001F6E0
           add esp, 000000004h
           mov dword ptr [ebp-000000164h], eax
           push 000000164h
           push 00000003Eh
           lea ecx, [ebp-000000164h]
           push ecx
           call l100096A0
           add esp, 00000000Ch
;
;* String: "wb"
;
           push offset g10048870
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_fopen]; [BICRT.fopen].
           add esp, 000000008h
           mov dword ptr [ebp-000000170h], eax
           cmp dword ptr [ebp-000000170h], 000000000h
           jne l10029781
           mov eax, dword ptr [ebp+008h]
           push eax
;
;* String: "B_BitMap24: can't open %s
;          "
;
           push offset g10048874
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1002989B
;
;* Jump:
; 10029759(C) 
;
l10029781: mov ecx, dword ptr [ebp-000000170h]
           push ecx
           lea edx, [ebp-000000164h]
           push edx
           call l10014240
           add esp, 000000008h
           mov eax, dword ptr [ebp-0000001FCh]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000148h], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-000000144h], eax
           mov dword ptr [ebp-000000140h], 000000003h
           mov dword ptr [ebp-00000013Ch], 000000002h
           lea ecx, [ebp-000000164h]
           push ecx
           call l1000F895
           add esp, 000000004h
           push 000000001h
           mov edx, dword ptr [ebp+00Ch]
           push edx
           lea eax, [ebp-000000164h]
           push eax
           call l1000F86D
           add esp, 00000000Ch
           push 000000001h
           lea ecx, [ebp-000000164h]
           push ecx
           call l10009C20
           add esp, 000000008h
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-000000168h], eax
;
;* Jump:
; 10029866(U) 
;
l10029810: mov ecx, dword ptr [ebp-000000098h]
           cmp ecx, dword ptr [ebp-000000144h]
           jnb l10029868
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [ebp-000000098h]
           imul eax, dword ptr [edx+004h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+00Ch]
           add edx, eax
           mov dword ptr [ebp-0000001F8h], edx
           mov eax, dword ptr [ebp-0000001F8h]
           mov dword ptr [ebp-00000016Ch], eax
           push 000000001h
           lea ecx, [ebp-00000016Ch]
           push ecx
           lea edx, [ebp-000000164h]
           push edx
           call l10009CD5
           add esp, 00000000Ch
           jmp l10029810
;
;* Jump:
; 1002981C(C) 
;
l10029868: lea eax, [ebp-000000164h]
           push eax
           call l100098C9
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000170h]
           push ecx
           call [__imp_fclose]; [BICRT.fclose].
           add esp, 000000004h
           lea edx, [ebp-000000164h]
           push edx
           call l1000980C
           add esp, 000000004h
           mov eax, 000000001h
;
;* Jump:
; 1002977C(U) 
;
l1002989B: mov esp, ebp
           pop ebp
           ret 00008h
l10029700 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_ChannelOFile@@QAE@VB_Name@@PBD@Z, 0009
;
l100298B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-008h], ecx
           lea eax, [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10003A07
           mov ecx, dword ptr [ebp-008h]
;
;* String: "@&"
;
           mov dword ptr [ecx], offset g10042180
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042CBC
           push 000004010h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l1002990D
           push 000004000h
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           call l10001C44
           mov dword ptr [ebp-00Ch], eax
           jmp l10029914
;
;* Jump:
; 100298F5(C) 
;
l1002990D: mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 1002990B(U) 
;
l10029914: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10029932
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000000h
           jmp l1002993C
;
;* Jump:
; 10029924(C) 
;
l10029932: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 000000001h
;
;* Jump:
; 10029930(U) 
;
l1002993C: lea ecx, [ebp+008h]
           call l100039BA
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100298B0 ENDP
;
;* Call:
; 10029B0A, 10029B83, 10029BAE 
;
;* Export: ??1B_ChannelOFile@@UAE@XZ, 002F
;
l1002994D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042CBC
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l100299C0
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-004h], 000000000h
           je l100299A5
           mov ecx, dword ptr [ebp-004h]
           call l10002082
           mov edx, 000000001h
           and edx, 000000001h
           test edx, edx
           je l1002999D
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002998F(C) 
;
l1002999D: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-010h], ecx
           jmp l100299AC
;
;* Jump:
; 1002997B(C) 
;
l100299A5: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 100299A3(U) 
;
l100299AC: mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], 000000001h
;
;* Jump:
; 10029966(C) 
;
l100299C0: mov ecx, dword ptr [ebp-00Ch]
;
;* String: "@&"
;
           mov dword ptr [ecx], offset g10042180
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx], offset g1004217C
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           call l100039BA
           mov esp, ebp
           pop ebp
           ret
l1002994D ENDP
;
;* Export: ?Open@B_ChannelOFile@@UAEIXZ, 00EF
;
l100299E1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+010h], 000000000h
           je l10029A02
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov eax, 000000001h
           jmp l10029A04
;
;* Jump:
; 100299EF(C) 
;
l10029A02: xor eax, eax
;
;* Jump:
; 10029A00(U) 
;
l10029A04: mov esp, ebp
           pop ebp
           ret
l100299E1 ENDP
;
;* Export: ?Close@B_ChannelOFile@@UAEIXZ, 00A6
;
l10029A08 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000001h
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l10029A08 ENDP
;
;* Export: ?Message@B_ChannelOFile@@UAEIPBD@Z, 00E5
;
l10029A22 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00Ch], 000000000h
           jne l10029A57
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           push eax
           call l10001F74
           add esp, 000000008h
           mov ecx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+010h]
           call l10002060
           mov eax, 000000001h
           jmp l10029A59
;
;* Jump:
; 10029A30(C) 
;
l10029A57: xor eax, eax
;
;* Jump:
; 10029A55(U) 
;
l10029A59: mov esp, ebp
           pop ebp
           ret 00004h
l10029A22 ENDP
;
           int 03h
;
;* Export: ??0B_ChannelOFile@@QAE@ABV0@@Z, 0008
;
l10029A60 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100033A4
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g1004217C
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
;
;* String: "@&"
;
           mov dword ptr [edx], offset g10042180
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [eax+010h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042CBC
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10029A60 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??4B_ChannelOFile@@QAEAAV0@ABV0@@Z, 003F
;
l10029AC0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l1000378E
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx+010h], eax
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10029AC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1002994D
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10029B25
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10029B17(C) 
;
l10029B25: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
           int 03h
l10029B30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l10029BAB
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000014h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10029B88(U) 
;
l10029B68: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l10029B8A
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1002994D
           jmp l10029B68
;
;* Jump:
; 10029B75(C) 
;
l10029B8A: mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l10029BA3
           mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10029B92(C) 
;
l10029BA3: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l10029BCC
;
;* Jump:
; 10029B41(C) 
;
l10029BAB: mov ecx, dword ptr [ebp-010h]
           call l1002994D
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10029BC9
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10029BBB(C) 
;
l10029BC9: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 10029BA9(U) 
;
l10029BCC: mov esp, ebp
           pop ebp
           ret 00004h
l10029B30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10001CB0, 10004E82, 1000591F, 1000615E, 10029574, 10029764, 1003DC2B, 1003E2B1, 
; 1003E2EA, 1003E4A0, 1003E566, 1003E60E 
;
;* Export: ?vararg@@YAPBDPBDZZ, 0122
;
           call l10029BE0; Implemented in c++ code
;
l10029C15 PROC
           push ebp
           mov ebp, esp
           call l10029C24
           call l10029C33
           pop ebp
           ret
l10029C15 ENDP
;
;* Call:
; 10029C18 
;
l10029C24 PROC
           push ebp
           mov ebp, esp
           mov ecx, offset g1004A53C
           call l10029C4A
           pop ebp
           ret
l10029C24 ENDP
;
;* Call:
; 10029C1D 
;
l10029C33 PROC
           push ebp
           mov ebp, esp
           push offset l10029C45
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l10029C33 ENDP
;
l10029C45 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10029C45 ENDP
;
;* Call:
; 10029C2C 
;
;* Export: ??0B_MessageManager@@QAE@XZ, 0018
;
l10029C4A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [g1004A944], 000000000h
           jne l10029CF5
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10029CC8
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000010h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042CD4
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042CD0
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042CCC
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], edx
           jmp l10029CCF
;
;* Jump:
; 10029C71(C) 
;
l10029CC8: mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 10029CC6(U) 
;
l10029CCF: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [g1004A944], eax
           cmp dword ptr [g1004A944], 000000000h
           jne l10029CF5
           push 000000025h
;
;* String: "C:\code\DEBUG\DEBUG.CPP"
;
           push offset g10048890
;
;* String: "db!=NULL"
;
           push offset g100488A8
           call [__imp__assert]; [BICRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 10029C5A(C), 10029CDE(C) 
;
l10029CF5: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10029C4A ENDP
;
;* Export: ?Add@B_MessageManager@@QAEIPAVB_MessageChannel@@@Z, 0094
;
l10029CFC PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [g1004A944]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l10029D42
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+008h], edx
           jmp near ptr l10029E0B
;
;* Jump:
; 10029D1A(C) 
;
l10029D42: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-018h]
           add edx, dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+010h], edx
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+008h], 000000000h
           je l10029DCC
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10029D8A
;
;* Jump:
; 10029DAA(U) 
;
l10029D81: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10029D7F(U) 
;
l10029D8A: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10029DAC
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10029D81
;
;* Jump:
; 10029D93(C) 
;
l10029DAC: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], eax
           jmp l10029DEA
;
;* Jump:
; 10029D5B(C) 
;
l10029DCC: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 10029DCA(U) 
;
l10029DEA: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10029D3D(U) 
;
l10029E0B: mov eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10029CFC ENDP
;
;* Export: ?OpenChannel@B_MessageManager@@QAEIABVB_Name@@@Z, 00F2
;
l10029E17 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [g1004A944]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10029E3A
;
;* Jump:
; 10029E74(U) 
;
l10029E31: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10029E2F(U) 
;
l10029E3A: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l10029E76
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l10029E74
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-004h], ecx
           jmp l10029E7D
;
;* Jump:
; 10029E61(C) 
;
l10029E74: jmp l10029E31
;
;* Jump:
; 10029E43(C) 
;
l10029E76: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10029E72(U) 
;
l10029E7D: cmp dword ptr [ebp-004h], 000000000h
           je l10029E90
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+004h]
           jmp l10029E92
;
;* Jump:
; 10029E81(C) 
;
l10029E90: xor eax, eax
;
;* Jump:
; 10029E8E(U) 
;
l10029E92: mov esp, ebp
           pop ebp
           ret 00004h
l10029E17 ENDP
;
;* Export: ?CloseChannel@B_MessageManager@@QAEIABVB_Name@@@Z, 00A9
;
l10029E98 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [g1004A944]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l10029EBB
;
;* Jump:
; 10029EF5(U) 
;
l10029EB2: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10029EB0(U) 
;
l10029EBB: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l10029EF7
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l10029EF5
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-004h], ecx
           jmp l10029EFE
;
;* Jump:
; 10029EE2(C) 
;
l10029EF5: jmp l10029EB2
;
;* Jump:
; 10029EC4(C) 
;
l10029EF7: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10029EF3(U) 
;
l10029EFE: cmp dword ptr [ebp-004h], 000000000h
           je l10029F11
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+008h]
           jmp l10029F13
;
;* Jump:
; 10029F02(C) 
;
l10029F11: xor eax, eax
;
;* Jump:
; 10029F0F(U) 
;
l10029F13: mov esp, ebp
           pop ebp
           ret 00004h
l10029E98 ENDP
;
;* Export: ?DisconnectChannel@B_MessageManager@@QAEPAVB_MessageChannel@@ABVB_Name@@@Z, 00AE
;
l10029F19 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           mov dword ptr [ebp-030h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10029F35
;
;* Jump:
; 1002A12E(U) 
;
l10029F2C: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10029F2A(U) 
;
l10029F35: mov ecx, dword ptr [g1004A944]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1002A133
           mov eax, dword ptr [g1004A944]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l1002A12E
           mov eax, dword ptr [g1004A944]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [g1004A944]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jb l10029F95
           jmp near ptr l1002A129
;
;* Jump:
; 10029F8E(C) 
;
l10029F95: xor ecx, ecx
           test ecx, ecx
           je l10029FCE
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l10029FC7
           push 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-018h]
           call [edx]
           mov dword ptr [ebp-034h], eax
           jmp l10029FCE
;
;* Jump:
; 10029FB4(C) 
;
l10029FC7: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 10029F99(C), 10029FC5(U) 
;
l10029FCE: mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+008h], 000000001h
           jne l1002A00F
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+010h], 000000000h
           jmp near ptr l1002A129
;
;* Jump:
; 10029FD5(C) 
;
l1002A00F: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00Ch]
           lea edx, [edx+ecx-001h]
           mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+010h], edx
           jb l1002A0E0
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ecx+010h]
           sub eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-010h], 000000000h
           jmp l1002A06A
;
;* Jump:
; 1002A087(U) 
;
l1002A061: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1002A05F(U) 
;
l1002A06A: mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [ebp-004h]
           jnb l1002A089
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-010h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1002A061
;
;* Jump:
; 1002A070(C) 
;
l1002A089: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           jmp l1002A09D
;
;* Jump:
; 1002A0BE(U) 
;
l1002A094: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1002A092(U) 
;
l1002A09D: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+008h]
           jnb l1002A0C0
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-010h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l1002A094
;
;* Jump:
; 1002A0A6(C) 
;
l1002A0C0: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], ecx
           jmp l1002A11A
;
;* Jump:
; 1002A025(C) 
;
l1002A0E0: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           jmp l1002A0F4
;
;* Jump:
; 1002A118(U) 
;
l1002A0EB: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1002A0E9(U) 
;
l1002A0F4: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1002A11A
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-014h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h-004h], ecx
           jmp l1002A0EB
;
;* Jump:
; 1002A0DE(U), 1002A0FD(C) 
;
l1002A11A: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+008h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10029F90(U), 1002A00A(U) 
;
l1002A129: mov eax, dword ptr [ebp-008h]
           jmp l1002A135
;
;* Jump:
; 10029F65(C) 
;
l1002A12E: jmp near ptr l10029F2C
;
;* Jump:
; 10029F41(C) 
;
l1002A133: xor eax, eax
;
;* Jump:
; 1002A12C(U) 
;
l1002A135: pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10029F19 ENDP
;
;* Call:
; 1002A25F, 1002A2CD 
;
;* Export: ?Message@B_MessageManager@@QAEIPBD@Z, 00E9
;
l1002A13C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [g1004A944]
           cmp dword ptr [eax+008h], 000000000h
           je l1002A1B0
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002A169
;
;* Jump:
; 1002A1AE(U) 
;
l1002A160: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1002A15E(U) 
;
l1002A169: mov edx, dword ptr [g1004A944]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l1002A1B0
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [g1004A944]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+ecx*04h]
           mov edx, dword ptr [g1004A944]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [eax+edx*04h]
           mov edx, dword ptr [eax]
           call [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1002A1AE
           mov dword ptr [ebp-004h], 000000001h
;
;* Jump:
; 1002A1A5(C) 
;
l1002A1AE: jmp l1002A160
;
;* Jump:
; 1002A155(C), 1002A175(C) 
;
l1002A1B0: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002A13C ENDP
;
;* Call:
; 1002A2B8 
;
;* Export: ?Message@B_MessageManager@@QAEIPBDABVB_Name@@@Z, 00EA
;
l1002A1B9 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [g1004A944]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002A1DC
;
;* Jump:
; 1002A216(U) 
;
l1002A1D3: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1002A1D1(U) 
;
l1002A1DC: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l1002A218
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1000354D
           test eax, eax
           je l1002A216
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-004h], ecx
           jmp l1002A21F
;
;* Jump:
; 1002A203(C) 
;
l1002A216: jmp l1002A1D3
;
;* Jump:
; 1002A1E5(C) 
;
l1002A218: mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 1002A214(U) 
;
l1002A21F: cmp dword ptr [ebp-004h], 000000000h
           je l1002A236
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+00Ch]
           jmp l1002A238
;
;* Jump:
; 1002A223(C) 
;
l1002A236: xor eax, eax
;
;* Jump:
; 1002A234(U) 
;
l1002A238: mov esp, ebp
           pop ebp
           ret 00008h
l1002A1B9 ENDP
;
;* Call:
; 1002A2E1 
;
;* Export: ?Message@B_MessageManager@@QAEID@Z, 00E7
;
l1002A23E PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov al, byte ptr [ebp+008h]
           mov byte ptr [ebp-004h], al
           mov byte ptr [ebp-003h], 000h
           lea ecx, [ebp-004h]
           push ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l1002A13C
           mov esp, ebp
           pop ebp
           ret 00004h
l1002A23E ENDP
;
;* Export: ?Open@B_MessageChannel@@UAEIXZ, 00F1
;
           call l1002A26A; Implemented in c++ code
;
;* Export: ?Close@B_MessageChannel@@UAEIXZ, 00A8
;
           call l1002A277; Implemented in c++ code
;
;* Export: ?Message@B_MessageChannel@@UAEIPBD@Z, 00E6
;
           call l1002A284; Implemented in c++ code
;
;* Export: ?Message@B_MessageManager@@QAEIDABVB_Name@@@Z, 00E8
;
l1002A293 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov al, byte ptr [ebp+008h]
           mov byte ptr [ebp-004h], al
           mov byte ptr [ebp-003h], 000h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-004h]
           push edx
           mov ecx, dword ptr [ebp-00Ch]
           call l1002A1B9
           mov esp, ebp
           pop ebp
           ret 00008h
l1002A293 ENDP
;
;* Call:
; 10001CBE, 10001CFC, 10001D10, 10001D24, 10001D38, 10001D4C, 10001D60, 10002AA4, 
; 1000449D, 100044AF, 100044D2, 100044E4, 10004E90, 1000592D, 10005EE8, 1000616C, 
; 10029582, 100295CB, 10029772, 1002A5A8, 1002A5D7, 10034EDB, 1003DC39, 1003E2BF, 
; 1003E2F8, 1003E324, 1003E353, 1003E4AE, 1003E574, 1003E61C 
;
;* Export: ??6@YAAAVB_MessageManager@@AAV0@PBD@Z, 0061
;
l1002A2C3 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002A13C
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1002A2C3 ENDP
;
;* Export: ??6@YAAAVB_MessageManager@@AAV0@D@Z, 0060
;
l1002A2D7 PROC
           push ebp
           mov ebp, esp
           mov al, byte ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002A23E
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1002A2D7 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1002A2F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042CD4
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002A3B1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002A326
           jmp near ptr l1002A3B1
;
;* Jump:
; 1002A31F(C) 
;
l1002A326: cmp dword ptr [ebp-014h], 000000000h
           je l1002A37E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002A33E
;
;* Jump:
; 1002A37C(U) 
;
l1002A335: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002A333(U) 
;
l1002A33E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002A37E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002A375
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002A37C
;
;* Jump:
; 1002A362(C) 
;
l1002A375: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002A373(U) 
;
l1002A37C: jmp l1002A335
;
;* Jump:
; 1002A32A(C), 1002A347(C) 
;
l1002A37E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002A309(C), 1002A321(U) 
;
l1002A3B1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002A3C7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002A3B9(C) 
;
l1002A3C7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002A2F0 ENDP
;
l1002A3D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042CD4
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002A491
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002A406
           jmp near ptr l1002A491
;
;* Jump:
; 1002A3FF(C) 
;
l1002A406: cmp dword ptr [ebp-014h], 000000000h
           je l1002A45E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002A41E
;
;* Jump:
; 1002A45C(U) 
;
l1002A415: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002A413(U) 
;
l1002A41E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002A45E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002A455
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002A45C
;
;* Jump:
; 1002A442(C) 
;
l1002A455: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002A453(U) 
;
l1002A45C: jmp l1002A415
;
;* Jump:
; 1002A40A(C), 1002A427(C) 
;
l1002A45E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002A3E9(C), 1002A401(U) 
;
l1002A491: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002A4A7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002A499(C) 
;
l1002A4A7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002A3D0 ENDP
;
l1002A4B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042CD4
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002A571
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002A4E6
           jmp near ptr l1002A571
;
;* Jump:
; 1002A4DF(C) 
;
l1002A4E6: cmp dword ptr [ebp-014h], 000000000h
           je l1002A53E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002A4FE
;
;* Jump:
; 1002A53C(U) 
;
l1002A4F5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002A4F3(U) 
;
l1002A4FE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002A53E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002A535
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002A53C
;
;* Jump:
; 1002A522(C) 
;
l1002A535: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002A533(U) 
;
l1002A53C: jmp l1002A4F5
;
;* Jump:
; 1002A4EA(C), 1002A507(C) 
;
l1002A53E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002A4C9(C), 1002A4E1(U) 
;
l1002A571: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002A587
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002A579(C) 
;
l1002A587: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002A4B0 ENDP
;
;* Export: ?OutputWin32Error@@YAXPBD@Z, 00F3
;
           call l1002A590; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10032699, 10038186 
;
l1002A5F0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1002A5F0 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [eax+01Ch], edx
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 000000084h
           push esi
           push edi
           mov dword ptr [ebp-000000084h], ecx
           mov eax, dword ptr [ebp-000000084h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-000000084h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-000000084h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-018h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10031760
           lea ecx, [ebp-018h]
           call l10031913
           fstp qword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+018h]
           fadd qword ptr [eax+018h]
           fadd qword ptr [ebp-020h]
           fdiv qword ptr [g10042CD8]
           mov ecx, dword ptr [ebp-000000084h]
           fstp qword ptr [ecx+018h]
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+018h]
           fcomp qword ptr [eax+018h]
           fnstsw ax
           test ah, 001h
           je l1002A736
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ecx+018h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ecx+01Ch]
           mov dword ptr [edx+01Ch], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-000000084h]
           rep movsd
           jmp near ptr l1002A7E4
;
;* Jump:
; 1002A70A(C) 
;
l1002A736: mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+018h]
           fcomp qword ptr [eax+018h]
           fnstsw ax
           test ah, 001h
           je l1002A773
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ecx+018h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ecx+01Ch]
           mov dword ptr [edx+01Ch], ecx
           mov esi, dword ptr [ebp+00Ch]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-000000084h]
           rep movsd
           jmp l1002A7E4
;
;* Jump:
; 1002A74A(C) 
;
l1002A773: mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-020h]
           push eax
           lea ecx, [ebp-018h]
           call l1003165E
           lea ecx, [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           mov ecx, dword ptr [edx+018h]
           push ecx
           lea edx, [ebp-068h]
           push edx
           call l10031505
           add esp, 000000010h
           push eax
           lea eax, [ebp-080h]
           push eax
           lea ecx, [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           mov ecx, dword ptr [edx+018h]
           push ecx
           lea edx, [ebp-038h]
           push edx
           call l10031505
           add esp, 000000010h
           push eax
           lea eax, [ebp-050h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10031760
           mov ecx, eax
           call l100316F7
           mov esi, eax
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-000000084h]
           rep movsd
;
;* Jump:
; 1002A731(U), 1002A771(U) 
;
l1002A7E4: mov eax, dword ptr [ebp-000000084h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
;
;* Call:
; 100324CD, 10035FB1, 1003935B 
;
l1002A7F2 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10001C1B
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1002A7F2 ENDP
;
;* Call:
; 10032505, 10036B3D, 10038952 
;
l1002A81A PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E83
           add esp, 000000008h
           push eax
           call l1000204A
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1002A81A ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 0000000A4h
           push esi
           push edi
           mov dword ptr [ebp-0000000A4h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-0000000A4h]
           call l1003184F
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-0000000A4h]
           add ecx, 000000018h
           call l1003184F
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002A8FE
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002A8A2
           or eax, 0FFFFFFFFh
           jmp near ptr l1002A987
;
;* Jump:
; 1002A898(C) 
;
l1002A8A2: fld qword ptr [ebp-010h]
           fsub qword ptr [ebp-008h]
           fdivr qword ptr [ebp-010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-040h]
           push edx
           mov eax, dword ptr [ebp-0000000A4h]
           add eax, 000000018h
           push eax
           lea ecx, [ebp-028h]
           push ecx
           mov ecx, dword ptr [ebp-0000000A4h]
           call l10031760
           mov ecx, eax
           call l10031561
           push eax
           lea edx, [ebp-058h]
           push edx
           mov ecx, dword ptr [ebp-0000000A4h]
           add ecx, 000000018h
           call l100316F7
           mov esi, eax
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-0000000A4h]
           rep movsd
           xor eax, eax
           jmp near ptr l1002A987
;
;* Jump:
; 1002A888(C) 
;
l1002A8FE: fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002A982
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002A923
           or eax, 0FFFFFFFFh
           jmp l1002A987
;
;* Jump:
; 1002A91C(C) 
;
l1002A923: fld qword ptr [ebp-008h]
           fsub qword ptr [ebp-010h]
           fdivr qword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-000000088h]
           push eax
           mov ecx, dword ptr [ebp-0000000A4h]
           push ecx
           lea edx, [ebp-070h]
           push edx
           mov ecx, dword ptr [ebp-0000000A4h]
           add ecx, 000000018h
           call l10031760
           mov ecx, eax
           call l10031561
           push eax
           lea eax, [ebp-0000000A0h]
           push eax
           mov ecx, dword ptr [ebp-0000000A4h]
           call l100316F7
           mov esi, eax
           mov edi, dword ptr [ebp-0000000A4h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           xor eax, eax
           jmp l1002A987
;
;* Jump:
; 1002A90C(C) 
;
l1002A982: mov eax, 000000001h
;
;* Jump:
; 1002A89D(U), 1002A8F9(U), 1002A921(U), 1002A980(U) 
;
l1002A987: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 0000000A8h
           push esi
           push edi
           mov dword ptr [ebp-0000000A8h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000000A8h]
           fld qword ptr [edx+010h]
           fmul qword ptr [ecx+014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000000A8h]
           fld qword ptr [edx+008h]
           fmul qword ptr [ecx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000000A8h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [eax+01Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-0000000A8h]
           add eax, 000000018h
           mov dword ptr [ebp-0000000A4h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000000A4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000000A4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000000A4h]
           fld qword ptr [eax]
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [ecx+01Ch]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002AAA5
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002AA49
           or eax, 0FFFFFFFFh
           jmp near ptr l1002AB2E
;
;* Jump:
; 1002AA3F(C) 
;
l1002AA49: fld qword ptr [ebp-010h]
           fsub qword ptr [ebp-008h]
           fdivr qword ptr [ebp-010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea ecx, [ebp-040h]
           push ecx
           mov edx, dword ptr [ebp-0000000A8h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-0000000A8h]
           call l10031760
           mov ecx, eax
           call l10031561
           push eax
           lea ecx, [ebp-058h]
           push ecx
           mov ecx, dword ptr [ebp-0000000A8h]
           add ecx, 000000018h
           call l100316F7
           mov esi, eax
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-0000000A8h]
           rep movsd
           xor eax, eax
           jmp near ptr l1002AB2E
;
;* Jump:
; 1002AA2F(C) 
;
l1002AAA5: fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002AB29
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l1002AACA
           or eax, 0FFFFFFFFh
           jmp l1002AB2E
;
;* Jump:
; 1002AAC3(C) 
;
l1002AACA: fld qword ptr [ebp-008h]
           fsub qword ptr [ebp-010h]
           fdivr qword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-000000088h]
           push edx
           mov eax, dword ptr [ebp-0000000A8h]
           push eax
           lea ecx, [ebp-070h]
           push ecx
           mov ecx, dword ptr [ebp-0000000A8h]
           add ecx, 000000018h
           call l10031760
           mov ecx, eax
           call l10031561
           push eax
           lea edx, [ebp-0000000A0h]
           push edx
           mov ecx, dword ptr [ebp-0000000A8h]
           call l100316F7
           mov esi, eax
           mov edi, dword ptr [ebp-0000000A8h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           xor eax, eax
           jmp l1002AB2E
;
;* Jump:
; 1002AAB3(C) 
;
l1002AB29: mov eax, 000000001h
;
;* Jump:
; 1002AA44(U), 1002AAA0(U), 1002AAC8(U), 1002AB27(U) 
;
l1002AB2E: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov esi, dword ptr [ebp+00Ch]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fcomp qword ptr [edx]
           fnstsw ax
           test ah, 001h
           je l1002AC8E
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx+018h], ecx
           mov eax, dword ptr [eax+004h]
           mov dword ptr [edx+01Ch], eax
           jmp l1002ACAF
;
;* Jump:
; 1002AC69(C) 
;
l1002AC8E: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [edx+004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+018h], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+01Ch], ecx
;
;* Jump:
; 1002AC8C(U) 
;
l1002ACAF: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fcomp qword ptr [eax+008h]
           fnstsw ax
           test ah, 001h
           je l1002ACE8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ecx+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+020h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+024h], edx
           jmp l1002AD0C
;
;* Jump:
; 1002ACC0(C) 
;
l1002ACE8: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [eax+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ecx+00Ch]
           mov dword ptr [edx+024h], ecx
;
;* Jump:
; 1002ACE6(U) 
;
l1002AD0C: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+010h]
           fcomp qword ptr [eax+010h]
           fnstsw ax
           test ah, 001h
           je l1002AD45
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+010h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ecx+014h]
           mov dword ptr [edx+014h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+010h]
           mov dword ptr [eax+028h], ecx
           mov edx, dword ptr [edx+014h]
           mov dword ptr [eax+02Ch], edx
           jmp l1002AD69
;
;* Jump:
; 1002AD1D(C) 
;
l1002AD45: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+010h]
           mov dword ptr [edx+028h], eax
           mov ecx, dword ptr [ecx+014h]
           mov dword ptr [edx+02Ch], ecx
;
;* Jump:
; 1002AD43(U) 
;
l1002AD69: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           mov dword ptr [ebp-038h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [g10042CE8]
           fsubr qword ptr [eax+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax+018h]
           fmul qword ptr [g10042CE8]
           fsubr qword ptr [edx+008h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [g10042CE8]
           mov edx, dword ptr [ebp+008h]
           fsubr qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [g10042CE8]
           fadd qword ptr [eax+010h]
           fstp qword ptr [ebp-034h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax+018h]
           fmul qword ptr [g10042CE8]
           fadd qword ptr [edx+008h]
           fstp qword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [g10042CE8]
           mov edx, dword ptr [ebp+008h]
           fadd qword ptr [edx]
           fstp qword ptr [ebp-024h]
           mov eax, dword ptr [ebp-038h]
           add eax, 000000018h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ecx+014h], eax
           mov eax, dword ptr [ebp-038h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fsub qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fsub qword ptr [edx+018h]
           fmulp st(01h), st(00h)
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           je l1002AEE5
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+008h]
           fsub qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax+008h]
           fsub qword ptr [ecx+020h]
           fmulp st(01h), st(00h)
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           je l1002AEE5
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fsub qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fsub qword ptr [edx+028h]
           fmulp st(01h), st(00h)
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           je l1002AEE5
           mov dword ptr [ebp-008h], 000000001h
           jmp l1002AEEC
;
;* Jump:
; 1002AE8C(C), 1002AEB3(C), 1002AEDA(C) 
;
l1002AEE5: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1002AEE3(U) 
;
l1002AEEC: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 00000030Ch
           push esi
           push edi
           mov dword ptr [ebp-00000030Ch], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [ecx+014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [ecx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [eax+01Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000018h
           mov dword ptr [ebp-00000025Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000025Ch]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000025Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000025Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [ecx+01Ch]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           mov dword ptr [ebp-000000260h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000260h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000260h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000260h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002B9B0
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002B46B
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002B04D
           mov esi, dword ptr [ebp-00000030Ch]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov esi, dword ptr [ebp-00000030Ch]
           add esi, 000000018h
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov esi, dword ptr [ebp-00000030Ch]
           add esi, 000000030h
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           mov eax, 000000001h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002B005(C) 
;
l1002B04D: mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000018h
           push edx
           lea eax, [ebp-030h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           call l10031760
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           push ecx
           lea edx, [ebp-060h]
           push edx
           mov ecx, dword ptr [ebp-00000030Ch]
           call l10031760
           mov dword ptr [ebp-078h], 000000000h
           mov dword ptr [ebp-074h], 000000000h
           lea eax, [ebp-070h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-068h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov dword ptr [ebp-048h], 000000000h
           mov dword ptr [ebp-044h], 000000000h
           lea edx, [ebp-040h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-038h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           mov dword ptr [ebp-00000028Ch], ecx
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-028h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-020h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-000000270h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002B128
           jmp near ptr l1002B274
;
;* Jump:
; 1002B121(C) 
;
l1002B128: mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-028h]
           mov eax, dword ptr [ebp-00000028Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-00000028Ch]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-020h]
           mov edx, dword ptr [ebp-00000028Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-00000028Ch]
           fld qword ptr [ebp-030h]
           fmul qword ptr [ecx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000278h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000028Ch]
           lea edx, [ebp-020h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000028Ch]
           lea edx, [ebp-028h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000028Ch]
           fld qword ptr [ebp-030h]
           fmul qword ptr [ecx+008h]
           lea edx, [ebp-028h]
           mov ecx, dword ptr [ebp-00000028Ch]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-028h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000280h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000028Ch]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+010h]
           lea eax, [ebp-020h]
           mov edx, dword ptr [ebp-00000028Ch]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000028Ch]
           lea edx, [ebp-028h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000028Ch]
           lea edx, [ebp-020h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-020h]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000288h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-000000270h]
           fstp qword ptr [ebp-000000268h]
           fld qword ptr [ebp-000000278h]
           fmul qword ptr [ebp-000000268h]
           fstp qword ptr [ebp-048h]
           fld qword ptr [ebp-000000280h]
           fmul qword ptr [ebp-000000268h]
           lea edx, [ebp-040h]
           fstp qword ptr [edx]
           fld qword ptr [ebp-000000288h]
           fmul qword ptr [ebp-000000268h]
           lea eax, [ebp-038h]
           fstp qword ptr [eax]
;
;* Jump:
; 1002B123(U) 
;
l1002B274: mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-060h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-058h]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-050h]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-00000029Ch]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002B2AF
           jmp near ptr l1002B3FB
;
;* Jump:
; 1002B2A8(C) 
;
l1002B2AF: mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-058h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-060h]
           fmul qword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-050h]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov eax, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-060h]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-060h]
           fmul qword ptr [ecx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002A4h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000030Ch]
           lea ecx, [ebp-050h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-00000030Ch]
           lea ecx, [ebp-058h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-060h]
           fmul qword ptr [eax+008h]
           lea ecx, [ebp-058h]
           mov eax, dword ptr [ebp-00000030Ch]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-058h]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002ACh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-060h]
           fmul qword ptr [ecx+010h]
           lea edx, [ebp-050h]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-00000030Ch]
           lea ecx, [ebp-058h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-00000030Ch]
           lea ecx, [ebp-050h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-050h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002B4h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-00000029Ch]
           fstp qword ptr [ebp-000000294h]
           fld qword ptr [ebp-0000002A4h]
           fmul qword ptr [ebp-000000294h]
           fstp qword ptr [ebp-078h]
           fld qword ptr [ebp-0000002ACh]
           fmul qword ptr [ebp-000000294h]
           lea ecx, [ebp-070h]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-0000002B4h]
           fmul qword ptr [ebp-000000294h]
           lea edx, [ebp-068h]
           fstp qword ptr [edx]
;
;* Jump:
; 1002B2AA(U) 
;
l1002B3FB: mov esi, dword ptr [ebp-00000030Ch]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-048h]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           lea esi, [ebp-078h]
           rep movsd
           mov esi, dword ptr [ebp-00000030Ch]
           add esi, 000000018h
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+010h]
           rep movsd
           mov edi, dword ptr [ebp+010h]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-048h]
           rep movsd
           mov esi, dword ptr [ebp-00000030Ch]
           mov edi, dword ptr [ebp+010h]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           mov eax, 000000002h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002AFF1(C) 
;
l1002B46B: fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002B8FE
           mov eax, dword ptr [ebp-00000030Ch]
           push eax
           lea ecx, [ebp-0000000C0h]
           push ecx
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           call l10031760
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000018h
           push edx
           lea eax, [ebp-000000090h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           call l10031760
           mov dword ptr [ebp-0000000D8h], 000000000h
           mov dword ptr [ebp-0000000D4h], 000000000h
           lea ecx, [ebp-0000000D0h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-0000000C8h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov dword ptr [ebp-0000000A8h], 000000000h
           mov dword ptr [ebp-0000000A4h], 000000000h
           lea eax, [ebp-0000000A0h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-000000098h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000018h
           mov dword ptr [ebp-0000002E0h], edx
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-000000088h]
           fld qword ptr [ecx+00Ch]
           fmul qword ptr [edx]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-080h]
           fld qword ptr [eax+014h]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-0000002C4h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002B57E
           jmp near ptr l1002B6F1
;
;* Jump:
; 1002B577(C) 
;
l1002B57E: mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-000000088h]
           mov ecx, dword ptr [ebp-0000002E0h]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov eax, dword ptr [ebp-0000002E0h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [eax+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-080h]
           mov eax, dword ptr [ebp-0000002E0h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-0000002E0h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [edx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+014h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [eax+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002CCh]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000002E0h]
           lea eax, [ebp-080h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax]
           mov edx, dword ptr [ebp-0000002E0h]
           lea eax, [ebp-000000088h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000002E0h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [edx+008h]
           lea eax, [ebp-000000088h]
           mov edx, dword ptr [ebp-0000002E0h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-000000088h]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002D4h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000002E0h]
           fld qword ptr [ebp-000000090h]
           fmul qword ptr [eax+010h]
           lea ecx, [ebp-080h]
           mov eax, dword ptr [ebp-0000002E0h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000002E0h]
           lea eax, [ebp-000000088h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax]
           mov edx, dword ptr [ebp-0000002E0h]
           lea eax, [ebp-080h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-080h]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002DCh]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-0000002C4h]
           fstp qword ptr [ebp-0000002BCh]
           fld qword ptr [ebp-0000002CCh]
           fmul qword ptr [ebp-0000002BCh]
           fstp qword ptr [ebp-0000000A8h]
           fld qword ptr [ebp-0000002D4h]
           fmul qword ptr [ebp-0000002BCh]
           lea eax, [ebp-0000000A0h]
           fstp qword ptr [eax]
           fld qword ptr [ebp-0000002DCh]
           fmul qword ptr [ebp-0000002BCh]
           lea ecx, [ebp-000000098h]
           fstp qword ptr [ecx]
;
;* Jump:
; 1002B579(U) 
;
l1002B6F1: mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000B8h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000B0h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-0000002F0h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002B735
           jmp near ptr l1002B8B7
;
;* Jump:
; 1002B72E(C) 
;
l1002B735: mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-0000000B8h]
           mov eax, dword ptr [ebp-00000030Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000B0h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [ecx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [edx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000002F8h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000030Ch]
           lea edx, [ebp-0000000B0h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000030Ch]
           lea edx, [ebp-0000000B8h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [ecx+008h]
           lea edx, [ebp-0000000B8h]
           mov ecx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000B8h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000300h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [ebp-0000000C0h]
           fmul qword ptr [edx+010h]
           lea eax, [ebp-0000000B0h]
           mov edx, dword ptr [ebp-00000030Ch]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000030Ch]
           lea edx, [ebp-0000000B8h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000030Ch]
           lea edx, [ebp-0000000B0h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000B0h]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000308h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-0000002F0h]
           fstp qword ptr [ebp-0000002E8h]
           fld qword ptr [ebp-0000002F8h]
           fmul qword ptr [ebp-0000002E8h]
           fstp qword ptr [ebp-0000000D8h]
           fld qword ptr [ebp-000000300h]
           fmul qword ptr [ebp-0000002E8h]
           lea edx, [ebp-0000000D0h]
           fstp qword ptr [edx]
           fld qword ptr [ebp-000000308h]
           fmul qword ptr [ebp-0000002E8h]
           lea eax, [ebp-0000000C8h]
           fstp qword ptr [eax]
;
;* Jump:
; 1002B730(U) 
;
l1002B8B7: lea ecx, [ebp-0000000A8h]
           push ecx
           lea edx, [ebp-0000000D8h]
           push edx
           mov eax, dword ptr [ebp-00000030Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov ecx, dword ptr [ebp-00000030Ch]
           push ecx
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000030h
           push edx
           lea eax, [ebp-0000000A8h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           call l1002E0B0
           mov eax, 000000002h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002B479(C) 
;
l1002B8FE: mov ecx, dword ptr [ebp-00000030Ch]
           push ecx
           lea edx, [ebp-000000120h]
           push edx
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           call l10031760
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000030h
           push eax
           lea ecx, [ebp-0000000F0h]
           push ecx
           mov ecx, dword ptr [ebp-00000030Ch]
           call l10031760
           lea ecx, [ebp-000000138h]
           call l1002DEF0
           lea ecx, [ebp-000000108h]
           call l1002DEF0
           lea edx, [ebp-000000108h]
           push edx
           lea eax, [ebp-0000000F0h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea edx, [ebp-000000138h]
           push edx
           lea eax, [ebp-000000120h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea edx, [ebp-000000108h]
           push edx
           lea eax, [ebp-000000138h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov eax, 000000001h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002AFDD(C) 
;
l1002B9B0: fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002BB68
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002BAB0
           mov edx, dword ptr [ebp-00000030Ch]
           push edx
           lea eax, [ebp-000000180h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           call l10031760
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           push ecx
           lea edx, [ebp-000000150h]
           push edx
           mov ecx, dword ptr [ebp-00000030Ch]
           call l10031760
           lea ecx, [ebp-000000198h]
           call l1002DEF0
           lea ecx, [ebp-000000168h]
           call l1002DEF0
           lea eax, [ebp-000000168h]
           push eax
           lea ecx, [ebp-000000150h]
           push ecx
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000030h
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea eax, [ebp-000000198h]
           push eax
           lea ecx, [ebp-000000180h]
           push ecx
           mov edx, dword ptr [ebp-00000030Ch]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000030h
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           push ecx
           lea edx, [ebp-000000168h]
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000018h
           push eax
           lea ecx, [ebp-000000198h]
           push ecx
           lea edx, [ebp-000000168h]
           push edx
           mov ecx, dword ptr [ebp+010h]
           call l1002E0B0
           mov eax, 000000002h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002B9D2(C) 
;
l1002BAB0: mov eax, dword ptr [ebp-00000030Ch]
           push eax
           lea ecx, [ebp-0000001E0h]
           push ecx
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           call l10031760
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000018h
           push edx
           lea eax, [ebp-0000001B0h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           call l10031760
           lea ecx, [ebp-0000001F8h]
           call l1002DEF0
           lea ecx, [ebp-0000001C8h]
           call l1002DEF0
           lea ecx, [ebp-0000001F8h]
           push ecx
           lea edx, [ebp-0000001E0h]
           push edx
           mov eax, dword ptr [ebp-00000030Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea ecx, [ebp-0000001C8h]
           push ecx
           lea edx, [ebp-0000001B0h]
           push edx
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea ecx, [ebp-0000001C8h]
           push ecx
           mov edx, dword ptr [ebp-00000030Ch]
           add edx, 000000018h
           push edx
           lea eax, [ebp-0000001F8h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov eax, 000000001h
           jmp near ptr l1002BC16
;
;* Jump:
; 1002B9BE(C) 
;
l1002BB68: fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1002BC14
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000018h
           push ecx
           lea edx, [ebp-000000210h]
           push edx
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           call l10031760
           mov eax, dword ptr [ebp-00000030Ch]
           add eax, 000000030h
           push eax
           lea ecx, [ebp-000000240h]
           push ecx
           mov ecx, dword ptr [ebp-00000030Ch]
           call l10031760
           lea ecx, [ebp-000000258h]
           call l1002DEF0
           lea ecx, [ebp-000000228h]
           call l1002DEF0
           lea edx, [ebp-000000228h]
           push edx
           lea eax, [ebp-000000258h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea edx, [ebp-000000228h]
           push edx
           lea eax, [ebp-000000258h]
           push eax
           mov ecx, dword ptr [ebp-00000030Ch]
           add ecx, 000000030h
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov eax, 000000001h
           jmp l1002BC16
;
;* Jump:
; 1002BB76(C) 
;
l1002BC14: xor eax, eax
;
;* Jump:
; 1002B048(U), 1002B466(U), 1002B8F9(U), 1002B9AB(U), 1002BAAB(U), 
; 1002BB63(U), 1002BC12(U) 
;
l1002BC16: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 000000778h
           push esi
           push edi
           mov dword ptr [ebp-0000006C4h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx+010h]
           fmul qword ptr [ecx+014h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx+008h]
           fmul qword ptr [ecx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [eax+01Ch]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000018h
           mov dword ptr [ebp-000000580h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-000000580h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-000000580h]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-000000580h]
           fld qword ptr [eax]
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [ecx+01Ch]
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           mov dword ptr [ebp-000000584h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000584h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000584h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000584h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fstp dword ptr [ebp-00Ch]
           fld dword ptr [ebp-004h]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002D7F4
           fld dword ptr [ebp-008h]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002C6FC
           fld dword ptr [ebp-00Ch]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002BE6D
           mov esi, dword ptr [ebp-0000006C4h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov esi, dword ptr [ebp-0000006C4h]
           add esi, 000000018h
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov esi, dword ptr [ebp-0000006C4h]
           add esi, 000000030h
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           mov dword ptr [ebp-00000058Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000048h
           mov dword ptr [ebp-000000588h], eax
           mov ecx, dword ptr [ebp-000000588h]
           mov edx, dword ptr [ebp-00000058Ch]
           mov al, byte ptr [edx+004h]
           mov byte ptr [ecx+004h], al
           mov ecx, dword ptr [ebp-000000588h]
           mov edx, dword ptr [ebp-00000058Ch]
           mov al, byte ptr [edx+005h]
           mov byte ptr [ecx+005h], al
           mov ecx, dword ptr [ebp-000000588h]
           mov edx, dword ptr [ebp-00000058Ch]
           mov al, byte ptr [edx+006h]
           mov byte ptr [ecx+006h], al
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           mov dword ptr [ebp-000000594h], ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000050h
           mov dword ptr [ebp-000000590h], edx
           mov eax, dword ptr [ebp-000000590h]
           mov ecx, dword ptr [ebp-000000594h]
           mov dl, byte ptr [ecx+004h]
           mov byte ptr [eax+004h], dl
           mov eax, dword ptr [ebp-000000590h]
           mov ecx, dword ptr [ebp-000000594h]
           mov dl, byte ptr [ecx+005h]
           mov byte ptr [eax+005h], dl
           mov eax, dword ptr [ebp-000000590h]
           mov ecx, dword ptr [ebp-000000594h]
           mov dl, byte ptr [ecx+006h]
           mov byte ptr [eax+006h], dl
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000058h
           mov dword ptr [ebp-00000059Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000058h
           mov dword ptr [ebp-000000598h], ecx
           mov edx, dword ptr [ebp-000000598h]
           mov eax, dword ptr [ebp-00000059Ch]
           mov cl, byte ptr [eax+004h]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-000000598h]
           mov eax, dword ptr [ebp-00000059Ch]
           mov cl, byte ptr [eax+005h]
           mov byte ptr [edx+005h], cl
           mov edx, dword ptr [ebp-000000598h]
           mov eax, dword ptr [ebp-00000059Ch]
           mov cl, byte ptr [eax+006h]
           mov byte ptr [edx+006h], cl
           mov eax, 000000001h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002BD2E(C) 
;
l1002BE6D: mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-068h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           call l10031760
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           push ecx
           lea edx, [ebp-000000088h]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           call l10031760
           mov dword ptr [ebp-050h], 000000000h
           mov dword ptr [ebp-04Ch], 000000000h
           lea eax, [ebp-048h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-040h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-030h], 000000000h
           lea edx, [ebp-02Ch]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-000000088h]
           call l10031913
           fstp dword ptr [ebp-01Ch]
           lea ecx, [ebp-068h]
           call l10031913
           fstp dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           mov dword ptr [ebp-0000005C8h], ecx
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-060h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-058h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-0000005ACh]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002BF64
           jmp near ptr l1002C0B0
;
;* Jump:
; 1002BF5D(C) 
;
l1002BF64: mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-060h]
           mov eax, dword ptr [ebp-0000005C8h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-0000005C8h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-058h]
           mov edx, dword ptr [ebp-0000005C8h]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-0000005C8h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [ecx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [edx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005B4h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000005C8h]
           lea edx, [ebp-058h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-0000005C8h]
           lea edx, [ebp-060h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000005C8h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [ecx+008h]
           lea edx, [ebp-060h]
           mov ecx, dword ptr [ebp-0000005C8h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-060h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005BCh]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-0000005C8h]
           fld qword ptr [ebp-068h]
           fmul qword ptr [edx+010h]
           lea eax, [ebp-058h]
           mov edx, dword ptr [ebp-0000005C8h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000005C8h]
           lea edx, [ebp-060h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-0000005C8h]
           lea edx, [ebp-058h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-058h]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005C4h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-0000005ACh]
           fstp qword ptr [ebp-0000005A4h]
           fld qword ptr [ebp-0000005B4h]
           fmul qword ptr [ebp-0000005A4h]
           fstp qword ptr [ebp-034h]
           fld qword ptr [ebp-0000005BCh]
           fmul qword ptr [ebp-0000005A4h]
           lea edx, [ebp-02Ch]
           fstp qword ptr [edx]
           fld qword ptr [ebp-0000005C4h]
           fmul qword ptr [ebp-0000005A4h]
           lea eax, [ebp-024h]
           fstp qword ptr [eax]
;
;* Jump:
; 1002BF5F(U) 
;
l1002C0B0: mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-080h]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-078h]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-0000005D8h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002C0EE
           jmp near ptr l1002C249
;
;* Jump:
; 1002C0E7(C) 
;
l1002C0EE: mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-080h]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-078h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [ecx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005E0h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-078h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-080h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [eax+008h]
           lea ecx, [ebp-080h]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-080h]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005E8h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-000000088h]
           fmul qword ptr [ecx+010h]
           lea edx, [ebp-078h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-080h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-078h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-078h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000005F0h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-0000005D8h]
           fstp qword ptr [ebp-0000005D0h]
           fld qword ptr [ebp-0000005E0h]
           fmul qword ptr [ebp-0000005D0h]
           fstp qword ptr [ebp-050h]
           fld qword ptr [ebp-0000005E8h]
           fmul qword ptr [ebp-0000005D0h]
           lea ecx, [ebp-048h]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-0000005F0h]
           fmul qword ptr [ebp-0000005D0h]
           lea edx, [ebp-040h]
           fstp qword ptr [edx]
;
;* Jump:
; 1002C0E9(U) 
;
l1002C249: mov eax, dword ptr [ebp-0000006C4h]
           push eax
           lea ecx, [ebp-000000354h]
           push ecx
           lea ecx, [ebp-050h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-01Ch]
           fsub dword ptr [ebp-014h]
           fstp dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-00000036Ch]
           push eax
           lea ecx, [ebp-034h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-038h]
           fld dword ptr [ebp-018h]
           fsub dword ptr [ebp-038h]
           fstp dword ptr [ebp-000000094h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           mov dword ptr [ebp-0000005F4h], ecx
           mov edx, dword ptr [ebp-0000005F4h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-0000006C8h], eax
           fild dword ptr [ebp-0000006C8h]
           fmul dword ptr [ebp-010h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000005F4h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-0000006CCh], edx
           fild dword ptr [ebp-0000006CCh]
           fmul dword ptr [ebp-010h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-0000005F4h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-0000006D0h], ecx
           fild dword ptr [ebp-0000006D0h]
           fmul dword ptr [ebp-010h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-00000037Ch]
           call l10006890
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           mov dword ptr [ebp-0000005F8h], edx
           mov eax, dword ptr [ebp-0000005F8h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-0000006D4h], ecx
           fild dword ptr [ebp-0000006D4h]
           fmul dword ptr [ebp-014h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-0000005F8h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-0000006D8h], eax
           fild dword ptr [ebp-0000006D8h]
           fmul dword ptr [ebp-014h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000005F8h]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           mov dword ptr [ebp-0000006DCh], edx
           fild dword ptr [ebp-0000006DCh]
           fmul dword ptr [ebp-014h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-000000374h]
           call l10006890
           mov eax, dword ptr [ebp-00000036Eh]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000376h]
           and ecx, 0000000FFh
           add eax, ecx
           push eax
           mov edx, dword ptr [ebp-00000036Fh]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-000000377h]
           and eax, 0000000FFh
           add edx, eax
           push edx
           mov ecx, dword ptr [ebp-000000370h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-000000378h]
           and edx, 0000000FFh
           add ecx, edx
           push ecx
           lea ecx, [ebp-000000384h]
           call l10006890
           mov eax, dword ptr [ebp-00000037Eh]
           and eax, 0000000FFh
           mov dword ptr [ebp-0000006E0h], eax
           fild dword ptr [ebp-0000006E0h]
           fdiv dword ptr [ebp-01Ch]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-00000037Fh]
           and ecx, 0000000FFh
           mov dword ptr [ebp-0000006E4h], ecx
           fild dword ptr [ebp-0000006E4h]
           fdiv dword ptr [ebp-01Ch]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-000000380h]
           and edx, 0000000FFh
           mov dword ptr [ebp-0000006E8h], edx
           fild dword ptr [ebp-0000006E8h]
           fdiv dword ptr [ebp-01Ch]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-000000090h]
           call l10006890
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000058h
           mov dword ptr [ebp-0000005FCh], eax
           mov ecx, dword ptr [ebp-0000005FCh]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           mov dword ptr [ebp-0000006ECh], edx
           fild dword ptr [ebp-0000006ECh]
           fmul dword ptr [ebp-000000094h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-0000005FCh]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [ebp-0000006F0h], ecx
           fild dword ptr [ebp-0000006F0h]
           fmul dword ptr [ebp-000000094h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-0000005FCh]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           mov dword ptr [ebp-0000006F4h], eax
           fild dword ptr [ebp-0000006F4h]
           fmul dword ptr [ebp-000000094h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-000000394h]
           call l10006890
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           mov dword ptr [ebp-000000600h], ecx
           mov edx, dword ptr [ebp-000000600h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-0000006F8h], eax
           fild dword ptr [ebp-0000006F8h]
           fmul dword ptr [ebp-038h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-000000600h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-0000006FCh], edx
           fild dword ptr [ebp-0000006FCh]
           fmul dword ptr [ebp-038h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-000000600h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-000000700h], ecx
           fild dword ptr [ebp-000000700h]
           fmul dword ptr [ebp-038h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-00000038Ch]
           call l10006890
           mov edx, dword ptr [ebp-000000386h]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-00000038Eh]
           and eax, 0000000FFh
           add edx, eax
           push edx
           mov ecx, dword ptr [ebp-000000387h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-00000038Fh]
           and edx, 0000000FFh
           add ecx, edx
           push ecx
           mov eax, dword ptr [ebp-000000388h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000390h]
           and ecx, 0000000FFh
           add eax, ecx
           push eax
           lea ecx, [ebp-00000039Ch]
           call l10006890
           mov edx, dword ptr [ebp-000000396h]
           and edx, 0000000FFh
           mov dword ptr [ebp-000000704h], edx
           fild dword ptr [ebp-000000704h]
           fdiv dword ptr [ebp-018h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-000000397h]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000708h], eax
           fild dword ptr [ebp-000000708h]
           fdiv dword ptr [ebp-018h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-000000398h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-00000070Ch], ecx
           fild dword ptr [ebp-00000070Ch]
           fdiv dword ptr [ebp-018h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-070h]
           call l10006890
           mov esi, dword ptr [ebp-0000006C4h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-034h]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           lea esi, [ebp-050h]
           rep movsd
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000048h
           call l10006BA0
           lea eax, [ebp-070h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000050h
           call l10006BA0
           lea ecx, [ebp-000000090h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000058h
           call l10006BA0
           mov esi, dword ptr [ebp-0000006C4h]
           add esi, 000000018h
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+010h]
           rep movsd
           mov edi, dword ptr [ebp+010h]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-034h]
           rep movsd
           mov esi, dword ptr [ebp-0000006C4h]
           mov edi, dword ptr [ebp+010h]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000050h
           push edx
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000048h
           call l10006BA0
           lea eax, [ebp-070h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000050h
           call l10006BA0
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           push ecx
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000058h
           call l10006BA0
           mov eax, 000000002h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002BD1A(C) 
;
l1002C6FC: fld dword ptr [ebp-00Ch]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002D089
           mov edx, dword ptr [ebp-0000006C4h]
           push edx
           lea eax, [ebp-0000000E4h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           call l10031760
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           push ecx
           lea edx, [ebp-00000010Ch]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           call l10031760
           mov dword ptr [ebp-0000000ACh], 000000000h
           mov dword ptr [ebp-0000000A8h], 000000000h
           lea eax, [ebp-0000000A4h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-00000009Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov dword ptr [ebp-0000000CCh], 000000000h
           mov dword ptr [ebp-0000000C8h], 000000000h
           lea edx, [ebp-0000000C4h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-0000000BCh]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-0000000E4h]
           call l10031913
           fstp dword ptr [ebp-000000118h]
           lea ecx, [ebp-00000010Ch]
           call l10031913
           fstp dword ptr [ebp-0000000B4h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           mov dword ptr [ebp-00000062Ch], ecx
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-000000104h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000FCh]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-000000610h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002C834
           jmp near ptr l1002C9B6
;
;* Jump:
; 1002C82D(C) 
;
l1002C834: mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-000000104h]
           mov eax, dword ptr [ebp-00000062Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-00000062Ch]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000FCh]
           mov edx, dword ptr [ebp-00000062Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-00000062Ch]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [ecx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [edx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000618h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000062Ch]
           lea edx, [ebp-0000000FCh]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000062Ch]
           lea edx, [ebp-000000104h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000062Ch]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [ecx+008h]
           lea edx, [ebp-000000104h]
           mov ecx, dword ptr [ebp-00000062Ch]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-000000104h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000620h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00000062Ch]
           fld qword ptr [ebp-00000010Ch]
           fmul qword ptr [edx+010h]
           lea eax, [ebp-0000000FCh]
           mov edx, dword ptr [ebp-00000062Ch]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00000062Ch]
           lea edx, [ebp-000000104h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-00000062Ch]
           lea edx, [ebp-0000000FCh]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000FCh]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000628h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-000000610h]
           fstp qword ptr [ebp-000000608h]
           fld qword ptr [ebp-000000618h]
           fmul qword ptr [ebp-000000608h]
           fstp qword ptr [ebp-0000000CCh]
           fld qword ptr [ebp-000000620h]
           fmul qword ptr [ebp-000000608h]
           lea edx, [ebp-0000000C4h]
           fstp qword ptr [edx]
           fld qword ptr [ebp-000000628h]
           fmul qword ptr [ebp-000000608h]
           lea eax, [ebp-0000000BCh]
           fstp qword ptr [eax]
;
;* Jump:
; 1002C82F(U) 
;
l1002C9B6: mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000DCh]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-0000000D4h]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-00000063Ch]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002C9FA
           jmp near ptr l1002CB7C
;
;* Jump:
; 1002C9F3(C) 
;
l1002C9FA: mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-0000000DCh]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [ecx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000644h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-0000000DCh]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [eax+008h]
           lea ecx, [ebp-0000000DCh]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-0000000DCh]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-00000064Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-0000000E4h]
           fmul qword ptr [ecx+010h]
           lea edx, [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-0000000DCh]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-0000000D4h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000654h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-00000063Ch]
           fstp qword ptr [ebp-000000634h]
           fld qword ptr [ebp-000000644h]
           fmul qword ptr [ebp-000000634h]
           fstp qword ptr [ebp-0000000ACh]
           fld qword ptr [ebp-00000064Ch]
           fmul qword ptr [ebp-000000634h]
           lea ecx, [ebp-0000000A4h]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-000000654h]
           fmul qword ptr [ebp-000000634h]
           lea edx, [ebp-00000009Ch]
           fstp qword ptr [edx]
;
;* Jump:
; 1002C9F5(U) 
;
l1002CB7C: mov eax, dword ptr [ebp-0000006C4h]
           push eax
           lea ecx, [ebp-0000003B4h]
           push ecx
           lea ecx, [ebp-0000000ACh]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-0000000F4h]
           fld dword ptr [ebp-000000118h]
           fsub dword ptr [ebp-0000000F4h]
           fstp dword ptr [ebp-0000000B0h]
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-0000003CCh]
           push eax
           lea ecx, [ebp-0000000CCh]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-0000000E8h]
           fld dword ptr [ebp-0000000B4h]
           fsub dword ptr [ebp-0000000E8h]
           fstp dword ptr [ebp-00000011Ch]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           mov dword ptr [ebp-000000658h], ecx
           mov edx, dword ptr [ebp-000000658h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-000000710h], eax
           fild dword ptr [ebp-000000710h]
           fmul dword ptr [ebp-0000000B0h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-000000658h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-000000714h], edx
           fild dword ptr [ebp-000000714h]
           fmul dword ptr [ebp-0000000B0h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-000000658h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-000000718h], ecx
           fild dword ptr [ebp-000000718h]
           fmul dword ptr [ebp-0000000B0h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-0000003DCh]
           call l10006890
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           mov dword ptr [ebp-00000065Ch], edx
           mov eax, dword ptr [ebp-00000065Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-00000071Ch], ecx
           fild dword ptr [ebp-00000071Ch]
           fmul dword ptr [ebp-0000000F4h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-00000065Ch]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-000000720h], eax
           fild dword ptr [ebp-000000720h]
           fmul dword ptr [ebp-0000000F4h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-00000065Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           mov dword ptr [ebp-000000724h], edx
           fild dword ptr [ebp-000000724h]
           fmul dword ptr [ebp-0000000F4h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-0000003D4h]
           call l10006890
           mov eax, dword ptr [ebp-0000003CEh]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-0000003D6h]
           and ecx, 0000000FFh
           add eax, ecx
           push eax
           mov edx, dword ptr [ebp-0000003CFh]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-0000003D7h]
           and eax, 0000000FFh
           add edx, eax
           push edx
           mov ecx, dword ptr [ebp-0000003D0h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-0000003D8h]
           and edx, 0000000FFh
           add ecx, edx
           push ecx
           lea ecx, [ebp-0000003E4h]
           call l10006890
           mov eax, dword ptr [ebp-0000003DEh]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000728h], eax
           fild dword ptr [ebp-000000728h]
           fdiv dword ptr [ebp-000000118h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000003DFh]
           and ecx, 0000000FFh
           mov dword ptr [ebp-00000072Ch], ecx
           fild dword ptr [ebp-00000072Ch]
           fdiv dword ptr [ebp-000000118h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-0000003E0h]
           and edx, 0000000FFh
           mov dword ptr [ebp-000000730h], edx
           fild dword ptr [ebp-000000730h]
           fdiv dword ptr [ebp-000000118h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-0000000F0h]
           call l10006890
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000058h
           mov dword ptr [ebp-000000660h], eax
           mov ecx, dword ptr [ebp-000000660h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           mov dword ptr [ebp-000000734h], edx
           fild dword ptr [ebp-000000734h]
           fmul dword ptr [ebp-00000011Ch]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-000000660h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [ebp-000000738h], ecx
           fild dword ptr [ebp-000000738h]
           fmul dword ptr [ebp-00000011Ch]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-000000660h]
           xor eax, eax
           mov al, byte ptr [edx+004h]
           mov dword ptr [ebp-00000073Ch], eax
           fild dword ptr [ebp-00000073Ch]
           fmul dword ptr [ebp-00000011Ch]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-0000003F4h]
           call l10006890
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           mov dword ptr [ebp-000000664h], ecx
           mov edx, dword ptr [ebp-000000664h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-000000740h], eax
           fild dword ptr [ebp-000000740h]
           fmul dword ptr [ebp-0000000E8h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-000000664h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-000000744h], edx
           fild dword ptr [ebp-000000744h]
           fmul dword ptr [ebp-0000000E8h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-000000664h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-000000748h], ecx
           fild dword ptr [ebp-000000748h]
           fmul dword ptr [ebp-0000000E8h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-0000003ECh]
           call l10006890
           mov edx, dword ptr [ebp-0000003E6h]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-0000003EEh]
           and eax, 0000000FFh
           add edx, eax
           push edx
           mov ecx, dword ptr [ebp-0000003E7h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-0000003EFh]
           and edx, 0000000FFh
           add ecx, edx
           push ecx
           mov eax, dword ptr [ebp-0000003E8h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-0000003F0h]
           and ecx, 0000000FFh
           add eax, ecx
           push eax
           lea ecx, [ebp-0000003FCh]
           call l10006890
           mov edx, dword ptr [ebp-0000003F6h]
           and edx, 0000000FFh
           mov dword ptr [ebp-00000074Ch], edx
           fild dword ptr [ebp-00000074Ch]
           fdiv dword ptr [ebp-0000000B4h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-0000003F7h]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000750h], eax
           fild dword ptr [ebp-000000750h]
           fdiv dword ptr [ebp-0000000B4h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000003F8h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-000000754h], ecx
           fild dword ptr [ebp-000000754h]
           fdiv dword ptr [ebp-0000000B4h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-000000114h]
           call l10006890
           mov esi, dword ptr [ebp-0000006C4h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-0000000ACh]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           lea esi, [ebp-0000000CCh]
           rep movsd
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000048h
           call l10006BA0
           lea eax, [ebp-0000000F0h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000050h
           call l10006BA0
           lea ecx, [ebp-000000114h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000058h
           call l10006BA0
           mov ecx, 000000006h
           lea esi, [ebp-0000000CCh]
           mov edi, dword ptr [ebp+010h]
           rep movsd
           mov esi, dword ptr [ebp-0000006C4h]
           add esi, 000000030h
           mov edi, dword ptr [ebp+010h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov esi, dword ptr [ebp-0000006C4h]
           mov edi, dword ptr [ebp+010h]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           lea edx, [ebp-000000114h]
           push edx
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000048h
           call l10006BA0
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000058h
           push eax
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000050h
           call l10006BA0
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           push ecx
           mov ecx, dword ptr [ebp+010h]
           add ecx, 000000058h
           call l10006BA0
           mov eax, 000000002h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002C70A(C) 
;
l1002D089: mov edx, dword ptr [ebp-0000006C4h]
           push edx
           lea eax, [ebp-00000015Ch]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           call l10031760
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           push ecx
           lea edx, [ebp-00000019Ch]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           call l10031760
           mov dword ptr [ebp-000000134h], 000000000h
           mov dword ptr [ebp-000000130h], 000000000h
           lea eax, [ebp-00000012Ch]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-000000124h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov dword ptr [ebp-000000174h], 000000000h
           mov dword ptr [ebp-000000170h], 000000000h
           lea edx, [ebp-00000016Ch]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-000000164h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-00000015Ch]
           call l10031913
           fstp dword ptr [ebp-000000184h]
           lea ecx, [ebp-00000019Ch]
           call l10031913
           fstp dword ptr [ebp-000000144h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           mov dword ptr [ebp-000000690h], ecx
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-000000194h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-00000018Ch]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-000000674h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002D1AA
           jmp near ptr l1002D32C
;
;* Jump:
; 1002D1A3(C) 
;
l1002D1AA: mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-000000194h]
           mov eax, dword ptr [ebp-000000690h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           mov edx, dword ptr [ebp-000000690h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-00000018Ch]
           mov edx, dword ptr [ebp-000000690h]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-000000690h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [ecx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [edx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-00000067Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000690h]
           lea edx, [ebp-00000018Ch]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-000000690h]
           lea edx, [ebp-000000194h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000690h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [ecx+008h]
           lea edx, [ebp-000000194h]
           mov ecx, dword ptr [ebp-000000690h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-000000194h]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-000000684h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-000000690h]
           fld qword ptr [ebp-00000019Ch]
           fmul qword ptr [edx+010h]
           lea eax, [ebp-00000018Ch]
           mov edx, dword ptr [ebp-000000690h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-000000690h]
           lea edx, [ebp-000000194h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov ecx, dword ptr [ebp-000000690h]
           lea edx, [ebp-00000018Ch]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-00000018Ch]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-00000068Ch]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-000000674h]
           fstp qword ptr [ebp-00000066Ch]
           fld qword ptr [ebp-00000067Ch]
           fmul qword ptr [ebp-00000066Ch]
           fstp qword ptr [ebp-000000174h]
           fld qword ptr [ebp-000000684h]
           fmul qword ptr [ebp-00000066Ch]
           lea edx, [ebp-00000016Ch]
           fstp qword ptr [edx]
           fld qword ptr [ebp-00000068Ch]
           fmul qword ptr [ebp-00000066Ch]
           lea eax, [ebp-000000164h]
           fstp qword ptr [eax]
;
;* Jump:
; 1002D1A5(U) 
;
l1002D32C: mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-000000154h]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-00000014Ch]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-0000006A0h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002D370
           jmp near ptr l1002D4F2
;
;* Jump:
; 1002D369(C) 
;
l1002D370: mov eax, dword ptr [ebp+008h]
           lea ecx, [ebp-000000154h]
           mov edx, dword ptr [ebp-0000006C4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-00000014Ch]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [ecx+01Ch]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000006A8h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-00000014Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-000000154h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [eax+008h]
           lea ecx, [ebp-000000154h]
           mov eax, dword ptr [ebp-0000006C4h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ebp-000000154h]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000006B0h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ebp-00000015Ch]
           fmul qword ptr [ecx+010h]
           lea edx, [ebp-00000014Ch]
           mov ecx, dword ptr [ebp-0000006C4h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-000000154h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp-0000006C4h]
           lea ecx, [ebp-00000014Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           lea eax, [ebp-00000014Ch]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000006B8h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-0000006A0h]
           fstp qword ptr [ebp-000000698h]
           fld qword ptr [ebp-0000006A8h]
           fmul qword ptr [ebp-000000698h]
           fstp qword ptr [ebp-000000134h]
           fld qword ptr [ebp-0000006B0h]
           fmul qword ptr [ebp-000000698h]
           lea ecx, [ebp-00000012Ch]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-0000006B8h]
           fmul qword ptr [ebp-000000698h]
           lea edx, [ebp-000000124h]
           fstp qword ptr [edx]
;
;* Jump:
; 1002D36B(U) 
;
l1002D4F2: mov eax, dword ptr [ebp-0000006C4h]
           push eax
           lea ecx, [ebp-000000414h]
           push ecx
           lea ecx, [ebp-000000134h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-000000180h]
           fld dword ptr [ebp-000000184h]
           fsub dword ptr [ebp-000000180h]
           fstp dword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-0000006C4h]
           push edx
           lea eax, [ebp-00000042Ch]
           push eax
           lea ecx, [ebp-000000174h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-00000013Ch]
           fld dword ptr [ebp-000000144h]
           fsub dword ptr [ebp-00000013Ch]
           fstp dword ptr [ebp-000000138h]
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           mov dword ptr [ebp-0000006BCh], ecx
           mov edx, dword ptr [ebp-0000006BCh]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-000000758h], eax
           fild dword ptr [ebp-000000758h]
           fmul dword ptr [ebp-000000140h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000006BCh]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-00000075Ch], edx
           fild dword ptr [ebp-00000075Ch]
           fmul dword ptr [ebp-000000140h]
           call l10041630; [BICRT._ftol].
           push eax
           mov eax, dword ptr [ebp-0000006BCh]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-000000760h], ecx
           fild dword ptr [ebp-000000760h]
           fmul dword ptr [ebp-000000140h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-00000043Ch]
           call l10006890
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000048h
           mov dword ptr [ebp-0000006C0h], edx
           mov eax, dword ptr [ebp-0000006C0h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-000000764h], ecx
           fild dword ptr [ebp-000000764h]
           fmul dword ptr [ebp-000000180h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-0000006C0h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-000000768h], eax
           fild dword ptr [ebp-000000768h]
           fmul dword ptr [ebp-000000180h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-0000006C0h]
           xor edx, edx
           mov dl, byte ptr [ecx+004h]
           mov dword ptr [ebp-00000076Ch], edx
           fild dword ptr [ebp-00000076Ch]
           fmul dword ptr [ebp-000000180h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-000000434h]
           call l10006890
           mov eax, dword ptr [ebp-00000042Eh]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-000000436h]
           and ecx, 0000000FFh
           add eax, ecx
           push eax
           mov edx, dword ptr [ebp-00000042Fh]
           and edx, 0000000FFh
           mov eax, dword ptr [ebp-000000437h]
           and eax, 0000000FFh
           add edx, eax
           push edx
           mov ecx, dword ptr [ebp-000000430h]
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-000000438h]
           and edx, 0000000FFh
           add ecx, edx
           push ecx
           lea ecx, [ebp-000000444h]
           call l10006890
           mov eax, dword ptr [ebp-00000043Eh]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000770h], eax
           fild dword ptr [ebp-000000770h]
           fdiv dword ptr [ebp-000000184h]
           call l10041630; [BICRT._ftol].
           push eax
           mov ecx, dword ptr [ebp-00000043Fh]
           and ecx, 0000000FFh
           mov dword ptr [ebp-000000774h], ecx
           fild dword ptr [ebp-000000774h]
           fdiv dword ptr [ebp-000000184h]
           call l10041630; [BICRT._ftol].
           push eax
           mov edx, dword ptr [ebp-000000440h]
           and edx, 0000000FFh
           mov dword ptr [ebp-000000778h], edx
           fild dword ptr [ebp-000000778h]
           fdiv dword ptr [ebp-000000184h]
           call l10041630; [BICRT._ftol].
           push eax
           lea ecx, [ebp-00000017Ch]
           call l10006890
           mov eax, dword ptr [ebp-000000144h]
           push eax
           lea ecx, [ebp-0000001A4h]
           push ecx
           mov edx, dword ptr [ebp-000000138h]
           push edx
           lea eax, [ebp-000000454h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           call l10006950
           push eax
           lea ecx, [ebp-00000045Ch]
           push ecx
           mov edx, dword ptr [ebp-00000013Ch]
           push edx
           lea eax, [ebp-00000044Ch]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           mov esi, dword ptr [ebp-0000006C4h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp+00Ch]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000018h
           mov ecx, 000000006h
           lea esi, [ebp-000000134h]
           rep movsd
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000030h
           mov ecx, 000000006h
           lea esi, [ebp-000000174h]
           rep movsd
           lea ecx, [ebp-0000001A4h]
           push ecx
           lea edx, [ebp-00000017Ch]
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000048h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0F0
           mov eax, 000000001h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002BD06(C) 
;
l1002D7F4: fld dword ptr [ebp-008h]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002DCA6
           fld dword ptr [ebp-00Ch]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002DA81
           mov ecx, dword ptr [ebp-0000006C4h]
           push ecx
           lea edx, [ebp-0000001E4h]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           call l10031760
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000030h
           push eax
           lea ecx, [ebp-000000224h]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           call l10031760
           lea ecx, [ebp-0000001BCh]
           call l1002DEF0
           lea ecx, [ebp-0000001FCh]
           call l1002DEF0
           lea ecx, [ebp-0000001E4h]
           call l10031913
           fstp dword ptr [ebp-00000020Ch]
           lea ecx, [ebp-000000224h]
           call l10031913
           fstp dword ptr [ebp-0000001CCh]
           lea edx, [ebp-0000001FCh]
           push edx
           lea eax, [ebp-000000224h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea edx, [ebp-0000001BCh]
           push edx
           lea eax, [ebp-0000001E4h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           mov edx, dword ptr [ebp-0000006C4h]
           push edx
           lea eax, [ebp-000000474h]
           push eax
           lea ecx, [ebp-0000001BCh]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-000000208h]
           fld dword ptr [ebp-00000020Ch]
           fsub dword ptr [ebp-000000208h]
           fstp dword ptr [ebp-0000001C8h]
           mov ecx, dword ptr [ebp-0000006C4h]
           push ecx
           lea edx, [ebp-00000048Ch]
           push edx
           lea ecx, [ebp-0000001FCh]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-0000001C4h]
           fld dword ptr [ebp-0000001CCh]
           fsub dword ptr [ebp-0000001C4h]
           fstp dword ptr [ebp-0000001C0h]
           mov eax, dword ptr [ebp-00000020Ch]
           push eax
           lea ecx, [ebp-000000204h]
           push ecx
           mov edx, dword ptr [ebp-0000001C8h]
           push edx
           lea eax, [ebp-00000049Ch]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           call l10006950
           push eax
           lea ecx, [ebp-0000004A4h]
           push ecx
           mov edx, dword ptr [ebp-000000208h]
           push edx
           lea eax, [ebp-000000494h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           mov ecx, dword ptr [ebp-0000001CCh]
           push ecx
           lea edx, [ebp-00000022Ch]
           push edx
           mov eax, dword ptr [ebp-0000001C0h]
           push eax
           lea ecx, [ebp-0000004B4h]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           call l10006950
           push eax
           lea edx, [ebp-0000004BCh]
           push edx
           mov eax, dword ptr [ebp-0000001C4h]
           push eax
           lea ecx, [ebp-0000004ACh]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000030h
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000018h
           push eax
           lea ecx, [ebp-0000001FCh]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000058h
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000050h
           push eax
           lea ecx, [ebp-00000022Ch]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0F0
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-0000001BCh]
           push eax
           lea ecx, [ebp-0000001FCh]
           push ecx
           mov ecx, dword ptr [ebp+010h]
           call l1002E0B0
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000050h
           push edx
           lea eax, [ebp-000000204h]
           push eax
           lea ecx, [ebp-00000022Ch]
           push ecx
           mov ecx, dword ptr [ebp+010h]
           call l1002E0F0
           mov eax, 000000002h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002D816(C) 
;
l1002DA81: mov edx, dword ptr [ebp-0000006C4h]
           push edx
           lea eax, [ebp-00000027Ch]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           call l10031760
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           push ecx
           lea edx, [ebp-0000002A4h]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           call l10031760
           lea ecx, [ebp-000000244h]
           call l1002DEF0
           lea ecx, [ebp-000000264h]
           call l1002DEF0
           lea ecx, [ebp-00000027Ch]
           call l10031913
           fstp dword ptr [ebp-0000002B0h]
           lea ecx, [ebp-0000002A4h]
           call l10031913
           fstp dword ptr [ebp-00000024Ch]
           lea eax, [ebp-000000244h]
           push eax
           lea ecx, [ebp-00000027Ch]
           push ecx
           mov edx, dword ptr [ebp-0000006C4h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea eax, [ebp-000000264h]
           push eax
           lea ecx, [ebp-0000002A4h]
           push ecx
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           mov eax, dword ptr [ebp-0000006C4h]
           push eax
           lea ecx, [ebp-0000004D4h]
           push ecx
           lea ecx, [ebp-000000244h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-00000028Ch]
           fld dword ptr [ebp-0000002B0h]
           fsub dword ptr [ebp-00000028Ch]
           fstp dword ptr [ebp-000000248h]
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000018h
           push edx
           lea eax, [ebp-0000004ECh]
           push eax
           lea ecx, [ebp-000000264h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-000000280h]
           fld dword ptr [ebp-00000024Ch]
           fsub dword ptr [ebp-000000280h]
           fstp dword ptr [ebp-0000002B4h]
           mov ecx, dword ptr [ebp-0000002B0h]
           push ecx
           lea edx, [ebp-000000288h]
           push edx
           mov eax, dword ptr [ebp-000000248h]
           push eax
           lea ecx, [ebp-0000004FCh]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           call l10006950
           push eax
           lea edx, [ebp-000000504h]
           push edx
           mov eax, dword ptr [ebp-00000028Ch]
           push eax
           lea ecx, [ebp-0000004F4h]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           mov edx, dword ptr [ebp-00000024Ch]
           push edx
           lea eax, [ebp-0000002ACh]
           push eax
           mov ecx, dword ptr [ebp-0000002B4h]
           push ecx
           lea edx, [ebp-000000514h]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           call l10006950
           push eax
           lea eax, [ebp-00000051Ch]
           push eax
           mov ecx, dword ptr [ebp-000000280h]
           push ecx
           lea edx, [ebp-00000050Ch]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           lea eax, [ebp-000000264h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000018h
           push ecx
           lea edx, [ebp-000000244h]
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           lea eax, [ebp-0000002ACh]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           push ecx
           lea edx, [ebp-000000288h]
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0F0
           mov eax, 000000001h
           jmp near ptr l1002DEE1
;
;* Jump:
; 1002D802(C) 
;
l1002DCA6: fld dword ptr [ebp-00Ch]
           fcomp dword ptr [g10042CF8]
           fnstsw ax
           test ah, 041h
           jne l1002DEDF
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000018h
           push eax
           lea ecx, [ebp-000000310h]
           push ecx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000030h
           call l10031760
           mov edx, dword ptr [ebp-0000006C4h]
           add edx, 000000030h
           push edx
           lea eax, [ebp-000000330h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           call l10031760
           lea ecx, [ebp-0000002F8h]
           call l1002DEF0
           lea ecx, [ebp-0000002DCh]
           call l1002DEF0
           lea ecx, [ebp-000000330h]
           call l10031913
           fstp dword ptr [ebp-0000002C4h]
           lea ecx, [ebp-000000310h]
           call l10031913
           fstp dword ptr [ebp-0000002C0h]
           lea ecx, [ebp-0000002F8h]
           push ecx
           lea edx, [ebp-000000330h]
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000030h
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           lea ecx, [ebp-0000002DCh]
           push ecx
           lea edx, [ebp-000000310h]
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1002DF30
           mov ecx, dword ptr [ebp-0000006C4h]
           push ecx
           lea edx, [ebp-000000534h]
           push edx
           lea ecx, [ebp-0000002F8h]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-0000002BCh]
           fld dword ptr [ebp-0000002C4h]
           fsub dword ptr [ebp-0000002BCh]
           fstp dword ptr [ebp-0000002B8h]
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000018h
           push eax
           lea ecx, [ebp-00000054Ch]
           push ecx
           lea ecx, [ebp-0000002DCh]
           call l10031760
           mov ecx, eax
           call l10031913
           fstp dword ptr [ebp-0000002E0h]
           fld dword ptr [ebp-0000002C0h]
           fsub dword ptr [ebp-0000002E0h]
           fstp dword ptr [ebp-00000033Ch]
           mov edx, dword ptr [ebp-0000002C4h]
           push edx
           lea eax, [ebp-000000338h]
           push eax
           mov ecx, dword ptr [ebp-0000002B8h]
           push ecx
           lea edx, [ebp-00000055Ch]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           call l10006950
           push eax
           lea eax, [ebp-000000564h]
           push eax
           mov ecx, dword ptr [ebp-0000002BCh]
           push ecx
           lea edx, [ebp-000000554h]
           push edx
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000048h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           mov eax, dword ptr [ebp-0000002C0h]
           push eax
           lea ecx, [ebp-000000318h]
           push ecx
           mov edx, dword ptr [ebp-00000033Ch]
           push edx
           lea eax, [ebp-000000574h]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000058h
           call l10006950
           push eax
           lea ecx, [ebp-00000057Ch]
           push ecx
           mov edx, dword ptr [ebp-0000002E0h]
           push edx
           lea eax, [ebp-00000056Ch]
           push eax
           mov ecx, dword ptr [ebp-0000006C4h]
           add ecx, 000000050h
           call l10006950
           mov ecx, eax
           call l100068D0
           mov ecx, eax
           call l100069E0
           lea ecx, [ebp-0000002DCh]
           push ecx
           lea edx, [ebp-0000002F8h]
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000030h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0B0
           lea ecx, [ebp-000000318h]
           push ecx
           lea edx, [ebp-000000338h]
           push edx
           mov eax, dword ptr [ebp-0000006C4h]
           add eax, 000000058h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l1002E0F0
           mov eax, 000000001h
           jmp l1002DEE1
;
;* Jump:
; 1002DCB4(C) 
;
l1002DEDF: xor eax, eax
;
;* Jump:
; 1002BE68(U), 1002C6F7(U), 1002D084(U), 1002D7EF(U), 1002DA7C(U), 
; 1002DCA1(U), 1002DEDD(U) 
;
l1002DEE1: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002B93C, 1002B947, 1002BA16, 1002BA21, 1002BAF1, 1002BAFC, 1002BBBD, 1002BBC8, 
; 1002D85A, 1002D865, 1002DAC2, 1002DACD, 1002DCFB, 1002DD06, 100348EA, 10034B35 
;
l1002DEF0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1002DEF0 ENDP
;
;* Call:
; 1002B967, 1002B984, 1002BA41, 1002BA5E, 1002BB19, 1002BB39, 1002BBE8, 1002D8A7, 
; 1002D8C4, 1002DB0C, 1002DB2C, 1002DD48, 1002DD68 
;
l1002DF30 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+004h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l1002DF7A
           xor eax, eax
           jmp near ptr l1002E09E
;
;* Jump:
; 1002DF71(C) 
;
l1002DF7A: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+010h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fmul qword ptr [eax+014h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+01Ch]
           fmul qword ptr [ecx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+010h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           fsubp st(01h), st(00h)
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+01Ch]
           fmul qword ptr [eax+008h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [edx+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fmul qword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+01Ch]
           fmul qword ptr [edx+010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+010h]
           fstp qword ptr [eax]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+010h]
           fstp qword ptr [ecx+008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-008h]
           mov edx, dword ptr [ebp+010h]
           fstp qword ptr [edx+010h]
           mov eax, 000000001h
;
;* Jump:
; 1002DF75(U) 
;
l1002E09E: mov esp, ebp
           pop ebp
           ret 0000Ch
l1002DF30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002B8CF, 1002B8EF, 1002B9A1, 1002BA81, 1002BAA1, 1002BB59, 1002BC08, 1002DA0F, 
; 1002DA52, 1002DC77, 1002DEB3 
;
l1002E0B0 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-004h]
           rep movsd
           mov esi, dword ptr [ebp+00Ch]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov esi, dword ptr [ebp+010h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1002E0B0 ENDP
;
           int 03h
           int 03h
;
;* Call:
; 1002D7E5, 1002DA32, 1002DA72, 1002DC97, 1002DED3 
;
l1002E0F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000048h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+004h]
           mov byte ptr [ecx+004h], al
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+005h]
           mov byte ptr [ecx+005h], al
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [edx+006h]
           mov byte ptr [ecx+006h], al
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000050h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov cl, byte ptr [eax+004h]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov cl, byte ptr [eax+005h]
           mov byte ptr [edx+005h], cl
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov cl, byte ptr [eax+006h]
           mov byte ptr [edx+006h], cl
           mov edx, dword ptr [ebp-010h]
           add edx, 000000058h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dl, byte ptr [ecx+004h]
           mov byte ptr [eax+004h], dl
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dl, byte ptr [ecx+005h]
           mov byte ptr [eax+005h], dl
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dl, byte ptr [ecx+006h]
           mov byte ptr [eax+006h], dl
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1002E0F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1002F16D, 1002F545, 1002F8F6, 100309C2, 10033355, 1003382D, 10033A6F, 10033B8A, 
; 10034F52, 10035002, 10035D6D, 1003812D, 1003813B, 10039EB7, 1003CD23, 1003D7D5 
;
l1002E190 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 03FF00000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], 000000000h
           mov dword ptr [ecx+024h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+028h], 000000000h
           mov dword ptr [edx+02Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+030h], 000000000h
           mov dword ptr [eax+034h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+040h], 000000000h
           mov dword ptr [edx+044h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+048h], 000000000h
           mov dword ptr [eax+04Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+050h], 000000000h
           mov dword ptr [ecx+054h], 03FF00000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1002E190 ENDP
;
;* Call:
; 10035F59, 10035F7A 
;
l1002E2AD PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+020h], 000000000h
           mov dword ptr [eax+024h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+028h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+02Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+050h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+054h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1002E2AD ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+020h], 000000000h
           mov dword ptr [eax+024h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+028h], edx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ecx+02Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+050h], eax
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [edx+054h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00018h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 03FF00000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+020h], 000000000h
           mov dword ptr [ecx+024h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+028h], 000000000h
           mov dword ptr [edx+02Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+030h], 000000000h
           mov dword ptr [eax+034h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+040h], 000000000h
           mov dword ptr [edx+044h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+048h], 000000000h
           mov dword ptr [eax+04Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+050h], 000000000h
           mov dword ptr [ecx+054h], 03FF00000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+060h], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+064h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+068h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+06Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+070h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+074h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+078h], 000000000h
           mov dword ptr [ecx+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
;* Call:
; 1003509B 
;
l1002E600 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           fld qword ptr [ebp+00Ch]
           call l1004167E; [BICRT._CIcos].
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp+00Ch]
           call l10041678; [BICRT._CIsin].
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [eax+014h]
           mov dword ptr [ebp-024h], edx
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+030h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1002E600 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           fsubr qword ptr [g100422C0]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+020h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+040h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+060h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           fsubr qword ptr [g100422C0]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+028h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+048h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+068h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           fsubr qword ptr [g100422C0]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10042D00]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+070h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax]
           fcomp qword ptr [g10042D10]
           fnstsw ax
           test ah, 041h
           jne l1002EA8F
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+018h], 000000000h
           mov dword ptr [ecx+01Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+020h], 000000000h
           mov dword ptr [edx+024h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+028h], 000000000h
           mov dword ptr [eax+02Ch], 03FF00000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+050h], 000000000h
           mov dword ptr [edx+054h], 03FF00000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+058h], 000000000h
           mov dword ptr [eax+05Ch], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+060h], 000000000h
           mov dword ptr [ecx+064h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+068h], 000000000h
           mov dword ptr [edx+06Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+070h], 000000000h
           mov dword ptr [eax+074h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+078h], 000000000h
           mov dword ptr [ecx+07Ch], 03FF00000h
           jmp near ptr l1002ECC6
;
;* Jump:
; 1002E975(C) 
;
l1002EA8F: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-010h]
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 03FF00000h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l1002EB1D
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [edx+004h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+00Ch]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 1002EAF7(C) 
;
l1002EB1D: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           fld qword ptr [ebp-010h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [g10042D08]
           fmul dword ptr [ecx]
           fmul qword ptr [ebp-010h]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+038h], 000000000h
           mov dword ptr [eax+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+050h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+058h], 000000000h
           mov dword ptr [ecx+05Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+060h], 000000000h
           mov dword ptr [edx+064h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+068h], 000000000h
           mov dword ptr [eax+06Ch], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+070h], 000000000h
           mov dword ptr [ecx+074h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+078h], 000000000h
           mov dword ptr [edx+07Ch], 03FF00000h
;
;* Jump:
; 1002EA8A(U) 
;
l1002ECC6: mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+074h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+068h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [eax+06Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [eax+064h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+060h], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+064h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+068h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+06Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+070h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+074h], eax
           mov esp, ebp
           pop ebp
           ret 00004h
;
;* Call:
; 1002EE2E, 1002EFAB 
;
l1002ED7C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l1002ED7C ENDP
;
;* Call:
; 1002EE39, 1002EFB6 
;
l1002EDB2 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l1002EDB2 ENDP
;
;* Call:
; 1002EE44, 1002EFC1 
;
l1002EDEA PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l1002EDEA ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-034h], ecx
           mov ecx, dword ptr [ebp-034h]
           call l1002ED7C
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-034h]
           call l1002EDB2
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-034h]
           call l1002EDEA
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-008h]
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-018h]
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [eax+020h]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx+028h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+028h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [eax+040h]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+048h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+050h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+020h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ecx+024h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+028h]
           mov dword ptr [eax+028h], ecx
           mov edx, dword ptr [edx+02Ch]
           mov dword ptr [eax+02Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+030h]
           mov dword ptr [ecx+030h], edx
           mov eax, dword ptr [eax+034h]
           mov dword ptr [ecx+034h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+040h]
           mov dword ptr [edx+040h], eax
           mov ecx, dword ptr [ecx+044h]
           mov dword ptr [edx+044h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+048h]
           mov dword ptr [eax+048h], ecx
           mov edx, dword ptr [edx+04Ch]
           mov dword ptr [eax+04Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+050h]
           mov dword ptr [ecx+050h], edx
           mov eax, dword ptr [eax+054h]
           mov dword ptr [ecx+054h], eax
           mov esp, ebp
           pop ebp
           ret 00004h
;
;* Call:
; 10032701, 100328AC 
;
l1002EF9F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov ecx, dword ptr [ebp-01Ch]
           call l1002ED7C
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           call l1002EDB2
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           call l1002EDEA
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax]
           fdiv qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+020h]
           fdiv qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+028h]
           fdiv qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+028h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+030h]
           fdiv qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+040h]
           fdiv qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+048h]
           fdiv qword ptr [ebp-018h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+050h]
           fdiv qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+050h]
           mov esp, ebp
           pop ebp
           ret
l1002EF9F ENDP
;
;* Call:
; 1003336C, 10035014 
;
l1002F052 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           push esi
           push edi
           mov dword ptr [ebp-054h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002F06F
;
;* Jump:
; 1002F0B9(U) 
;
l1002F066: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002F064(U) 
;
l1002F06F: cmp dword ptr [ebp-004h], 000000003h
           jnb l1002F0BB
           mov dword ptr [ebp-020h], 000000000h
           jmp l1002F087
;
;* Jump:
; 1002F0B7(U) 
;
l1002F07E: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1002F07C(U) 
;
l1002F087: cmp dword ptr [ebp-020h], 000000003h
           jnb l1002F0B9
           mov edx, dword ptr [ebp-020h]
           shl edx, 005h
           mov eax, dword ptr [ebp-054h]
           add eax, edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov esi, dword ptr [ebp+008h]
           add esi, edx
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [eax+ecx*08h]
           mov dword ptr [esi+edx*08h], edi
           mov eax, dword ptr [eax+ecx*08h+004h]
           mov dword ptr [esi+edx*08h+004h], eax
           jmp l1002F07E
;
;* Jump:
; 1002F08B(C) 
;
l1002F0B9: jmp l1002F066
;
;* Jump:
; 1002F073(C) 
;
l1002F0BB: mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+070h]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ecx+074h]
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+068h]
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ecx+06Ch]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ecx+064h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-018h], edx
           lea eax, [ebp-014h]
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [eax+004h], edx
           lea eax, [ebp-00Ch]
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-01Ch]
           push ecx
           lea edx, [ebp-038h]
           push edx
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-01Ch]
           rep movsd
           fld qword ptr [ebp-01Ch]
           fchs
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+060h]
           fld qword ptr [ebp-014h]
           fchs
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+068h]
           fld qword ptr [ebp-00Ch]
           fchs
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+070h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F052 ENDP
;
;* Call:
; 10034206 
;
l1002F159 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000D4h
           push esi
           push edi
           mov dword ptr [ebp-0000000D4h], ecx
           lea ecx, [ebp-080h]
           call l1002E190
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+028h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+048h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+028h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+050h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+048h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000000A0h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+028h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+030h]
           fmul qword ptr [eax+048h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-080h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+020h]
           fmul qword ptr [edx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+040h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-060h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-078h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+040h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-058h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax]
           fmul qword ptr [edx+048h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-038h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+028h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-070h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+030h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+020h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax]
           fmul qword ptr [edx+028h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+020h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-0000000D0h], ecx
           mov edx, dword ptr [eax+074h]
           mov dword ptr [ebp-0000000CCh], edx
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+068h]
           mov dword ptr [ebp-0000000C8h], ecx
           mov edx, dword ptr [eax+06Ch]
           mov dword ptr [ebp-0000000C4h], edx
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-0000000C0h], ecx
           mov edx, dword ptr [eax+064h]
           mov dword ptr [ebp-0000000BCh], edx
           mov eax, dword ptr [ebp-0000000C0h]
           mov dword ptr [ebp-000000098h], eax
           mov ecx, dword ptr [ebp-0000000BCh]
           mov dword ptr [ebp-000000094h], ecx
           lea edx, [ebp-000000090h]
           mov eax, dword ptr [ebp-0000000C8h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-0000000C4h]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-000000088h]
           mov eax, dword ptr [ebp-0000000D0h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-0000000CCh]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-080h]
           push edx
           lea eax, [ebp-000000098h]
           push eax
           lea ecx, [ebp-0000000B8h]
           push ecx
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-000000098h]
           rep movsd
           fld qword ptr [ebp-000000098h]
           fchs
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp-000000090h]
           fchs
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp-000000088h]
           fchs
           fstp qword ptr [ebp-010h]
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F159 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002F4D6
;
;* Jump:
; 1002F52B(U) 
;
l1002F4CD: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002F4CB(U) 
;
l1002F4D6: cmp dword ptr [ebp-004h], 000000004h
           jnl l1002F52D
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002F4EE
;
;* Jump:
; 1002F529(U) 
;
l1002F4E5: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1002F4E3(U) 
;
l1002F4EE: cmp dword ptr [ebp-008h], 000000004h
           jnl l1002F52B
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov eax, dword ptr [ebp+008h]
           add eax, edx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov esi, dword ptr [ebp+00Ch]
           add esi, edx
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [eax+ecx*08h]
           fsub qword ptr [esi+edx*08h]
           fabs
           fcomp qword ptr [g10042D18]
           fnstsw ax
           test ah, 041h
           jne l1002F529
           xor eax, eax
           jmp l1002F532
;
;* Jump:
; 1002F523(C) 
;
l1002F529: jmp l1002F4E5
;
;* Jump:
; 1002F4F2(C) 
;
l1002F52B: jmp l1002F4CD
;
;* Jump:
; 1002F4DA(C) 
;
l1002F52D: mov eax, 000000001h
;
;* Jump:
; 1002F527(U) 
;
l1002F532: pop esi
           mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 10032ED0, 100339B6, 1003502E, 100350B5 
;
l1002F537 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000080h
           push esi
           push edi
           lea ecx, [ebp-080h]
           call l1002E190
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-080h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+018h]
           fmul qword ptr [eax+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-078h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [edx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-070h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-068h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+020h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+040h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+038h]
           fmul qword ptr [eax+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+020h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+028h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+030h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+038h]
           fmul qword ptr [edx+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax+018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+038h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+058h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+038h]
           fmul qword ptr [eax+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-048h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+040h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+048h]
           fmul qword ptr [ecx+020h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+050h]
           fmul qword ptr [eax+040h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+058h]
           fmul qword ptr [edx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-038h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+040h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+048h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+050h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+058h]
           fmul qword ptr [eax+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+040h]
           fmul qword ptr [edx+018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+048h]
           fmul qword ptr [ecx+038h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+050h]
           fmul qword ptr [eax+058h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+058h]
           fmul qword ptr [edx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-028h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+060h]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+068h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+070h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+078h]
           fmul qword ptr [eax+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+060h]
           fmul qword ptr [edx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+068h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+070h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+078h]
           fmul qword ptr [edx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1002F537 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000080h
           push esi
           push edi
           lea ecx, [ebp-080h]
           call l1002E190
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-080h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-078h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-070h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-068h], ecx
           mov edx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-060h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+038h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-038h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+058h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [eax+05Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [eax+064h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+068h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+06Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [eax+074h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [eax+07Ch]
           mov dword ptr [ebp-004h], edx
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+020h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+028h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+038h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+048h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+060h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+068h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+070h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+078h]
           pop ebp
           ret
;
;* Call:
; 1003313E, 10033C9F, 10036805, 10039483 
;
l1002FEB3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           fadd qword ptr [eax+070h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           fadd qword ptr [ecx+068h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+020h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+040h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+010h]
           fadd qword ptr [edx+060h]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1002FEB3 ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           fadd qword ptr [eax+060h]
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+010h]
           fadd qword ptr [edx+068h]
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           fadd qword ptr [ecx+070h]
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           pop ebp
           ret
;
;* Call:
; 1002F11C, 1002F46D, 10033422, 10035166, 10036846, 10036887, 100394C1, 10039502 
;
l100300A1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l100300A1 ENDP
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+004h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+004h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+004h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+00Ch]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+014h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+014h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+004h]
           fmul qword ptr [edx+060h]
           fsubr qword ptr [eax+01Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx+068h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax+070h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+01Ch]
           pop ebp
           ret
;
;* Call:
; 100325AA, 10032895, 10039337, 10039340 
;
l10030219 PROC
           push ebp
           mov ebp, esp
           push 000000080h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10030219 ENDP
;
;* Call:
; 10032770, 100328DA, 1003892E, 10038937 
;
l10030232 PROC
           push ebp
           mov ebp, esp
           push 000000080h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10030232 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           fld qword ptr [ebp+00Ch]
           fdiv qword ptr [g10042CD8]
           call l10041678; [BICRT._CIsin].
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp+00Ch]
           fdiv qword ptr [g10042CD8]
           call l1004167E; [BICRT._CIcos].
           fst qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [edx+010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 00000007Ch
           mov dword ptr [ebp-064h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx]
           fadd qword ptr [eax+028h]
           mov edx, dword ptr [ebp+008h]
           fadd qword ptr [edx+050h]
           fsub qword ptr [g100422C0]
           fdiv qword ptr [g10042CD8]
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042D30]
           fnstsw ax
           test ah, 041h
           jne l10030315
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax], 03F800000h
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-064h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax+00Ch], 000000000h
           jmp near ptr l1003067B
;
;* Jump:
; 100302E7(C) 
;
l10030315: fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042D28]
           fnstsw ax
           test ah, 001h
           je l1003054F
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 03FF00000h
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx]
           fadd qword ptr [g100422C0]
           fdiv qword ptr [g10042CD8]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1003036B
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx]
           fadd qword ptr [g100422C0]
           fdiv qword ptr [g10042CD8]
           fstp qword ptr [ebp-06Ch]
           jmp l10030379
;
;* Jump:
; 10030353(C) 
;
l1003036B: mov dword ptr [ebp-06Ch], 000000000h
           mov dword ptr [ebp-068h], 000000000h
;
;* Jump:
; 10030369(U) 
;
l10030379: fld qword ptr [ebp-06Ch]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax+050h]
           fadd qword ptr [g100422C0]
           fdiv qword ptr [g10042CD8]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l100303BA
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+050h]
           fadd qword ptr [g100422C0]
           fdiv qword ptr [g10042CD8]
           fstp qword ptr [ebp-074h]
           jmp l100303C8
;
;* Jump:
; 100303A1(C) 
;
l100303BA: mov dword ptr [ebp-074h], 000000000h
           mov dword ptr [ebp-070h], 000000000h
;
;* Jump:
; 100303B8(U) 
;
l100303C8: fld qword ptr [ebp-074h]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-028h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fadd qword ptr [edx+028h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l1003040D
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fadd qword ptr [eax+028h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-07Ch]
           jmp l1003041B
;
;* Jump:
; 100303F2(C) 
;
l1003040D: mov dword ptr [ebp-07Ch], 000000000h
           mov dword ptr [ebp-078h], 000000000h
;
;* Jump:
; 1003040B(U) 
;
l1003041B: fld qword ptr [ebp-07Ch]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l10030482
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+040h]
           fadd qword ptr [edx+010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           je l1003045B
           fld qword ptr [ebp-028h]
           fmul qword ptr [g10042D20]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 1003044D(C) 
;
l1003045B: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fadd qword ptr [ecx+020h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           je l10030480
           fld qword ptr [ebp-020h]
           fmul qword ptr [g10042D20]
           fstp qword ptr [ebp-020h]
;
;* Jump:
; 10030472(C) 
;
l10030480: jmp l100304A7
;
;* Jump:
; 10030434(C) 
;
l10030482: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+030h]
           fadd qword ptr [eax+048h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           je l100304A7
           fld qword ptr [ebp-028h]
           fmul qword ptr [g10042D20]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 10030480(U), 10030499(C) 
;
l100304A7: mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ecx], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+004h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx]
           fdiv qword ptr [ebp-030h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax+004h]
           fdiv qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [edx+008h]
           fdiv qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx+00Ch]
           fdiv qword ptr [ebp-030h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+00Ch]
           jmp near ptr l1003067B
;
;* Jump:
; 10030323(C) 
;
l1003054F: fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fdiv qword ptr [g10042CD8]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-038h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ebp-008h]
           fsubr qword ptr [g100422C0]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+030h]
           fsub qword ptr [ecx+048h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-048h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+040h]
           fsub qword ptr [eax+010h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+008h]
           fsub qword ptr [edx+020h]
           fld qword ptr [g10042CD8]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           fld qword ptr [g100422C0]
           fadd qword ptr [ebp-008h]
           fdiv qword ptr [g10042CD8]
           call l10041684; [BICRT._CIsqrt].
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax]
           fld qword ptr [ebp-048h]
           fmul qword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+004h]
           fld qword ptr [ebp-050h]
           fmul qword ptr [ebp-038h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+008h]
           fld qword ptr [ebp-058h]
           fmul qword ptr [ebp-038h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [eax+004h]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx+008h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx+00Ch]
           fmul dword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-060h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax]
           fdiv qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [edx+004h]
           fdiv qword ptr [ebp-060h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx+008h]
           fdiv qword ptr [ebp-060h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax+00Ch]
           fdiv qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+00Ch]
;
;* Jump:
; 10030310(U), 1003054A(U) 
;
l1003067B: mov eax, dword ptr [ebp-064h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-004h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l10030736
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+00Ch]
;
;* Jump:
; 100306FA(C) 
;
l10030736: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00010h
;
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           fld dword ptr [g10042D38]
           fsub dword ptr [ebp+010h]
           fstp dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fsub dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx]
           fsub dword ptr [eax]
           fmulp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fsub dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+004h]
           fsub dword ptr [ecx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fsub dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fsub dword ptr [edx+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fsub dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+00Ch]
           fsub dword ptr [eax+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx]
           fadd dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fadd dword ptr [ecx]
           fmulp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fadd dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fadd dword ptr [edx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+008h]
           fadd dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fadd dword ptr [eax+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+00Ch]
           fadd dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fadd dword ptr [ecx+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-008h]
           fcomp dword ptr [ebp-004h]
           fnstsw ax
           test ah, 041h
           je l100308A2
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+00Ch]
           jmp l10030907
;
;* Jump:
; 10030839(C) 
;
l100308A2: mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+004h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+008h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+00Ch]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+00Ch]
;
;* Jump:
; 100308A0(U) 
;
l10030907: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l1003098D
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+00Ch]
;
;* Jump:
; 10030951(C) 
;
l1003098D: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 0000000ACh
           push esi
           push edi
           mov dword ptr [ebp-0000000ACh], ecx
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax]
           fcomp qword ptr [g10042D10]
           fnstsw ax
           test ah, 041h
           jne l100309D8
           lea ecx, [ebp-0000000A8h]
           call l1002E190
           mov esi, eax
           mov ecx, 000000020h
           mov edi, dword ptr [ebp+008h]
           rep movsd
           jmp near ptr l10030C33
;
;* Jump:
; 100309BA(C) 
;
l100309D8: mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp-0000000ACh]
           mov ecx, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-0000000ACh]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-010h]
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 03FF00000h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l10030A81
           mov ecx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx+004h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [edx+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax+00Ch]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 10030A52(C) 
;
l10030A81: mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx]
           fmul dword ptr [edx]
           fld qword ptr [ebp-010h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [g10042D08]
           fmul dword ptr [eax]
           fmul qword ptr [ebp-010h]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], 000000000h
           mov dword ptr [ecx+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+030h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+058h], 000000000h
           mov dword ptr [eax+05Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+060h], 000000000h
           mov dword ptr [ecx+064h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+068h], 000000000h
           mov dword ptr [edx+06Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+070h], 000000000h
           mov dword ptr [eax+074h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+078h], 000000000h
           mov dword ptr [ecx+07Ch], 03FF00000h
;
;* Jump:
; 100309D3(U) 
;
l10030C33: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax]
           fchs
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+004h]
           fchs
           fstp dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+008h]
           fchs
           fstp dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+00Ch]
           fchs
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], eax
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax]
           fsub dword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx]
           fsub dword ptr [eax]
           fmulp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+004h]
           fsub dword ptr [edx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+004h]
           fsub dword ptr [ecx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+008h]
           fsub dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+008h]
           fsub dword ptr [edx+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+00Ch]
           fsub dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+00Ch]
           fsub dword ptr [eax+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           fld dword ptr [g10042D38]
           fsub dword ptr [ebp+00Ch]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fdivr qword ptr [g100422C0]
           fstp dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+00Ch]
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+00Ch]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+004h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           fld dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-024h]
           fld dword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-024h]
           fld dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+008h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-024h]
           fdiv dword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           fld dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp-024h]
           fld dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-024h]
           fld dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-024h]
           fdiv dword ptr [ecx]
           fmulp st(01h), st(00h)
           fadd qword ptr [g100422C0]
           fdivr qword ptr [g100422C0]
           fstp qword ptr [ebp-010h]
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp-010h]
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-010h]
           call l10041684; [BICRT._CIsqrt].
           fst qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-024h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-024h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-024h]
           fstp dword ptr [edx+00Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+004h]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+008h]
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+00Ch]
           fchs
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+00Ch]
           mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+010h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+020h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042D3C
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l100315C2
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042D3C
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l1003184F
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+01Ch]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10031882
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx], offset g10042D3C
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call l100315C2
           mov esi, eax
           mov edi, dword ptr [ebp-01Ch]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1003184F
           fchs
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+010h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+020h], edx
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l100315C2
           mov esi, eax
           mov edi, dword ptr [ebp-01Ch]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l1003184F
           fchs
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
;
;* Call:
; 10034C48, 1003701D 
;
l10031284 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           push edi
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           lea ecx, [ebp-018h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10031882
           mov esi, eax
           mov edi, dword ptr [ebp-034h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000004h
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-030h]
           push edx
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000004h
           call l100315C2
           mov esi, eax
           mov edi, dword ptr [ebp-034h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-034h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1003184F
           fchs
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10031284 ENDP
;
;* Call:
; 10034563 
;
l100312FC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000004h
           call l1003184F
           fcomp qword ptr [g10042D10]
           fnstsw ax
           test ah, 041h
           jne l10031348
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+01Ch]
           fsub qword ptr [edx+01Ch]
           fabs
           fcomp qword ptr [g10042CE8]
           fnstsw ax
           test ah, 001h
           je l10031348
           mov dword ptr [ebp-008h], 000000001h
           jmp l1003134F
;
;* Jump:
; 10031322(C), 1003133D(C) 
;
l10031348: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031346(U) 
;
l1003134F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100312FC ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l1003184F
           fsubr qword ptr [esi+01Ch]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+01Ch]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l1003184F
           fchs
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+01Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10001C1B
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E83
           add esp, 000000008h
           push eax
           call l1000204A
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042D3C
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10031426
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10031418(C) 
;
l10031426: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           int 03h
l10031430 PROC
           push ebp
           mov ebp, esp
           call l1003143A
           pop ebp
           ret
l10031430 ENDP
;
;* Call:
; 10031433 
;
l1003143A PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A960], 000000000h
           mov dword ptr [g1004A964], 03FF00000h
           mov eax, offset g1004A968
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, offset g1004A970
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           pop ebp
           ret
l1003143A ENDP
;
l10031477 PROC
           push ebp
           mov ebp, esp
           call l10031481
           pop ebp
           ret
l10031477 ENDP
;
;* Call:
; 1003147A 
;
l10031481 PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A948], 000000000h
           mov dword ptr [g1004A94C], 000000000h
           mov eax, offset g1004A950
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 03FF00000h
           mov ecx, offset g1004A958
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           pop ebp
           ret
l10031481 ENDP
;
l100314BE PROC
           push ebp
           mov ebp, esp
           call l100314C8
           pop ebp
           ret
l100314BE ENDP
;
;* Call:
; 100314C1 
;
l100314C8 PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A978], 000000000h
           mov dword ptr [g1004A97C], 000000000h
           mov eax, offset g1004A980
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, offset g1004A988
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           pop ebp
           ret
l100314C8 ENDP
;
;* Call:
; 1002A799, 1002A7B9, 100367F5, 10036836, 10036877, 10039476, 100394B1, 100394F2 
;
l10031505 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [ecx+008h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10031505 ENDP
;
;* Call:
; 1002A8D0, 1002A954, 1002AA77, 1002AAFB, 10033F95 
;
l10031561 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [ecx+008h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10031561 ENDP
;
;* Call:
; 1003115B, 100311CB, 10031251, 100312C9 
;
l100315C2 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+010h]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+008h]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100315C2 ENDP
;
;* Call:
; 10033EB6, 10035F9E 
;
l10031623 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10031623 ENDP
;
;* Call:
; 1002A77E, 1003328C, 1003350F, 10034240, 1003511D 
;
l1003165E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fdiv qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003165E ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+010h]
           fchs
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+008h]
           fchs
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx]
           fchs
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
;* Call:
; 1002A7D0, 1002A8E3, 1002A967, 1002AA8A, 1002AB0E 
;
l100316F7 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+010h]
           fadd qword ptr [ecx+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fadd qword ptr [eax+008h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fadd qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100316F7 ENDP
;
;* Call:
; 1002A6C8, 1002A7C9, 1002A8C9, 1002A94D, 1002AA70, 1002AAF4, 1002B064, 1002B07D, 
; 1002B496, 1002B4B5, 1002B915, 1002B931, 1002B9EF, 1002BA0B, 1002BAC7, 1002BAE6, 
; 1002BB96, 1002BBB2, 1002BE84, 1002BEA0, 1002C25A, 1002C286, 1002C727, 1002C746, 
; 1002CB90, 1002CBCB, 1002D0A0, 1002D0BC, 1002D506, 1002D53E, 1002D833, 1002D84F, 
; 1002D8DD, 1002D915, 1002DA98, 1002DAB7, 1002DB45, 1002DB80, 1002DCD4, 1002DCF0, 
; 1002DD81, 1002DDBC, 1003322D, 10033263, 10033DA8, 10033DDE, 100345FA, 10034C2A, 
; 10034C3B, 1003557D, 10035598, 100357B5, 100357D0, 10036FF4, 10037005, 100374A8, 
; 100374C3, 100377CD, 100377EE, 1003780F, 10037830 
;
l10031760 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+010h]
           fsub qword ptr [ecx+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fsub qword ptr [eax+008h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fsub qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10031760 ENDP
;
;* Call:
; 100332B7, 100332E3, 1003330F, 10033FA7 
;
l100317C9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fadd qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fadd qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+010h]
           fadd qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100317C9 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fsub qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fsub qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
;* Call:
; 1002A85D, 1002A872, 10031173, 100311E9, 1003126F, 100312E7, 10031312, 1003136D, 
; 10031393, 1003783E 
;
l1003184F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov esp, ebp
           pop ebp
           ret 00004h
l1003184F ENDP
;
;* Call:
; 100311A2, 1003129A, 1003326A, 10033DE5, 1003559F, 100357D7, 100374CA, 100377F5, 
; 10037837 
;
l10031882 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10031882 ENDP
;
;* Call:
; 1002A6D0, 1002BF07, 1002BF12, 1002C261, 1002C28D, 1002C7C5, 1002C7D6, 1002CB97, 
; 1002CBD2, 1002D13B, 1002D14C, 1002D50D, 1002D545, 1002D870, 1002D881, 1002D8E4, 
; 1002D91C, 1002DAD8, 1002DAE9, 1002DB4C, 1002DB87, 1002DD11, 1002DD22, 1002DD88, 
; 1002DDC3, 10031146, 100311B6, 1003123F, 100312B4, 10031955, 1003327E, 10033473, 
; 100334FB, 10033DF9, 10034601, 1003510C, 100374D1 
;
l10031913 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l10031913 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10031913
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           jne l10031998
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [eax]
           fdiv qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+010h]
;
;* Jump:
; 1003196B(C) 
;
l10031998: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fcomp qword ptr [ecx]
           fnstsw ax
           test ah, 040h
           je l100319E5
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fcomp qword ptr [eax+008h]
           fnstsw ax
           test ah, 040h
           je l100319E5
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fcomp qword ptr [edx+010h]
           fnstsw ax
           test ah, 040h
           je l100319E5
           mov dword ptr [ebp-008h], 000000001h
           jmp l100319EC
;
;* Jump:
; 100319B4(C), 100319C7(C), 100319DA(C) 
;
l100319E5: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100319E3(U) 
;
l100319EC: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 041h
           jne l10031A5C
           mov dword ptr [ebp-008h], 000000001h
           jmp l10031A63
;
;* Jump:
; 10031A51(C) 
;
l10031A5C: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031A5A(U) 
;
l10031A63: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 001h
           jne l10031AD3
           mov dword ptr [ebp-008h], 000000001h
           jmp l10031ADA
;
;* Jump:
; 10031AC8(C) 
;
l10031AD3: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031AD1(U) 
;
l10031ADA: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 001h
           je l10031B4A
           mov dword ptr [ebp-008h], 000000001h
           jmp l10031B51
;
;* Jump:
; 10031B3F(C) 
;
l10031B4A: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031B48(U) 
;
l10031B51: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 041h
           je l10031BC1
           mov dword ptr [ebp-008h], 000000001h
           jmp l10031BC8
;
;* Jump:
; 10031BB6(C) 
;
l10031BC1: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031BBF(U) 
;
l10031BC8: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           fld qword ptr [ebp+008h]
           call l10041678; [BICRT._CIsin].
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           fld qword ptr [ebp+008h]
           call l1004167E; [BICRT._CIcos].
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov esp, ebp
           pop ebp
           ret 00008h
;
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           jne l10031CA9
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l10031C64
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l10031C59
           fld qword ptr [g10042CF0]
           jmp near ptr l10031CEC
;
;* Jump:
; 10031C4C(C) 
;
l10031C59: fld qword ptr [g10042D50]
           jmp near ptr l10031CEC
;
;* Jump:
; 10031C39(C) 
;
l10031C64: mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           jne l10031C8F
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [edx]
           call l1004168A; [BICRT._CIatan].
           fadd qword ptr [g10042D48]
           jmp l10031CEC
;
;* Jump:
; 10031C75(C) 
;
l10031C8F: mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fdiv qword ptr [ecx+010h]
           call l1004168A; [BICRT._CIatan].
           fadd qword ptr [g10042D50]
           jmp l10031CEC
;
;* Jump:
; 10031C23(C) 
;
l10031CA9: mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           jne l10031CD6
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+010h]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fdiv qword ptr [ecx]
           call l1004168A; [BICRT._CIatan].
           fsubr qword ptr [g10042D40]
           jmp l10031CEC
;
;* Jump:
; 10031CBA(C) 
;
l10031CD6: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fdiv qword ptr [eax]
           call l1004168A; [BICRT._CIatan].
           fadd qword ptr [g10042D40]
;
;* Jump:
; 10031C54(U), 10031C5F(U), 10031C8D(U), 10031CA7(U), 10031CD4(U) 
;
l10031CEC: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           call l10041684; [BICRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+008h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l10031D34
           fld qword ptr [g10042CF0]
           jmp l10031D73
;
;* Jump:
; 10031D2A(C) 
;
l10031D34: mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+008h]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 041h
           jne l10031D5D
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-008h]
           fdiv qword ptr [eax+008h]
           call l1004168A; [BICRT._CIatan].
           fsub qword ptr [g10042D40]
           jmp l10031D73
;
;* Jump:
; 10031D45(C) 
;
l10031D5D: fld qword ptr [ebp-008h]
           fchs
           mov ecx, dword ptr [ebp-00Ch]
           fdiv qword ptr [ecx+008h]
           call l1004168A; [BICRT._CIatan].
           fsubr qword ptr [g10042D40]
;
;* Jump:
; 10031D32(U), 10031D5B(U) 
;
l10031D73: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           je l10031DA4
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10031DF9
;
;* Jump:
; 10031D90(C) 
;
l10031DA4: mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           je l10031DCA
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10031DF9
;
;* Jump:
; 10031DB5(C) 
;
l10031DCA: mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           je l10031DF0
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10031DF9
;
;* Jump:
; 10031DDB(C) 
;
l10031DF0: mov dword ptr [ebp-008h], 000000001h
           jmp l10031E00
;
;* Jump:
; 10031DA2(C), 10031DC8(C), 10031DEE(C) 
;
l10031DF9: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10031DF7(U) 
;
l10031E00: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           fld qword ptr [g100422C0]
           fsub qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+010h]
           mov esp, ebp
           pop ebp
           ret 00010h
;
;* Call:
; 1002A804, 100313BB, 10031F5A, 100321B2, 100321BB, 10032813, 10032926, 1003292F, 
; 10032938, 100329CF, 100329D8, 10032A5F, 10032A68, 10039352 
;
l10031E6D PROC
           push ebp
           mov ebp, esp
           push 000000018h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10031E6D ENDP
;
;* Call:
; 1002A82C, 100313E6, 10031F32, 100321DA, 100321E3, 1003285B, 1003297E, 10032987, 
; 10032990, 10032A17, 10032A20, 10032AA7, 10032AB0, 10038949 
;
l10031E83 PROC
           push ebp
           mov ebp, esp
           push 000000018h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10031E83 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10032136 
;
l10031EA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10031EA0 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov esi, dword ptr [ebp+00Ch]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
;
;* Call:
; 10031FD2 
;
l10031F20 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E83
           add esp, 000000008h
           push eax
           call l10001FDC
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10031F20 ENDP
;
;* Call:
; 10032167 
;
l10031F48 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10001BAD
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax+014h]
           fadd qword ptr [g10042D60]
           mov ecx, dword ptr [ebp+00Ch]
           fstp qword ptr [ecx+014h]
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10031F48 ENDP
;
;* Call:
; 10036B94, 10038842 
;
l10031F82 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           jmp l10031FB6
;
;* Jump:
; 10031FDA(U) 
;
l10031FAD: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10031FAB(U) 
;
l10031FB6: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10031FDC
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10031F20
           add esp, 000000008h
           jmp l10031FAD
;
;* Jump:
; 10031FBF(C) 
;
l10031FDC: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001FDC
           add esp, 000000008h
           push eax
           call l10001FDC
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10031F82 ENDP
;
;* Call:
; 10036113, 1003CBB6 
;
l10032003 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l100320A0
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003202A
           jmp l100320A0
;
;* Jump:
; 10032026(C) 
;
l1003202A: mov eax, 000000001h
           test eax, eax
           je l1003206D
           mov dword ptr [ebp-010h], 000000000h
           jmp l10032045
;
;* Jump:
; 1003206B(U) 
;
l1003203C: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1003203A(U) 
;
l10032045: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003206D
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003203C
;
;* Jump:
; 10032031(C), 1003204E(C) 
;
l1003206D: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10032019(C), 10032028(U) 
;
l100320A0: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l10032171
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l10032115
;
;* Jump:
; 1003216F(U) 
;
l1003210C: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003210A(U) 
;
l10032115: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l10032171
           push 00000001Ch
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10032140
           mov ecx, dword ptr [ebp-00Ch]
           call l10031EA0
           mov dword ptr [ebp-020h], eax
           jmp l10032147
;
;* Jump:
; 10032131(C) 
;
l10032140: mov dword ptr [ebp-020h], 000000000h
;
;* Jump:
; 1003213E(U) 
;
l10032147: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10031F48
           add esp, 000000008h
           jmp l1003210C
;
;* Jump:
; 100320DF(C), 1003211E(C) 
;
l10032171: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BAD
           add esp, 000000008h
           push eax
           call l10001BAD
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10032003 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10035AAD, 10038CC2 
;
l100321A0 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100321A0 ENDP
;
;* Call:
; 10036A7B, 10038597 
;
l100321C8 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10031E83
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100321C8 ENDP
;
;* Call:
; 100346C0, 10034793, 1003D6C8 
;
;* Export: ??0B_MeshEdge@@QAE@XZ, 0014
;
l100321F0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l100321F0 ENDP
;
;* Call:
; 100344F1 
;
;* Export: ??0B_MeshEdge@@QAE@III@Z, 0013
;
l1003221C PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp+008h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l10032247
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], ecx
           jmp l1003224D
;
;* Jump:
; 1003223D(C) 
;
l10032247: mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10032245(U) 
;
l1003224D: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ebp+00Ch]
           jbe l10032266
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-00Ch], eax
           jmp l1003226C
;
;* Jump:
; 1003225C(C) 
;
l10032266: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10032264(U) 
;
l1003226C: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], eax
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1003221C ENDP
;
;* Call:
; 10034535 
;
;* Export: ??8B_MeshEdge@@QBEIABV0@@Z, 0074
;
l1003227E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+004h]
           cmp edx, dword ptr [ecx+004h]
           jne l100322AC
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+008h]
           cmp edx, dword ptr [ecx+008h]
           jne l100322AC
           mov dword ptr [ebp-008h], 000000001h
           jmp l100322B3
;
;* Jump:
; 10032293(C), 100322A1(C) 
;
l100322AC: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100322AA(U) 
;
l100322B3: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003227E ENDP
;
;* Call:
; 1003D720 
;
l100322BC PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000014h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001C1B
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100322BC ENDP
;
;* Call:
; 10038795 
;
l10032314 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000014h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000204A
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032314 ENDP
;
;* Call:
; 10035BED, 10038DB7 
;
l1003236C PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000034h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10040D58
           add esp, 000000008h
           push eax
           call l10001BD9
           add esp, 000000008h
           cmp dword ptr [g100488B4], 000000001h
           jbe l100323FD
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000014h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           jmp l1003241B
;
;* Jump:
; 100323C6(C) 
;
l100323FD: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 100323FB(U) 
;
l1003241B: mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1003236C ENDP
;
;* Call:
; 10036AD1, 100385ED 
;
l10032420 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000034h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l10040E61
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           cmp dword ptr [g100488B4], 000000001h
           jbe l100324AF
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000014h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
;
;* Jump:
; 1003247A(C) 
;
l100324AF: mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032420 ENDP
;
;* Call:
; 100326F1 
;
l100324B4 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000024h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000020h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1002A7F2
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100324B4 ENDP
;
;* Call:
; 100327D0 
;
l100324EC PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000024h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000020h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1002A81A
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100324EC ENDP
;
;* Call:
; 10035DC9, 10038F01 
;
l10032524 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           fld dword ptr [g100488B8]
           fcomp qword ptr [g10042CD8]
           fnstsw ax
           test ah, 040h
           je l1003254F
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A40
           add esp, 000000008h
           jmp l10032570
;
;* Jump:
; 1003253B(C) 
;
l1003254F: push offset g1004A9C8
           lea ecx, [ebp-008h]
           call l10003337
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-008h]
           call l100039BA
;
;* Jump:
; 1003254D(U) 
;
l10032570: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000090h
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 0000000A8h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 0000000A4h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000010h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BAD
           add esp, 000000008h
           push eax
           call l10030219
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           mov dword ptr [ebp-028h], eax
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003260E
           mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+010h], 000000000h
           jne l100325DB
           jmp l1003260E
;
;* Jump:
; 100325D7(C) 
;
l100325DB: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 100325CE(C), 100325D9(U) 
;
l1003260E: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp-02Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-02Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100326FB
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           imul edx, edx, 000000028h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l100326B1
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-020h], 000000028h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 100326A7(U) 
;
l10032687: mov edx, dword ptr [ebp-024h]
           sub edx, 000000001h
           mov dword ptr [ebp-024h], edx
           cmp dword ptr [ebp-024h], 000000000h
           jl l100326A9
           mov ecx, dword ptr [ebp-01Ch]
           call l1002A5F0
           mov eax, dword ptr [ebp-01Ch]
           add eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           jmp l10032687
;
;* Jump:
; 10032694(C) 
;
l100326A9: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-030h], ecx
           jmp l100326B8
;
;* Jump:
; 10032672(C) 
;
l100326B1: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 100326AF(U) 
;
l100326B8: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l100326D3
;
;* Jump:
; 100326F9(U) 
;
l100326CA: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100326C8(U) 
;
l100326D3: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+008h]
           jnb l100326FB
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 000000028h
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call l100324B4
           add esp, 000000008h
           jmp l100326CA
;
;* Jump:
; 1003264D(C), 100326DC(C) 
;
l100326FB: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           call l1002EF9F
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10032524 ENDP
;
;* Call:
; 10036B25, 10038641 
;
l1003270D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           fld dword ptr [g100488B8]
           fcomp qword ptr [g10042CD8]
           fnstsw ax
           test ah, 040h
           je l10032736
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A58
           add esp, 000000008h
;
;* Jump:
; 10032724(C) 
;
l10032736: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000090h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 0000000A8h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 0000000A4h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000010h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001FDC
           add esp, 000000008h
           push eax
           call l10030232
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           jmp l100327B2
;
;* Jump:
; 100327D8(U) 
;
l100327A9: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 100327A7(U) 
;
l100327B2: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l100327DA
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000028h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100324EC
           add esp, 000000008h
           jmp l100327A9
;
;* Jump:
; 100327BB(C) 
;
l100327DA: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003270D ENDP
;
;* Call:
; 100362A9, 10038B37 
;
l100327E1 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000020h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10001BAD
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100327E1 ENDP
;
;* Call:
; 10036BE8, 10038541 
;
l10032829 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000020h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l10001FDC
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032829 ENDP
;
;* Call:
; 100363FB, 1003CD60 
;
l10032871 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000008Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10003A40
           add esp, 000000008h
           push eax
           call l10030219
           add esp, 000000008h
           push eax
           call l10001BAD
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           call l1002EF9F
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032871 ENDP
;
;* Call:
; 10036C3F, 100387EC 
;
l100328B6 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000008Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10003A58
           add esp, 000000008h
           push eax
           call l10030232
           add esp, 000000008h
           push eax
           call l10001FDC
           add esp, 000000008h
           pop ebp
           ret
l100328B6 ENDP
;
;* Call:
; 100365D2, 1003CFBB 
;
l100328ED PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000040h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000028h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000010h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10003A40
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100328ED ENDP
;
;* Call:
; 10036CA9, 10038899 
;
l10032945 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000040h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000028h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000010h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10003A58
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032945 ENDP
;
;* Call:
; 1003D5D0 
;
l1003299D PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A40
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1003299D ENDP
;
;* Call:
; 10036DFC, 100388F0 
;
l100329E5 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A58
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100329E5 ENDP
;
;* Call:
; 1003927A, 1003D1D0 
;
l10032A2D PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A40
           add esp, 000000008h
           push eax
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032A2D ENDP
;
;* Call:
; 10036D00, 1003873D 
;
l10032A75 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000010h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A58
           add esp, 000000008h
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10032A75 ENDP
;
;* Export: ?ClassId@B_ObjDscr@@UBEGXZ, 00A2
;
l10032ABD PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ax, 00001h
           mov esp, ebp
           pop ebp
           ret
l10032ABD ENDP
;
;* Export: ?CheckSum@B_ObjDscr@@UBEKXZ, 00A1
;
l10032ACC PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l10032ACC ENDP
;
;* Export: ?SerialSize@B_ObjDscr@@UBEIXZ, 010D
;
l10032AD9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l10032AD9 ENDP
;
;* Call:
; 10036987 
;
;* Export: ?SetUpNormals@B_ObjDscr@@QAEXXZ, 0118
;
l10032AE6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000288h
           push esi
           push edi
           mov dword ptr [ebp-000000274h], ecx
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           imul edx, edx, 000000018h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000CCh], eax
           cmp dword ptr [ebp-0000000CCh], 000000000h
           je l10032BB9
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-0000001ECh], eax
           mov dword ptr [ebp-0000001E8h], 000000018h
           mov ecx, dword ptr [ebp-0000000CCh]
           mov dword ptr [ebp-0000001E4h], ecx
;
;* Jump:
; 10032BA9(U) 
;
l10032B44: mov edx, dword ptr [ebp-0000001ECh]
           sub edx, 000000001h
           mov dword ptr [ebp-0000001ECh], edx
           cmp dword ptr [ebp-0000001ECh], 000000000h
           jl l10032BAB
           mov eax, dword ptr [ebp-0000001E4h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-0000001E4h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-0000001E4h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-0000001E4h]
           add eax, dword ptr [ebp-0000001E8h]
           mov dword ptr [ebp-0000001E4h], eax
           jmp l10032B44
;
;* Jump:
; 10032B5A(C) 
;
l10032BAB: mov ecx, dword ptr [ebp-0000000CCh]
           mov dword ptr [ebp-000000278h], ecx
           jmp l10032BC3
;
;* Jump:
; 10032B1F(C) 
;
l10032BB9: mov dword ptr [ebp-000000278h], 000000000h
;
;* Jump:
; 10032BB7(U) 
;
l10032BC3: mov edx, dword ptr [ebp-000000278h]
           mov dword ptr [ebp-020h], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l10032BDE
;
;* Jump:
; 10032C46(U) 
;
l10032BD5: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10032BD3(U) 
;
l10032BDE: mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+02Ch]
           jnb l10032C48
           mov dword ptr [ebp-0000000E4h], 000000000h
           mov dword ptr [ebp-0000000E0h], 000000000h
           lea eax, [ebp-0000000DCh]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-0000000D4h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+028h]
           lea edi, [ecx+edx+018h]
           mov ecx, 000000006h
           lea esi, [ebp-0000000E4h]
           rep movsd
           jmp l10032BD5
;
;* Jump:
; 10032BEA(C) 
;
l10032C48: mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000001h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-014h], offset g10042D68
           mov dword ptr [ebp-018h], 000000000h
           jmp l10032C7D
;
;* Jump:
; 10033084(U) 
;
l10032C74: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10032C72(U) 
;
l10032C7D: mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+054h]
           jnb l10033089
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-0000001F0h], edx
           mov eax, dword ptr [ebp-0000001F0h]
           cmp dword ptr [eax+00Ch], 0FFFFFFFFh
           jne l10032E83
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-0000001F4h], ecx
           mov edx, dword ptr [ebp-0000001F4h]
           add edx, 000000010h
           mov dword ptr [ebp-000000214h], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l10032D06
           mov esi, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           jmp near ptr l10032E7E
;
;* Jump:
; 10032CDE(C) 
;
l10032D06: mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10032DF5
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-0000001FCh], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           shl edx, 007h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000208h], eax
           cmp dword ptr [ebp-000000208h], 000000000h
           je l10032D6E
           push offset l1002E190
           mov eax, dword ptr [ebp-0000001FCh]
           push eax
           push 000000080h
           mov ecx, dword ptr [ebp-000000208h]
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-000000208h]
           mov dword ptr [ebp-00000027Ch], edx
           jmp l10032D78
;
;* Jump:
; 10032D41(C) 
;
l10032D6E: mov dword ptr [ebp-00000027Ch], 000000000h
;
;* Jump:
; 10032D6C(U) 
;
l10032D78: mov eax, dword ptr [ebp-00000027Ch]
           mov dword ptr [ebp-0000001F8h], eax
           mov dword ptr [ebp-000000200h], 000000000h
           jmp l10032D9F
;
;* Jump:
; 10032DD0(U) 
;
l10032D90: mov ecx, dword ptr [ebp-000000200h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000200h], ecx
;
;* Jump:
; 10032D8E(U) 
;
l10032D9F: mov edx, dword ptr [ebp-000000200h]
           cmp edx, dword ptr [ebp-00Ch]
           jnb l10032DD2
           mov eax, dword ptr [ebp-000000200h]
           shl eax, 007h
           mov esi, dword ptr [ebp-010h]
           add esi, eax
           mov ecx, dword ptr [ebp-000000200h]
           shl ecx, 007h
           mov edi, dword ptr [ebp-0000001F8h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           jmp l10032D90
;
;* Jump:
; 10032DA8(C) 
;
l10032DD2: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00000020Ch], edx
           mov eax, dword ptr [ebp-00000020Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-0000001F8h]
           mov dword ptr [ebp-010h], ecx
           jmp l10032E5D
;
;* Jump:
; 10032D13(C) 
;
l10032DF5: mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000204h], edx
           mov eax, dword ptr [ebp-000000204h]
           shl eax, 007h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000210h], eax
           cmp dword ptr [ebp-000000210h], 000000000h
           je l10032E4A
           push offset l1002E190
           mov ecx, dword ptr [ebp-000000204h]
           push ecx
           push 000000080h
           mov edx, dword ptr [ebp-000000210h]
           push edx
           call l100395E0
           mov eax, dword ptr [ebp-000000210h]
           mov dword ptr [ebp-000000280h], eax
           jmp l10032E54
;
;* Jump:
; 10032E1D(C) 
;
l10032E4A: mov dword ptr [ebp-000000280h], 000000000h
;
;* Jump:
; 10032E48(U) 
;
l10032E54: mov ecx, dword ptr [ebp-000000280h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10032DF3(U) 
;
l10032E5D: mov esi, dword ptr [ebp-000000214h]
           mov edx, dword ptr [ebp-00Ch]
           shl edx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, edx
           mov ecx, 000000020h
           rep movsd
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10032D01(U) 
;
l10032E7E: jmp near ptr l10033084
;
;* Jump:
; 10032CAE(C) 
;
l10032E83: mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000218h], ecx
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000021Ch], edx
           mov eax, dword ptr [ebp-000000218h]
           mov ecx, dword ptr [eax+00Ch]
           shl ecx, 007h
           mov edx, dword ptr [ebp-010h]
           add edx, ecx
           push edx
           mov eax, dword ptr [ebp-00000021Ch]
           add eax, 000000010h
           push eax
           lea ecx, [ebp-000000164h]
           push ecx
           call l1002F537
           add esp, 00000000Ch
           mov dword ptr [ebp-00000023Ch], eax
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp-00Ch]
           jbe l10032F0C
           mov esi, dword ptr [ebp-00000023Ch]
           mov eax, dword ptr [ebp-00Ch]
           shl eax, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, eax
           mov ecx, 000000020h
           rep movsd
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l10033084
;
;* Jump:
; 10032EE4(C) 
;
l10032F0C: mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10032FFB
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000224h], eax
           mov ecx, dword ptr [ebp-000000224h]
           shl ecx, 007h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000230h], eax
           cmp dword ptr [ebp-000000230h], 000000000h
           je l10032F74
           push offset l1002E190
           mov edx, dword ptr [ebp-000000224h]
           push edx
           push 000000080h
           mov eax, dword ptr [ebp-000000230h]
           push eax
           call l100395E0
           mov ecx, dword ptr [ebp-000000230h]
           mov dword ptr [ebp-000000284h], ecx
           jmp l10032F7E
;
;* Jump:
; 10032F47(C) 
;
l10032F74: mov dword ptr [ebp-000000284h], 000000000h
;
;* Jump:
; 10032F72(U) 
;
l10032F7E: mov edx, dword ptr [ebp-000000284h]
           mov dword ptr [ebp-000000220h], edx
           mov dword ptr [ebp-000000228h], 000000000h
           jmp l10032FA5
;
;* Jump:
; 10032FD6(U) 
;
l10032F96: mov eax, dword ptr [ebp-000000228h]
           add eax, 000000001h
           mov dword ptr [ebp-000000228h], eax
;
;* Jump:
; 10032F94(U) 
;
l10032FA5: mov ecx, dword ptr [ebp-000000228h]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l10032FD8
           mov edx, dword ptr [ebp-000000228h]
           shl edx, 007h
           mov esi, dword ptr [ebp-010h]
           add esi, edx
           mov eax, dword ptr [ebp-000000228h]
           shl eax, 007h
           mov edi, dword ptr [ebp-000000220h]
           add edi, eax
           mov ecx, 000000020h
           rep movsd
           jmp l10032F96
;
;* Jump:
; 10032FAE(C) 
;
l10032FD8: mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000234h], ecx
           mov edx, dword ptr [ebp-000000234h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000220h]
           mov dword ptr [ebp-010h], eax
           jmp l10033063
;
;* Jump:
; 10032F19(C) 
;
l10032FFB: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00000022Ch], ecx
           mov edx, dword ptr [ebp-00000022Ch]
           shl edx, 007h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000238h], eax
           cmp dword ptr [ebp-000000238h], 000000000h
           je l10033050
           push offset l1002E190
           mov eax, dword ptr [ebp-00000022Ch]
           push eax
           push 000000080h
           mov ecx, dword ptr [ebp-000000238h]
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-000000238h]
           mov dword ptr [ebp-000000288h], edx
           jmp l1003305A
;
;* Jump:
; 10033023(C) 
;
l10033050: mov dword ptr [ebp-000000288h], 000000000h
;
;* Jump:
; 1003304E(U) 
;
l1003305A: mov eax, dword ptr [ebp-000000288h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10032FF9(U) 
;
l10033063: mov esi, dword ptr [ebp-00000023Ch]
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10032E7E(U), 10032F07(U) 
;
l10033084: jmp near ptr l10032C74
;
;* Jump:
; 10032C89(C) 
;
l10033089: mov dword ptr [ebp-018h], 000000000h
           jmp l1003309B
;
;* Jump:
; 1003316B(U) 
;
l10033092: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10033090(U) 
;
l1003309B: mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+054h]
           jnb l10033170
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-028h], 000000000h
           jmp l100330D1
;
;* Jump:
; 10033166(U) 
;
l100330C8: mov ecx, dword ptr [ebp-028h]
           add ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 100330C6(U) 
;
l100330D1: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-028h]
           cmp eax, dword ptr [edx+0000000A4h]
           jnb l1003316B
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000240h], ecx
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000000244h], edx
           mov eax, dword ptr [ebp-018h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-010h]
           add ecx, eax
           push ecx
           mov edx, dword ptr [ebp-000000240h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, dword ptr [ebp-028h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-00000017Ch]
           push eax
           call l1002FEB3
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, dword ptr [ebp-000000244h]
           mov edx, dword ptr [ecx+0000000A8h]
           add edx, dword ptr [ebp-028h]
           imul edx, edx, 000000018h
           mov edi, dword ptr [ebp-020h]
           add edi, edx
           mov ecx, 000000006h
           rep movsd
           jmp near ptr l100330C8
;
;* Jump:
; 100330DD(C) 
;
l1003316B: jmp near ptr l10033092
;
;* Jump:
; 100330A7(C) 
;
l10033170: mov dword ptr [ebp-018h], 000000000h
           jmp l10033182
;
;* Jump:
; 10033314(U) 
;
l10033179: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10033177(U) 
;
l10033182: mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+040h]
           jnb l10033319
           mov dword ptr [ebp-040h], 000000000h
           mov dword ptr [ebp-03Ch], 000000000h
           lea eax, [ebp-038h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-030h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-000000248h], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-00000024Ch], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-020h]
           add eax, edx
           push eax
           lea ecx, [ebp-0000001ACh]
           push ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+008h]
           imul edx, edx, 000000018h
           mov ecx, dword ptr [ebp-020h]
           add ecx, edx
           call l10031760
           push eax
           lea eax, [ebp-0000001C4h]
           push eax
           mov ecx, dword ptr [ebp-000000248h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-020h]
           add eax, edx
           push eax
           lea ecx, [ebp-000000194h]
           push ecx
           mov edx, dword ptr [ebp-00000024Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-020h]
           add ecx, eax
           call l10031760
           mov ecx, eax
           call l10031882
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-040h]
           rep movsd
           lea ecx, [ebp-040h]
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea ecx, [ebp-040h]
           call l1003165E
           lea ecx, [ebp-040h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+028h]
           lea ecx, [ecx+edx+018h]
           call l100317C9
           lea edx, [ebp-040h]
           push edx
           mov eax, dword ptr [ebp-018h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax+004h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+028h]
           lea ecx, [edx+eax+018h]
           call l100317C9
           lea eax, [ebp-040h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+008h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+028h]
           lea ecx, [eax+ecx+018h]
           call l100317C9
           jmp near ptr l10033179
;
;* Jump:
; 1003318E(C) 
;
l10033319: mov dword ptr [ebp-018h], 000000000h
           jmp l1003332B
;
;* Jump:
; 1003355E(U) 
;
l10033322: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10033320(U) 
;
l1003332B: mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+054h]
           jnb l10033563
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-044h], ecx
           lea ecx, [ebp-0000000C4h]
           call l1002E190
           lea edx, [ebp-0000000C4h]
           push edx
           mov eax, dword ptr [ebp-018h]
           shl eax, 007h
           mov ecx, dword ptr [ebp-010h]
           add ecx, eax
           call l1002F052
           mov dword ptr [ebp-0000000C8h], 000000000h
           jmp l1003338C
;
;* Jump:
; 10033559(U) 
;
l1003337D: mov ecx, dword ptr [ebp-0000000C8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000C8h], ecx
;
;* Jump:
; 1003337B(U) 
;
l1003338C: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-0000000C8h]
           cmp eax, dword ptr [edx+0000000A4h]
           jnb l1003355E
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000250h], ecx
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000000254h], edx
           mov eax, dword ptr [ebp-000000254h]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, dword ptr [ebp-0000000C8h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           mov dword ptr [ebp-000000258h], eax
           lea ecx, [ebp-0000000C4h]
           push ecx
           mov edx, dword ptr [ebp-000000250h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, dword ptr [ebp-0000000C8h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+028h]
           lea eax, [edx+eax+018h]
           push eax
           lea ecx, [ebp-0000001DCh]
           push ecx
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-000000258h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000025Ch], edx
           mov eax, dword ptr [ebp-00000025Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, dword ptr [ebp-0000000C8h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+028h]
           lea ecx, [eax+ecx+018h]
           call l10031913
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 041h
           jne l10033516
           mov ecx, dword ptr [ebp-000000274h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000260h], ecx
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000000264h], edx
           mov eax, dword ptr [ebp-000000264h]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, dword ptr [ebp-0000000C8h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           mov dword ptr [ebp-000000268h], eax
           mov ecx, dword ptr [ebp-000000260h]
           mov edx, dword ptr [ecx+0000000A8h]
           add edx, dword ptr [ebp-0000000C8h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-000000274h]
           mov ecx, dword ptr [eax+028h]
           lea ecx, [ecx+edx+018h]
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-000000268h]
           add ecx, 000000018h
           call l1003165E
           jmp l10033559
;
;* Jump:
; 10033483(C) 
;
l10033516: mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000026Ch], edx
           mov eax, dword ptr [ebp-00000026Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, dword ptr [ebp-0000000C8h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-000000274h]
           mov eax, dword ptr [edx+028h]
           lea edi, [eax+ecx+018h]
           mov ecx, 000000006h
           mov esi, offset g1004A948
           rep movsd
;
;* Jump:
; 10033514(U) 
;
l10033559: jmp near ptr l1003337D
;
;* Jump:
; 1003339B(C) 
;
l1003355E: jmp near ptr l10033322
;
;* Jump:
; 10033337(C) 
;
l10033563: mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-0000001E0h], ecx
           mov edx, dword ptr [ebp-0000001E0h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], offset g10042D68
           cmp dword ptr [ebp-004h], 000000000h
           je l100335BD
           cmp dword ptr [ebp-004h], 000000000h
           jne l10033590
           jmp l100335BD
;
;* Jump:
; 1003358C(C) 
;
l10033590: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000270h], eax
           mov ecx, dword ptr [ebp-000000270h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10033586(C), 1003358E(U) 
;
l100335BD: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10032AE6 ENDP
;
;* Call:
; 10036997 
;
;* Export: ?SetUpInertialT@B_ObjDscr@@QAEXXZ, 0117
;
l100335C3 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000002A8h
           push esi
           push edi
           mov dword ptr [ebp-000000294h], ecx
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+02Ch]
           shl ecx, 003h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-078h], eax
           mov edx, dword ptr [ebp-078h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           imul edx, edx, 000000018h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-07Ch], eax
           cmp dword ptr [ebp-07Ch], 000000000h
           je l100336A8
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-000000208h], eax
           mov dword ptr [ebp-000000204h], 000000018h
           mov ecx, dword ptr [ebp-07Ch]
           mov dword ptr [ebp-000000200h], ecx
;
;* Jump:
; 1003369B(U) 
;
l10033636: mov edx, dword ptr [ebp-000000208h]
           sub edx, 000000001h
           mov dword ptr [ebp-000000208h], edx
           cmp dword ptr [ebp-000000208h], 000000000h
           jl l1003369D
           mov eax, dword ptr [ebp-000000200h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-000000200h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-000000200h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-000000200h]
           add eax, dword ptr [ebp-000000204h]
           mov dword ptr [ebp-000000200h], eax
           jmp l10033636
;
;* Jump:
; 1003364C(C) 
;
l1003369D: mov ecx, dword ptr [ebp-07Ch]
           mov dword ptr [ebp-000000298h], ecx
           jmp l100336B2
;
;* Jump:
; 10033614(C) 
;
l100336A8: mov dword ptr [ebp-000000298h], 000000000h
;
;* Jump:
; 100336A6(U) 
;
l100336B2: mov edx, dword ptr [ebp-000000298h]
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l100336CD
;
;* Jump:
; 100336F0(U) 
;
l100336C4: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100336C2(U) 
;
l100336CD: mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+02Ch]
           jnb l100336F2
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+eax*08h], 000000000h
           mov dword ptr [ecx+eax*08h+004h], 000000000h
           jmp l100336C4
;
;* Jump:
; 100336D9(C) 
;
l100336F2: mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000001h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-014h], offset g10042D68
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10033727
;
;* Jump:
; 10033BE5(U) 
;
l1003371E: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1003371C(U) 
;
l10033727: mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+054h]
           jnb l10033BEA
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000020Ch], edx
           mov eax, dword ptr [ebp-00000020Ch]
           cmp dword ptr [eax+00Ch], 0FFFFFFFFh
           jne l10033969
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000210h], ecx
           mov edx, dword ptr [ebp-000000210h]
           add edx, 000000010h
           mov dword ptr [ebp-00000023Ch], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l100337B0
           mov esi, dword ptr [ebp-00000023Ch]
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           jmp near ptr l10033964
;
;* Jump:
; 10033788(C) 
;
l100337B0: mov eax, dword ptr [ebp-004h]
           add eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100338DB
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000218h], ecx
           mov edx, dword ptr [ebp-000000218h]
           shl edx, 007h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000224h], eax
           cmp dword ptr [ebp-000000224h], 000000000h
           je l10033854
           mov eax, dword ptr [ebp-000000218h]
           mov dword ptr [ebp-000000238h], eax
           mov dword ptr [ebp-000000234h], 000000080h
           mov ecx, dword ptr [ebp-000000224h]
           mov dword ptr [ebp-000000230h], ecx
;
;* Jump:
; 10033844(U) 
;
l1003380F: mov edx, dword ptr [ebp-000000238h]
           sub edx, 000000001h
           mov dword ptr [ebp-000000238h], edx
           cmp dword ptr [ebp-000000238h], 000000000h
           jl l10033846
           mov ecx, dword ptr [ebp-000000230h]
           call l1002E190
           mov eax, dword ptr [ebp-000000230h]
           add eax, dword ptr [ebp-000000234h]
           mov dword ptr [ebp-000000230h], eax
           jmp l1003380F
;
;* Jump:
; 10033825(C) 
;
l10033846: mov ecx, dword ptr [ebp-000000224h]
           mov dword ptr [ebp-00000029Ch], ecx
           jmp l1003385E
;
;* Jump:
; 100337EB(C) 
;
l10033854: mov dword ptr [ebp-00000029Ch], 000000000h
;
;* Jump:
; 10033852(U) 
;
l1003385E: mov edx, dword ptr [ebp-00000029Ch]
           mov dword ptr [ebp-000000214h], edx
           mov dword ptr [ebp-00000021Ch], 000000000h
           jmp l10033885
;
;* Jump:
; 100338B6(U) 
;
l10033876: mov eax, dword ptr [ebp-00000021Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000021Ch], eax
;
;* Jump:
; 10033874(U) 
;
l10033885: mov ecx, dword ptr [ebp-00000021Ch]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l100338B8
           mov edx, dword ptr [ebp-00000021Ch]
           shl edx, 007h
           mov esi, dword ptr [ebp-010h]
           add esi, edx
           mov eax, dword ptr [ebp-00000021Ch]
           shl eax, 007h
           mov edi, dword ptr [ebp-000000214h]
           add edi, eax
           mov ecx, 000000020h
           rep movsd
           jmp l10033876
;
;* Jump:
; 1003388E(C) 
;
l100338B8: mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000228h], ecx
           mov edx, dword ptr [ebp-000000228h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000214h]
           mov dword ptr [ebp-010h], eax
           jmp l10033943
;
;* Jump:
; 100337BD(C) 
;
l100338DB: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000220h], ecx
           mov edx, dword ptr [ebp-000000220h]
           shl edx, 007h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000022Ch], eax
           cmp dword ptr [ebp-00000022Ch], 000000000h
           je l10033930
           push offset l1002E190
           mov eax, dword ptr [ebp-000000220h]
           push eax
           push 000000080h
           mov ecx, dword ptr [ebp-00000022Ch]
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-00000022Ch]
           mov dword ptr [ebp-0000002A0h], edx
           jmp l1003393A
;
;* Jump:
; 10033903(C) 
;
l10033930: mov dword ptr [ebp-0000002A0h], 000000000h
;
;* Jump:
; 1003392E(U) 
;
l1003393A: mov eax, dword ptr [ebp-0000002A0h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 100338D9(U) 
;
l10033943: mov esi, dword ptr [ebp-00000023Ch]
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100337AB(U) 
;
l10033964: jmp near ptr l10033BE5
;
;* Jump:
; 10033758(C) 
;
l10033969: mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-000000240h], eax
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000244h], ecx
           mov edx, dword ptr [ebp-000000240h]
           mov eax, dword ptr [edx+00Ch]
           shl eax, 007h
           mov ecx, dword ptr [ebp-010h]
           add ecx, eax
           push ecx
           mov edx, dword ptr [ebp-000000244h]
           add edx, 000000010h
           push edx
           lea eax, [ebp-0000000FCh]
           push eax
           call l1002F537
           add esp, 00000000Ch
           mov dword ptr [ebp-00000027Ch], eax
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [ebp-00Ch]
           jbe l100339F2
           mov esi, dword ptr [ebp-00000027Ch]
           mov edx, dword ptr [ebp-00Ch]
           shl edx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, edx
           mov ecx, 000000020h
           rep movsd
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp near ptr l10033BE5
;
;* Jump:
; 100339CA(C) 
;
l100339F2: mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10033B20
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00000024Ch], edx
           mov eax, dword ptr [ebp-00000024Ch]
           shl eax, 007h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000258h], eax
           cmp dword ptr [ebp-000000258h], 000000000h
           je l10033A96
           mov ecx, dword ptr [ebp-00000024Ch]
           mov dword ptr [ebp-00000026Ch], ecx
           mov dword ptr [ebp-000000268h], 000000080h
           mov edx, dword ptr [ebp-000000258h]
           mov dword ptr [ebp-000000264h], edx
;
;* Jump:
; 10033A86(U) 
;
l10033A51: mov eax, dword ptr [ebp-00000026Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00000026Ch], eax
           cmp dword ptr [ebp-00000026Ch], 000000000h
           jl l10033A88
           mov ecx, dword ptr [ebp-000000264h]
           call l1002E190
           mov ecx, dword ptr [ebp-000000264h]
           add ecx, dword ptr [ebp-000000268h]
           mov dword ptr [ebp-000000264h], ecx
           jmp l10033A51
;
;* Jump:
; 10033A67(C) 
;
l10033A88: mov edx, dword ptr [ebp-000000258h]
           mov dword ptr [ebp-0000002A4h], edx
           jmp l10033AA0
;
;* Jump:
; 10033A2D(C) 
;
l10033A96: mov dword ptr [ebp-0000002A4h], 000000000h
;
;* Jump:
; 10033A94(U) 
;
l10033AA0: mov eax, dword ptr [ebp-0000002A4h]
           mov dword ptr [ebp-000000248h], eax
           mov dword ptr [ebp-000000250h], 000000000h
           jmp l10033AC7
;
;* Jump:
; 10033AF8(U) 
;
l10033AB8: mov ecx, dword ptr [ebp-000000250h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000250h], ecx
;
;* Jump:
; 10033AB6(U) 
;
l10033AC7: mov edx, dword ptr [ebp-000000250h]
           cmp edx, dword ptr [ebp-00Ch]
           jnb l10033AFA
           mov eax, dword ptr [ebp-000000250h]
           shl eax, 007h
           mov esi, dword ptr [ebp-010h]
           add esi, eax
           mov ecx, dword ptr [ebp-000000250h]
           shl ecx, 007h
           mov edi, dword ptr [ebp-000000248h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           jmp l10033AB8
;
;* Jump:
; 10033AD0(C) 
;
l10033AFA: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00000025Ch], edx
           mov eax, dword ptr [ebp-00000025Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000248h]
           mov dword ptr [ebp-010h], ecx
           jmp near ptr l10033BC4
;
;* Jump:
; 100339FF(C) 
;
l10033B20: mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000254h], edx
           mov eax, dword ptr [ebp-000000254h]
           shl eax, 007h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000260h], eax
           cmp dword ptr [ebp-000000260h], 000000000h
           je l10033BB1
           mov ecx, dword ptr [ebp-000000254h]
           mov dword ptr [ebp-000000278h], ecx
           mov dword ptr [ebp-000000274h], 000000080h
           mov edx, dword ptr [ebp-000000260h]
           mov dword ptr [ebp-000000270h], edx
;
;* Jump:
; 10033BA1(U) 
;
l10033B6C: mov eax, dword ptr [ebp-000000278h]
           sub eax, 000000001h
           mov dword ptr [ebp-000000278h], eax
           cmp dword ptr [ebp-000000278h], 000000000h
           jl l10033BA3
           mov ecx, dword ptr [ebp-000000270h]
           call l1002E190
           mov ecx, dword ptr [ebp-000000270h]
           add ecx, dword ptr [ebp-000000274h]
           mov dword ptr [ebp-000000270h], ecx
           jmp l10033B6C
;
;* Jump:
; 10033B82(C) 
;
l10033BA3: mov edx, dword ptr [ebp-000000260h]
           mov dword ptr [ebp-0000002A8h], edx
           jmp l10033BBB
;
;* Jump:
; 10033B48(C) 
;
l10033BB1: mov dword ptr [ebp-0000002A8h], 000000000h
;
;* Jump:
; 10033BAF(U) 
;
l10033BBB: mov eax, dword ptr [ebp-0000002A8h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10033B1B(U) 
;
l10033BC4: mov esi, dword ptr [ebp-00000027Ch]
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 007h
           mov edi, dword ptr [ebp-010h]
           add edi, ecx
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10033964(U), 100339ED(U) 
;
l10033BE5: jmp near ptr l1003371E
;
;* Jump:
; 10033733(C) 
;
l10033BEA: mov dword ptr [ebp-01Ch], 000000000h
           jmp l10033BFC
;
;* Jump:
; 10033CCC(U) 
;
l10033BF3: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10033BF1(U) 
;
l10033BFC: mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+054h]
           jnb l10033CD1
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-028h], eax
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10033C32
;
;* Jump:
; 10033CC7(U) 
;
l10033C29: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 10033C27(U) 
;
l10033C32: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [edx+0000000A4h]
           jnb l10033CCC
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000280h], ecx
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [edx+050h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000000284h], edx
           mov eax, dword ptr [ebp-01Ch]
           shl eax, 007h
           mov ecx, dword ptr [ebp-010h]
           add ecx, eax
           push ecx
           mov edx, dword ptr [ebp-000000280h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-000000114h]
           push eax
           call l1002FEB3
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, dword ptr [ebp-000000284h]
           mov edx, dword ptr [ecx+0000000A8h]
           add edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000018h
           mov edi, dword ptr [ebp-024h]
           add edi, edx
           mov ecx, 000000006h
           rep movsd
           jmp near ptr l10033C29
;
;* Jump:
; 10033C3E(C) 
;
l10033CCC: jmp near ptr l10033BF3
;
;* Jump:
; 10033C08(C) 
;
l10033CD1: mov eax, dword ptr [ebp-000000294h]
           mov dword ptr [eax+000000230h], 000000000h
           mov dword ptr [eax+000000234h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10033CFD
;
;* Jump:
; 10033E87(U) 
;
l10033CF4: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10033CF2(U) 
;
l10033CFD: mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+040h]
           jnb l10033E8C
           mov dword ptr [ebp-044h], 000000000h
           mov dword ptr [ebp-040h], 000000000h
           lea ecx, [ebp-03Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-034h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+03Ch]
           add edx, eax
           mov dword ptr [ebp-000000288h], edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+03Ch]
           add edx, eax
           mov dword ptr [ebp-00000028Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-024h]
           add ecx, eax
           push ecx
           lea edx, [ebp-000000144h]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax+008h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-024h]
           add ecx, eax
           call l10031760
           push eax
           lea ecx, [ebp-00000015Ch]
           push ecx
           mov edx, dword ptr [ebp-000000288h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-024h]
           add ecx, eax
           push ecx
           lea edx, [ebp-00000012Ch]
           push edx
           mov eax, dword ptr [ebp-00000028Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-024h]
           add ecx, edx
           call l10031760
           mov ecx, eax
           call l10031882
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-044h]
           rep movsd
           lea ecx, [ebp-044h]
           call l10031913
           fdiv qword ptr [g10042CD8]
           fstp qword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-04Ch]
           fadd qword ptr [eax+000000230h]
           mov ecx, dword ptr [ebp-000000294h]
           fstp qword ptr [ecx+000000230h]
           fld qword ptr [ebp-04Ch]
           fdiv qword ptr [g10042D70]
           mov edx, dword ptr [ebp-01Ch]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx]
           mov eax, dword ptr [ebp-018h]
           fstp qword ptr [eax+edx*08h]
           fld qword ptr [ebp-04Ch]
           fdiv qword ptr [g10042D70]
           mov ecx, dword ptr [ebp-01Ch]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+004h]
           mov edx, dword ptr [ebp-018h]
           fstp qword ptr [edx+ecx*08h]
           fld qword ptr [ebp-04Ch]
           fdiv qword ptr [g10042D70]
           mov eax, dword ptr [ebp-01Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax+008h]
           mov ecx, dword ptr [ebp-018h]
           fstp qword ptr [ecx+eax*08h]
           jmp near ptr l10033CF4
;
;* Jump:
; 10033D09(C) 
;
l10033E8C: mov edx, dword ptr [ebp-000000294h]
           mov dword ptr [edx+000000238h], 000000000h
           mov dword ptr [edx+00000023Ch], 000000000h
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-000000294h]
           add ecx, 000000240h
           call l10031623
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10033ECD
;
;* Jump:
; 100340AA(U) 
;
l10033EC4: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 10033EC2(U) 
;
l10033ECD: mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+054h]
           jnb l100340AF
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-074h], eax
           mov dword ptr [ebp-064h], 000000000h
           mov dword ptr [ebp-060h], 000000000h
           lea ecx, [ebp-05Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-054h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov dword ptr [ebp-070h], 000000000h
           jmp l10033F31
;
;* Jump:
; 100340A5(U) 
;
l10033F28: mov eax, dword ptr [ebp-070h]
           add eax, 000000001h
           mov dword ptr [ebp-070h], eax
;
;* Jump:
; 10033F26(U) 
;
l10033F31: mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ebp-070h]
           cmp edx, dword ptr [ecx+0000000A4h]
           jnb l100340AA
           mov eax, dword ptr [ebp-074h]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, dword ptr [ebp-070h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+ecx*08h]
           mov dword ptr [ebp-06Ch], eax
           mov ecx, dword ptr [edx+ecx*08h+004h]
           mov dword ptr [ebp-068h], ecx
           mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, dword ptr [ebp-070h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-000000294h]
           mov esi, dword ptr [ecx+028h]
           add esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-064h]
           rep movsd
           mov edx, dword ptr [ebp-068h]
           push edx
           mov eax, dword ptr [ebp-06Ch]
           push eax
           lea ecx, [ebp-000000174h]
           push ecx
           lea ecx, [ebp-064h]
           call l10031561
           push eax
           mov ecx, dword ptr [ebp-000000294h]
           add ecx, 000000240h
           call l100317C9
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-06Ch]
           fadd qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000238h]
           mov ecx, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-05Ch]
           fmul qword ptr [ebp-05Ch]
           fld qword ptr [ebp-054h]
           fmul qword ptr [ebp-054h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [ecx+000000130h]
           mov edx, dword ptr [ebp-000000294h]
           fstp qword ptr [edx+000000130h]
           mov eax, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-064h]
           fmul qword ptr [ebp-064h]
           fld qword ptr [ebp-054h]
           fmul qword ptr [ebp-054h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [eax+000000158h]
           mov ecx, dword ptr [ebp-000000294h]
           fstp qword ptr [ecx+000000158h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-064h]
           fmul qword ptr [ebp-064h]
           fld qword ptr [ebp-05Ch]
           fmul qword ptr [ebp-05Ch]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [edx+000000180h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000180h]
           mov ecx, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-064h]
           fmul qword ptr [ebp-05Ch]
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [ecx+000000138h]
           mov edx, dword ptr [ebp-000000294h]
           fstp qword ptr [edx+000000138h]
           mov eax, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-064h]
           fmul qword ptr [ebp-054h]
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [eax+000000140h]
           mov ecx, dword ptr [ebp-000000294h]
           fstp qword ptr [ecx+000000140h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ebp-05Ch]
           fmul qword ptr [ebp-054h]
           fmul qword ptr [ebp-06Ch]
           fadd qword ptr [edx+000000160h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000160h]
           jmp near ptr l10033F28
;
;* Jump:
; 10033F3D(C) 
;
l100340AA: jmp near ptr l10033EC4
;
;* Jump:
; 10033ED9(C) 
;
l100340AF: mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000130h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000130h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000158h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000158h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000180h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000180h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000138h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000138h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000140h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000140h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           fld qword ptr [ecx+000000160h]
           fdiv qword ptr [edx+000000238h]
           mov eax, dword ptr [ebp-000000294h]
           fstp qword ptr [eax+000000160h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [ecx+000000138h]
           mov dword ptr [edx+000000150h], eax
           mov ecx, dword ptr [ecx+00000013Ch]
           mov dword ptr [edx+000000154h], ecx
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [edx+000000170h]
           mov dword ptr [eax+000000170h], ecx
           mov edx, dword ptr [edx+000000174h]
           mov dword ptr [eax+000000174h], edx
           mov eax, dword ptr [ebp-000000294h]
           mov ecx, dword ptr [ebp-000000294h]
           mov edx, dword ptr [eax+000000178h]
           mov dword ptr [ecx+000000178h], edx
           mov eax, dword ptr [eax+00000017Ch]
           mov dword ptr [ecx+00000017Ch], eax
           lea ecx, [ebp-0000001F4h]
           push ecx
           mov ecx, dword ptr [ebp-000000294h]
           add ecx, 000000130h
           call l1002F159
           mov esi, eax
           mov edi, dword ptr [ebp-000000294h]
           add edi, 0000001B0h
           mov ecx, 000000020h
           rep movsd
           mov edx, dword ptr [ebp-000000294h]
           mov eax, dword ptr [edx+00000023Ch]
           push eax
           mov ecx, dword ptr [edx+000000238h]
           push ecx
           mov ecx, dword ptr [ebp-000000294h]
           add ecx, 000000240h
           call l1003165E
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-0000001F8h], edx
           mov eax, dword ptr [ebp-0000001F8h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-0000001FCh], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], offset g10042D68
           cmp dword ptr [ebp-004h], 000000000h
           je l100342B7
           cmp dword ptr [ebp-004h], 000000000h
           jne l1003428A
           jmp l100342B7
;
;* Jump:
; 10034286(C) 
;
l1003428A: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000290h], eax
           mov ecx, dword ptr [ebp-000000290h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10034280(C), 10034288(U) 
;
l100342B7: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l100335C3 ENDP
;
;* Call:
; 100344DA 
;
;* Export: ?GetVtxNode@B_ObjDscr@@QAEHI@Z, 00CE
;
l100342BD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l100342D8
;
;* Jump:
; 1003433A(U) 
;
l100342CF: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100342CD(U) 
;
l100342D8: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+054h]
           jnb l1003433C
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+0000000A8h]
           jb l1003433A
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+050h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+050h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+0000000A8h]
           mov ecx, dword ptr [ebp-010h]
           add eax, dword ptr [ecx+0000000A4h]
           cmp dword ptr [ebp+008h], eax
           jnb l1003433A
           mov eax, dword ptr [ebp-004h]
           jmp l1003433F
;
;* Jump:
; 100342FE(C), 10034333(C) 
;
l1003433A: jmp l100342CF
;
;* Jump:
; 100342E1(C) 
;
l1003433C: or eax, 0FFFFFFFFh
;
;* Jump:
; 10034338(U) 
;
l1003433F: mov esp, ebp
           pop ebp
           ret 00004h
l100342BD ENDP
;
l10034345 PROC
           push ebp
           mov ebp, esp
           call l10034354
           call l1003438B
           pop ebp
           ret
l10034345 ENDP
;
;* Call:
; 10034348 
;
l10034354 PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A994], 000000000h
           mov dword ptr [g1004A998], 000000000h
           mov dword ptr [g1004A99C], 000000080h
           mov dword ptr [g1004A9A0], 000000000h
           mov dword ptr [g1004A990], offset g10042D78
           pop ebp
           ret
l10034354 ENDP
;
;* Call:
; 1003434D 
;
l1003438B PROC
           push ebp
           mov ebp, esp
           push offset l1003439D
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l1003438B ENDP
;
l1003439D PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [g1004A990], offset g10042D78
           cmp dword ptr [g1004A9A0], 000000000h
           je l1003440B
           cmp dword ptr [g1004A9A0], 000000000h
           jne l100343C1
           jmp l1003440B
;
;* Jump:
; 100343BD(C) 
;
l100343C1: mov eax, dword ptr [g1004A994]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-004h], 000000000h
           je l100343E6
           push 000000003h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax]
           mov dword ptr [ebp-00Ch], eax
           jmp l100343ED
;
;* Jump:
; 100343D3(C) 
;
l100343E6: mov dword ptr [ebp-00Ch], 000000000h
;
;* Jump:
; 100343E4(U) 
;
l100343ED: mov dword ptr [g1004A994], 000000000h
           mov dword ptr [g1004A998], 000000000h
           mov dword ptr [g1004A9A0], 000000000h
;
;* Jump:
; 100343B4(C), 100343BF(U) 
;
l1003440B: mov esp, ebp
           pop ebp
           ret
l1003439D ENDP
;
l1003440F PROC
           push ebp
           mov ebp, esp
           call l1003441E
           call l10034455
           pop ebp
           ret
l1003440F ENDP
;
;* Call:
; 10034412 
;
l1003441E PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A9AC], 000000000h
           mov dword ptr [g1004A9B0], 000000000h
           mov dword ptr [g1004A9B4], 000000080h
           mov dword ptr [g1004A9B8], 000000000h
           mov dword ptr [g1004A9A8], offset g10042D7C
           pop ebp
           ret
l1003441E ENDP
;
;* Call:
; 10034417 
;
l10034455 PROC
           push ebp
           mov ebp, esp
           push offset l10034467
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l10034455 ENDP
;
l10034467 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [g1004A9A8], offset g10042D7C
           cmp dword ptr [g1004A9B8], 000000000h
           je l100344BB
           cmp dword ptr [g1004A9B8], 000000000h
           jne l10034489
           jmp l100344BB
;
;* Jump:
; 10034485(C) 
;
l10034489: mov eax, dword ptr [g1004A9AC]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A9AC], 000000000h
           mov dword ptr [g1004A9B0], 000000000h
           mov dword ptr [g1004A9B8], 000000000h
;
;* Jump:
; 1003447C(C), 10034487(U) 
;
l100344BB: mov esp, ebp
           pop ebp
           ret
l10034467 ENDP
;
;* Call:
; 10034C92, 10034CE6, 10034D3C 
;
l100344BF PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000C0h
           push esi
           push edi
           mov dword ptr [ebp-0000000A8h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-0000000A8h]
           call l100342BD
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-01Ch]
           call l1003221C
           mov dword ptr [ebp-020h], 000000000h
           jmp l10034508
;
;* Jump:
; 100345CE(U) 
;
l100344FF: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 100344FD(U) 
;
l10034508: mov edx, dword ptr [ebp-0000000A8h]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx+0000000C4h]
           jnb l100345D3
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-0000000A8h]
           mov eax, dword ptr [edx+0000000C0h]
           add eax, ecx
           push eax
           lea ecx, [ebp-01Ch]
           call l1003227E
           test eax, eax
           je l100345CE
           mov ecx, dword ptr [g1004A9AC]
           mov edx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+edx*04h], 000000001h
           jne l100345C6
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000024h
           mov edx, dword ptr [g1004A994]
           add ecx, edx
           call l100312FC
           test eax, eax
           je l10034588
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ecx+0000000C0h]
           mov dword ptr [edx+eax+014h], 000000000h
           jmp l100345C6
;
;* Jump:
; 1003456A(C) 
;
l10034588: mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ecx+0000000C0h]
           mov dword ptr [edx+eax+014h], 000000001h
           mov eax, dword ptr [g1004A9AC]
           mov ecx, dword ptr [ebp-020h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-0000000ACh], edx
           mov eax, dword ptr [ebp-0000000ACh]
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-0000000ACh]
           mov dword ptr [edx], ecx
;
;* Jump:
; 1003454F(C), 10034586(U) 
;
l100345C6: mov eax, dword ptr [ebp-020h]
           jmp near ptr l10034A82
;
;* Jump:
; 1003453C(C) 
;
l100345CE: jmp near ptr l100344FF
;
;* Jump:
; 10034517(C) 
;
l100345D3: mov eax, dword ptr [ebp+008h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-038h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-0000000A8h]
           mov eax, dword ptr [edx+028h]
           add ecx, eax
           call l10031760
           mov ecx, eax
           call l10031913
           fdivr qword ptr [g100422C0]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-0000000A8h]
           add ecx, 0000000BCh
           mov dword ptr [ebp-074h], ecx
           mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [ebp-074h]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l1003465B
           mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+008h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-074h]
           mov edi, dword ptr [ecx+004h]
           add edi, eax
           mov ecx, 000000006h
           lea esi, [ebp-01Ch]
           rep movsd
           mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-074h]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l100347EE
;
;* Jump:
; 1003462A(C) 
;
l1003465B: mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-074h]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-074h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-074h]
           cmp dword ptr [eax+008h], 000000000h
           je l1003474D
           mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-040h]
           imul eax, eax, 000000018h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-050h], eax
           cmp dword ptr [ebp-050h], 000000000h
           je l100346DB
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-064h], ecx
           mov dword ptr [ebp-060h], 000000018h
           mov edx, dword ptr [ebp-050h]
           mov dword ptr [ebp-05Ch], edx
;
;* Jump:
; 100346CE(U) 
;
l100346AE: mov eax, dword ptr [ebp-064h]
           sub eax, 000000001h
           mov dword ptr [ebp-064h], eax
           cmp dword ptr [ebp-064h], 000000000h
           jl l100346D0
           mov ecx, dword ptr [ebp-05Ch]
           call l100321F0
           mov ecx, dword ptr [ebp-05Ch]
           add ecx, dword ptr [ebp-060h]
           mov dword ptr [ebp-05Ch], ecx
           jmp l100346AE
;
;* Jump:
; 100346BB(C) 
;
l100346D0: mov edx, dword ptr [ebp-050h]
           mov dword ptr [ebp-0000000B0h], edx
           jmp l100346E5
;
;* Jump:
; 10034699(C) 
;
l100346DB: mov dword ptr [ebp-0000000B0h], 000000000h
;
;* Jump:
; 100346D9(U) 
;
l100346E5: mov eax, dword ptr [ebp-0000000B0h]
           mov dword ptr [ebp-044h], eax
           mov dword ptr [ebp-048h], 000000000h
           jmp l10034700
;
;* Jump:
; 1003472B(U) 
;
l100346F7: mov ecx, dword ptr [ebp-048h]
           add ecx, 000000001h
           mov dword ptr [ebp-048h], ecx
;
;* Jump:
; 100346F5(U) 
;
l10034700: mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [ebp-048h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003472D
           mov ecx, dword ptr [ebp-048h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-074h]
           mov esi, dword ptr [edx+004h]
           add esi, ecx
           mov eax, dword ptr [ebp-048h]
           imul eax, eax, 000000018h
           mov edi, dword ptr [ebp-044h]
           add edi, eax
           mov ecx, 000000006h
           rep movsd
           jmp l100346F7
;
;* Jump:
; 10034709(C) 
;
l1003472D: mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-054h], edx
           mov eax, dword ptr [ebp-054h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ecx+004h], edx
           jmp l100347C4
;
;* Jump:
; 10034674(C) 
;
l1003474D: mov eax, dword ptr [ebp-074h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-04Ch]
           imul edx, edx, 000000018h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-058h], eax
           cmp dword ptr [ebp-058h], 000000000h
           je l100347AE
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-070h], eax
           mov dword ptr [ebp-06Ch], 000000018h
           mov ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-068h], ecx
;
;* Jump:
; 100347A1(U) 
;
l10034781: mov edx, dword ptr [ebp-070h]
           sub edx, 000000001h
           mov dword ptr [ebp-070h], edx
           cmp dword ptr [ebp-070h], 000000000h
           jl l100347A3
           mov ecx, dword ptr [ebp-068h]
           call l100321F0
           mov eax, dword ptr [ebp-068h]
           add eax, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-068h], eax
           jmp l10034781
;
;* Jump:
; 1003478E(C) 
;
l100347A3: mov ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-0000000B4h], ecx
           jmp l100347B8
;
;* Jump:
; 1003476C(C) 
;
l100347AE: mov dword ptr [ebp-0000000B4h], 000000000h
;
;* Jump:
; 100347AC(U) 
;
l100347B8: mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [ebp-0000000B4h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1003474B(U) 
;
l100347C4: mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ecx+008h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-074h]
           mov edi, dword ptr [eax+004h]
           add edi, edx
           mov ecx, 000000006h
           lea esi, [ebp-01Ch]
           rep movsd
           mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-074h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10034656(U) 
;
l100347EE: mov ecx, dword ptr [g1004A9A0]
           cmp ecx, dword ptr [g1004A998]
           jbe l10034851
           mov edx, dword ptr [g1004A998]
           imul edx, edx, 000000024h
           mov eax, dword ptr [g1004A994]
           add eax, edx
           mov dword ptr [ebp-000000098h], eax
           mov esi, dword ptr [ebp+010h]
           add esi, 000000004h
           mov edi, dword ptr [ebp-000000098h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-000000098h]
           mov eax, dword ptr [ecx+01Ch]
           mov dword ptr [edx+01Ch], eax
           mov ecx, dword ptr [ecx+020h]
           mov dword ptr [edx+020h], ecx
           mov edx, dword ptr [g1004A998]
           add edx, 000000001h
           mov dword ptr [g1004A998], edx
           jmp near ptr l10034A6A
;
;* Jump:
; 100347FA(C) 
;
l10034851: mov eax, dword ptr [g1004A9A0]
           add eax, dword ptr [g1004A99C]
           mov dword ptr [g1004A9A0], eax
           cmp dword ptr [g1004A998], 000000000h
           je l100349C2
           mov ecx, dword ptr [g1004A9A0]
           mov dword ptr [ebp-078h], ecx
           mov edx, dword ptr [ebp-078h]
           imul edx, edx, 000000024h
           add edx, 000000004h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000088h], eax
           cmp dword ptr [ebp-000000088h], 000000000h
           je l10034920
           mov eax, dword ptr [ebp-000000088h]
           mov ecx, dword ptr [ebp-078h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-078h]
           mov dword ptr [ebp-0000000A4h], edx
           mov dword ptr [ebp-0000000A0h], 000000024h
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000004h
           mov dword ptr [ebp-00000009Ch], eax
;
;* Jump:
; 1003490D(U) 
;
l100348C9: mov ecx, dword ptr [ebp-0000000A4h]
           sub ecx, 000000001h
           mov dword ptr [ebp-0000000A4h], ecx
           cmp dword ptr [ebp-0000000A4h], 000000000h
           jl l1003490F
           mov ecx, dword ptr [ebp-00000009Ch]
           add ecx, 000000004h
           call l1002DEF0
           mov edx, dword ptr [ebp-00000009Ch]
           mov dword ptr [edx], offset g10042D3C
           mov eax, dword ptr [ebp-00000009Ch]
           add eax, dword ptr [ebp-0000000A0h]
           mov dword ptr [ebp-00000009Ch], eax
           jmp l100348C9
;
;* Jump:
; 100348DF(C) 
;
l1003490F: mov ecx, dword ptr [ebp-000000088h]
           add ecx, 000000004h
           mov dword ptr [ebp-0000000B8h], ecx
           jmp l1003492A
;
;* Jump:
; 10034896(C) 
;
l10034920: mov dword ptr [ebp-0000000B8h], 000000000h
;
;* Jump:
; 1003491E(U) 
;
l1003492A: mov edx, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-07Ch], edx
           mov dword ptr [ebp-080h], 000000000h
           jmp l10034945
;
;* Jump:
; 1003496E(U) 
;
l1003493C: mov eax, dword ptr [ebp-080h]
           add eax, 000000001h
           mov dword ptr [ebp-080h], eax
;
;* Jump:
; 1003493A(U) 
;
l10034945: mov ecx, dword ptr [ebp-080h]
           cmp ecx, dword ptr [g1004A998]
           jnb l10034970
           mov edx, dword ptr [ebp-080h]
           imul edx, edx, 000000024h
           mov eax, dword ptr [g1004A994]
           add eax, edx
           push eax
           mov ecx, dword ptr [ebp-080h]
           imul ecx, ecx, 000000024h
           mov edx, dword ptr [ebp-07Ch]
           add ecx, edx
           call l1003B780
           jmp l1003493C
;
;* Jump:
; 1003494E(C) 
;
l10034970: mov eax, dword ptr [g1004A994]
           mov dword ptr [ebp-000000090h], eax
           mov ecx, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-00000008Ch], ecx
           cmp dword ptr [ebp-00000008Ch], 000000000h
           je l100349AA
           push 000000003h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00000008Ch]
           call [eax]
           mov dword ptr [ebp-0000000BCh], eax
           jmp l100349B4
;
;* Jump:
; 1003498E(C) 
;
l100349AA: mov dword ptr [ebp-0000000BCh], 000000000h
;
;* Jump:
; 100349A8(U) 
;
l100349B4: mov ecx, dword ptr [ebp-07Ch]
           mov dword ptr [g1004A994], ecx
           jmp near ptr l10034A43
;
;* Jump:
; 10034868(C) 
;
l100349C2: mov edx, dword ptr [g1004A9A0]
           mov dword ptr [ebp-000000084h], edx
           mov eax, dword ptr [ebp-000000084h]
           imul eax, eax, 000000024h
           add eax, 000000004h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000094h], eax
           cmp dword ptr [ebp-000000094h], 000000000h
           je l10034A2E
           push offset l10039610
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ebp-000000084h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-000000084h]
           push eax
           push 000000024h
           mov ecx, dword ptr [ebp-000000094h]
           add ecx, 000000004h
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-000000094h]
           add edx, 000000004h
           mov dword ptr [ebp-0000000C0h], edx
           jmp l10034A38
;
;* Jump:
; 100349F0(C) 
;
l10034A2E: mov dword ptr [ebp-0000000C0h], 000000000h
;
;* Jump:
; 10034A2C(U) 
;
l10034A38: mov eax, dword ptr [ebp-0000000C0h]
           mov dword ptr [g1004A994], eax
;
;* Jump:
; 100349BD(U) 
;
l10034A43: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [g1004A998]
           imul edx, edx, 000000024h
           mov ecx, dword ptr [g1004A994]
           add ecx, edx
           call l1003B780
           mov eax, dword ptr [g1004A998]
           add eax, 000000001h
           mov dword ptr [g1004A998], eax
;
;* Jump:
; 1003484C(U) 
;
l10034A6A: mov dword ptr [ebp-03Ch], 000000001h
           lea ecx, [ebp-03Ch]
           push ecx
           mov ecx, offset g1004A9A8
           call l1003A3C0
           mov eax, dword ptr [ebp-020h]
;
;* Jump:
; 100345C9(U) 
;
l10034A82: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100344BF ENDP
;
;* Call:
; 1003698F 
;
;* Export: ?SetUpEdges@B_ObjDscr@@QAEXXZ, 0116
;
l10034A8A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000090h
           mov dword ptr [ebp-00000008Ch], ecx
           cmp dword ptr [g1004A9A0], 000000000h
           jne l10034AA4
           jmp l10034AF4
;
;* Jump:
; 10034AA0(C) 
;
l10034AA4: mov eax, dword ptr [g1004A994]
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-060h]
           mov dword ptr [ebp-05Ch], ecx
           cmp dword ptr [ebp-05Ch], 000000000h
           je l10034ACC
           push 000000003h
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-05Ch]
           call [eax]
           mov dword ptr [ebp-000000090h], eax
           jmp l10034AD6
;
;* Jump:
; 10034AB6(C) 
;
l10034ACC: mov dword ptr [ebp-000000090h], 000000000h
;
;* Jump:
; 10034ACA(U) 
;
l10034AD6: mov dword ptr [g1004A994], 000000000h
           mov dword ptr [g1004A998], 000000000h
           mov dword ptr [g1004A9A0], 000000000h
;
;* Jump:
; 10034AA2(U) 
;
l10034AF4: cmp dword ptr [g1004A9B8], 000000000h
           jne l10034AFF
           jmp l10034B32
;
;* Jump:
; 10034AFB(C) 
;
l10034AFF: mov ecx, dword ptr [g1004A9AC]
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-064h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A9AC], 000000000h
           mov dword ptr [g1004A9B0], 000000000h
           mov dword ptr [g1004A9B8], 000000000h
;
;* Jump:
; 10034AFD(U) 
;
l10034B32: lea ecx, [ebp-020h]
           call l1002DEF0
           mov dword ptr [ebp-024h], offset g10042D3C
           mov dword ptr [ebp-028h], 000000000h
           jmp l10034B53
;
;* Jump:
; 10034D4A(U) 
;
l10034B4A: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10034B48(U) 
;
l10034B53: mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ebp-028h]
           cmp edx, dword ptr [ecx+040h]
           jnb l10034D4F
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+03Ch]
           add edx, eax
           mov dword ptr [ebp-068h], edx
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           mov dword ptr [ebp-06Ch], eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-070h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-074h], ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-078h], ecx
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           mov dword ptr [ebp-07Ch], edx
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-040h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+008h]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+028h]
           add ecx, eax
           call l10031760
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           push ecx
           lea edx, [ebp-058h]
           push edx
           mov ecx, dword ptr [ebp-074h]
           call l10031760
           push eax
           mov eax, dword ptr [ebp-07Ch]
           push eax
           lea ecx, [ebp-024h]
           call l10031284
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-080h], eax
           lea ecx, [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+004h]
           push edx
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           push eax
           mov ecx, dword ptr [ebp-00000008Ch]
           call l100344BF
           mov ecx, dword ptr [ebp-080h]
           mov dword ptr [ecx+00Ch], eax
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-000000084h], ecx
           lea edx, [ebp-024h]
           push edx
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax+008h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+004h]
           push ecx
           mov ecx, dword ptr [ebp-00000008Ch]
           call l100344BF
           mov edx, dword ptr [ebp-000000084h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ecx+03Ch]
           add edx, eax
           mov dword ptr [ebp-000000088h], edx
           lea eax, [ebp-024h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx]
           push ecx
           mov edx, dword ptr [ebp-028h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+008h]
           push edx
           mov ecx, dword ptr [ebp-00000008Ch]
           call l100344BF
           mov ecx, dword ptr [ebp-000000088h]
           mov dword ptr [ecx+014h], eax
           jmp near ptr l10034B4A
;
;* Jump:
; 10034B5F(C) 
;
l10034D4F: mov dword ptr [ebp-024h], offset g10042D3C
           mov esp, ebp
           pop ebp
           ret
l10034A8A ENDP
;
;* Export: ?Draw@B_ObjDscr@@QAEXPAVB_3DRasterDevice@@MMMMMH@Z, 00B0
;
l10034D5A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000048Ch
           push esi
           push edi
           mov dword ptr [ebp-00000040Ch], ecx
           fld dword ptr [ebp+00Ch]
           fcomp dword ptr [ebp+014h]
           fnstsw ax
           test ah, 041h
           je l10034D85
           fld dword ptr [ebp+010h]
           fcomp dword ptr [ebp+018h]
           fnstsw ax
           test ah, 041h
           jne l10034D8A
;
;* Jump:
; 10034D76(C) 
;
l10034D85: jmp near ptr l10035903
;
;* Jump:
; 10034D83(C) 
;
l10034D8A: mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [eax+02Ch]
           cmp ecx, dword ptr [g1004A9C0]
           jbe l10034EE8
           cmp dword ptr [g1004A9BC], 000000000h
           je l10034DCD
           mov edx, dword ptr [g1004A9BC]
           mov dword ptr [ebp-000000228h], edx
           mov eax, dword ptr [ebp-000000228h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A9C0], 000000000h
;
;* Jump:
; 10034DA6(C) 
;
l10034DCD: mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [ebp-000000108h], edx
           mov eax, dword ptr [ebp-000000108h]
           imul eax, eax, 000000018h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000022Ch], eax
           cmp dword ptr [ebp-00000022Ch], 000000000h
           je l10034E98
           mov ecx, dword ptr [ebp-000000108h]
           mov dword ptr [ebp-000000400h], ecx
           mov dword ptr [ebp-0000003FCh], 000000018h
           mov edx, dword ptr [ebp-00000022Ch]
           mov dword ptr [ebp-0000003F8h], edx
;
;* Jump:
; 10034E88(U) 
;
l10034E23: mov eax, dword ptr [ebp-000000400h]
           sub eax, 000000001h
           mov dword ptr [ebp-000000400h], eax
           cmp dword ptr [ebp-000000400h], 000000000h
           jl l10034E8A
           mov ecx, dword ptr [ebp-0000003F8h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-0000003F8h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-0000003F8h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-0000003F8h]
           add ecx, dword ptr [ebp-0000003FCh]
           mov dword ptr [ebp-0000003F8h], ecx
           jmp l10034E23
;
;* Jump:
; 10034E39(C) 
;
l10034E8A: mov edx, dword ptr [ebp-00000022Ch]
           mov dword ptr [ebp-000000410h], edx
           jmp l10034EA2
;
;* Jump:
; 10034DFB(C) 
;
l10034E98: mov dword ptr [ebp-000000410h], 000000000h
;
;* Jump:
; 10034E96(U) 
;
l10034EA2: mov eax, dword ptr [ebp-000000410h]
           mov dword ptr [g1004A9BC], eax
           cmp dword ptr [g1004A9BC], 000000000h
           je l10034EC7
           mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [g1004A9C0], edx
           jmp l10034EE8
;
;* Jump:
; 10034EB4(C) 
;
l10034EC7: mov dword ptr [g1004A9C0], 000000000h
           push offset g100488C0
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp near ptr l10035903
;
;* Jump:
; 10034D99(C), 10034EC5(U) 
;
l10034EE8: mov dword ptr [ebp-000000104h], 0FFFFFFFFh
           mov dword ptr [ebp-000000100h], 0FFEFFFFFh
           mov dword ptr [ebp-0000000D4h], 0FFFFFFFFh
           mov dword ptr [ebp-0000000D0h], 0FFEFFFFFh
           mov dword ptr [ebp-0000000F4h], 0FFFFFFFFh
           mov dword ptr [ebp-0000000F0h], 07FEFFFFFh
           mov dword ptr [ebp-0000000FCh], 0FFFFFFFFh
           mov dword ptr [ebp-0000000F8h], 07FEFFFFFh
           mov dword ptr [ebp-0000000CCh], 0FFFFFFFFh
           mov dword ptr [ebp-0000000C8h], 07FEFFFFFh
           lea ecx, [ebp-0000000ACh]
           call l1002E190
;
;* String: "Inv"
;
           push offset g10048900
           lea ecx, [ebp-000000234h]
           call l10003337
           mov eax, dword ptr [ebp-00000040Ch]
           add eax, 0000000D0h
           mov dword ptr [ebp-000000408h], eax
           mov dword ptr [ebp-000000404h], 000000000h
           jmp l10034F93
;
;* Jump:
; 10034FE2(U) 
;
l10034F84: mov ecx, dword ptr [ebp-000000404h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000404h], ecx
;
;* Jump:
; 10034F82(U) 
;
l10034F93: mov edx, dword ptr [ebp-000000408h]
           mov eax, dword ptr [ebp-000000404h]
           cmp eax, dword ptr [edx+008h]
           jnb l10034FE4
           mov ecx, dword ptr [ebp-000000408h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000404h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003A2F
           push eax
           lea ecx, [ebp-000000234h]
           call l1000354D
           test eax, eax
           je l10034FE2
           mov ecx, dword ptr [ebp-000000408h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000404h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           jmp l10034FEB
;
;* Jump:
; 10034FC9(C) 
;
l10034FE2: jmp l10034F84
;
;* Jump:
; 10034FA2(C) 
;
l10034FE4: mov dword ptr [ebp-020h], 000000000h
;
;* Jump:
; 10034FE0(U) 
;
l10034FEB: lea ecx, [ebp-000000234h]
           call l100039BA
           cmp dword ptr [ebp-020h], 000000000h
           je l1003504A
           lea ecx, [ebp-000000188h]
           call l1002E190
           lea edx, [ebp-000000188h]
           push edx
           mov ecx, dword ptr [ebp-020h]
           add ecx, 00000000Ch
           call l1002F052
           lea eax, [ebp-000000188h]
           push eax
           lea ecx, [ebp-0000000ACh]
           push ecx
           lea edx, [ebp-0000002B4h]
           push edx
           call l1002F537
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000020h
           lea edi, [ebp-0000000ACh]
           rep movsd
           jmp near ptr l100350CC
;
;* Jump:
; 10034FFA(C) 
;
l1003504A: mov dword ptr [ebp-0000002CCh], 000000000h
           mov dword ptr [ebp-0000002C8h], 03FF00000h
           lea eax, [ebp-0000002C4h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-0000002BCh]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           push 03FF921FBh
           push 054442EEAh
           lea edx, [ebp-0000002CCh]
           push edx
           lea ecx, [ebp-000000208h]
           call l1002E600
           lea eax, [ebp-000000208h]
           push eax
           lea ecx, [ebp-0000000ACh]
           push ecx
           lea edx, [ebp-00000034Ch]
           push edx
           call l1002F537
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000020h
           lea edi, [ebp-0000000ACh]
           rep movsd
;
;* Jump:
; 10035045(U) 
;
l100350CC: mov dword ptr [ebp-0000000C4h], 000000000h
           mov dword ptr [ebp-0000000C0h], 03FF00000h
           lea eax, [ebp-0000000BCh]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 040000000h
           lea ecx, [ebp-0000000B4h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           lea ecx, [ebp-0000000C4h]
           call l10031913
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea ecx, [ebp-0000000C4h]
           call l1003165E
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10035134
;
;* Jump:
; 10035371(U) 
;
l1003512B: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 10035129(U) 
;
l10035134: mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [eax+02Ch]
           jnb l10035376
           lea edx, [ebp-0000000ACh]
           push edx
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-000000364h]
           push eax
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 000000018h
           mov edi, dword ptr [g1004A9BC]
           add edi, ecx
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000018h
           mov esi, dword ptr [g1004A9BC]
           add esi, edx
           mov ecx, 000000006h
           lea edi, [ebp-000000220h]
           rep movsd
           fld qword ptr [ebp-000000104h]
           fcomp qword ptr [ebp-000000220h]
           fnstsw ax
           test ah, 041h
           jne l100351CD
           mov eax, dword ptr [ebp-000000104h]
           mov dword ptr [ebp-000000418h], eax
           mov ecx, dword ptr [ebp-000000100h]
           mov dword ptr [ebp-000000414h], ecx
           jmp l100351E5
;
;* Jump:
; 100351B1(C) 
;
l100351CD: mov edx, dword ptr [ebp-000000220h]
           mov dword ptr [ebp-000000418h], edx
           mov eax, dword ptr [ebp-00000021Ch]
           mov dword ptr [ebp-000000414h], eax
;
;* Jump:
; 100351CB(U) 
;
l100351E5: mov ecx, dword ptr [ebp-000000418h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-000000414h]
           mov dword ptr [ebp-000000100h], edx
           fld qword ptr [ebp-0000000D4h]
           fcomp qword ptr [ebp-000000218h]
           fnstsw ax
           test ah, 041h
           jne l1003522A
           mov eax, dword ptr [ebp-0000000D4h]
           mov dword ptr [ebp-000000420h], eax
           mov ecx, dword ptr [ebp-0000000D0h]
           mov dword ptr [ebp-00000041Ch], ecx
           jmp l10035242
;
;* Jump:
; 1003520E(C) 
;
l1003522A: mov edx, dword ptr [ebp-000000218h]
           mov dword ptr [ebp-000000420h], edx
           mov eax, dword ptr [ebp-000000214h]
           mov dword ptr [ebp-00000041Ch], eax
;
;* Jump:
; 10035228(U) 
;
l10035242: mov ecx, dword ptr [ebp-000000420h]
           mov dword ptr [ebp-0000000D4h], ecx
           mov edx, dword ptr [ebp-00000041Ch]
           mov dword ptr [ebp-0000000D0h], edx
           fld qword ptr [ebp-0000000F4h]
           fcomp qword ptr [ebp-000000220h]
           fnstsw ax
           test ah, 001h
           je l10035287
           mov eax, dword ptr [ebp-0000000F4h]
           mov dword ptr [ebp-000000428h], eax
           mov ecx, dword ptr [ebp-0000000F0h]
           mov dword ptr [ebp-000000424h], ecx
           jmp l1003529F
;
;* Jump:
; 1003526B(C) 
;
l10035287: mov edx, dword ptr [ebp-000000220h]
           mov dword ptr [ebp-000000428h], edx
           mov eax, dword ptr [ebp-00000021Ch]
           mov dword ptr [ebp-000000424h], eax
;
;* Jump:
; 10035285(U) 
;
l1003529F: mov ecx, dword ptr [ebp-000000428h]
           mov dword ptr [ebp-0000000F4h], ecx
           mov edx, dword ptr [ebp-000000424h]
           mov dword ptr [ebp-0000000F0h], edx
           fld qword ptr [ebp-0000000FCh]
           fcomp qword ptr [ebp-000000218h]
           fnstsw ax
           test ah, 001h
           je l100352E4
           mov eax, dword ptr [ebp-0000000FCh]
           mov dword ptr [ebp-000000430h], eax
           mov ecx, dword ptr [ebp-0000000F8h]
           mov dword ptr [ebp-00000042Ch], ecx
           jmp l100352FC
;
;* Jump:
; 100352C8(C) 
;
l100352E4: mov edx, dword ptr [ebp-000000218h]
           mov dword ptr [ebp-000000430h], edx
           mov eax, dword ptr [ebp-000000214h]
           mov dword ptr [ebp-00000042Ch], eax
;
;* Jump:
; 100352E2(U) 
;
l100352FC: mov ecx, dword ptr [ebp-000000430h]
           mov dword ptr [ebp-0000000FCh], ecx
           mov edx, dword ptr [ebp-00000042Ch]
           mov dword ptr [ebp-0000000F8h], edx
           fld qword ptr [ebp-0000000CCh]
           fcomp qword ptr [ebp-000000210h]
           fnstsw ax
           test ah, 001h
           je l10035341
           mov eax, dword ptr [ebp-0000000CCh]
           mov dword ptr [ebp-000000438h], eax
           mov ecx, dword ptr [ebp-0000000C8h]
           mov dword ptr [ebp-000000434h], ecx
           jmp l10035359
;
;* Jump:
; 10035325(C) 
;
l10035341: mov edx, dword ptr [ebp-000000210h]
           mov dword ptr [ebp-000000438h], edx
           mov eax, dword ptr [ebp-00000020Ch]
           mov dword ptr [ebp-000000434h], eax
;
;* Jump:
; 1003533F(U) 
;
l10035359: mov ecx, dword ptr [ebp-000000438h]
           mov dword ptr [ebp-0000000CCh], ecx
           mov edx, dword ptr [ebp-000000434h]
           mov dword ptr [ebp-0000000C8h], edx
           jmp near ptr l1003512B
;
;* Jump:
; 10035140(C) 
;
l10035376: fld dword ptr [ebp+01Ch]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 040h
           je l10035401
           fld dword ptr [ebp+014h]
           fsub dword ptr [ebp+00Ch]
           fld qword ptr [ebp-000000104h]
           fsub qword ptr [ebp-0000000F4h]
           fdivp st(01h), st(00h)
           fld dword ptr [ebp+018h]
           fsub dword ptr [ebp+010h]
           fld qword ptr [ebp-0000000D4h]
           fsub qword ptr [ebp-0000000FCh]
           fdivp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 041h
           jne l100353D3
           fld dword ptr [ebp+014h]
           fsub dword ptr [ebp+00Ch]
           fld qword ptr [ebp-000000104h]
           fsub qword ptr [ebp-0000000F4h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-000000440h]
           jmp l100353ED
;
;* Jump:
; 100353B5(C) 
;
l100353D3: fld dword ptr [ebp+018h]
           fsub dword ptr [ebp+010h]
           fld qword ptr [ebp-0000000D4h]
           fsub qword ptr [ebp-0000000FCh]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-000000440h]
;
;* Jump:
; 100353D1(U) 
;
l100353ED: mov eax, dword ptr [ebp-000000440h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-00000043Ch]
           mov dword ptr [ebp-024h], ecx
           jmp l10035407
;
;* Jump:
; 10035384(C) 
;
l10035401: fld dword ptr [ebp+01Ch]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 100353FF(U) 
;
l10035407: fld dword ptr [ebp+00Ch]
           fadd dword ptr [ebp+014h]
           fld qword ptr [ebp-0000000F4h]
           fadd qword ptr [ebp-000000104h]
           fmul qword ptr [ebp-028h]
           fsubp st(01h), st(00h)
           fmul qword ptr [g10042CE8]
           fstp qword ptr [ebp-014h]
           fld dword ptr [ebp+010h]
           fadd dword ptr [ebp+018h]
           fld qword ptr [ebp-0000000FCh]
           fadd qword ptr [ebp-0000000D4h]
           fmul qword ptr [ebp-028h]
           fsubp st(01h), st(00h)
           fmul qword ptr [g10042CE8]
           fstp qword ptr [ebp-01Ch]
           mov dword ptr [ebp-0000000ECh], 000000000h
           mov dword ptr [ebp-0000000E8h], 000000000h
           lea edx, [ebp-0000000E4h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-0000000DCh]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           fld qword ptr [ebp-0000000CCh]
           fsub qword ptr [g10042D88]
           fstp qword ptr [ebp-0000000CCh]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx+06Ch]
           cmp dword ptr [ebp+020h], 000000000h
           je l10035712
           push 000000002h
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+000000180h]
           fst dword ptr [ebp-000000224h]
           fmul qword ptr [g10042D80]
           fst dword ptr [ebp-000000444h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+000000170h]
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l100354FC
;
;* Jump:
; 100356F8(U) 
;
l100354F3: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 100354F1(U) 
;
l100354FC: mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+040h]
           jnb l100356FD
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [g1004A9BC]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+004h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [g1004A9BC]
           add eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000040Ch]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+008h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [g1004A9BC]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-000000394h]
           push ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10031760
           push eax
           lea edx, [ebp-0000003ACh]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-00000037Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10031760
           mov ecx, eax
           call l10031882
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-0000000ECh]
           rep movsd
           fld qword ptr [ebp-0000000DCh]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           je l100356F8
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+018h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+03Ch]
           lea eax, [edx+eax+018h]
           push eax
           push 000000000h
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-000000448h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx+008h]
           fadd qword ptr [ebp-01Ch]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-00000044Ch]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-028h]
           fmul qword ptr [eax]
           fadd qword ptr [ebp-014h]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-000000450h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [ecx+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-000000454h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx+008h]
           fadd qword ptr [ebp-01Ch]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-000000458h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [eax]
           fadd qword ptr [ebp-014h]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-00000045Ch]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-000000460h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx+008h]
           fadd qword ptr [ebp-01Ch]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-000000464h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [eax]
           fadd qword ptr [ebp-014h]
           fadd qword ptr [g10042CD8]
           fst dword ptr [ebp-000000468h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx+07Ch]
;
;* Jump:
; 100355C4(C) 
;
l100356F8: jmp near ptr l100354F3
;
;* Jump:
; 10035508(C) 
;
l100356FD: mov eax, dword ptr [ebp-000000224h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx+000000170h]
;
;* Jump:
; 100354A2(C) 
;
l10035712: push 000000003h
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+000000114h]
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10035734
;
;* Jump:
; 100358F3(U) 
;
l1003572B: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10035729(U) 
;
l10035734: mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+040h]
           jnb l100358F8
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-00000040Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [g1004A9BC]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+004h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [g1004A9BC]
           add eax, edx
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-00000040Ch]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx+008h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [g1004A9BC]
           add edx, ecx
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-0000003DCh]
           push ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10031760
           push eax
           lea edx, [ebp-0000003F4h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-0000003C4h]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10031760
           mov ecx, eax
           call l10031882
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-0000000ECh]
           rep movsd
           fld qword ptr [ebp-0000000DCh]
           fcomp qword ptr [g10042CF0]
           fnstsw ax
           test ah, 001h
           je l100358F3
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-00000040Ch]
           mov ecx, dword ptr [eax+03Ch]
           lea edx, [ecx+edx+018h]
           push edx
           push 03F000000h
           push 03F000000h
           push 03F000000h
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-00000046Ch]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ecx+008h]
           fadd qword ptr [ebp-01Ch]
           fst dword ptr [ebp-000000470h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx]
           fadd qword ptr [ebp-014h]
           fst dword ptr [ebp-000000474h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-000000478h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ecx+008h]
           fadd qword ptr [ebp-01Ch]
           fst dword ptr [ebp-00000047Ch]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx]
           fadd qword ptr [ebp-014h]
           fst dword ptr [ebp-000000480h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebp-0000000CCh]
           fst dword ptr [ebp-000000484h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ecx+008h]
           fadd qword ptr [ebp-01Ch]
           fst dword ptr [ebp-000000488h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx]
           fadd qword ptr [ebp-014h]
           fst dword ptr [ebp-00000048Ch]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+07Ch]
;
;* Jump:
; 100357FC(C) 
;
l100358F3: jmp near ptr l1003572B
;
;* Jump:
; 10035740(C) 
;
l100358F8: mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx+070h]
;
;* Jump:
; 10034D85(U), 10034EE3(U) 
;
l10035903: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0001Ch
l10034D5A ENDP
;
;* Call:
; 10004043 
;
l1003590B PROC
           push ebp
           mov ebp, esp
           sub esp, 0000002C4h
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10004676
           add esp, 000000008h
           mov dword ptr [ebp-000000210h], eax
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000024h
           mov dword ptr [ebp-000000214h], edx
           mov eax, dword ptr [ebp-000000214h]
           cmp dword ptr [eax+010h], 000000000h
           je l10035997
           mov ecx, dword ptr [ebp-000000214h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10035952
           jmp l10035997
;
;* Jump:
; 1003594E(C) 
;
l10035952: mov edx, dword ptr [ebp-000000214h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00000020Ch], eax
           mov ecx, dword ptr [ebp-00000020Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000214h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-000000214h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-000000214h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10035942(C), 10035950(U) 
;
l10035997: mov edx, dword ptr [ebp-000000214h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-000000210h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-000000214h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-000000214h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000214h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000214h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000214h]
           cmp dword ptr [edx+010h], 000000000h
           je l10035AB7
           mov eax, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-000000200h], ecx
           mov edx, dword ptr [ebp-000000200h]
           imul edx, edx, 000000030h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000208h], eax
           cmp dword ptr [ebp-000000208h], 000000000h
           je l10035A4C
           push offset l1003D740
           mov eax, dword ptr [ebp-000000200h]
           push eax
           push 000000030h
           mov ecx, dword ptr [ebp-000000208h]
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-000000208h]
           mov dword ptr [ebp-0000002A8h], edx
           jmp l10035A56
;
;* Jump:
; 10035A22(C) 
;
l10035A4C: mov dword ptr [ebp-0000002A8h], 000000000h
;
;* Jump:
; 10035A4A(U) 
;
l10035A56: mov eax, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [ebp-0000002A8h]
           mov dword ptr [eax+004h], ecx
           mov dword ptr [ebp-000000204h], 000000000h
           jmp l10035A80
;
;* Jump:
; 10035AB5(U) 
;
l10035A71: mov edx, dword ptr [ebp-000000204h]
           add edx, 000000001h
           mov dword ptr [ebp-000000204h], edx
;
;* Jump:
; 10035A6F(U) 
;
l10035A80: mov eax, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [ebp-000000204h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10035AB7
           mov edx, dword ptr [ebp-000000204h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-000000214h]
           mov ecx, dword ptr [eax+004h]
           add ecx, edx
           push ecx
           mov edx, dword ptr [ebp-000000210h]
           push edx
           call l100321A0
           add esp, 000000008h
           jmp l10035A71
;
;* Jump:
; 100359EE(C), 10035A8F(C) 
;
l10035AB7: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000038h
           mov dword ptr [ebp-000000224h], eax
           mov ecx, dword ptr [ebp-000000224h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10035B22
           mov edx, dword ptr [ebp-000000224h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10035ADD
           jmp l10035B22
;
;* Jump:
; 10035AD9(C) 
;
l10035ADD: mov eax, dword ptr [ebp-000000224h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000220h], ecx
           mov edx, dword ptr [ebp-000000220h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000224h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-000000224h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-000000224h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10035ACD(C), 10035ADB(U) 
;
l10035B22: mov eax, dword ptr [ebp-000000224h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-000000210h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000224h]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-000000224h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000224h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000224h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000224h]
           cmp dword ptr [edx+010h], 000000000h
           je l10035BF7
           mov eax, dword ptr [ebp-000000224h]
           mov ecx, dword ptr [eax+010h]
           imul ecx, ecx, 000000038h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000021Ch], eax
           mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [ebp-00000021Ch]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000218h], 000000000h
           jmp l10035BC0
;
;* Jump:
; 10035BF5(U) 
;
l10035BB1: mov ecx, dword ptr [ebp-000000218h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000218h], ecx
;
;* Jump:
; 10035BAF(U) 
;
l10035BC0: mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [ebp-000000218h]
           cmp eax, dword ptr [edx+008h]
           jnb l10035BF7
           mov ecx, dword ptr [ebp-000000218h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-000000210h]
           push ecx
           call l1003236C
           add esp, 000000008h
           jmp l10035BB1
;
;* Jump:
; 10035B79(C), 10035BCF(C) 
;
l10035BF7: lea edx, [ebp-014h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           cmp dword ptr [ebp-014h], 000000001h
           jbe l10035C19
           mov dword ptr [g100488B8], 040000000h
           jmp l10035C23
;
;* Jump:
; 10035C0B(C) 
;
l10035C19: mov dword ptr [g100488B8], 03F800000h
;
;* Jump:
; 10035C17(U) 
;
;* String: "Amazon"
;
l10035C23: push offset g10048904
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           call l100035D2
           test eax, eax
           je l10035C41
           mov dword ptr [g100488B8], 03F800000h
;
;* Jump:
; 10035C35(C) 
;
l10035C41: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000004Ch
           mov dword ptr [ebp-000000238h], ecx
           mov edx, dword ptr [ebp-000000238h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10035C5E
           jmp near ptr l10035D2B
;
;* Jump:
; 10035C57(C) 
;
l10035C5E: mov eax, 000000001h
           test eax, eax
           je l10035CE6
           mov dword ptr [ebp-000000228h], 000000000h
           jmp l10035C82
;
;* Jump:
; 10035CE4(U) 
;
l10035C73: mov ecx, dword ptr [ebp-000000228h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000228h], ecx
;
;* Jump:
; 10035C71(U) 
;
l10035C82: mov edx, dword ptr [ebp-000000238h]
           mov eax, dword ptr [ebp-000000228h]
           cmp eax, dword ptr [edx+008h]
           jnb l10035CE6
           mov ecx, dword ptr [ebp-000000238h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000228h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000230h], ecx
           mov edx, dword ptr [ebp-000000230h]
           mov dword ptr [ebp-00000022Ch], edx
           cmp dword ptr [ebp-00000022Ch], 000000000h
           je l10035CDA
           push 000000001h
           mov eax, dword ptr [ebp-00000022Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00000022Ch]
           call [edx]
           mov dword ptr [ebp-0000002ACh], eax
           jmp l10035CE4
;
;* Jump:
; 10035CBE(C) 
;
l10035CDA: mov dword ptr [ebp-0000002ACh], 000000000h
;
;* Jump:
; 10035CD8(U) 
;
l10035CE4: jmp l10035C73
;
;* Jump:
; 10035C65(C), 10035C91(C) 
;
l10035CE6: mov eax, dword ptr [ebp-000000238h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000234h], ecx
           mov edx, dword ptr [ebp-000000234h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000238h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-000000238h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-000000238h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10035C59(U) 
;
l10035D2B: mov dword ptr [ebp-00Ch], 000000000h
           jmp l10035D3D
;
;* Jump:
; 10035F4A(U) 
;
l10035D34: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10035D32(U) 
;
l10035D3D: mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [ebp-014h]
           jnb l10035F4F
           push 0000000ACh
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           cmp dword ptr [ebp-02Ch], 000000000h
           je l10035DAE
           mov ecx, dword ptr [ebp-02Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000010h
           call l1002E190
           mov edx, dword ptr [ebp-02Ch]
           add edx, 000000090h
           mov dword ptr [ebp-00000023Ch], edx
           push 000000001h
           mov ecx, dword ptr [ebp-00000023Ch]
           call l10039F20
           mov eax, dword ptr [ebp-00000023Ch]
           mov dword ptr [eax], offset g10042D94
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], offset g10042D90
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-0000002B0h], edx
           jmp l10035DB8
;
;* Jump:
; 10035D5D(C) 
;
l10035DAE: mov dword ptr [ebp-0000002B0h], 000000000h
;
;* Jump:
; 10035DAC(U) 
;
l10035DB8: mov eax, dword ptr [ebp-0000002B0h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10032524
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000004Ch
           mov dword ptr [ebp-000000254h], eax
           mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ebp-000000254h]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l10035E23
           mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000254h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-000000254h]
           mov dword ptr [eax+008h], edx
           jmp near ptr l10035F4A
;
;* Jump:
; 10035DEF(C) 
;
l10035E23: mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-000000254h]
           add edx, dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-000000254h]
           mov dword ptr [ecx+010h], edx
           mov edx, dword ptr [ebp-000000254h]
           cmp dword ptr [edx+008h], 000000000h
           je l10035EF3
           mov eax, dword ptr [ebp-000000254h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000248h], eax
           mov edx, dword ptr [ebp-000000248h]
           mov dword ptr [ebp-000000240h], edx
           mov dword ptr [ebp-000000244h], 000000000h
           jmp l10035E90
;
;* Jump:
; 10035EC2(U) 
;
l10035E81: mov eax, dword ptr [ebp-000000244h]
           add eax, 000000001h
           mov dword ptr [ebp-000000244h], eax
;
;* Jump:
; 10035E7F(U) 
;
l10035E90: mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ebp-000000244h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10035EC4
           mov eax, dword ptr [ebp-000000254h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-000000244h]
           mov eax, dword ptr [ebp-000000240h]
           mov esi, dword ptr [ebp-000000244h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10035E81
;
;* Jump:
; 10035E9F(C) 
;
l10035EC4: mov edx, dword ptr [ebp-000000254h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00000024Ch], eax
           mov ecx, dword ptr [ebp-00000024Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000254h]
           mov eax, dword ptr [ebp-000000240h]
           mov dword ptr [edx+004h], eax
           jmp l10035F1D
;
;* Jump:
; 10035E48(C) 
;
l10035EF3: mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000250h], eax
           mov eax, dword ptr [ebp-000000254h]
           mov ecx, dword ptr [ebp-000000250h]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 10035EF1(U) 
;
l10035F1D: mov edx, dword ptr [ebp-000000254h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000254h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-000000254h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-000000254h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10035E1E(U) 
;
l10035F4A: jmp near ptr l10035D34
;
;* Jump:
; 10035D43(C) 
;
l10035F4F: push 000000000h
           push 000000000h
           lea ecx, [ebp-0000000ACh]
           call l1002E2AD
           mov esi, eax
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000130h
           mov ecx, 000000020h
           rep movsd
           push 000000000h
           push 000000000h
           lea ecx, [ebp-00000012Ch]
           call l1002E2AD
           mov esi, eax
           mov edi, dword ptr [ebp+00Ch]
           add edi, 0000001B0h
           mov ecx, 000000020h
           rep movsd
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000240h
           call l10031623
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000258h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1002A7F2
           add esp, 000000008h
           mov dword ptr [ebp-000000264h], eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 0000000E8h
           mov dword ptr [ebp-000000268h], ecx
           mov edx, dword ptr [ebp-000000268h]
           cmp dword ptr [edx+010h], 000000000h
           je l10035FE7
           push 000000001h
           mov ecx, dword ptr [ebp-000000268h]
           call l1003BCE0
;
;* Jump:
; 10035FD8(C) 
;
l10035FE7: mov eax, dword ptr [ebp-000000268h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-000000264h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-000000268h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000268h]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-000000268h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000268h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000268h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000268h]
           cmp dword ptr [edx+010h], 000000000h
           je l10036120
           mov eax, dword ptr [ebp-000000268h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000025Ch], eax
           mov edx, dword ptr [ebp-000000268h]
           mov eax, dword ptr [ebp-00000025Ch]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000258h], 000000000h
           jmp l10036089
;
;* Jump:
; 1003611B(U) 
;
l1003607A: mov ecx, dword ptr [ebp-000000258h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000258h], ecx
;
;* Jump:
; 10036078(U) 
;
l10036089: mov edx, dword ptr [ebp-000000268h]
           mov eax, dword ptr [ebp-000000258h]
           cmp eax, dword ptr [edx+008h]
           jnb l10036120
           push 000000020h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000260h], eax
           cmp dword ptr [ebp-000000260h], 000000000h
           je l100360D7
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-000000260h]
           add ecx, 000000008h
           call l1003D950
           mov ecx, dword ptr [ebp-000000260h]
           mov dword ptr [ebp-0000002B4h], ecx
           jmp l100360E1
;
;* Jump:
; 100360B5(C) 
;
l100360D7: mov dword ptr [ebp-0000002B4h], 000000000h
;
;* Jump:
; 100360D5(U) 
;
l100360E1: mov edx, dword ptr [ebp-000000268h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000258h]
           mov edx, dword ptr [ebp-0000002B4h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-000000268h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-000000258h]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp-000000264h]
           push ecx
           call l10032003
           add esp, 000000008h
           jmp near ptr l1003607A
;
;* Jump:
; 1003603E(C), 10036098(C) 
;
l10036120: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           mov dword ptr [ebp-00000027Ch], edx
           mov eax, dword ptr [ebp-00000027Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l10036145
           push 000000001h
           mov ecx, dword ptr [ebp-00000027Ch]
           call l1003B840
;
;* Jump:
; 10036136(C) 
;
l10036145: mov ecx, dword ptr [ebp-00000027Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-000000264h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp-00000027Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-00000027Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp-00000027Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-00000027Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00000027Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00000027Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100362B6
           mov eax, dword ptr [ebp-00000027Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000270h], eax
           mov edx, dword ptr [ebp-00000027Ch]
           mov eax, dword ptr [ebp-000000270h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-00000026Ch], 000000000h
           jmp l100361E7
;
;* Jump:
; 100362B1(U) 
;
l100361D8: mov ecx, dword ptr [ebp-00000026Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000026Ch], ecx
;
;* Jump:
; 100361D6(U) 
;
l100361E7: mov edx, dword ptr [ebp-00000027Ch]
           mov eax, dword ptr [ebp-00000026Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l100362B6
           push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000274h], eax
           cmp dword ptr [ebp-000000274h], 000000000h
           je l1003626D
           mov ecx, dword ptr [ebp-000000274h]
           add ecx, 000000008h
           mov dword ptr [ebp-000000278h], ecx
           mov edx, dword ptr [ebp-000000278h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-000000278h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-000000278h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-000000274h]
           mov dword ptr [ebp-0000002B8h], edx
           jmp l10036277
;
;* Jump:
; 10036213(C) 
;
l1003626D: mov dword ptr [ebp-0000002B8h], 000000000h
;
;* Jump:
; 1003626B(U) 
;
l10036277: mov eax, dword ptr [ebp-00000027Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-00000026Ch]
           mov eax, dword ptr [ebp-0000002B8h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-00000027Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-00000026Ch]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp-000000264h]
           push edx
           call l100327E1
           add esp, 000000008h
           jmp near ptr l100361D8
;
;* Jump:
; 1003619C(C), 100361F6(C) 
;
l100362B6: mov eax, dword ptr [ebp+00Ch]
           add eax, 0000000D0h
           mov dword ptr [ebp-00000028Ch], eax
           mov ecx, dword ptr [ebp-00000028Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l100362DD
           push 000000001h
           mov ecx, dword ptr [ebp-00000028Ch]
           call l1003BBE0
;
;* Jump:
; 100362CE(C) 
;
l100362DD: mov edx, dword ptr [ebp-00000028Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-000000264h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00000028Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-00000028Ch]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-00000028Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-00000028Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00000028Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00000028Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l10036408
           mov eax, dword ptr [ebp-00000028Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000284h], eax
           mov edx, dword ptr [ebp-00000028Ch]
           mov eax, dword ptr [ebp-000000284h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000280h], 000000000h
           jmp l1003637F
;
;* Jump:
; 10036403(U) 
;
l10036370: mov ecx, dword ptr [ebp-000000280h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000280h], ecx
;
;* Jump:
; 1003636E(U) 
;
l1003637F: mov edx, dword ptr [ebp-00000028Ch]
           mov eax, dword ptr [ebp-000000280h]
           cmp eax, dword ptr [edx+008h]
           jnb l10036408
           push 000000090h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000288h], eax
           cmp dword ptr [ebp-000000288h], 000000000h
           je l100363BF
           mov ecx, dword ptr [ebp-000000288h]
           call l1003D7C0
           mov dword ptr [ebp-0000002BCh], eax
           jmp l100363C9
;
;* Jump:
; 100363AA(C) 
;
l100363BF: mov dword ptr [ebp-0000002BCh], 000000000h
;
;* Jump:
; 100363BD(U) 
;
l100363C9: mov ecx, dword ptr [ebp-00000028Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000280h]
           mov ecx, dword ptr [ebp-0000002BCh]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-00000028Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000280h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp-000000264h]
           push eax
           call l10032871
           add esp, 000000008h
           jmp near ptr l10036370
;
;* Jump:
; 10036334(C), 1003638E(C) 
;
l10036408: lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-000000264h]
           push edx
           call l10001BD9
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+054h], 000000001h
           jbe l1003648B
           mov dword ptr [ebp-000000144h], 000000000h
           mov dword ptr [ebp-000000140h], 000000000h
           lea ecx, [ebp-00000013Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-000000134h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov edi, dword ptr [ebp+00Ch]
           add edi, 000000258h
           mov ecx, 000000006h
           lea esi, [ebp-000000144h]
           rep movsd
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+000000270h], 000000000h
           mov dword ptr [eax+000000274h], 0409F4000h
;
;* Jump:
; 10036422(C) 
;
l1003648B: cmp dword ptr [ebp-008h], 000000000h
           jbe l100365F5
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000100h
           mov dword ptr [ebp-00000029Ch], ecx
           mov edx, dword ptr [ebp-00000029Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100364BD
           push 000000001h
           mov ecx, dword ptr [ebp-00000029Ch]
           call l1003BEB0
;
;* Jump:
; 100364AE(C) 
;
l100364BD: mov eax, dword ptr [ebp-00000029Ch]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-00000029Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-00000029Ch]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-00000029Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-00000029Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00000029Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00000029Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100365DF
           mov eax, dword ptr [ebp-00000029Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000294h], eax
           mov edx, dword ptr [ebp-00000029Ch]
           mov eax, dword ptr [ebp-000000294h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000290h], 000000000h
           jmp l1003655C
;
;* Jump:
; 100365DA(U) 
;
l1003654D: mov ecx, dword ptr [ebp-000000290h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000290h], ecx
;
;* Jump:
; 1003654B(U) 
;
l1003655C: mov edx, dword ptr [ebp-00000029Ch]
           mov eax, dword ptr [ebp-000000290h]
           cmp eax, dword ptr [edx+008h]
           jnb l100365DF
           push 000000058h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000298h], eax
           cmp dword ptr [ebp-000000298h], 000000000h
           je l10036599
           mov ecx, dword ptr [ebp-000000298h]
           call l10039670
           mov dword ptr [ebp-0000002C0h], eax
           jmp l100365A3
;
;* Jump:
; 10036584(C) 
;
l10036599: mov dword ptr [ebp-0000002C0h], 000000000h
;
;* Jump:
; 10036597(U) 
;
l100365A3: mov ecx, dword ptr [ebp-00000029Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000290h]
           mov ecx, dword ptr [ebp-0000002C0h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-00000029Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000290h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l100328ED
           add esp, 000000008h
           jmp near ptr l1003654D
;
;* Jump:
; 10036511(C), 1003656B(C) 
;
l100365DF: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000008Ch
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1003CFD0
           add esp, 000000008h
;
;* Jump:
; 1003648F(C) 
;
;* String: "Crush"
;
l100365F5: push offset g1004890C
           lea ecx, [ebp-000000150h]
           call l10003337
           mov eax, dword ptr [ebp+00Ch]
           add eax, 0000000D0h
           mov dword ptr [ebp-0000002A4h], eax
           mov dword ptr [ebp-0000002A0h], 000000000h
           jmp l1003662E
;
;* Jump:
; 10036680(U) 
;
l1003661F: mov ecx, dword ptr [ebp-0000002A0h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000002A0h], ecx
;
;* Jump:
; 1003661D(U) 
;
l1003662E: mov edx, dword ptr [ebp-0000002A4h]
           mov eax, dword ptr [ebp-0000002A0h]
           cmp eax, dword ptr [edx+008h]
           jnb l10036682
           mov ecx, dword ptr [ebp-0000002A4h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-0000002A0h]
           mov ecx, dword ptr [edx+eax*04h]
           call l10003A2F
           push eax
           lea ecx, [ebp-000000150h]
           call l1000354D
           test eax, eax
           je l10036680
           mov ecx, dword ptr [ebp-0000002A4h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-0000002A0h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000148h], ecx
           jmp l1003668C
;
;* Jump:
; 10036664(C) 
;
l10036680: jmp l1003661F
;
;* Jump:
; 1003663D(C) 
;
l10036682: mov dword ptr [ebp-000000148h], 000000000h
;
;* Jump:
; 1003667E(U) 
;
l1003668C: lea ecx, [ebp-000000150h]
           call l100039BA
           cmp dword ptr [ebp-000000148h], 000000000h
           je l100366FB
           mov dword ptr [ebp-018h], 000000000h
           jmp l100366B2
;
;* Jump:
; 100366F9(U) 
;
l100366A9: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 100366A7(U) 
;
l100366B2: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+000000108h]
           jnb l100366FB
           push offset g10048914
           lea ecx, [ebp-000000158h]
           call l10003337
           lea edx, [ebp-000000158h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+000000104h]
           mov edx, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+edx*04h]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-000000158h]
           call l100039BA
           jmp l100366A9
;
;* Jump:
; 1003669E(C), 100366BE(C) 
;
l100366FB: mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+000000108h], 000000000h
           jne l100368B0
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+000000094h], 000000000h
           jne l100368B0
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+054h], 000000001h
           jne l100368B0
;
;* String: "1H_R"
;
           push offset g10048918
           lea ecx, [ebp-000000160h]
           call l10003337
           lea eax, [ebp-000000160h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 0000000D0h
           call l1003A1E0
           mov dword ptr [ebp-01Ch], eax
           lea ecx, [ebp-000000160h]
           call l100039BA
           cmp dword ptr [ebp-01Ch], 000000000h
           je l100368B0
           push 000000058h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000164h], eax
           cmp dword ptr [ebp-000000164h], 000000000h
           je l10036791
           mov ecx, dword ptr [ebp-000000164h]
           call l10039670
           mov dword ptr [ebp-0000002C4h], eax
           jmp l1003679B
;
;* Jump:
; 1003677C(C) 
;
l10036791: mov dword ptr [ebp-0000002C4h], 000000000h
;
;* Jump:
; 1003678F(U) 
;
l1003679B: mov ecx, dword ptr [ebp-0000002C4h]
           mov dword ptr [ebp-020h], ecx
;
;* String: "C0"
;
           push offset g10048920
           lea ecx, [ebp-00000016Ch]
           call l10003337
           lea edx, [ebp-00000016Ch]
           push edx
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-00000016Ch]
           call l100039BA
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 00000000Ch
           push ecx
           push offset g1004A978
           push 0407F4000h
           push 000000000h
           lea edx, [ebp-000000184h]
           push edx
           call l10031505
           add esp, 000000010h
           push eax
           lea eax, [ebp-00000019Ch]
           push eax
           call l1002FEB3
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-020h]
           add edi, 000000010h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 00000000Ch
           push ecx
           push offset g1004A978
           push 0407F4000h
           push 000000000h
           lea edx, [ebp-0000001B4h]
           push edx
           call l10031505
           add esp, 000000010h
           push eax
           lea eax, [ebp-0000001CCh]
           push eax
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-020h]
           add edi, 000000028h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 00000000Ch
           push ecx
           push offset g1004A960
           push 040590000h
           push 000000000h
           lea edx, [ebp-0000001E4h]
           push edx
           call l10031505
           add esp, 000000010h
           push eax
           lea eax, [ebp-0000001FCh]
           push eax
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-020h]
           add edi, 000000040h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000100h
           call l1003A240
;
;* Jump:
; 10036705(C), 10036715(C), 10036722(C), 1003675F(C) 
;
l100368B0: cmp dword ptr [ebp-008h], 000000001h
           jbe l100368CB
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000064h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1003D1F0
           add esp, 000000008h
           jmp l1003690B
;
;* Jump:
; 100368B4(C) 
;
l100368CB: push 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+040h]
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000064h
           call l1003A050
           mov dword ptr [ebp-024h], 000000000h
           jmp l100368F1
;
;* Jump:
; 10036909(U) 
;
l100368E8: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 100368E6(U) 
;
l100368F1: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ecx+06Ch]
           jnb l1003690B
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+068h]
           mov edx, dword ptr [ebp-024h]
           mov byte ptr [ecx+edx], 000h
           jmp l100368E8
;
;* Jump:
; 100368C9(U), 100368FA(C) 
;
l1003690B: cmp dword ptr [ebp-008h], 000000002h
           jbe l10036968
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000078h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1003D2E0
           add esp, 000000008h
           mov dword ptr [ebp-028h], 000000000h
           jmp l10036936
;
;* Jump:
; 10036966(U) 
;
l1003692D: mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 1003692B(U) 
;
l10036936: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [eax+000000080h]
           jnb l10036968
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+07Ch]
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [eax+ecx*04h], 0CDCDCDCDh
           jne l10036966
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+07Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+ecx*04h], 000000000h
;
;* Jump:
; 10036954(C) 
;
l10036966: jmp l1003692D
;
;* Jump:
; 1003690F(C), 10036942(C) 
;
l10036968: cmp dword ptr [ebp-008h], 000000003h
           jbe l10036984
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000118h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1003D3D0
           add esp, 000000008h
;
;* Jump:
; 1003696C(C) 
;
l10036984: mov ecx, dword ptr [ebp+00Ch]
           call l10032AE6
           mov ecx, dword ptr [ebp+00Ch]
           call l10034A8A
           mov ecx, dword ptr [ebp+00Ch]
           call l100335C3
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+054h], 000000001h
           jne l100369AD
           mov ecx, dword ptr [ebp+00Ch]
           call l10036E0D
;
;* Jump:
; 100369A3(C) 
;
l100369AD: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov ecx, offset g1004A9D0
           call l1003A360
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l100369D8
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fstp qword ptr [ecx+000000238h]
           jmp l100369E7
;
;* Jump:
; 100369C5(C) 
;
l100369D8: fld dword ptr [g100488BC]
           mov edx, dword ptr [ebp+00Ch]
           fstp qword ptr [edx+000000238h]
;
;* Jump:
; 100369D6(U) 
;
l100369E7: mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1003590B ENDP
;
;* Call:
; 10003FB0, 10005CA0 
;
l100369F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000068h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+054h], 000000001h
           jbe l10036A0B
           mov dword ptr [g100488B8], 040000000h
           jmp l10036A15
;
;* Jump:
; 100369FD(C) 
;
l10036A0B: mov dword ptr [g100488B8], 03F800000h
;
;* Jump:
; 10036A09(U) 
;
l10036A15: mov dword ptr [ebp-004h], 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000468E
           add esp, 000000008h
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000024h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           jmp l10036A5D
;
;* Jump:
; 10036A83(U) 
;
l10036A54: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 10036A52(U) 
;
l10036A5D: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10036A85
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           add edx, eax
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100321C8
           add esp, 000000008h
           jmp l10036A54
;
;* Jump:
; 10036A66(C) 
;
l10036A85: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000038h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-014h], 000000000h
           jmp l10036AB3
;
;* Jump:
; 10036AD9(U) 
;
l10036AAA: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10036AA8(U) 
;
l10036AB3: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+008h]
           jnb l10036ADB
           mov ecx, dword ptr [ebp-014h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10032420
           add esp, 000000008h
           jmp l10036AAA
;
;* Jump:
; 10036ABC(C) 
;
l10036ADB: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000004Ch
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10036B09
;
;* Jump:
; 10036B2D(U) 
;
l10036B00: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10036AFE(U) 
;
l10036B09: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+008h]
           jnb l10036B2F
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l1003270D
           add esp, 000000008h
           jmp l10036B00
;
;* Jump:
; 10036B12(C) 
;
l10036B2F: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000258h
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l1002A81A
           add esp, 000000008h
           mov dword ptr [ebp-028h], eax
           mov eax, dword ptr [ebp+00Ch]
           add eax, 0000000E8h
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-024h], 000000000h
           jmp l10036B78
;
;* Jump:
; 10036B9C(U) 
;
l10036B6F: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10036B6D(U) 
;
l10036B78: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10036B9E
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call l10031F82
           add esp, 000000008h
           jmp l10036B6F
;
;* Jump:
; 10036B81(C) 
;
l10036B9E: mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-030h], 000000000h
           jmp l10036BCC
;
;* Jump:
; 10036BF0(U) 
;
l10036BC3: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 10036BC1(U) 
;
l10036BCC: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-030h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10036BF2
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l10032829
           add esp, 000000008h
           jmp l10036BC3
;
;* Jump:
; 10036BD5(C) 
;
l10036BF2: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 0000000D0h
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-038h], 000000000h
           jmp l10036C23
;
;* Jump:
; 10036C47(U) 
;
l10036C1A: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 10036C18(U) 
;
l10036C23: mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [ebp-038h]
           cmp eax, dword ptr [edx+008h]
           jnb l10036C49
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l100328B6
           add esp, 000000008h
           jmp l10036C1A
;
;* Jump:
; 10036C2C(C) 
;
l10036C49: lea eax, [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call l10002008
           add esp, 000000008h
           mov dword ptr [ebp-044h], eax
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000100h
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-048h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-044h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-040h], 000000000h
           jmp l10036C8D
;
;* Jump:
; 10036CB1(U) 
;
l10036C84: mov edx, dword ptr [ebp-040h]
           add edx, 000000001h
           mov dword ptr [ebp-040h], edx
;
;* Jump:
; 10036C82(U) 
;
l10036C8D: mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-040h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10036CB3
           mov edx, dword ptr [ebp-048h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp-044h]
           push eax
           call l10032945
           add esp, 000000008h
           jmp l10036C84
;
;* Jump:
; 10036C96(C) 
;
l10036CB3: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000008Ch
           mov dword ptr [ebp-050h], ecx
           mov edx, dword ptr [ebp-050h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp-044h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-04Ch], 000000000h
           jmp l10036CE4
;
;* Jump:
; 10036D08(U) 
;
l10036CDB: mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-04Ch], ecx
;
;* Jump:
; 10036CD9(U) 
;
l10036CE4: mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [ebp-04Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l10036D0A
           mov ecx, dword ptr [ebp-050h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l10032A75
           add esp, 000000008h
           jmp l10036CDB
;
;* Jump:
; 10036CED(C) 
;
l10036D0A: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000064h
           mov dword ptr [ebp-058h], eax
           mov ecx, dword ptr [ebp-058h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-054h], 000000000h
           jmp l10036D38
;
;* Jump:
; 10036D59(U) 
;
l10036D2F: mov eax, dword ptr [ebp-054h]
           add eax, 000000001h
           mov dword ptr [ebp-054h], eax
;
;* Jump:
; 10036D2D(U) 
;
l10036D38: mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ebp-054h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10036D5B
           mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [eax+004h]
           add ecx, dword ptr [ebp-054h]
           push ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l10001F9A
           add esp, 000000008h
           jmp l10036D2F
;
;* Jump:
; 10036D41(C) 
;
l10036D5B: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000078h
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-060h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-05Ch], 000000000h
           jmp l10036D89
;
;* Jump:
; 10036DAD(U) 
;
l10036D80: mov eax, dword ptr [ebp-05Ch]
           add eax, 000000001h
           mov dword ptr [ebp-05Ch], eax
;
;* Jump:
; 10036D7E(U) 
;
l10036D89: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-05Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l10036DAF
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-05Ch]
           lea eax, [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp-044h]
           push ecx
           call l10002008
           add esp, 000000008h
           jmp l10036D80
;
;* Jump:
; 10036D92(C) 
;
l10036DAF: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000118h
           mov dword ptr [ebp-068h], edx
           mov eax, dword ptr [ebp-068h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-044h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-064h], 000000000h
           jmp l10036DE0
;
;* Jump:
; 10036E04(U) 
;
l10036DD7: mov edx, dword ptr [ebp-064h]
           add edx, 000000001h
           mov dword ptr [ebp-064h], edx
;
;* Jump:
; 10036DD5(U) 
;
l10036DE0: mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [ebp-064h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10036E06
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp-044h]
           push eax
           call l100329E5
           add esp, 000000008h
           jmp l10036DD7
;
;* Jump:
; 10036DE9(C) 
;
l10036E06: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l100369F0 ENDP
;
;* Call:
; 100369A8, 10039375 
;
;* Export: ?SetUpBSP@B_ObjDscr@@QAEXXZ, 0115
;
l10036E0D PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000A8h
           push esi
           mov dword ptr [ebp-0000000A0h], ecx
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [eax+040h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000024h
           add edx, 000000004h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           cmp dword ptr [ebp-024h], 000000000h
           je l10036ED2
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-06Ch], edx
           mov dword ptr [ebp-068h], 000000024h
           mov eax, dword ptr [ebp-024h]
           add eax, 000000004h
           mov dword ptr [ebp-064h], eax
;
;* Jump:
; 10036EC2(U) 
;
l10036E66: mov ecx, dword ptr [ebp-06Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-06Ch], ecx
           cmp dword ptr [ebp-06Ch], 000000000h
           jl l10036EC4
           mov edx, dword ptr [ebp-064h]
           add edx, 000000004h
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp-060h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-060h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-060h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax], offset g10042D3C
           mov ecx, dword ptr [ebp-064h]
           add ecx, dword ptr [ebp-068h]
           mov dword ptr [ebp-064h], ecx
           jmp l10036E66
;
;* Jump:
; 10036E73(C) 
;
l10036EC4: mov edx, dword ptr [ebp-024h]
           add edx, 000000004h
           mov dword ptr [ebp-0000000A4h], edx
           jmp l10036EDC
;
;* Jump:
; 10036E42(C) 
;
l10036ED2: mov dword ptr [ebp-0000000A4h], 000000000h
;
;* Jump:
; 10036ED0(U) 
;
l10036EDC: mov eax, dword ptr [ebp-0000000A4h]
           mov dword ptr [ebp-01Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000001h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-014h], offset g10042D7C
           mov dword ptr [ebp-020h], 000000000h
           jmp l10036F1A
;
;* Jump:
; 10037111(U) 
;
l10036F11: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10036F0F(U) 
;
l10036F1A: mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx+040h]
           jnb l10037116
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-070h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-074h], ecx
           mov edx, dword ptr [ebp-020h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-078h], ecx
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000000A0h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           mov dword ptr [ebp-07Ch], edx
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-0000000A0h]
           mov edx, dword ptr [ecx+03Ch]
           add edx, eax
           mov dword ptr [ebp-080h], edx
           mov eax, dword ptr [ebp-080h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           mov dword ptr [ebp-000000084h], eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [edx+03Ch]
           mov ecx, dword ptr [eax+ecx]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           push eax
           lea ecx, [ebp-03Ch]
           push ecx
           mov edx, dword ptr [ebp-020h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+008h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           call l10031760
           push eax
           mov ecx, dword ptr [ebp-074h]
           push ecx
           lea edx, [ebp-054h]
           push edx
           mov ecx, dword ptr [ebp-07Ch]
           call l10031760
           push eax
           mov eax, dword ptr [ebp-000000084h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000024h
           mov edx, dword ptr [ebp-01Ch]
           add ecx, edx
           call l10031284
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l10037044
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l10037111
;
;* Jump:
; 10037028(C) 
;
l10037044: mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100370DE
           mov eax, dword ptr [ebp-004h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000090h], eax
           mov ecx, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-000000088h], ecx
           mov dword ptr [ebp-00000008Ch], 000000000h
           jmp l10037093
;
;* Jump:
; 100370B9(U) 
;
l10037084: mov edx, dword ptr [ebp-00000008Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000008Ch], edx
;
;* Jump:
; 10037082(U) 
;
l10037093: mov eax, dword ptr [ebp-00000008Ch]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l100370BB
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [ebp-000000088h]
           mov esi, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10037084
;
;* Jump:
; 1003709C(C) 
;
l100370BB: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000094h], edx
           mov eax, dword ptr [ebp-000000094h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000088h]
           mov dword ptr [ebp-010h], ecx
           jmp l100370FC
;
;* Jump:
; 10037051(C) 
;
l100370DE: mov edx, dword ptr [ebp-004h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000098h], eax
           mov eax, dword ptr [ebp-000000098h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 100370DC(U) 
;
l100370FC: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1003703F(U) 
;
l10037111: jmp near ptr l10036F11
;
;* Jump:
; 10036F26(C) 
;
l10037116: cmp dword ptr [ebp-00Ch], 000000000h
           je l1003713C
           mov edx, dword ptr [ebp-0000000A0h]
           add edx, 0000000A4h
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           lea ecx, [ebp-014h]
           push ecx
           mov ecx, dword ptr [ebp-0000000A0h]
           call l1003737B
;
;* Jump:
; 1003711A(C) 
;
l1003713C: mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-05Ch], edx
           mov eax, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-058h], eax
           cmp dword ptr [ebp-058h], 000000000h
           je l10037162
           push 000000003h
           mov ecx, dword ptr [ebp-058h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-058h]
           call [edx]
           mov dword ptr [ebp-0000000A8h], eax
           jmp l1003716C
;
;* Jump:
; 1003714C(C) 
;
l10037162: mov dword ptr [ebp-0000000A8h], 000000000h
;
;* Jump:
; 10037160(U) 
;
l1003716C: mov dword ptr [ebp-014h], offset g10042D7C
           cmp dword ptr [ebp-004h], 000000000h
           je l100371AE
           cmp dword ptr [ebp-004h], 000000000h
           jne l10037181
           jmp l100371AE
;
;* Jump:
; 1003717D(C) 
;
l10037181: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-00000009Ch], eax
           mov ecx, dword ptr [ebp-00000009Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10037177(C), 1003717F(U) 
;
l100371AE: pop esi
           mov esp, ebp
           pop ebp
           ret
l10036E0D ENDP
;
;* Call:
; 10037550 
;
l100371B3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+028h]
           add eax, ecx
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+014h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [ecx+01Ch]
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-020h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-020h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-020h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-024h]
           fld qword ptr [edx+010h]
           fmul qword ptr [ecx+014h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-024h]
           fld qword ptr [edx+008h]
           fmul qword ptr [ecx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-024h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [eax+01Ch]
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp-008h]
           fabs
           fcomp qword ptr [g10042CE8]
           fnstsw ax
           test ah, 001h
           je l100372C4
           fld qword ptr [ebp-010h]
           fabs
           fcomp qword ptr [g10042CE8]
           fnstsw ax
           test ah, 001h
           je l100372C4
           fld qword ptr [ebp-018h]
           fabs
           fcomp qword ptr [g10042CE8]
           fnstsw ax
           test ah, 001h
           je l100372C4
           mov eax, 000000002h
           jmp l10037332
;
;* Jump:
; 10037297(C), 100372A9(C), 100372BB(C) 
;
l100372C4: fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           jne l100372FB
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           jne l100372FB
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042D58]
           fnstsw ax
           test ah, 041h
           jne l100372FB
           mov eax, 000000001h
           jmp l10037332
;
;* Jump:
; 100372D2(C), 100372E2(C), 100372F2(C) 
;
l100372FB: fld qword ptr [ebp-008h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10037330
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10037330
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10042CE0]
           fnstsw ax
           test ah, 001h
           je l10037330
           or eax, 0FFFFFFFFh
           jmp l10037332
;
;* Jump:
; 10037309(C), 10037319(C), 10037329(C) 
;
l10037330: xor eax, eax
;
;* Jump:
; 100372C2(U), 100372F9(U), 1003732E(U) 
;
l10037332: mov esp, ebp
           pop ebp
           ret 00008h
l100371B3 ENDP
;
;* Call:
; 100373DF 
;
l10037338 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov eax, dword ptr [eax+008h]
           xor edx, edx
           mov ecx, 000000003h
           div ecx
           mov edx, dword ptr [g1004A9C4]
           lea eax, [edx+eax+001h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           div dword ptr [ecx+008h]
           mov dword ptr [g1004A9C4], edx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [g1004A9C4]
           mov eax, dword ptr [eax+ecx*04h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10037338 ENDP
;
;* Call:
; 10037137, 10037D38, 10037DD8 
;
l1003737B PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001E0h
           push esi
           mov dword ptr [ebp-0000001D0h], ecx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000001h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-014h], offset g10042D7C
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           mov dword ptr [ebp-020h], 000000001h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-02Ch], offset g10042D7C
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-0000001D0h]
           call l10037338
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [edx], eax
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-000000118h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           mov dword ptr [ebp-00000011Ch], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-000000120h], eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-000000124h], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-060h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+008h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           call l10031760
           push eax
           lea ecx, [ebp-078h]
           push ecx
           mov edx, dword ptr [ebp-00000011Ch]
           push edx
           lea eax, [ebp-048h]
           push eax
           mov ecx, dword ptr [ebp-000000124h]
           call l10031760
           mov ecx, eax
           call l10031882
           mov ecx, eax
           call l10031913
           fdivr qword ptr [g100422C0]
           mov ecx, dword ptr [ebp+010h]
           fstp qword ptr [ecx+004h]
           mov dword ptr [ebp-018h], 000000000h
           jmp l100374F4
;
;* Jump:
; 10037CA4(U) 
;
l100374EB: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 100374E9(U) 
;
l100374F4: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10037CA9
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [eax+ecx*04h]
           cmp eax, dword ptr [edx]
           je l10037CA4
           mov dword ptr [ebp-030h], 000000000h
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000024h
           mov eax, dword ptr [ebp+00Ch]
           add eax, edx
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+eax*04h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp-0000001D0h]
           call l100371B3
           mov dword ptr [ebp-0000001D4h], eax
           mov ecx, dword ptr [ebp-0000001D4h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000001D4h], ecx
           cmp dword ptr [ebp-0000001D4h], 000000003h
           ja l10037CA4
           mov edx, dword ptr [ebp-0000001D4h]
           jmp [offset g10037E74+edx*04h]
l10037584: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-030h], ecx
           push 000000010h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-07Ch], eax
           cmp dword ptr [ebp-07Ch], 000000000h
           je l100375B5
           mov edx, dword ptr [ebp-07Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-07Ch]
           mov dword ptr [ebp-0000001D8h], eax
           jmp l100375BF
;
;* Jump:
; 1003759E(C) 
;
l100375B5: mov dword ptr [ebp-0000001D8h], 000000000h
;
;* Jump:
; 100375B3(U) 
;
l100375BF: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-0000001D8h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [eax+edx*04h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+03Ch]
           add ecx, edx
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp-000000128h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           mov dword ptr [ebp-00000012Ch], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-000000130h], eax
           mov ecx, dword ptr [ebp-000000130h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-000000134h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-000000138h], edx
           mov eax, dword ptr [ebp-000000138h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-00000013Ch], eax
           mov ecx, dword ptr [ebp-00000013Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-000000140h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-000000144h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-000000148h], eax
           mov ecx, dword ptr [ebp-000000148h]
           mov edx, dword ptr [ecx+008h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-00000014Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-000000150h], edx
           mov eax, dword ptr [ebp-000000150h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-000000154h], eax
           mov ecx, dword ptr [ebp-000000154h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-000000158h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-00000015Ch], edx
           mov eax, dword ptr [ebp-00000015Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+03Ch]
           add eax, ecx
           mov dword ptr [ebp-000000160h], eax
           mov ecx, dword ptr [ebp-000000160h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           mov dword ptr [ebp-000000164h], ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000038h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+03Ch]
           mov eax, dword ptr [edx+eax]
           imul eax, eax, 000000030h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+028h]
           add edx, eax
           push edx
           lea eax, [ebp-0000000F4h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+03Ch]
           mov edx, dword ptr [ecx+edx+008h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+028h]
           add ecx, edx
           call l10031760
           push eax
           lea ecx, [ebp-00000010Ch]
           push ecx
           mov edx, dword ptr [ebp-00000012Ch]
           push edx
           lea eax, [ebp-0000000DCh]
           push eax
           mov ecx, dword ptr [ebp-000000134h]
           call l10031760
           mov ecx, eax
           call l10031882
           push eax
           mov ecx, dword ptr [ebp-000000140h]
           push ecx
           lea edx, [ebp-0000000ACh]
           push edx
           mov ecx, dword ptr [ebp-00000014Ch]
           call l10031760
           push eax
           lea eax, [ebp-0000000C4h]
           push eax
           mov ecx, dword ptr [ebp-000000158h]
           push ecx
           lea edx, [ebp-000000094h]
           push edx
           mov ecx, dword ptr [ebp-000000164h]
           call l10031760
           mov ecx, eax
           call l10031882
           mov ecx, eax
           call l1003184F
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+014h]
           fstp qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+014h]
           fld qword ptr [edx+008h]
           fabs
           fdivr qword ptr [eax+008h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+014h]
           fstp qword ptr [ecx+008h]
           jmp near ptr l10037CA4
l1003786E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-00000017Ch], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l100378A7
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00000017Ch]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l10037979
;
;* Jump:
; 10037886(C) 
;
l100378A7: mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10037941
           mov eax, dword ptr [ebp-004h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000170h], eax
           mov ecx, dword ptr [ebp-000000170h]
           mov dword ptr [ebp-000000168h], ecx
           mov dword ptr [ebp-00000016Ch], 000000000h
           jmp l100378F6
;
;* Jump:
; 1003791C(U) 
;
l100378E7: mov edx, dword ptr [ebp-00000016Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000016Ch], edx
;
;* Jump:
; 100378E5(U) 
;
l100378F6: mov eax, dword ptr [ebp-00000016Ch]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l1003791E
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-00000016Ch]
           mov eax, dword ptr [ebp-000000168h]
           mov esi, dword ptr [ebp-00000016Ch]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l100378E7
;
;* Jump:
; 100378FF(C) 
;
l1003791E: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-000000174h], edx
           mov eax, dword ptr [ebp-000000174h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000168h]
           mov dword ptr [ebp-010h], ecx
           jmp l1003795F
;
;* Jump:
; 100378B4(C) 
;
l10037941: mov edx, dword ptr [ebp-004h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000178h], eax
           mov eax, dword ptr [ebp-000000178h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003793F(U) 
;
l1003795F: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00000017Ch]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100378A2(U) 
;
l10037979: jmp near ptr l10037CA4
l1003797E: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-000000194h], edx
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp-00Ch]
           jbe l100379B7
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-000000194h]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l10037A89
;
;* Jump:
; 10037996(C) 
;
l100379B7: mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10037A51
           mov eax, dword ptr [ebp-004h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000188h], eax
           mov ecx, dword ptr [ebp-000000188h]
           mov dword ptr [ebp-000000180h], ecx
           mov dword ptr [ebp-000000184h], 000000000h
           jmp l10037A06
;
;* Jump:
; 10037A2C(U) 
;
l100379F7: mov edx, dword ptr [ebp-000000184h]
           add edx, 000000001h
           mov dword ptr [ebp-000000184h], edx
;
;* Jump:
; 100379F5(U) 
;
l10037A06: mov eax, dword ptr [ebp-000000184h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l10037A2E
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-000000184h]
           mov eax, dword ptr [ebp-000000180h]
           mov esi, dword ptr [ebp-000000184h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l100379F7
;
;* Jump:
; 10037A0F(C) 
;
l10037A2E: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00000018Ch], edx
           mov eax, dword ptr [ebp-00000018Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000180h]
           mov dword ptr [ebp-010h], ecx
           jmp l10037A6F
;
;* Jump:
; 100379C4(C) 
;
l10037A51: mov edx, dword ptr [ebp-004h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000190h], eax
           mov eax, dword ptr [ebp-000000190h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10037A4F(U) 
;
l10037A6F: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-000000194h]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100379B2(U) 
;
l10037A89: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-0000001ACh], edx
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-024h]
           jbe l10037AC2
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-0000001ACh]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
           jmp near ptr l10037B94
;
;* Jump:
; 10037AA1(C) 
;
l10037AC2: mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-024h], 000000000h
           je l10037B5C
           mov eax, dword ptr [ebp-01Ch]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001A0h], eax
           mov ecx, dword ptr [ebp-0000001A0h]
           mov dword ptr [ebp-000000198h], ecx
           mov dword ptr [ebp-00000019Ch], 000000000h
           jmp l10037B11
;
;* Jump:
; 10037B37(U) 
;
l10037B02: mov edx, dword ptr [ebp-00000019Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000019Ch], edx
;
;* Jump:
; 10037B00(U) 
;
l10037B11: mov eax, dword ptr [ebp-00000019Ch]
           cmp eax, dword ptr [ebp-024h]
           jnb l10037B39
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-00000019Ch]
           mov eax, dword ptr [ebp-000000198h]
           mov esi, dword ptr [ebp-00000019Ch]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10037B02
;
;* Jump:
; 10037B1A(C) 
;
l10037B39: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-0000001A4h], edx
           mov eax, dword ptr [ebp-0000001A4h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000198h]
           mov dword ptr [ebp-028h], ecx
           jmp l10037B7A
;
;* Jump:
; 10037ACF(C) 
;
l10037B5C: mov edx, dword ptr [ebp-01Ch]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001A8h], eax
           mov eax, dword ptr [ebp-0000001A8h]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10037B5A(U) 
;
l10037B7A: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-0000001ACh]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10037ABD(U) 
;
l10037B94: jmp near ptr l10037CA4
l10037B99: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-018h]
           lea edx, [eax+ecx*04h]
           mov dword ptr [ebp-0000001C4h], edx
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-024h]
           jbe l10037BD2
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-0000001C4h]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
           jmp near ptr l10037CA4
;
;* Jump:
; 10037BB1(C) 
;
l10037BD2: mov edx, dword ptr [ebp-01Ch]
           add edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-024h], 000000000h
           je l10037C6C
           mov eax, dword ptr [ebp-01Ch]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001B8h], eax
           mov ecx, dword ptr [ebp-0000001B8h]
           mov dword ptr [ebp-0000001B0h], ecx
           mov dword ptr [ebp-0000001B4h], 000000000h
           jmp l10037C21
;
;* Jump:
; 10037C47(U) 
;
l10037C12: mov edx, dword ptr [ebp-0000001B4h]
           add edx, 000000001h
           mov dword ptr [ebp-0000001B4h], edx
;
;* Jump:
; 10037C10(U) 
;
l10037C21: mov eax, dword ptr [ebp-0000001B4h]
           cmp eax, dword ptr [ebp-024h]
           jnb l10037C49
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-0000001B4h]
           mov eax, dword ptr [ebp-0000001B0h]
           mov esi, dword ptr [ebp-0000001B4h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10037C12
;
;* Jump:
; 10037C2A(C) 
;
l10037C49: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-0000001BCh], edx
           mov eax, dword ptr [ebp-0000001BCh]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-0000001B0h]
           mov dword ptr [ebp-028h], ecx
           jmp l10037C8A
;
;* Jump:
; 10037BDF(C) 
;
l10037C6C: mov edx, dword ptr [ebp-01Ch]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001C0h], eax
           mov eax, dword ptr [ebp-0000001C0h]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10037C6A(U) 
;
l10037C8A: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-0000001C4h]
           mov eax, dword ptr [eax]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 10037514(C), 10037571(C), 10037869(U), 10037979(U), 10037B94(U), 
; 10037BCD(U) 
;
l10037CA4: jmp near ptr l100374EB
;
;* Jump:
; 100374FD(C) 
;
l10037CA9: cmp dword ptr [ebp-00Ch], 000000000h
           je l10037D3F
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000110h], eax
           cmp dword ptr [ebp-000000110h], 000000000h
           je l10037D0D
           mov edx, dword ptr [ebp-000000110h]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp-000000110h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-000000110h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-000000110h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-000000110h]
           mov dword ptr [ebp-0000001DCh], eax
           jmp l10037D17
;
;* Jump:
; 10037CCA(C) 
;
l10037D0D: mov dword ptr [ebp-0000001DCh], 000000000h
;
;* Jump:
; 10037D0B(U) 
;
l10037D17: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-0000001DCh]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-0000001D0h]
           call l1003737B
           jmp l10037D49
;
;* Jump:
; 10037CAD(C) 
;
l10037D3F: mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx+00Ch], 000000000h
;
;* Jump:
; 10037D3D(U) 
;
l10037D49: cmp dword ptr [ebp-024h], 000000000h
           je l10037DDF
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000114h], eax
           cmp dword ptr [ebp-000000114h], 000000000h
           je l10037DAD
           mov edx, dword ptr [ebp-000000114h]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp-000000114h]
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-000000114h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-000000114h]
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-000000114h]
           mov dword ptr [ebp-0000001E0h], eax
           jmp l10037DB7
;
;* Jump:
; 10037D6A(C) 
;
l10037DAD: mov dword ptr [ebp-0000001E0h], 000000000h
;
;* Jump:
; 10037DAB(U) 
;
l10037DB7: mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-0000001E0h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           lea eax, [ebp-02Ch]
           push eax
           mov ecx, dword ptr [ebp-0000001D0h]
           call l1003737B
           jmp l10037DE9
;
;* Jump:
; 10037D4D(C) 
;
l10037DDF: mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10037DDD(U) 
;
l10037DE9: mov dword ptr [ebp-02Ch], offset g10042D7C
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10037E2B
           cmp dword ptr [ebp-01Ch], 000000000h
           jne l10037DFE
           jmp l10037E2B
;
;* Jump:
; 10037DFA(C) 
;
l10037DFE: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-0000001C8h], edx
           mov eax, dword ptr [ebp-0000001C8h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 10037DF4(C), 10037DFC(U) 
;
l10037E2B: mov dword ptr [ebp-014h], offset g10042D7C
           cmp dword ptr [ebp-004h], 000000000h
           je l10037E6D
           cmp dword ptr [ebp-004h], 000000000h
           jne l10037E40
           jmp l10037E6D
;
;* Jump:
; 10037E3C(C) 
;
l10037E40: mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-0000001CCh], ecx
           mov edx, dword ptr [ebp-0000001CCh]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 10037E36(C), 10037E3E(U) 
;
l10037E6D: pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
g10037E74  dd l10037B99
           dd l1003797E
           dd l1003786E
           dd l10037584
l1003737B ENDP
;
;* Export: ?EdgeFaceGrp@B_ObjDscr@@QAEEI@Z, 00B1
;
l10037E84 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10037EA8
;
;* Jump:
; 10037EEB(U) 
;
l10037E9F: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10037E9D(U) 
;
l10037EA8: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+040h]
           jnb l10037EED
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           cmp eax, dword ptr [ebp+008h]
           je l10037ED4
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           cmp edx, dword ptr [ebp+008h]
           je l10037ED4
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           cmp ecx, dword ptr [ebp+008h]
           jne l10037EE2
;
;* Jump:
; 10037EBC(C), 10037EC7(C) 
;
l10037ED4: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+068h]
           mov ecx, dword ptr [ebp-008h]
           mov al, byte ptr [eax+ecx]
           jmp l10037EEF
;
;* Jump:
; 10037ED2(C) 
;
l10037EE2: mov edx, dword ptr [ebp-004h]
           add edx, 000000038h
           mov dword ptr [ebp-004h], edx
           jmp l10037E9F
;
;* Jump:
; 10037EB1(C) 
;
l10037EED: xor al, al
;
;* Jump:
; 10037EE0(U) 
;
l10037EEF: mov esp, ebp
           pop ebp
           ret 00004h
l10037E84 ENDP
;
;* Call:
; 10004024, 10006547 
;
;* Export: ??0B_ObjDscr@@QAE@XZ, 0021
;
l10037EF5 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov dword ptr [ebp-03Ch], ecx
           mov ecx, dword ptr [ebp-03Ch]
           call l10003EBA
           mov eax, dword ptr [ebp-03Ch]
           add eax, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000010h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], 000000001h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042DE8
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042DE4
           mov edx, dword ptr [ebp-03Ch]
           add edx, 000000024h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g10042DE0
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], offset g10042DDC
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000000038h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx], offset g10042DD8
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042DD4
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 00000004Ch
           mov dword ptr [ebp-010h], ecx
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-010h]
           call l1003B920
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx], offset g10042DD0
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000000064h
           mov dword ptr [ebp-014h], eax
           push 000000001h
           mov ecx, dword ptr [ebp-014h]
           call l1003A010
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx], offset g10042DCC
           mov edx, dword ptr [ebp-03Ch]
           add edx, 000000078h
           mov dword ptr [ebp-018h], edx
           push 000000001h
           mov ecx, dword ptr [ebp-018h]
           call l1003A160
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DC8
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 00000008Ch
           mov dword ptr [ebp-01Ch], ecx
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-01Ch]
           call l1003BA20
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx], offset g10042DC4
           mov eax, dword ptr [ebp-03Ch]
           add eax, 0000000A4h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-03Ch]
           add edx, 0000000BCh
           mov dword ptr [ebp-024h], edx
           push 000000001h
           mov ecx, dword ptr [ebp-024h]
           call l1003A1A0
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], offset g10042DC0
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 0000000D0h
           mov dword ptr [ebp-028h], ecx
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-028h]
           call l1003BB80
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx], offset g10042DBC
           mov eax, dword ptr [ebp-03Ch]
           add eax, 0000000E8h
           mov dword ptr [ebp-02Ch], eax
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-02Ch]
           call l1003BC90
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], offset g10042DB8
           mov edx, dword ptr [ebp-03Ch]
           add edx, 000000100h
           mov dword ptr [ebp-030h], edx
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-030h]
           call l1003BE50
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax], offset g10042DB4
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000000118h
           mov dword ptr [ebp-034h], ecx
           push 000000001h
           push 000000010h
           mov ecx, dword ptr [ebp-034h]
           call l1003BF60
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx], offset g10042DB0
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000000130h
           call l1002E190
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 0000001B0h
           call l1002E190
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000000240h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000000258h
           call l1002A5F0
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx], offset g10042DA0
           mov eax, dword ptr [ebp-03Ch]
           mov esp, ebp
           pop ebp
           ret
l10037EF5 ENDP
;
;* Call:
; 1003996A 
;
;* Export: ??1B_ObjDscr@@UAE@XZ, 0039
;
l1003819B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
           mov dword ptr [ebp-058h], ecx
           mov eax, dword ptr [ebp-058h]
           mov dword ptr [eax], offset g10042DA0
           mov ecx, dword ptr [ebp-058h]
           add ecx, 000000118h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E0C
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+010h], 000000000h
           je l100381DA
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov ecx, dword ptr [ebp-004h]
           call l1003BFC0
;
;* Jump:
; 100381C9(C) 
;
l100381DA: mov eax, dword ptr [ebp-058h]
           add eax, 000000100h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g10042E08
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038206
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l1003BEB0
;
;* Jump:
; 100381F5(C) 
;
l10038206: mov edx, dword ptr [ebp-058h]
           add edx, 0000000E8h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042E04
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l10038233
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call l1003BCE0
;
;* Jump:
; 10038222(C) 
;
l10038233: mov ecx, dword ptr [ebp-058h]
           add ecx, 0000000D0h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx], offset g10042E00
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+010h], 000000000h
           je l10038260
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov ecx, dword ptr [ebp-010h]
           call l1003BBE0
;
;* Jump:
; 1003824F(C) 
;
l10038260: mov eax, dword ptr [ebp-058h]
           add eax, 0000000BCh
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx], offset g10042DF4
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038285
           mov ecx, dword ptr [ebp-014h]
           call l1003BB30
;
;* Jump:
; 1003827B(C) 
;
l10038285: mov eax, dword ptr [ebp-058h]
           add eax, 0000000A4h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+00Ch], 000000000h
           je l100382DD
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-018h], ecx
           cmp dword ptr [ebp-018h], 000000000h
           je l100382D6
           mov ecx, dword ptr [ebp-018h]
           call l10039C10
           mov edx, 000000001h
           and edx, 000000001h
           test edx, edx
           je l100382CE
           mov eax, dword ptr [ebp-018h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100382C0(C) 
;
l100382CE: mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-05Ch], ecx
           jmp l100382DD
;
;* Jump:
; 100382AC(C) 
;
l100382D6: mov dword ptr [ebp-05Ch], 000000000h
;
;* Jump:
; 10038297(C), 100382D4(U) 
;
l100382DD: mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038311
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-020h], edx
           cmp dword ptr [ebp-020h], 000000000h
           je l1003830A
           push 000000001h
           mov ecx, dword ptr [ebp-020h]
           call l10039D90
           mov dword ptr [ebp-060h], eax
           jmp l10038311
;
;* Jump:
; 100382F9(C) 
;
l1003830A: mov dword ptr [ebp-060h], 000000000h
;
;* Jump:
; 100382E4(C), 10038308(U) 
;
l10038311: mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+014h], 000000000h
           je l10038345
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-028h], eax
           cmp dword ptr [ebp-028h], 000000000h
           je l1003833E
           push 000000001h
           mov ecx, dword ptr [ebp-028h]
           call l10039D30
           mov dword ptr [ebp-064h], eax
           jmp l10038345
;
;* Jump:
; 1003832D(C) 
;
l1003833E: mov dword ptr [ebp-064h], 000000000h
;
;* Jump:
; 10038318(C), 1003833C(U) 
;
l10038345: mov ecx, dword ptr [ebp-058h]
           add ecx, 00000008Ch
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx], offset g10042DFC
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+010h], 000000000h
           je l10038372
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov ecx, dword ptr [ebp-034h]
           call l1003BA80
;
;* Jump:
; 10038361(C) 
;
l10038372: mov eax, dword ptr [ebp-058h]
           add eax, 000000078h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx], offset g10042DF0
           mov edx, dword ptr [ebp-038h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038395
           mov ecx, dword ptr [ebp-038h]
           call l1003B9D0
;
;* Jump:
; 1003838B(C) 
;
l10038395: mov eax, dword ptr [ebp-058h]
           add eax, 000000064h
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx], offset g10042DEC
           mov edx, dword ptr [ebp-03Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100383B8
           mov ecx, dword ptr [ebp-03Ch]
           call l1003B980
;
;* Jump:
; 100383AE(C) 
;
l100383B8: mov eax, dword ptr [ebp-058h]
           add eax, 00000004Ch
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx], offset g10042DF8
           mov edx, dword ptr [ebp-040h]
           cmp dword ptr [edx+010h], 000000000h
           je l100383E2
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov ecx, dword ptr [ebp-040h]
           call l10039F60
;
;* Jump:
; 100383D1(C) 
;
l100383E2: mov edx, dword ptr [ebp-058h]
           add edx, 000000038h
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax], offset g10042DD8
           mov ecx, dword ptr [ebp-048h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003843B
           mov edx, dword ptr [ebp-048h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10038408
           jmp l1003843B
;
;* Jump:
; 10038404(C) 
;
l10038408: mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-044h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 100383FB(C), 10038406(U) 
;
l1003843B: mov eax, dword ptr [ebp-058h]
           add eax, 000000024h
           mov dword ptr [ebp-050h], eax
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [ecx], offset g10042DE0
           mov edx, dword ptr [ebp-050h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038494
           mov eax, dword ptr [ebp-050h]
           cmp dword ptr [eax+010h], 000000000h
           jne l10038461
           jmp l10038494
;
;* Jump:
; 1003845D(C) 
;
l10038461: mov ecx, dword ptr [ebp-050h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-04Ch], edx
           mov eax, dword ptr [ebp-04Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-050h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-050h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10038454(C), 1003845F(U) 
;
l10038494: mov ecx, dword ptr [ebp-058h]
           add ecx, 00000000Ch
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-054h]
           mov dword ptr [edx], offset g10042DE8
           mov eax, dword ptr [ebp-054h]
           cmp dword ptr [eax+010h], 000000000h
           je l100384BE
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov ecx, dword ptr [ebp-054h]
           call l1003B840
;
;* Jump:
; 100384AD(C) 
;
l100384BE: mov ecx, dword ptr [ebp-058h]
           call l10003EFE
           mov esp, ebp
           pop ebp
           ret
l1003819B ENDP
;
;* Call:
; 100063EB 
;
;* Export: ?SavePacked@B_ObjDscr@@QAEIAAVB_ODataFile@@@Z, 0104
;
l100384CA PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
           mov dword ptr [ebp-064h], ecx
           mov dword ptr [g100488B8], 040000000h
           mov dword ptr [g100488B4], 000000002h
           mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000468E
           add esp, 000000008h
           mov edx, dword ptr [ebp-064h]
           add edx, 00000000Ch
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-004h], 000000000h
           jmp l10038525
;
;* Jump:
; 10038549(U) 
;
l1003851C: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003851A(U) 
;
l10038525: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003854B
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032829
           add esp, 000000008h
           jmp l1003851C
;
;* Jump:
; 1003852E(C) 
;
l1003854B: mov ecx, dword ptr [ebp-064h]
           add ecx, 000000024h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10038579
;
;* Jump:
; 1003859F(U) 
;
l10038570: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1003856E(U) 
;
l10038579: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l100385A1
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, 000000030h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100321C8
           add esp, 000000008h
           jmp l10038570
;
;* Jump:
; 10038582(C) 
;
l100385A1: mov edx, dword ptr [ebp-064h]
           add edx, 000000038h
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-014h], 000000000h
           jmp l100385CF
;
;* Jump:
; 100385F5(U) 
;
l100385C6: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 100385C4(U) 
;
l100385CF: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+008h]
           jnb l100385F7
           mov edx, dword ptr [ebp-014h]
           imul edx, edx, 000000038h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           add ecx, edx
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10032420
           add esp, 000000008h
           jmp l100385C6
;
;* Jump:
; 100385D8(C) 
;
l100385F7: mov eax, dword ptr [ebp-064h]
           add eax, 00000004Ch
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10038625
;
;* Jump:
; 10038649(U) 
;
l1003861C: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1003861A(U) 
;
l10038625: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003864B
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1003270D
           add esp, 000000008h
           jmp l1003861C
;
;* Jump:
; 1003862E(C) 
;
l1003864B: mov edx, dword ptr [ebp-064h]
           add edx, 000000064h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-024h], 000000000h
           jmp l10038679
;
;* Jump:
; 1003869A(U) 
;
l10038670: mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 1003866E(U) 
;
l10038679: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003869C
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           add eax, dword ptr [ebp-024h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001F9A
           add esp, 000000008h
           jmp l10038670
;
;* Jump:
; 10038682(C) 
;
l1003869C: mov edx, dword ptr [ebp-064h]
           add edx, 000000078h
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l100386CA
;
;* Jump:
; 100386EE(U) 
;
l100386C1: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 100386BF(U) 
;
l100386CA: mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [eax+008h]
           jnb l100386F0
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10002008
           add esp, 000000008h
           jmp l100386C1
;
;* Jump:
; 100386D3(C) 
;
l100386F0: mov ecx, dword ptr [ebp-064h]
           add ecx, 00000008Ch
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-038h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-034h], 000000000h
           jmp l10038721
;
;* Jump:
; 10038745(U) 
;
l10038718: mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 10038716(U) 
;
l10038721: mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-034h]
           cmp eax, dword ptr [edx+008h]
           jnb l10038747
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10032A75
           add esp, 000000008h
           jmp l10038718
;
;* Jump:
; 1003872A(C) 
;
l10038747: mov eax, dword ptr [ebp-064h]
           add eax, 0000000BCh
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-03Ch], 000000000h
           jmp l10038777
;
;* Jump:
; 1003879D(U) 
;
l1003876E: mov eax, dword ptr [ebp-03Ch]
           add eax, 000000001h
           mov dword ptr [ebp-03Ch], eax
;
;* Jump:
; 1003876C(U) 
;
l10038777: mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-03Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003879F
           mov eax, dword ptr [ebp-03Ch]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+004h]
           add edx, eax
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032314
           add esp, 000000008h
           jmp l1003876E
;
;* Jump:
; 10038780(C) 
;
l1003879F: mov ecx, dword ptr [ebp-064h]
           add ecx, 0000000D0h
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-048h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-044h], 000000000h
           jmp l100387D0
;
;* Jump:
; 100387F4(U) 
;
l100387C7: mov ecx, dword ptr [ebp-044h]
           add ecx, 000000001h
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 100387C5(U) 
;
l100387D0: mov edx, dword ptr [ebp-048h]
           mov eax, dword ptr [ebp-044h]
           cmp eax, dword ptr [edx+008h]
           jnb l100387F6
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100328B6
           add esp, 000000008h
           jmp l100387C7
;
;* Jump:
; 100387D9(C) 
;
l100387F6: mov eax, dword ptr [ebp-064h]
           add eax, 0000000E8h
           mov dword ptr [ebp-050h], eax
           mov ecx, dword ptr [ebp-050h]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-04Ch], 000000000h
           jmp l10038826
;
;* Jump:
; 1003884A(U) 
;
l1003881D: mov eax, dword ptr [ebp-04Ch]
           add eax, 000000001h
           mov dword ptr [ebp-04Ch], eax
;
;* Jump:
; 1003881B(U) 
;
l10038826: mov ecx, dword ptr [ebp-050h]
           mov edx, dword ptr [ebp-04Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003884C
           mov eax, dword ptr [ebp-050h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10031F82
           add esp, 000000008h
           jmp l1003881D
;
;* Jump:
; 1003882F(C) 
;
l1003884C: mov edx, dword ptr [ebp-064h]
           add edx, 000000100h
           mov dword ptr [ebp-058h], edx
           mov eax, dword ptr [ebp-058h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-054h], 000000000h
           jmp l1003887D
;
;* Jump:
; 100388A1(U) 
;
l10038874: mov edx, dword ptr [ebp-054h]
           add edx, 000000001h
           mov dword ptr [ebp-054h], edx
;
;* Jump:
; 10038872(U) 
;
l1003887D: mov eax, dword ptr [ebp-058h]
           mov ecx, dword ptr [ebp-054h]
           cmp ecx, dword ptr [eax+008h]
           jnb l100388A3
           mov edx, dword ptr [ebp-058h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032945
           add esp, 000000008h
           jmp l10038874
;
;* Jump:
; 10038886(C) 
;
l100388A3: mov ecx, dword ptr [ebp-064h]
           add ecx, 000000118h
           mov dword ptr [ebp-060h], ecx
           mov edx, dword ptr [ebp-060h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           mov dword ptr [ebp-05Ch], 000000000h
           jmp l100388D4
;
;* Jump:
; 100388F8(U) 
;
l100388CB: mov ecx, dword ptr [ebp-05Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-05Ch], ecx
;
;* Jump:
; 100388C9(U) 
;
l100388D4: mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-05Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l100388FA
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100329E5
           add esp, 000000008h
           jmp l100388CB
;
;* Jump:
; 100388DD(C) 
;
l100388FA: mov eax, dword ptr [ebp-064h]
           add eax, 000000258h
           push eax
           mov ecx, dword ptr [ebp-064h]
           add ecx, 000000240h
           push ecx
           mov edx, dword ptr [ebp-064h]
           add edx, 000000238h
           push edx
           mov eax, dword ptr [ebp-064h]
           add eax, 0000001B0h
           push eax
           mov ecx, dword ptr [ebp-064h]
           add ecx, 000000130h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10030232
           add esp, 000000008h
           push eax
           call l10030232
           add esp, 000000008h
           push eax
           call l1000204A
           add esp, 000000008h
           push eax
           call l10031E83
           add esp, 000000008h
           push eax
           call l1002A81A
           add esp, 000000008h
           mov dword ptr [g100488B4], 000000001h
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 00004h
l100384CA ENDP
;
;* Call:
; 10006577 
;
;* Export: ?LoadPacked@B_ObjDscr@@QAEIAAVB_IDataFile@@@Z, 00DF
;
l1003896F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000014Ch
           push esi
           push edi
           mov dword ptr [ebp-000000138h], ecx
           mov dword ptr [g100488B8], 040000000h
           mov dword ptr [g100488B4], 000000002h
           mov dword ptr [g1004BF6C], 000000001h
           mov eax, dword ptr [ebp-000000138h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10004676
           add esp, 000000008h
           mov edx, dword ptr [ebp-000000138h]
           add edx, 00000000Ch
           mov dword ptr [ebp-0000000DCh], edx
           mov eax, dword ptr [ebp-0000000DCh]
           cmp dword ptr [eax+010h], 000000000h
           je l100389D9
           push 000000001h
           mov ecx, dword ptr [ebp-0000000DCh]
           call l1003B840
;
;* Jump:
; 100389CA(C) 
;
l100389D9: mov ecx, dword ptr [ebp-0000000DCh]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp-0000000DCh]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-0000000DCh]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp-0000000DCh]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-0000000DCh]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-0000000DCh]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-0000000DCh]
           cmp dword ptr [edx+010h], 000000000h
           je l10038B44
           mov eax, dword ptr [ebp-0000000DCh]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000D0h], eax
           mov edx, dword ptr [ebp-0000000DCh]
           mov eax, dword ptr [ebp-0000000D0h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-0000000CCh], 000000000h
           jmp l10038A78
;
;* Jump:
; 10038B3F(U) 
;
l10038A69: mov ecx, dword ptr [ebp-0000000CCh]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000CCh], ecx
;
;* Jump:
; 10038A67(U) 
;
l10038A78: mov edx, dword ptr [ebp-0000000DCh]
           mov eax, dword ptr [ebp-0000000CCh]
           cmp eax, dword ptr [edx+008h]
           jnb l10038B44
           push 000000024h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000D4h], eax
           cmp dword ptr [ebp-0000000D4h], 000000000h
           je l10038AFE
           mov ecx, dword ptr [ebp-0000000D4h]
           add ecx, 000000008h
           mov dword ptr [ebp-0000000D8h], ecx
           mov edx, dword ptr [ebp-0000000D8h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-0000000D8h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-0000000D8h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-0000000D4h]
           mov dword ptr [ebp-00000013Ch], edx
           jmp l10038B08
;
;* Jump:
; 10038AA4(C) 
;
l10038AFE: mov dword ptr [ebp-00000013Ch], 000000000h
;
;* Jump:
; 10038AFC(U) 
;
l10038B08: mov eax, dword ptr [ebp-0000000DCh]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-0000000CCh]
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-0000000DCh]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-0000000CCh]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100327E1
           add esp, 000000008h
           jmp near ptr l10038A69
;
;* Jump:
; 10038A2D(C), 10038A87(C) 
;
l10038B44: mov eax, dword ptr [ebp-000000138h]
           add eax, 000000024h
           mov dword ptr [ebp-0000000F0h], eax
           mov ecx, dword ptr [ebp-0000000F0h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10038BB2
           mov edx, dword ptr [ebp-0000000F0h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10038B6D
           jmp l10038BB2
;
;* Jump:
; 10038B69(C) 
;
l10038B6D: mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-0000000ECh], ecx
           mov edx, dword ptr [ebp-0000000ECh]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-0000000F0h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-0000000F0h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-0000000F0h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10038B5D(C), 10038B6B(U) 
;
l10038BB2: mov eax, dword ptr [ebp-0000000F0h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-0000000F0h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-0000000F0h]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-0000000F0h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-0000000F0h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-0000000F0h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-0000000F0h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038CCC
           mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-0000000E0h], ecx
           mov edx, dword ptr [ebp-0000000E0h]
           imul edx, edx, 000000030h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000E8h], eax
           cmp dword ptr [ebp-0000000E8h], 000000000h
           je l10038C64
           push offset l1003D740
           mov eax, dword ptr [ebp-0000000E0h]
           push eax
           push 000000030h
           mov ecx, dword ptr [ebp-0000000E8h]
           push ecx
           call l100395E0
           mov edx, dword ptr [ebp-0000000E8h]
           mov dword ptr [ebp-000000140h], edx
           jmp l10038C6E
;
;* Jump:
; 10038C3A(C) 
;
l10038C64: mov dword ptr [ebp-000000140h], 000000000h
;
;* Jump:
; 10038C62(U) 
;
l10038C6E: mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [ebp-000000140h]
           mov dword ptr [eax+004h], ecx
           mov dword ptr [ebp-0000000E4h], 000000000h
           jmp l10038C98
;
;* Jump:
; 10038CCA(U) 
;
l10038C89: mov edx, dword ptr [ebp-0000000E4h]
           add edx, 000000001h
           mov dword ptr [ebp-0000000E4h], edx
;
;* Jump:
; 10038C87(U) 
;
l10038C98: mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [ebp-0000000E4h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10038CCC
           mov edx, dword ptr [ebp-0000000E4h]
           imul edx, edx, 000000030h
           mov eax, dword ptr [ebp-0000000F0h]
           mov ecx, dword ptr [eax+004h]
           add ecx, edx
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100321A0
           add esp, 000000008h
           jmp l10038C89
;
;* Jump:
; 10038C06(C), 10038CA7(C) 
;
l10038CCC: mov eax, dword ptr [ebp-000000138h]
           add eax, 000000038h
           mov dword ptr [ebp-0000000FCh], eax
           mov ecx, dword ptr [ebp-0000000FCh]
           cmp dword ptr [ecx+010h], 000000000h
           je l10038CF2
           mov ecx, dword ptr [ebp-0000000FCh]
           call l1003B8D0
;
;* Jump:
; 10038CE5(C) 
;
l10038CF2: mov edx, dword ptr [ebp-0000000FCh]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-0000000FCh]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-0000000FCh]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-0000000FCh]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-0000000FCh]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-0000000FCh]
           cmp dword ptr [edx+010h], 000000000h
           je l10038DC1
           mov eax, dword ptr [ebp-0000000FCh]
           mov ecx, dword ptr [eax+010h]
           imul ecx, ecx, 000000038h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000F8h], eax
           mov edx, dword ptr [ebp-0000000FCh]
           mov eax, dword ptr [ebp-0000000F8h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-0000000F4h], 000000000h
           jmp l10038D8D
;
;* Jump:
; 10038DBF(U) 
;
l10038D7E: mov ecx, dword ptr [ebp-0000000F4h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000F4h], ecx
;
;* Jump:
; 10038D7C(U) 
;
l10038D8D: mov edx, dword ptr [ebp-0000000FCh]
           mov eax, dword ptr [ebp-0000000F4h]
           cmp eax, dword ptr [edx+008h]
           jnb l10038DC1
           mov ecx, dword ptr [ebp-0000000F4h]
           imul ecx, ecx, 000000038h
           mov edx, dword ptr [ebp-0000000FCh]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1003236C
           add esp, 000000008h
           jmp l10038D7E
;
;* Jump:
; 10038D46(C), 10038D9C(C) 
;
l10038DC1: mov edx, dword ptr [ebp-000000138h]
           add edx, 00000004Ch
           mov dword ptr [ebp-00000010Ch], edx
           mov eax, dword ptr [ebp-00000010Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l10038DE9
           push 000000001h
           mov ecx, dword ptr [ebp-00000010Ch]
           call l10039F60
;
;* Jump:
; 10038DDA(C) 
;
l10038DE9: mov ecx, dword ptr [ebp-00000010Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-00000010Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp-00000010Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-00000010Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00000010Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00000010Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l10038F0E
           mov eax, dword ptr [ebp-00000010Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000104h], eax
           mov edx, dword ptr [ebp-00000010Ch]
           mov eax, dword ptr [ebp-000000104h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000100h], 000000000h
           jmp l10038E88
;
;* Jump:
; 10038F09(U) 
;
l10038E79: mov ecx, dword ptr [ebp-000000100h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000100h], ecx
;
;* Jump:
; 10038E77(U) 
;
l10038E88: mov edx, dword ptr [ebp-00000010Ch]
           mov eax, dword ptr [ebp-000000100h]
           cmp eax, dword ptr [edx+008h]
           jnb l10038F0E
           push 0000000ACh
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000108h], eax
           cmp dword ptr [ebp-000000108h], 000000000h
           je l10038EC8
           mov ecx, dword ptr [ebp-000000108h]
           call l10039EA0
           mov dword ptr [ebp-000000144h], eax
           jmp l10038ED2
;
;* Jump:
; 10038EB3(C) 
;
l10038EC8: mov dword ptr [ebp-000000144h], 000000000h
;
;* Jump:
; 10038EC6(U) 
;
l10038ED2: mov ecx, dword ptr [ebp-00000010Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000100h]
           mov ecx, dword ptr [ebp-000000144h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-00000010Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000100h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032524
           add esp, 000000008h
           jmp near ptr l10038E79
;
;* Jump:
; 10038E3D(C), 10038E97(C) 
;
l10038F0E: mov ecx, dword ptr [ebp-000000138h]
           add ecx, 000000064h
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-000000118h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038F34
           mov ecx, dword ptr [ebp-000000118h]
           call l1003B980
;
;* Jump:
; 10038F27(C) 
;
l10038F34: mov eax, dword ptr [ebp-000000118h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-000000118h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000118h]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-000000118h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000118h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000118h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000118h]
           cmp dword ptr [edx+010h], 000000000h
           je l10038FFB
           mov eax, dword ptr [ebp-000000118h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000114h], eax
           mov edx, dword ptr [ebp-000000118h]
           mov eax, dword ptr [ebp-000000114h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000110h], 000000000h
           jmp l10038FCC
;
;* Jump:
; 10038FF9(U) 
;
l10038FBD: mov ecx, dword ptr [ebp-000000110h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000110h], ecx
;
;* Jump:
; 10038FBB(U) 
;
l10038FCC: mov edx, dword ptr [ebp-000000118h]
           mov eax, dword ptr [ebp-000000110h]
           cmp eax, dword ptr [edx+008h]
           jnb l10038FFB
           mov ecx, dword ptr [ebp-000000118h]
           mov edx, dword ptr [ecx+004h]
           add edx, dword ptr [ebp-000000110h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B6B
           add esp, 000000008h
           jmp l10038FBD
;
;* Jump:
; 10038F88(C), 10038FDB(C) 
;
l10038FFB: mov ecx, dword ptr [ebp-000000138h]
           add ecx, 000000078h
           mov dword ptr [ebp-000000124h], ecx
           mov edx, dword ptr [ebp-000000124h]
           cmp dword ptr [edx+010h], 000000000h
           je l10039021
           mov ecx, dword ptr [ebp-000000124h]
           call l1003B9D0
;
;* Jump:
; 10039014(C) 
;
l10039021: mov eax, dword ptr [ebp-000000124h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10001BEF
           add esp, 000000008h
           mov edx, dword ptr [ebp-000000124h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000124h]
           mov edx, dword ptr [ecx+00Ch]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-000000124h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000124h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000124h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000124h]
           cmp dword ptr [edx+010h], 000000000h
           je l100390EE
           mov eax, dword ptr [ebp-000000124h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000120h], eax
           mov edx, dword ptr [ebp-000000124h]
           mov eax, dword ptr [ebp-000000120h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-00000011Ch], 000000000h
           jmp l100390BC
;
;* Jump:
; 100390EC(U) 
;
l100390AD: mov ecx, dword ptr [ebp-00000011Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000011Ch], ecx
;
;* Jump:
; 100390AB(U) 
;
l100390BC: mov edx, dword ptr [ebp-000000124h]
           mov eax, dword ptr [ebp-00000011Ch]
           cmp eax, dword ptr [edx+008h]
           jnb l100390EE
           mov ecx, dword ptr [ebp-000000124h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-00000011Ch]
           lea ecx, [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BD9
           add esp, 000000008h
           jmp l100390AD
;
;* Jump:
; 10039075(C), 100390CB(C) 
;
l100390EE: mov dword ptr [ebp-004h], 000000000h
           jmp l10039100
;
;* Jump:
; 10039139(U) 
;
l100390F7: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100390F5(U) 
;
l10039100: mov ecx, dword ptr [ebp-000000138h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000080h]
           jnb l1003913B
           mov eax, dword ptr [ebp-000000138h]
           mov ecx, dword ptr [eax+07Ch]
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+edx*04h], 0CDCDCDCDh
           jne l10039139
           mov eax, dword ptr [ebp-000000138h]
           mov ecx, dword ptr [eax+07Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+edx*04h], 000000000h
;
;* Jump:
; 10039124(C) 
;
l10039139: jmp l100390F7
;
;* Jump:
; 1003910F(C) 
;
l1003913B: mov eax, dword ptr [ebp-000000138h]
           add eax, 00000008Ch
           mov dword ptr [ebp-000000134h], eax
           mov ecx, dword ptr [ebp-000000134h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039165
           push 000000001h
           mov ecx, dword ptr [ebp-000000134h]
           call l1003BA80
;
;* Jump:
; 10039156(C) 
;
l10039165: mov edx, dword ptr [ebp-000000134h]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-000000134h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000134h]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-000000134h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-000000134h]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-000000134h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-000000134h]
           cmp dword ptr [edx+010h], 000000000h
           je l10039287
           mov eax, dword ptr [ebp-000000134h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000012Ch], eax
           mov edx, dword ptr [ebp-000000134h]
           mov eax, dword ptr [ebp-00000012Ch]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-000000128h], 000000000h
           jmp l10039204
;
;* Jump:
; 10039282(U) 
;
l100391F5: mov ecx, dword ptr [ebp-000000128h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000128h], ecx
;
;* Jump:
; 100391F3(U) 
;
l10039204: mov edx, dword ptr [ebp-000000134h]
           mov eax, dword ptr [ebp-000000128h]
           cmp eax, dword ptr [edx+008h]
           jnb l10039287
           push 000000040h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000130h], eax
           cmp dword ptr [ebp-000000130h], 000000000h
           je l10039241
           mov ecx, dword ptr [ebp-000000130h]
           call l1003D7F0
           mov dword ptr [ebp-000000148h], eax
           jmp l1003924B
;
;* Jump:
; 1003922C(C) 
;
l10039241: mov dword ptr [ebp-000000148h], 000000000h
;
;* Jump:
; 1003923F(U) 
;
l1003924B: mov ecx, dword ptr [ebp-000000134h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000128h]
           mov ecx, dword ptr [ebp-000000148h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-000000134h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000128h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032A2D
           add esp, 000000008h
           jmp near ptr l100391F5
;
;* Jump:
; 100391B9(C), 10039213(C) 
;
l10039287: mov ecx, dword ptr [ebp-000000138h]
           add ecx, 000000258h
           push ecx
           mov edx, dword ptr [ebp-000000138h]
           add edx, 000000240h
           push edx
           mov eax, dword ptr [ebp-000000138h]
           add eax, 000000238h
           push eax
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 0000001B0h
           push ecx
           mov edx, dword ptr [ebp-000000138h]
           add edx, 000000130h
           push edx
           mov eax, dword ptr [ebp-000000138h]
           add eax, 000000118h
           push eax
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 000000100h
           push ecx
           mov edx, dword ptr [ebp-000000138h]
           add edx, 0000000E8h
           push edx
           mov eax, dword ptr [ebp-000000138h]
           add eax, 0000000D0h
           push eax
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 0000000BCh
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1003D5F0
           add esp, 000000008h
           push eax
           call l1003CBD0
           add esp, 000000008h
           push eax
           call l1003C930
           add esp, 000000008h
           push eax
           call l1003CD80
           add esp, 000000008h
           push eax
           call l1003D3D0
           add esp, 000000008h
           push eax
           call l10030219
           add esp, 000000008h
           push eax
           call l10030219
           add esp, 000000008h
           push eax
           call l10001C1B
           add esp, 000000008h
           push eax
           call l10031E6D
           add esp, 000000008h
           push eax
           call l1002A7F2
           add esp, 000000008h
           mov eax, dword ptr [ebp-000000138h]
           cmp dword ptr [eax+054h], 000000001h
           jne l1003937A
           mov ecx, dword ptr [ebp-000000138h]
           call l10036E0D
;
;* Jump:
; 1003936D(C) 
;
l1003937A: mov dword ptr [g1004BF6C], 000000000h
           mov dword ptr [g100488B4], 000000001h
           mov ecx, dword ptr [ebp-000000138h]
           cmp dword ptr [ecx+000000108h], 000000000h
           jne l1003952E
           mov edx, dword ptr [ebp-000000138h]
           cmp dword ptr [edx+000000094h], 000000000h
           jne l1003952E
           mov eax, dword ptr [ebp-000000138h]
           cmp dword ptr [eax+054h], 000000001h
           jne l1003952E
;
;* String: "1H_R"
;
           push offset g10048924
           lea ecx, [ebp-018h]
           call l10003337
           lea ecx, [ebp-018h]
           push ecx
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 0000000D0h
           call l1003A1E0
           mov dword ptr [ebp-008h], eax
           lea ecx, [ebp-018h]
           call l100039BA
           cmp dword ptr [ebp-008h], 000000000h
           je l1003952E
           push 000000058h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l1003941E
           mov ecx, dword ptr [ebp-01Ch]
           call l10039670
           mov dword ptr [ebp-00000014Ch], eax
           jmp l10039428
;
;* Jump:
; 1003940C(C) 
;
l1003941E: mov dword ptr [ebp-00000014Ch], 000000000h
;
;* Jump:
; 1003941C(U) 
;
l10039428: mov edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [ebp-00Ch], edx
;
;* String: "C0"
;
           push offset g1004892C
           lea ecx, [ebp-024h]
           call l10003337
           lea eax, [ebp-024h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-024h]
           call l100039BA
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           add edx, 00000000Ch
           push edx
           push offset g1004A978
           push 0407F4000h
           push 000000000h
           lea eax, [ebp-03Ch]
           push eax
           call l10031505
           add esp, 000000010h
           push eax
           lea ecx, [ebp-054h]
           push ecx
           call l1002FEB3
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000010h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-008h]
           add edx, 00000000Ch
           push edx
           push offset g1004A978
           push 0407F4000h
           push 000000000h
           lea eax, [ebp-06Ch]
           push eax
           call l10031505
           add esp, 000000010h
           push eax
           lea ecx, [ebp-000000084h]
           push ecx
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000028h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-008h]
           add edx, 00000000Ch
           push edx
           push offset g1004A960
           push 040590000h
           push 000000000h
           lea eax, [ebp-00000009Ch]
           push eax
           call l10031505
           add esp, 000000010h
           push eax
           lea ecx, [ebp-0000000B4h]
           push ecx
           call l100300A1
           add esp, 00000000Ch
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000040h
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 000000100h
           call l1003A240
;
;* Jump:
; 1003939B(C), 100393AE(C), 100393BE(C), 100393F5(C) 
;
;* String: "Crush"
;
l1003952E: push offset g10048930
           lea ecx, [ebp-0000000C0h]
           call l10003337
           lea eax, [ebp-0000000C0h]
           push eax
           mov ecx, dword ptr [ebp-000000138h]
           add ecx, 0000000D0h
           call l1003A1E0
           mov dword ptr [ebp-0000000B8h], eax
           lea ecx, [ebp-0000000C0h]
           call l100039BA
           cmp dword ptr [ebp-0000000B8h], 000000000h
           je l100395D1
           mov dword ptr [ebp-010h], 000000000h
           jmp l10039582
;
;* Jump:
; 100395CF(U) 
;
l10039579: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10039577(U) 
;
l10039582: mov edx, dword ptr [ebp-000000138h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+000000108h]
           jnb l100395D1
           push offset g10048938
           lea ecx, [ebp-0000000C8h]
           call l10003337
           lea ecx, [ebp-0000000C8h]
           push ecx
           mov edx, dword ptr [ebp-000000138h]
           mov eax, dword ptr [edx+000000104h]
           mov ecx, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+ecx*04h]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-0000000C8h]
           call l100039BA
           jmp l10039579
;
;* Jump:
; 1003956E(C), 10039591(C) 
;
l100395D1: mov eax, 000000001h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1003896F ENDP
;
           int 03h
           int 03h
;
;* Call:
; 10032D5B, 10032E37, 10032F61, 1003303D, 1003391D, 10034A18, 10035A39, 10038C51 
;
l100395E0 PROC
           push ebp
           mov ebp, esp
;
;* Jump:
; 10039601(U) 
;
l100395E3: mov eax, dword ptr [ebp+010h]
           sub eax, 000000001h
           mov dword ptr [ebp+010h], eax
           cmp dword ptr [ebp+010h], 000000000h
           jl l10039603
           mov ecx, dword ptr [ebp+008h]
           call [ebp+014h]
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], ecx
           jmp l100395E3
;
;* Jump:
; 100395F0(C) 
;
l10039603: pop ebp
           ret 00010h
l100395E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039610 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g10042D3C
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10039610 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003658C, 10036784, 10039411 
;
l10039670 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov ecx, dword ptr [ebp-010h]
           call l100039E5
           mov eax, dword ptr [ebp-010h]
           add eax, 000000010h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000028h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-010h]
           add edx, 000000040h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax], offset g10042D98
           mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret
l10039670 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039750 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000090h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g10042D9C
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           je l100397B4
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+010h], 000000000h
           jne l10039781
           jmp l100397B4
;
;* Jump:
; 1003977D(C) 
;
l10039781: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10039774(C), 1003977F(U) 
;
l100397B4: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           call l100039BA
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l100397DE
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100397D0(C) 
;
l100397DE: mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039750 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l100397F0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10039821
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039813(C) 
;
l10039821: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100397F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039830 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042D9C
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039889
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10039856
           jmp l10039889
;
;* Jump:
; 10039852(C) 
;
l10039856: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039849(C), 10039854(U) 
;
l10039889: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003989F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039891(C) 
;
l1003989F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039830 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l100398B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l1003992C
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-00Ch], edx
           mov dword ptr [ebp-008h], 000000024h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           imul ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10039909(U) 
;
l100398E8: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l1003990B
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042D3C
           jmp l100398E8
;
;* Jump:
; 100398F5(C) 
;
l1003990B: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039924
           mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000004h
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039913(C) 
;
l10039924: mov eax, dword ptr [ebp-010h]
           sub eax, 000000004h
           jmp l1003994E
;
;* Jump:
; 100398C1(C) 
;
l1003992C: mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx], offset g10042D3C
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003994B
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003993D(C) 
;
l1003994B: mov eax, dword ptr [ebp-010h]
;
;* Jump:
; 1003992A(U) 
;
l1003994E: mov esp, ebp
           pop ebp
           ret 00004h
l100398B0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039960 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1003819B
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039985
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039977(C) 
;
l10039985: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039960 ENDP
;
           int 03h
           int 03h
l10039990 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DE0
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l100399E9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l100399B6
           jmp l100399E9
;
;* Jump:
; 100399B2(C) 
;
l100399B6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 100399A9(C), 100399B4(U) 
;
l100399E9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l100399FF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100399F1(C) 
;
l100399FF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039990 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039A10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DD8
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039A69
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10039A36
           jmp l10039A69
;
;* Jump:
; 10039A32(C) 
;
l10039A36: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039A29(C), 10039A34(U) 
;
l10039A69: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039A7F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039A71(C) 
;
l10039A7F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039A10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039A90 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DEC
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039AE9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10039AB6
           jmp l10039AE9
;
;* Jump:
; 10039AB2(C) 
;
l10039AB6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039AA9(C), 10039AB4(U) 
;
l10039AE9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039AFF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039AF1(C) 
;
l10039AFF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039A90 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039B10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DF0
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039B69
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10039B36
           jmp l10039B69
;
;* Jump:
; 10039B32(C) 
;
l10039B36: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039B29(C), 10039B34(U) 
;
l10039B69: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039B7F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039B71(C) 
;
l10039B7F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039B10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10039B90 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DF4
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039BE9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10039BB6
           jmp l10039BE9
;
;* Jump:
; 10039BB2(C) 
;
l10039BB6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039BA9(C), 10039BB4(U) 
;
l10039BE9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10039BFF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039BF1(C) 
;
l10039BFF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039B90 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100382B1, 10039C3A, 10039C87 
;
l10039C10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l10039C66
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10039C5F
           mov ecx, dword ptr [ebp-004h]
           call l10039C10
           mov ecx, 000000001h
           and ecx, 000000001h
           test ecx, ecx
           je l10039C57
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039C49(C) 
;
l10039C57: mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-028h], eax
           jmp l10039C66
;
;* Jump:
; 10039C35(C) 
;
l10039C5F: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10039C20(C), 10039C5D(U) 
;
l10039C66: mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039CB3
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10039CAC
           mov ecx, dword ptr [ebp-00Ch]
           call l10039C10
           mov edx, 000000001h
           and edx, 000000001h
           test edx, edx
           je l10039CA4
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039C96(C) 
;
l10039CA4: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-02Ch], ecx
           jmp l10039CB3
;
;* Jump:
; 10039C82(C) 
;
l10039CAC: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 10039C6D(C), 10039CAA(U) 
;
l10039CB3: mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+014h], 000000000h
           je l10039D2C
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           je l10039D25
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+004h], 000000000h
           je l10039D05
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10039CFE
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           call l10039D30
           mov dword ptr [ebp-030h], eax
           jmp l10039D05
;
;* Jump:
; 10039CED(C) 
;
l10039CFE: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 10039CD8(C), 10039CFC(U) 
;
l10039D05: mov ecx, 000000001h
           and ecx, 000000001h
           test ecx, ecx
           je l10039D1D
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039D0F(C) 
;
l10039D1D: mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-034h], eax
           jmp l10039D2C
;
;* Jump:
; 10039CCF(C) 
;
l10039D25: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 10039CBA(C), 10039D23(U) 
;
l10039D2C: mov esp, ebp
           pop ebp
           ret
l10039C10 ENDP
;
;* Call:
; 10038334, 10039CF4, 10039D5C, 10039E42 
;
l10039D30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+004h], 000000000h
           je l10039D6D
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10039D66
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           call l10039D30
           mov dword ptr [ebp-010h], eax
           jmp l10039D6D
;
;* Jump:
; 10039D55(C) 
;
l10039D66: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 10039D40(C), 10039D64(U) 
;
l10039D6D: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10039D83
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039D75(C) 
;
l10039D83: mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039D30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038300, 10039DBC, 10039DF0 
;
l10039D90 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l10039DCD
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10039DC6
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           call l10039D90
           mov dword ptr [ebp-028h], eax
           jmp l10039DCD
;
;* Jump:
; 10039DB5(C) 
;
l10039DC6: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10039DA0(C), 10039DC4(U) 
;
l10039DCD: mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10039E01
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10039DFA
           push 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           call l10039D90
           mov dword ptr [ebp-02Ch], eax
           jmp l10039E01
;
;* Jump:
; 10039DE9(C) 
;
l10039DFA: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 10039DD4(C), 10039DF8(U) 
;
l10039E01: mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+014h], 000000000h
           je l10039E7A
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           je l10039E73
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+004h], 000000000h
           je l10039E53
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10039E4C
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           call l10039D30
           mov dword ptr [ebp-030h], eax
           jmp l10039E53
;
;* Jump:
; 10039E3B(C) 
;
l10039E4C: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 10039E26(C), 10039E4A(U) 
;
l10039E53: mov ecx, 000000001h
           and ecx, 000000001h
           test ecx, ecx
           je l10039E6B
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039E5D(C) 
;
l10039E6B: mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-034h], eax
           jmp l10039E7A
;
;* Jump:
; 10039E1D(C) 
;
l10039E73: mov dword ptr [ebp-034h], 000000000h
;
;* Jump:
; 10039E08(C), 10039E71(U) 
;
l10039E7A: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10039E90
           mov edx, dword ptr [ebp-024h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10039E82(C) 
;
l10039E90: mov eax, dword ptr [ebp-024h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039D90 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038EBB 
;
l10039EA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov ecx, dword ptr [ebp-008h]
           call l100039E5
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000010h
           call l1002E190
           mov eax, dword ptr [ebp-008h]
           add eax, 000000090h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+00Ch], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042D9C
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042D94
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g10042D90
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10039EA0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10035D89 
;
l10039F20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042D9C
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10039F20 ENDP
;
;* Call:
; 100383DD, 10038DE4 
;
l10039F60 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l10039F77
           jmp near ptr l1003A002
;
;* Jump:
; 10039F70(C) 
;
l10039F77: cmp dword ptr [ebp+008h], 000000000h
           je l10039FCF
           mov dword ptr [ebp-004h], 000000000h
           jmp l10039F8F
;
;* Jump:
; 10039FCD(U) 
;
l10039F86: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10039F84(U) 
;
l10039F8F: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l10039FCF
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l10039FC6
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l10039FCD
;
;* Jump:
; 10039FB3(C) 
;
l10039FC6: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 10039FC4(U) 
;
l10039FCD: jmp l10039F86
;
;* Jump:
; 10039F7B(C), 10039F98(C) 
;
l10039FCF: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 10039F72(U) 
;
l1003A002: mov esp, ebp
           pop ebp
           ret 00004h
l10039F60 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038005 
;
l1003A010 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042DEC
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A010 ENDP
;
;* Call:
; 100368DA 
;
l1003A050 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-01Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           imul eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp+008h]
           jnb l1003A08E
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-020h], eax
           jmp l1003A094
;
;* Jump:
; 1003A081(C) 
;
l1003A08E: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1003A08C(U) 
;
l1003A094: mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+010h]
           cmp ecx, dword ptr [ebp-004h]
           je l1003A14E
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003A0F6
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+004h], 000000000h
           jne l1003A0F4
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
;
;* Jump:
; 1003A0E6(C) 
;
l1003A0F4: jmp l1003A100
;
;* Jump:
; 1003A0C2(C) 
;
l1003A0F6: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], 000000000h
;
;* Jump:
; 1003A0F4(U) 
;
l1003A100: cmp dword ptr [ebp+00Ch], 000000000h
           je l1003A136
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003A118
;
;* Jump:
; 1003A134(U) 
;
l1003A10F: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1003A10D(U) 
;
l1003A118: mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ebp-00Ch]
           jnb l1003A136
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-010h]
           mov dl, byte ptr [edx]
           mov byte ptr [ecx+eax], dl
           jmp l1003A10F
;
;* Jump:
; 1003A104(C), 1003A11E(C) 
;
l1003A136: cmp dword ptr [ebp-008h], 000000000h
           je l1003A14E
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A0A3(C), 1003A13A(C) 
;
l1003A14E: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+008h], eax
           mov esp, ebp
           pop ebp
           ret 00008h
l1003A050 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038021 
;
l1003A160 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042DF0
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A160 ENDP
;
;* Call:
; 10038093 
;
l1003A1A0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042DF4
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A1A0 ENDP
;
;* Call:
; 10036748, 100393E1, 10039551 
;
l1003A1E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A1FB
;
;* Jump:
; 1003A232(U) 
;
l1003A1F2: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1003A1F0(U) 
;
l1003A1FB: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003A234
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l1003A232
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           jmp l1003A236
;
;* Jump:
; 1003A222(C) 
;
l1003A232: jmp l1003A1F2
;
;* Jump:
; 1003A204(C) 
;
l1003A234: xor eax, eax
;
;* Jump:
; 1003A230(U) 
;
l1003A236: mov esp, ebp
           pop ebp
           ret 00004h
l1003A1E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100368AB, 10039529 
;
l1003A240 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1003A27E
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l1003A347
;
;* Jump:
; 1003A256(C) 
;
l1003A27E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1003A308
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1003A2C6
;
;* Jump:
; 1003A2E6(U) 
;
l1003A2BD: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1003A2BB(U) 
;
l1003A2C6: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A2E8
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1003A2BD
;
;* Jump:
; 1003A2CF(C) 
;
l1003A2E8: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           jmp l1003A326
;
;* Jump:
; 1003A297(C) 
;
l1003A308: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1003A306(U) 
;
l1003A326: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1003A279(U) 
;
l1003A347: mov ecx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           sub eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A240 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100369B9 
;
l1003A360 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A37B
;
;* Jump:
; 1003A3B2(U) 
;
l1003A372: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1003A370(U) 
;
l1003A37B: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003A3B4
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov ecx, dword ptr [ecx+edx*04h]
           call l10003A2F
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l1000354D
           test eax, eax
           je l1003A3B2
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           jmp l1003A3B6
;
;* Jump:
; 1003A3A2(C) 
;
l1003A3B2: jmp l1003A372
;
;* Jump:
; 1003A384(C) 
;
l1003A3B4: xor eax, eax
;
;* Jump:
; 1003A3B0(U) 
;
l1003A3B6: mov esp, ebp
           pop ebp
           ret 00004h
l1003A360 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10034A7A 
;
l1003A3C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1003A400
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp+008h]
           mov edx, dword ptr [edx]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l1003A4CB
;
;* Jump:
; 1003A3D6(C) 
;
l1003A400: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1003A48A
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1003A448
;
;* Jump:
; 1003A468(U) 
;
l1003A43F: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1003A43D(U) 
;
l1003A448: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A46A
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1003A43F
;
;* Jump:
; 1003A451(C) 
;
l1003A46A: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           jmp l1003A4A8
;
;* Jump:
; 1003A419(C) 
;
l1003A48A: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1003A488(U) 
;
l1003A4A8: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp+008h]
           mov eax, dword ptr [eax]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1003A3FB(U) 
;
l1003A4CB: mov ecx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           sub eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A3C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A4E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042D9C
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A539
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003A506
           jmp l1003A539
;
;* Jump:
; 1003A502(C) 
;
l1003A506: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A4F9(C), 1003A504(U) 
;
l1003A539: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003A54F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A541(C) 
;
l1003A54F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A4E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A560 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10042DE8
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A606
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003A593
           jmp l1003A606
;
;* Jump:
; 1003A58F(C) 
;
l1003A593: cmp dword ptr [ebp-010h], 000000000h
           je l1003A5D3
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A5AB
;
;* Jump:
; 1003A5D1(U) 
;
l1003A5A2: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003A5A0(U) 
;
l1003A5AB: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A5D3
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003A5A2
;
;* Jump:
; 1003A597(C), 1003A5B4(C) 
;
l1003A5D3: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003A579(C), 1003A591(U) 
;
l1003A606: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003A61C
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A60E(C) 
;
l1003A61C: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A560 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A630 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10042DE8
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A6D6
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003A663
           jmp l1003A6D6
;
;* Jump:
; 1003A65F(C) 
;
l1003A663: cmp dword ptr [ebp-010h], 000000000h
           je l1003A6A3
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A67B
;
;* Jump:
; 1003A6A1(U) 
;
l1003A672: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003A670(U) 
;
l1003A67B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A6A3
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003A672
;
;* Jump:
; 1003A667(C), 1003A684(C) 
;
l1003A6A3: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003A649(C), 1003A661(U) 
;
l1003A6D6: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003A6EC
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A6DE(C) 
;
l1003A6EC: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A630 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A700 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DE0
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A759
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003A726
           jmp l1003A759
;
;* Jump:
; 1003A722(C) 
;
l1003A726: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A719(C), 1003A724(U) 
;
l1003A759: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003A76F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A761(C) 
;
l1003A76F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A700 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A780 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DD8
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A7D9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003A7A6
           jmp l1003A7D9
;
;* Jump:
; 1003A7A2(C) 
;
l1003A7A6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A799(C), 1003A7A4(U) 
;
l1003A7D9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003A7EF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A7E1(C) 
;
l1003A7EF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A780 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003A800 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DF8
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A8C1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003A836
           jmp near ptr l1003A8C1
;
;* Jump:
; 1003A82F(C) 
;
l1003A836: cmp dword ptr [ebp-014h], 000000000h
           je l1003A88E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A84E
;
;* Jump:
; 1003A88C(U) 
;
l1003A845: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003A843(U) 
;
l1003A84E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A88E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003A885
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003A88C
;
;* Jump:
; 1003A872(C) 
;
l1003A885: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003A883(U) 
;
l1003A88C: jmp l1003A845
;
;* Jump:
; 1003A83A(C), 1003A857(C) 
;
l1003A88E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A819(C), 1003A831(U) 
;
l1003A8C1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003A8D7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A8C9(C) 
;
l1003A8D7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A800 ENDP
;
l1003A8E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DF8
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003A9A1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003A916
           jmp near ptr l1003A9A1
;
;* Jump:
; 1003A90F(C) 
;
l1003A916: cmp dword ptr [ebp-014h], 000000000h
           je l1003A96E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003A92E
;
;* Jump:
; 1003A96C(U) 
;
l1003A925: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003A923(U) 
;
l1003A92E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003A96E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003A965
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003A96C
;
;* Jump:
; 1003A952(C) 
;
l1003A965: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003A963(U) 
;
l1003A96C: jmp l1003A925
;
;* Jump:
; 1003A91A(C), 1003A937(C) 
;
l1003A96E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A8F9(C), 1003A911(U) 
;
l1003A9A1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003A9B7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003A9A9(C) 
;
l1003A9B7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A8E0 ENDP
;
l1003A9C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DEC
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003AA19
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003A9E6
           jmp l1003AA19
;
;* Jump:
; 1003A9E2(C) 
;
l1003A9E6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003A9D9(C), 1003A9E4(U) 
;
l1003AA19: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003AA2F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AA21(C) 
;
l1003AA2F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003A9C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003AA40 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DF0
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003AA99
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003AA66
           jmp l1003AA99
;
;* Jump:
; 1003AA62(C) 
;
l1003AA66: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AA59(C), 1003AA64(U) 
;
l1003AA99: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003AAAF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AAA1(C) 
;
l1003AAAF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003AA40 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003AAC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DFC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003AB81
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003AAF6
           jmp near ptr l1003AB81
;
;* Jump:
; 1003AAEF(C) 
;
l1003AAF6: cmp dword ptr [ebp-014h], 000000000h
           je l1003AB4E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003AB0E
;
;* Jump:
; 1003AB4C(U) 
;
l1003AB05: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003AB03(U) 
;
l1003AB0E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003AB4E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003AB45
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003AB4C
;
;* Jump:
; 1003AB32(C) 
;
l1003AB45: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003AB43(U) 
;
l1003AB4C: jmp l1003AB05
;
;* Jump:
; 1003AAFA(C), 1003AB17(C) 
;
l1003AB4E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AAD9(C), 1003AAF1(U) 
;
l1003AB81: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003AB97
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AB89(C) 
;
l1003AB97: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003AAC0 ENDP
;
l1003ABA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DFC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003AC61
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003ABD6
           jmp near ptr l1003AC61
;
;* Jump:
; 1003ABCF(C) 
;
l1003ABD6: cmp dword ptr [ebp-014h], 000000000h
           je l1003AC2E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003ABEE
;
;* Jump:
; 1003AC2C(U) 
;
l1003ABE5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003ABE3(U) 
;
l1003ABEE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003AC2E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003AC25
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003AC2C
;
;* Jump:
; 1003AC12(C) 
;
l1003AC25: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003AC23(U) 
;
l1003AC2C: jmp l1003ABE5
;
;* Jump:
; 1003ABDA(C), 1003ABF7(C) 
;
l1003AC2E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003ABB9(C), 1003ABD1(U) 
;
l1003AC61: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003AC77
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AC69(C) 
;
l1003AC77: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003ABA0 ENDP
;
l1003AC80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042DF4
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003ACD9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003ACA6
           jmp l1003ACD9
;
;* Jump:
; 1003ACA2(C) 
;
l1003ACA6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AC99(C), 1003ACA4(U) 
;
l1003ACD9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003ACEF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003ACE1(C) 
;
l1003ACEF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003AC80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003AD00 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E00
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003ADC1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003AD36
           jmp near ptr l1003ADC1
;
;* Jump:
; 1003AD2F(C) 
;
l1003AD36: cmp dword ptr [ebp-014h], 000000000h
           je l1003AD8E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003AD4E
;
;* Jump:
; 1003AD8C(U) 
;
l1003AD45: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003AD43(U) 
;
l1003AD4E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003AD8E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003AD85
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003AD8C
;
;* Jump:
; 1003AD72(C) 
;
l1003AD85: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003AD83(U) 
;
l1003AD8C: jmp l1003AD45
;
;* Jump:
; 1003AD3A(C), 1003AD57(C) 
;
l1003AD8E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AD19(C), 1003AD31(U) 
;
l1003ADC1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003ADD7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003ADC9(C) 
;
l1003ADD7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003AD00 ENDP
;
l1003ADE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E00
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003AEA1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003AE16
           jmp near ptr l1003AEA1
;
;* Jump:
; 1003AE0F(C) 
;
l1003AE16: cmp dword ptr [ebp-014h], 000000000h
           je l1003AE6E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003AE2E
;
;* Jump:
; 1003AE6C(U) 
;
l1003AE25: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003AE23(U) 
;
l1003AE2E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003AE6E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003AE65
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003AE6C
;
;* Jump:
; 1003AE52(C) 
;
l1003AE65: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003AE63(U) 
;
l1003AE6C: jmp l1003AE25
;
;* Jump:
; 1003AE1A(C), 1003AE37(C) 
;
l1003AE6E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003ADF9(C), 1003AE11(U) 
;
l1003AEA1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003AEB7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AEA9(C) 
;
l1003AEB7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003ADE0 ENDP
;
l1003AEC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax], offset g10042E04
           mov ecx, dword ptr [ebp-02Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B045
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-02Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003AEF6
           jmp near ptr l1003B045
;
;* Jump:
; 1003AEEF(C) 
;
l1003AEF6: cmp dword ptr [ebp-028h], 000000000h
           je l1003B012
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003AF12
;
;* Jump:
; 1003B00D(U) 
;
l1003AF09: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003AF07(U) 
;
l1003AF12: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B012
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B006
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000008h
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx], offset g10042E10
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           je l1003AFE6
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003AF73
           jmp l1003AFE6
;
;* Jump:
; 1003AF6F(C) 
;
l1003AF73: cmp dword ptr [ebp-020h], 000000000h
           je l1003AFB3
           mov dword ptr [ebp-014h], 000000000h
           jmp l1003AF8B
;
;* Jump:
; 1003AFB1(U) 
;
l1003AF82: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1003AF80(U) 
;
l1003AF8B: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003AFB3
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003AF82
;
;* Jump:
; 1003AF77(C), 1003AF94(C) 
;
l1003AFB3: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AF59(C), 1003AF71(U) 
;
l1003AFE6: mov eax, 000000001h
           and eax, 000000001h
           test eax, eax
           je l1003AFFE
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003AFF0(C) 
;
l1003AFFE: mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-030h], edx
           jmp l1003B00D
;
;* Jump:
; 1003AF3A(C) 
;
l1003B006: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 1003B004(U) 
;
l1003B00D: jmp near ptr l1003AF09
;
;* Jump:
; 1003AEFA(C), 1003AF1B(C) 
;
l1003B012: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003AED9(C), 1003AEF1(U) 
;
l1003B045: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B05B
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B04D(C) 
;
l1003B05B: mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003AEC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003B070 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10042E10
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B116
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B0A3
           jmp l1003B116
;
;* Jump:
; 1003B09F(C) 
;
l1003B0A3: cmp dword ptr [ebp-010h], 000000000h
           je l1003B0E3
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B0BB
;
;* Jump:
; 1003B0E1(U) 
;
l1003B0B2: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B0B0(U) 
;
l1003B0BB: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B0E3
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003B0B2
;
;* Jump:
; 1003B0A7(C), 1003B0C4(C) 
;
l1003B0E3: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003B089(C), 1003B0A1(U) 
;
l1003B116: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003B12C
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B11E(C) 
;
l1003B12C: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B070 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003B140 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax], offset g10042E04
           mov ecx, dword ptr [ebp-02Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B2C5
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-02Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B176
           jmp near ptr l1003B2C5
;
;* Jump:
; 1003B16F(C) 
;
l1003B176: cmp dword ptr [ebp-028h], 000000000h
           je l1003B292
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B192
;
;* Jump:
; 1003B28D(U) 
;
l1003B189: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B187(U) 
;
l1003B192: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B292
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B286
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000008h
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx], offset g10042E10
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           je l1003B266
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003B1F3
           jmp l1003B266
;
;* Jump:
; 1003B1EF(C) 
;
l1003B1F3: cmp dword ptr [ebp-020h], 000000000h
           je l1003B233
           mov dword ptr [ebp-014h], 000000000h
           jmp l1003B20B
;
;* Jump:
; 1003B231(U) 
;
l1003B202: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1003B200(U) 
;
l1003B20B: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003B233
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003B202
;
;* Jump:
; 1003B1F7(C), 1003B214(C) 
;
l1003B233: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B1D9(C), 1003B1F1(U) 
;
l1003B266: mov eax, 000000001h
           and eax, 000000001h
           test eax, eax
           je l1003B27E
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B270(C) 
;
l1003B27E: mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-030h], edx
           jmp l1003B28D
;
;* Jump:
; 1003B1BA(C) 
;
l1003B286: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 1003B284(U) 
;
l1003B28D: jmp near ptr l1003B189
;
;* Jump:
; 1003B17A(C), 1003B19B(C) 
;
l1003B292: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B159(C), 1003B171(U) 
;
l1003B2C5: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B2DB
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B2CD(C) 
;
l1003B2DB: mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B140 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003B2F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E08
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B3B1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B326
           jmp near ptr l1003B3B1
;
;* Jump:
; 1003B31F(C) 
;
l1003B326: cmp dword ptr [ebp-014h], 000000000h
           je l1003B37E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B33E
;
;* Jump:
; 1003B37C(U) 
;
l1003B335: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B333(U) 
;
l1003B33E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B37E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B375
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003B37C
;
;* Jump:
; 1003B362(C) 
;
l1003B375: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003B373(U) 
;
l1003B37C: jmp l1003B335
;
;* Jump:
; 1003B32A(C), 1003B347(C) 
;
l1003B37E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B309(C), 1003B321(U) 
;
l1003B3B1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B3C7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B3B9(C) 
;
l1003B3C7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B2F0 ENDP
;
l1003B3D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E08
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B491
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B406
           jmp near ptr l1003B491
;
;* Jump:
; 1003B3FF(C) 
;
l1003B406: cmp dword ptr [ebp-014h], 000000000h
           je l1003B45E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B41E
;
;* Jump:
; 1003B45C(U) 
;
l1003B415: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B413(U) 
;
l1003B41E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B45E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B455
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003B45C
;
;* Jump:
; 1003B442(C) 
;
l1003B455: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003B453(U) 
;
l1003B45C: jmp l1003B415
;
;* Jump:
; 1003B40A(C), 1003B427(C) 
;
l1003B45E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B3E9(C), 1003B401(U) 
;
l1003B491: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B4A7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B499(C) 
;
l1003B4A7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B3D0 ENDP
;
l1003B4B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E0C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B571
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B4E6
           jmp near ptr l1003B571
;
;* Jump:
; 1003B4DF(C) 
;
l1003B4E6: cmp dword ptr [ebp-014h], 000000000h
           je l1003B53E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B4FE
;
;* Jump:
; 1003B53C(U) 
;
l1003B4F5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B4F3(U) 
;
l1003B4FE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B53E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B535
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003B53C
;
;* Jump:
; 1003B522(C) 
;
l1003B535: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003B533(U) 
;
l1003B53C: jmp l1003B4F5
;
;* Jump:
; 1003B4EA(C), 1003B507(C) 
;
l1003B53E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B4C9(C), 1003B4E1(U) 
;
l1003B571: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B587
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B579(C) 
;
l1003B587: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B4B0 ENDP
;
l1003B590 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E0C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B651
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003B5C6
           jmp near ptr l1003B651
;
;* Jump:
; 1003B5BF(C) 
;
l1003B5C6: cmp dword ptr [ebp-014h], 000000000h
           je l1003B61E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B5DE
;
;* Jump:
; 1003B61C(U) 
;
l1003B5D5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003B5D3(U) 
;
l1003B5DE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003B61E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003B615
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003B61C
;
;* Jump:
; 1003B602(C) 
;
l1003B615: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003B613(U) 
;
l1003B61C: jmp l1003B5D5
;
;* Jump:
; 1003B5CA(C), 1003B5E7(C) 
;
l1003B61E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B5A9(C), 1003B5C1(U) 
;
l1003B651: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B667
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B659(C) 
;
l1003B667: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B590 ENDP
;
l1003B670 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042D68
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B6C9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003B696
           jmp l1003B6C9
;
;* Jump:
; 1003B692(C) 
;
l1003B696: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B689(C), 1003B694(U) 
;
l1003B6C9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B6DF
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B6D1(C) 
;
l1003B6DF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B670 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003B6F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042D78
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B761
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003B716
           jmp l1003B761
;
;* Jump:
; 1003B712(C) 
;
l1003B716: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l1003B73C
           push 000000003h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx]
           mov dword ptr [ebp-010h], eax
           jmp l1003B743
;
;* Jump:
; 1003B729(C) 
;
l1003B73C: mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1003B73A(U) 
;
l1003B743: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B709(C), 1003B714(U) 
;
l1003B761: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B777
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B769(C) 
;
l1003B777: mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B6F0 ENDP
;
;* Call:
; 10034969, 10034A58 
;
l1003B780 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+008h]
           add esi, 000000004h
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+01Ch]
           mov dword ptr [ecx+01Ch], edx
           mov eax, dword ptr [eax+020h]
           mov dword ptr [ecx+020h], eax
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B780 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003B7C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042D7C
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003B819
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003B7E6
           jmp l1003B819
;
;* Jump:
; 1003B7E2(C) 
;
l1003B7E6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B7D9(C), 1003B7E4(U) 
;
l1003B819: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003B82F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003B821(C) 
;
l1003B82F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003B7C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10036140, 100384B9, 100389D4 
;
l1003B840 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003B854
           jmp l1003B8C7
;
;* Jump:
; 1003B850(C) 
;
l1003B854: cmp dword ptr [ebp+008h], 000000000h
           je l1003B894
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003B86C
;
;* Jump:
; 1003B892(U) 
;
l1003B863: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003B861(U) 
;
l1003B86C: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003B894
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003B863
;
;* Jump:
; 1003B858(C), 1003B875(C) 
;
l1003B894: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003B852(U) 
;
l1003B8C7: mov esp, ebp
           pop ebp
           ret 00004h
l1003B840 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038CED 
;
l1003B8D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003B8E4
           jmp l1003B917
;
;* Jump:
; 1003B8E0(C) 
;
l1003B8E4: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003B8E2(U) 
;
l1003B917: mov esp, ebp
           pop ebp
           ret
l1003B8D0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10037FE9 
;
l1003B920 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042DF8
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E18
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E14
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003B920 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100383B3, 10038F2F 
;
l1003B980 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003B994
           jmp l1003B9C7
;
;* Jump:
; 1003B990(C) 
;
l1003B994: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003B992(U) 
;
l1003B9C7: mov esp, ebp
           pop ebp
           ret
l1003B980 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038390, 1003901C 
;
l1003B9D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003B9E4
           jmp l1003BA17
;
;* Jump:
; 1003B9E0(C) 
;
l1003B9E4: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003B9E2(U) 
;
l1003BA17: mov esp, ebp
           pop ebp
           ret
l1003B9D0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038042 
;
l1003BA20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042DFC
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E20
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E1C
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003BA20 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003836D, 10039160 
;
l1003BA80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BA97
           jmp near ptr l1003BB22
;
;* Jump:
; 1003BA90(C) 
;
l1003BA97: cmp dword ptr [ebp+008h], 000000000h
           je l1003BAEF
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003BAAF
;
;* Jump:
; 1003BAED(U) 
;
l1003BAA6: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003BAA4(U) 
;
l1003BAAF: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003BAEF
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1003BAE6
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003BAED
;
;* Jump:
; 1003BAD3(C) 
;
l1003BAE6: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003BAE4(U) 
;
l1003BAED: jmp l1003BAA6
;
;* Jump:
; 1003BA9B(C), 1003BAB8(C) 
;
l1003BAEF: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003BA92(U) 
;
l1003BB22: mov esp, ebp
           pop ebp
           ret 00004h
l1003BA80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038280 
;
l1003BB30 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BB44
           jmp l1003BB77
;
;* Jump:
; 1003BB40(C) 
;
l1003BB44: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003BB42(U) 
;
l1003BB77: mov esp, ebp
           pop ebp
           ret
l1003BB30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100380B4 
;
l1003BB80 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042E00
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E28
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E24
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003BB80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100362D8, 1003825B 
;
l1003BBE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BBF7
           jmp near ptr l1003BC82
;
;* Jump:
; 1003BBF0(C) 
;
l1003BBF7: cmp dword ptr [ebp+008h], 000000000h
           je l1003BC4F
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003BC0F
;
;* Jump:
; 1003BC4D(U) 
;
l1003BC06: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003BC04(U) 
;
l1003BC0F: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003BC4F
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1003BC46
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003BC4D
;
;* Jump:
; 1003BC33(C) 
;
l1003BC46: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003BC44(U) 
;
l1003BC4D: jmp l1003BC06
;
;* Jump:
; 1003BBFB(C), 1003BC18(C) 
;
l1003BC4F: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003BBF2(U) 
;
l1003BC82: mov esp, ebp
           pop ebp
           ret 00004h
l1003BBE0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100380D4 
;
l1003BC90 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042E04
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003BC90 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10035FE2, 1003822E 
;
l1003BCE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BCF7
           jmp near ptr l1003BE46
;
;* Jump:
; 1003BCF0(C) 
;
l1003BCF7: cmp dword ptr [ebp+008h], 000000000h
           je l1003BE13
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003BD13
;
;* Jump:
; 1003BE0E(U) 
;
l1003BD0A: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003BD08(U) 
;
l1003BD13: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003BE13
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1003BE07
           mov eax, dword ptr [ebp-008h]
           add eax, 000000008h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx], offset g10042E10
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+010h], 000000000h
           je l1003BDE7
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1003BD74
           jmp l1003BDE7
;
;* Jump:
; 1003BD70(C) 
;
l1003BD74: cmp dword ptr [ebp-020h], 000000000h
           je l1003BDB4
           mov dword ptr [ebp-014h], 000000000h
           jmp l1003BD8C
;
;* Jump:
; 1003BDB2(U) 
;
l1003BD83: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1003BD81(U) 
;
l1003BD8C: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003BDB4
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003BD83
;
;* Jump:
; 1003BD78(C), 1003BD95(C) 
;
l1003BDB4: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1003BD5A(C), 1003BD72(U) 
;
l1003BDE7: mov edx, 000000001h
           and edx, 000000001h
           test edx, edx
           je l1003BDFF
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003BDF1(C) 
;
l1003BDFF: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-02Ch], ecx
           jmp l1003BE0E
;
;* Jump:
; 1003BD3B(C) 
;
l1003BE07: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1003BE05(U) 
;
l1003BE0E: jmp near ptr l1003BD0A
;
;* Jump:
; 1003BCFB(C), 1003BD1C(C) 
;
l1003BE13: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1003BCF2(U) 
;
l1003BE46: mov esp, ebp
           pop ebp
           ret 00004h
l1003BCE0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100380F5 
;
l1003BE50 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042E08
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E30
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E2C
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003BE50 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100364B8, 10038201 
;
l1003BEB0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BEC7
           jmp near ptr l1003BF52
;
;* Jump:
; 1003BEC0(C) 
;
l1003BEC7: cmp dword ptr [ebp+008h], 000000000h
           je l1003BF1F
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003BEDF
;
;* Jump:
; 1003BF1D(U) 
;
l1003BED6: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003BED4(U) 
;
l1003BEDF: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003BF1F
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1003BF16
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003BF1D
;
;* Jump:
; 1003BF03(C) 
;
l1003BF16: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003BF14(U) 
;
l1003BF1D: jmp l1003BED6
;
;* Jump:
; 1003BECB(C), 1003BEE8(C) 
;
l1003BF1F: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003BEC2(U) 
;
l1003BF52: mov esp, ebp
           pop ebp
           ret 00004h
l1003BEB0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10038116 
;
l1003BF60 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042E0C
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E38
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E34
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003BF60 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100381D5 
;
l1003BFC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1003BFD7
           jmp near ptr l1003C062
;
;* Jump:
; 1003BFD0(C) 
;
l1003BFD7: cmp dword ptr [ebp+008h], 000000000h
           je l1003C02F
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003BFEF
;
;* Jump:
; 1003C02D(U) 
;
l1003BFE6: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003BFE4(U) 
;
l1003BFEF: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003C02F
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C026
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003C02D
;
;* Jump:
; 1003C013(C) 
;
l1003C026: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003C024(U) 
;
l1003C02D: jmp l1003BFE6
;
;* Jump:
; 1003BFDB(C), 1003BFF8(C) 
;
l1003C02F: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003BFD2(U) 
;
l1003C062: mov esp, ebp
           pop ebp
           ret 00004h
l1003BFC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003C070 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DF8
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C131
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C0A6
           jmp near ptr l1003C131
;
;* Jump:
; 1003C09F(C) 
;
l1003C0A6: cmp dword ptr [ebp-014h], 000000000h
           je l1003C0FE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C0BE
;
;* Jump:
; 1003C0FC(U) 
;
l1003C0B5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C0B3(U) 
;
l1003C0BE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C0FE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C0F5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C0FC
;
;* Jump:
; 1003C0E2(C) 
;
l1003C0F5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C0F3(U) 
;
l1003C0FC: jmp l1003C0B5
;
;* Jump:
; 1003C0AA(C), 1003C0C7(C) 
;
l1003C0FE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C089(C), 1003C0A1(U) 
;
l1003C131: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C147
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C139(C) 
;
l1003C147: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C070 ENDP
;
l1003C150 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DFC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C211
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C186
           jmp near ptr l1003C211
;
;* Jump:
; 1003C17F(C) 
;
l1003C186: cmp dword ptr [ebp-014h], 000000000h
           je l1003C1DE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C19E
;
;* Jump:
; 1003C1DC(U) 
;
l1003C195: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C193(U) 
;
l1003C19E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C1DE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C1D5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C1DC
;
;* Jump:
; 1003C1C2(C) 
;
l1003C1D5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C1D3(U) 
;
l1003C1DC: jmp l1003C195
;
;* Jump:
; 1003C18A(C), 1003C1A7(C) 
;
l1003C1DE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C169(C), 1003C181(U) 
;
l1003C211: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C227
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C219(C) 
;
l1003C227: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C150 ENDP
;
l1003C230 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E00
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C2F1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C266
           jmp near ptr l1003C2F1
;
;* Jump:
; 1003C25F(C) 
;
l1003C266: cmp dword ptr [ebp-014h], 000000000h
           je l1003C2BE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C27E
;
;* Jump:
; 1003C2BC(U) 
;
l1003C275: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C273(U) 
;
l1003C27E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C2BE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C2B5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C2BC
;
;* Jump:
; 1003C2A2(C) 
;
l1003C2B5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C2B3(U) 
;
l1003C2BC: jmp l1003C275
;
;* Jump:
; 1003C26A(C), 1003C287(C) 
;
l1003C2BE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C249(C), 1003C261(U) 
;
l1003C2F1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C307
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C2F9(C) 
;
l1003C307: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C230 ENDP
;
l1003C310 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E08
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C3D1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C346
           jmp near ptr l1003C3D1
;
;* Jump:
; 1003C33F(C) 
;
l1003C346: cmp dword ptr [ebp-014h], 000000000h
           je l1003C39E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C35E
;
;* Jump:
; 1003C39C(U) 
;
l1003C355: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C353(U) 
;
l1003C35E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C39E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C395
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C39C
;
;* Jump:
; 1003C382(C) 
;
l1003C395: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C393(U) 
;
l1003C39C: jmp l1003C355
;
;* Jump:
; 1003C34A(C), 1003C367(C) 
;
l1003C39E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C329(C), 1003C341(U) 
;
l1003C3D1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C3E7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C3D9(C) 
;
l1003C3E7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C310 ENDP
;
l1003C3F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E0C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C4B1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C426
           jmp near ptr l1003C4B1
;
;* Jump:
; 1003C41F(C) 
;
l1003C426: cmp dword ptr [ebp-014h], 000000000h
           je l1003C47E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C43E
;
;* Jump:
; 1003C47C(U) 
;
l1003C435: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C433(U) 
;
l1003C43E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C47E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C475
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C47C
;
;* Jump:
; 1003C462(C) 
;
l1003C475: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C473(U) 
;
l1003C47C: jmp l1003C435
;
;* Jump:
; 1003C42A(C), 1003C447(C) 
;
l1003C47E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C409(C), 1003C421(U) 
;
l1003C4B1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C4C7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C4B9(C) 
;
l1003C4C7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C3F0 ENDP
;
l1003C4D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DF8
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C591
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C506
           jmp near ptr l1003C591
;
;* Jump:
; 1003C4FF(C) 
;
l1003C506: cmp dword ptr [ebp-014h], 000000000h
           je l1003C55E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C51E
;
;* Jump:
; 1003C55C(U) 
;
l1003C515: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C513(U) 
;
l1003C51E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C55E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C555
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C55C
;
;* Jump:
; 1003C542(C) 
;
l1003C555: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C553(U) 
;
l1003C55C: jmp l1003C515
;
;* Jump:
; 1003C50A(C), 1003C527(C) 
;
l1003C55E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C4E9(C), 1003C501(U) 
;
l1003C591: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C5A7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C599(C) 
;
l1003C5A7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C4D0 ENDP
;
l1003C5B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042DFC
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C671
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C5E6
           jmp near ptr l1003C671
;
;* Jump:
; 1003C5DF(C) 
;
l1003C5E6: cmp dword ptr [ebp-014h], 000000000h
           je l1003C63E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C5FE
;
;* Jump:
; 1003C63C(U) 
;
l1003C5F5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C5F3(U) 
;
l1003C5FE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C63E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C635
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C63C
;
;* Jump:
; 1003C622(C) 
;
l1003C635: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C633(U) 
;
l1003C63C: jmp l1003C5F5
;
;* Jump:
; 1003C5EA(C), 1003C607(C) 
;
l1003C63E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C5C9(C), 1003C5E1(U) 
;
l1003C671: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C687
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C679(C) 
;
l1003C687: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C5B0 ENDP
;
l1003C690 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E00
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C751
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C6C6
           jmp near ptr l1003C751
;
;* Jump:
; 1003C6BF(C) 
;
l1003C6C6: cmp dword ptr [ebp-014h], 000000000h
           je l1003C71E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C6DE
;
;* Jump:
; 1003C71C(U) 
;
l1003C6D5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C6D3(U) 
;
l1003C6DE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C71E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C715
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C71C
;
;* Jump:
; 1003C702(C) 
;
l1003C715: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C713(U) 
;
l1003C71C: jmp l1003C6D5
;
;* Jump:
; 1003C6CA(C), 1003C6E7(C) 
;
l1003C71E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C6A9(C), 1003C6C1(U) 
;
l1003C751: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C767
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C759(C) 
;
l1003C767: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C690 ENDP
;
l1003C770 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E08
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C831
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C7A6
           jmp near ptr l1003C831
;
;* Jump:
; 1003C79F(C) 
;
l1003C7A6: cmp dword ptr [ebp-014h], 000000000h
           je l1003C7FE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C7BE
;
;* Jump:
; 1003C7FC(U) 
;
l1003C7B5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C7B3(U) 
;
l1003C7BE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C7FE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C7F5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C7FC
;
;* Jump:
; 1003C7E2(C) 
;
l1003C7F5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C7F3(U) 
;
l1003C7FC: jmp l1003C7B5
;
;* Jump:
; 1003C7AA(C), 1003C7C7(C) 
;
l1003C7FE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C789(C), 1003C7A1(U) 
;
l1003C831: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C847
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C839(C) 
;
l1003C847: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C770 ENDP
;
l1003C850 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E0C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003C911
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C886
           jmp near ptr l1003C911
;
;* Jump:
; 1003C87F(C) 
;
l1003C886: cmp dword ptr [ebp-014h], 000000000h
           je l1003C8DE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003C89E
;
;* Jump:
; 1003C8DC(U) 
;
l1003C895: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003C893(U) 
;
l1003C89E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003C8DE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003C8D5
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003C8DC
;
;* Jump:
; 1003C8C2(C) 
;
l1003C8D5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003C8D3(U) 
;
l1003C8DC: jmp l1003C895
;
;* Jump:
; 1003C88A(C), 1003C8A7(C) 
;
l1003C8DE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003C869(C), 1003C881(U) 
;
l1003C911: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003C927
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003C919(C) 
;
l1003C927: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003C850 ENDP
;
;* Call:
; 1003931C 
;
l1003C930 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003CAA3
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C951
           jmp near ptr l1003CAA3
;
;* Jump:
; 1003C94A(C) 
;
l1003C951: mov edx, 000000001h
           test edx, edx
           je l1003CA70
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003C970
;
;* Jump:
; 1003CA6B(U) 
;
l1003C967: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003C965(U) 
;
l1003C970: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003CA70
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l1003CA64
           mov edx, dword ptr [ebp-014h]
           add edx, 000000008h
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax], offset g10042E10
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003CA44
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-030h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003C9D1
           jmp l1003CA44
;
;* Jump:
; 1003C9CD(C) 
;
l1003C9D1: cmp dword ptr [ebp-02Ch], 000000000h
           je l1003CA11
           mov dword ptr [ebp-020h], 000000000h
           jmp l1003C9E9
;
;* Jump:
; 1003CA0F(U) 
;
l1003C9E0: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 1003C9DE(U) 
;
l1003C9E9: mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-020h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003CA11
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003C9E0
;
;* Jump:
; 1003C9D5(C), 1003C9F2(C) 
;
l1003CA11: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003C9B7(C), 1003C9CF(U) 
;
l1003CA44: mov ecx, 000000001h
           and ecx, 000000001h
           test ecx, ecx
           je l1003CA5C
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003CA4E(C) 
;
l1003CA5C: mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-038h], eax
           jmp l1003CA6B
;
;* Jump:
; 1003C998(C) 
;
l1003CA64: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 1003CA62(U) 
;
l1003CA6B: jmp near ptr l1003C967
;
;* Jump:
; 1003C958(C), 1003C979(C) 
;
l1003CA70: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003C93D(C), 1003C94C(U) 
;
l1003CAA3: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003CBC3
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003CB18
;
;* Jump:
; 1003CBBE(U) 
;
l1003CB0F: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003CB0D(U) 
;
l1003CB18: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003CBC3
           push 000000020h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003CB8F
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000008h
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+00Ch], 000000010h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+014h], 000000001h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx], offset g10042E10
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx], offset g10042E3C
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-03Ch], eax
           jmp l1003CB96
;
;* Jump:
; 1003CB38(C) 
;
l1003CB8F: mov dword ptr [ebp-03Ch], 000000000h
;
;* Jump:
; 1003CB8D(U) 
;
l1003CB96: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10032003
           add esp, 000000008h
           jmp near ptr l1003CB0F
;
;* Jump:
; 1003CAE2(C), 1003CB21(C) 
;
l1003CBC3: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003C930 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10039313 
;
l1003CBD0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003CC7F
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003CBF1
           jmp near ptr l1003CC7F
;
;* Jump:
; 1003CBEA(C) 
;
l1003CBF1: mov edx, 000000001h
           test edx, edx
           je l1003CC4C
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003CC0C
;
;* Jump:
; 1003CC4A(U) 
;
l1003CC03: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003CC01(U) 
;
l1003CC0C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003CC4C
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l1003CC43
           push 000000001h
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           call [eax]
           mov dword ptr [ebp-020h], eax
           jmp l1003CC4A
;
;* Jump:
; 1003CC30(C) 
;
l1003CC43: mov dword ptr [ebp-020h], 000000000h
;
;* Jump:
; 1003CC41(U) 
;
l1003CC4A: jmp l1003CC03
;
;* Jump:
; 1003CBF8(C), 1003CC15(C) 
;
l1003CC4C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003CBDD(C), 1003CBEC(U) 
;
l1003CC7F: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003CD6A
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003CCF4
;
;* Jump:
; 1003CD68(U) 
;
l1003CCEB: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003CCE9(U) 
;
l1003CCF4: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003CD6A
           push 000000090h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003CD39
           mov ecx, dword ptr [ebp-00Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 00000000Ch
           call l1002E190
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], offset g10042E40
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-024h], edx
           jmp l1003CD40
;
;* Jump:
; 1003CD13(C) 
;
l1003CD39: mov dword ptr [ebp-024h], 000000000h
;
;* Jump:
; 1003CD37(U) 
;
l1003CD40: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10032871
           add esp, 000000008h
           jmp l1003CCEB
;
;* Jump:
; 1003CCBE(C), 1003CCFD(C) 
;
l1003CD6A: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003CBD0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10039325 
;
l1003CD80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003CE2F
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003CDA1
           jmp near ptr l1003CE2F
;
;* Jump:
; 1003CD9A(C) 
;
l1003CDA1: mov edx, 000000001h
           test edx, edx
           je l1003CDFC
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003CDBC
;
;* Jump:
; 1003CDFA(U) 
;
l1003CDB3: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003CDB1(U) 
;
l1003CDBC: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003CDFC
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l1003CDF3
           push 000000001h
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           call [eax]
           mov dword ptr [ebp-02Ch], eax
           jmp l1003CDFA
;
;* Jump:
; 1003CDE0(C) 
;
l1003CDF3: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1003CDF1(U) 
;
l1003CDFA: jmp l1003CDB3
;
;* Jump:
; 1003CDA8(C), 1003CDC5(C) 
;
l1003CDFC: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003CD8D(C), 1003CD9C(U) 
;
l1003CE2F: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003CFC8
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003CEA4
;
;* Jump:
; 1003CFC3(U) 
;
l1003CE9B: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003CE99(U) 
;
l1003CEA4: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003CFC8
           push 000000058h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003CF94
           mov ecx, dword ptr [ebp-00Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000010h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000028h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000040h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], offset g10042D98
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-030h], edx
           jmp l1003CF9B
;
;* Jump:
; 1003CEC4(C) 
;
l1003CF94: mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 1003CF92(U) 
;
l1003CF9B: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100328ED
           add esp, 000000008h
           jmp near ptr l1003CE9B
;
;* Jump:
; 1003CE6E(C), 1003CEAD(C) 
;
l1003CFC8: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003CD80 ENDP
;
           int 03h
;
;* Call:
; 100365ED 
;
l1003CFD0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003D07F
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003CFF1
           jmp near ptr l1003D07F
;
;* Jump:
; 1003CFEA(C) 
;
l1003CFF1: mov edx, 000000001h
           test edx, edx
           je l1003D04C
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003D00C
;
;* Jump:
; 1003D04A(U) 
;
l1003D003: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003D001(U) 
;
l1003D00C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003D04C
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l1003D043
           push 000000001h
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           call [eax]
           mov dword ptr [ebp-028h], eax
           jmp l1003D04A
;
;* Jump:
; 1003D030(C) 
;
l1003D043: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 1003D041(U) 
;
l1003D04A: jmp l1003D003
;
;* Jump:
; 1003CFF8(C), 1003D015(C) 
;
l1003D04C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003CFDD(C), 1003CFEC(U) 
;
l1003D07F: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003D1DD
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003D0F4
;
;* Jump:
; 1003D1D8(U) 
;
l1003D0EB: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003D0E9(U) 
;
l1003D0F4: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003D1DD
           push 000000040h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003D1A9
           mov ecx, dword ptr [ebp-00Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000010h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000028h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042E44
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-02Ch], ecx
           jmp l1003D1B0
;
;* Jump:
; 1003D114(C) 
;
l1003D1A9: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1003D1A7(U) 
;
l1003D1B0: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10032A2D
           add esp, 000000008h
           jmp near ptr l1003D0EB
;
;* Jump:
; 1003D0BE(C), 1003D0FD(C) 
;
l1003D1DD: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003CFD0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100368C1 
;
l1003D1F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003D23D
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003D20A
           jmp l1003D23D
;
;* Jump:
; 1003D206(C) 
;
l1003D20A: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1003D1FD(C), 1003D208(U) 
;
l1003D23D: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003D2CE
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003D2AB
;
;* Jump:
; 1003D2CC(U) 
;
l1003D2A2: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003D2A0(U) 
;
l1003D2AB: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003D2CE
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           add edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001B6B
           add esp, 000000008h
           jmp l1003D2A2
;
;* Jump:
; 1003D27C(C), 1003D2B4(C) 
;
l1003D2CE: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003D1F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003691C 
;
l1003D2E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003D32D
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003D2FA
           jmp l1003D32D
;
;* Jump:
; 1003D2F6(C) 
;
l1003D2FA: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1003D2ED(C), 1003D2F8(U) 
;
l1003D32D: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003D3C4
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003D39E
;
;* Jump:
; 1003D3C2(U) 
;
l1003D395: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003D393(U) 
;
l1003D39E: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003D3C4
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           lea ecx, [edx+eax*04h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BD9
           add esp, 000000008h
           jmp l1003D395
;
;* Jump:
; 1003D36C(C), 1003D3A7(C) 
;
l1003D3C4: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003D2E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003697C, 1003932E 
;
l1003D3D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003D47F
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003D3F1
           jmp near ptr l1003D47F
;
;* Jump:
; 1003D3EA(C) 
;
l1003D3F1: mov edx, 000000001h
           test edx, edx
           je l1003D44C
           mov dword ptr [ebp-010h], 000000000h
           jmp l1003D40C
;
;* Jump:
; 1003D44A(U) 
;
l1003D403: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003D401(U) 
;
l1003D40C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1003D44C
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], ecx
           cmp dword ptr [ebp-014h], 000000000h
           je l1003D443
           push 000000001h
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-014h]
           call [eax]
           mov dword ptr [ebp-028h], eax
           jmp l1003D44A
;
;* Jump:
; 1003D430(C) 
;
l1003D443: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 1003D441(U) 
;
l1003D44A: jmp l1003D403
;
;* Jump:
; 1003D3F8(C), 1003D415(C) 
;
l1003D44C: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003D3DD(C), 1003D3EC(U) 
;
l1003D47F: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003D5DD
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003D4F4
;
;* Jump:
; 1003D5D8(U) 
;
l1003D4EB: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003D4E9(U) 
;
l1003D4F4: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003D5DD
           push 000000040h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003D5A9
           mov ecx, dword ptr [ebp-00Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000010h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000028h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042E48
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-02Ch], ecx
           jmp l1003D5B0
;
;* Jump:
; 1003D514(C) 
;
l1003D5A9: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1003D5A7(U) 
;
l1003D5B0: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l1003299D
           add esp, 000000008h
           jmp near ptr l1003D4EB
;
;* Jump:
; 1003D4BE(C), 1003D4FD(C) 
;
l1003D5DD: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003D3D0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003930A 
;
l1003D5F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l1003D63D
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003D60A
           jmp l1003D63D
;
;* Jump:
; 1003D606(C) 
;
l1003D60A: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1003D5FD(C), 1003D608(U) 
;
l1003D63D: mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           imul eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp+00Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l1003D72A
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000018h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003D6E0
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-01Ch], eax
           mov dword ptr [ebp-018h], 000000018h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1003D6D6(U) 
;
l1003D6B6: mov edx, dword ptr [ebp-01Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-01Ch], 000000000h
           jl l1003D6D8
           mov ecx, dword ptr [ebp-014h]
           call l100321F0
           mov eax, dword ptr [ebp-014h]
           add eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], eax
           jmp l1003D6B6
;
;* Jump:
; 1003D6C3(C) 
;
l1003D6D8: mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-020h], ecx
           jmp l1003D6E7
;
;* Jump:
; 1003D6A1(C) 
;
l1003D6E0: mov dword ptr [ebp-020h], 000000000h
;
;* Jump:
; 1003D6DE(U) 
;
l1003D6E7: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+004h], eax
           mov dword ptr [ebp-008h], 000000000h
           jmp l1003D702
;
;* Jump:
; 1003D728(U) 
;
l1003D6F9: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1003D6F7(U) 
;
l1003D702: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003D72A
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           add eax, ecx
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l100322BC
           add esp, 000000008h
           jmp l1003D6F9
;
;* Jump:
; 1003D67C(C), 1003D70B(C) 
;
l1003D72A: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003D5F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003D740 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l1003D740 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100363B2 
;
l1003D7C0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l100039E5
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call l1002E190
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E40
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1003D7C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 10039234 
;
l1003D7F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l100039E5
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000010h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000028h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx], offset g10042E44
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l1003D7F0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003D890 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003D8C1
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003D8B3(C) 
;
l1003D8C1: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003D890 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003D8D0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003D901
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003D8F3(C) 
;
l1003D901: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003D8D0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003D910 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003D941
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003D933(C) 
;
l1003D941: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003D910 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100360C4 
;
l1003D950 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10042E10
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10042E3C
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1003D950 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003D9B0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10042E10
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003DA56
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003D9E3
           jmp l1003DA56
;
;* Jump:
; 1003D9DF(C) 
;
l1003D9E3: cmp dword ptr [ebp-010h], 000000000h
           je l1003DA23
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003D9FB
;
;* Jump:
; 1003DA21(U) 
;
l1003D9F2: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003D9F0(U) 
;
l1003D9FB: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003DA23
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1003D9F2
;
;* Jump:
; 1003D9E7(C), 1003DA04(C) 
;
l1003DA23: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1003D9C9(C), 1003D9E1(U) 
;
l1003DA56: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1003DA6C
           mov edx, dword ptr [ebp-014h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003DA5E(C) 
;
l1003DA6C: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003D9B0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003DA80 PROC
           push ebp
           mov ebp, esp
           call l1003DA8F
           call l1003DAEE
           pop ebp
           ret
l1003DA80 ENDP
;
;* Call:
; 1003DA83 
;
l1003DA8F PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1004A9D4], 000000000h
           mov dword ptr [g1004A9D8], 000000000h
           mov dword ptr [g1004A9DC], 000000010h
           mov dword ptr [g1004A9E0], 000000000h
           mov dword ptr [g1004A9E4], 000000001h
           mov dword ptr [g1004A9D0], offset g10042E58
           mov dword ptr [g1004A9D0], offset g10042E54
           mov dword ptr [g1004A9D0], offset g10042E50
           mov dword ptr [g1004A9D0], offset g10042E4C
           pop ebp
           ret
l1003DA8F ENDP
;
;* Call:
; 1003DA88 
;
l1003DAEE PROC
           push ebp
           mov ebp, esp
           push offset l1003DB00
           call l100415A8
           add esp, 000000004h
           pop ebp
           ret
l1003DAEE ENDP
;
l1003DB00 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [g1004A9D0], offset g10042E58
           cmp dword ptr [g1004A9E0], 000000000h
           je l1003DBBC
           mov eax, dword ptr [g1004A9E4]
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [g1004A9E0], 000000000h
           jne l1003DB33
           jmp near ptr l1003DBBC
;
;* Jump:
; 1003DB2C(C) 
;
l1003DB33: cmp dword ptr [ebp-014h], 000000000h
           je l1003DB8A
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003DB4B
;
;* Jump:
; 1003DB88(U) 
;
l1003DB42: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1003DB40(U) 
;
l1003DB4B: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [g1004A9D8]
           jnb l1003DB8A
           mov eax, dword ptr [g1004A9D4]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003DB81
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003DB88
;
;* Jump:
; 1003DB6E(C) 
;
l1003DB81: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003DB7F(U) 
;
l1003DB88: jmp l1003DB42
;
;* Jump:
; 1003DB37(C), 1003DB54(C) 
;
l1003DB8A: mov eax, dword ptr [g1004A9D4]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1004A9D4], 000000000h
           mov dword ptr [g1004A9D8], 000000000h
           mov dword ptr [g1004A9E0], 000000000h
;
;* Jump:
; 1003DB17(C), 1003DB2E(U) 
;
l1003DBBC: mov esp, ebp
           pop ebp
           ret
l1003DB00 ENDP
;
;* Call:
; 1003DEDA 
;
;* Export: ??1B_ElementCSV@@UAE@XZ, 0030
;
l1003DBC0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10042E5C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000010h
           call l100039BA
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g1004217C
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100039BA
           mov esp, ebp
           pop ebp
           ret
l1003DBC0 ENDP
;
;* Export: ?ReadCSV@@YAIPBDPAV?$B_NDataBase@UB_ElementCSV@@@@@Z, 00F6
;
l1003DBF3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000344h
           push esi
           mov dword ptr [ebp-000000108h], 000000000h
;
;* String: "rt"
;
           push offset g1004893C
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_fopen]; [BICRT.fopen].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l1003DC48
           mov ecx, dword ptr [ebp+008h]
           push ecx
;
;* String: "ReadCSV() -> No se ha podido abrir el archivo %s.
;          "
;
           push offset g10048940
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1003DEC4
;
;* Jump:
; 1003DC20(C), 1003DEAC(U) 
;
l1003DC48: lea edx, [ebp-000000210h]
           push edx
           lea eax, [ebp-00000010Ch]
           push eax
           lea ecx, [ebp-000000314h]
           push ecx
           lea edx, [ebp-000000104h]
           push edx
           lea eax, [ebp-000000310h]
           push eax
;
;* String: "%s %s %f %d %s"
;
           push offset g10048974
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_fscanf]; [BICRT.fscanf].
           add esp, 00000001Ch
           mov dword ptr [ebp-000000110h], eax
           cmp dword ptr [ebp-000000110h], 000000005h
           jne l1003DEAA
           push 000000018h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000031Ch], eax
           cmp dword ptr [ebp-00000031Ch], 000000000h
           je l1003DCDC
           mov ecx, dword ptr [ebp-00000031Ch]
           call l100039E5
           mov ecx, dword ptr [ebp-00000031Ch]
           add ecx, 000000010h
           call l10003300
           mov edx, dword ptr [ebp-00000031Ch]
           mov dword ptr [edx], offset g10042E5C
           mov eax, dword ptr [ebp-00000031Ch]
           mov dword ptr [ebp-000000344h], eax
           jmp l1003DCE6
;
;* Jump:
; 1003DCA7(C) 
;
l1003DCDC: mov dword ptr [ebp-000000344h], 000000000h
;
;* Jump:
; 1003DCDA(U) 
;
l1003DCE6: mov ecx, dword ptr [ebp-000000344h]
           mov dword ptr [ebp-000000318h], ecx
           lea edx, [ebp-000000104h]
           push edx
           lea ecx, [ebp-000000324h]
           call l10003337
           lea eax, [ebp-000000324h]
           push eax
           mov ecx, dword ptr [ebp-000000318h]
           add ecx, 000000004h
           call l1000378E
           lea ecx, [ebp-000000324h]
           call l100039BA
           mov ecx, dword ptr [ebp-000000318h]
           mov edx, dword ptr [ebp-000000314h]
           mov dword ptr [ecx+00Ch], edx
           lea eax, [ebp-000000210h]
           push eax
           lea ecx, [ebp-00000032Ch]
           call l10003337
           lea ecx, [ebp-00000032Ch]
           push ecx
           mov ecx, dword ptr [ebp-000000318h]
           add ecx, 000000010h
           call l1000378E
           lea ecx, [ebp-00000032Ch]
           call l100039BA
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l1003DD9C
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-000000318h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l1003DE99
;
;* Jump:
; 1003DD71(C) 
;
l1003DD9C: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp+00Ch]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+008h], 000000000h
           je l1003DE51
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000338h], eax
           mov eax, dword ptr [ebp-000000338h]
           mov dword ptr [ebp-000000330h], eax
           mov dword ptr [ebp-000000334h], 000000000h
           jmp l1003DDFA
;
;* Jump:
; 1003DE26(U) 
;
l1003DDEB: mov ecx, dword ptr [ebp-000000334h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000334h], ecx
;
;* Jump:
; 1003DDE9(U) 
;
l1003DDFA: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-000000334h]
           cmp eax, dword ptr [edx+008h]
           jnb l1003DE28
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-000000334h]
           mov ecx, dword ptr [ebp-000000330h]
           mov esi, dword ptr [ebp-000000334h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1003DDEB
;
;* Jump:
; 1003DE06(C) 
;
l1003DE28: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000033Ch], ecx
           mov edx, dword ptr [ebp-00000033Ch]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-000000330h]
           mov dword ptr [eax+004h], ecx
           jmp l1003DE75
;
;* Jump:
; 1003DDB5(C) 
;
l1003DE51: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000340h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-000000340h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 1003DE4F(U) 
;
l1003DE75: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-000000318h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 1003DD97(U) 
;
l1003DE99: mov eax, dword ptr [ebp-000000108h]
           add eax, 000000001h
           mov dword ptr [ebp-000000108h], eax
           jmp l1003DEAC
;
;* Jump:
; 1003DC8A(C) 
;
l1003DEAA: jmp l1003DEB1
;
;* Jump:
; 1003DEA8(U) 
;
l1003DEAC: jmp near ptr l1003DC48
;
;* Jump:
; 1003DEAA(U) 
;
l1003DEB1: mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_fclose]; [BICRT.fclose].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000108h]
;
;* Jump:
; 1003DC43(U) 
;
l1003DEC4: pop esi
           mov esp, ebp
           pop ebp
           ret
l1003DBF3 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003DED0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1003DBC0
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003DEF5
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003DEE7(C) 
;
l1003DEF5: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003DED0 ENDP
;
           int 03h
           int 03h
l1003DF00 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E58
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003DFC1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003DF36
           jmp near ptr l1003DFC1
;
;* Jump:
; 1003DF2F(C) 
;
l1003DF36: cmp dword ptr [ebp-014h], 000000000h
           je l1003DF8E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003DF4E
;
;* Jump:
; 1003DF8C(U) 
;
l1003DF45: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003DF43(U) 
;
l1003DF4E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003DF8E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003DF85
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003DF8C
;
;* Jump:
; 1003DF72(C) 
;
l1003DF85: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003DF83(U) 
;
l1003DF8C: jmp l1003DF45
;
;* Jump:
; 1003DF3A(C), 1003DF57(C) 
;
l1003DF8E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003DF19(C), 1003DF31(U) 
;
l1003DFC1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003DFD7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003DFC9(C) 
;
l1003DFD7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003DF00 ENDP
;
l1003DFE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E58
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003E0A1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003E016
           jmp near ptr l1003E0A1
;
;* Jump:
; 1003E00F(C) 
;
l1003E016: cmp dword ptr [ebp-014h], 000000000h
           je l1003E06E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003E02E
;
;* Jump:
; 1003E06C(U) 
;
l1003E025: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003E023(U) 
;
l1003E02E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003E06E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003E065
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003E06C
;
;* Jump:
; 1003E052(C) 
;
l1003E065: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003E063(U) 
;
l1003E06C: jmp l1003E025
;
;* Jump:
; 1003E01A(C), 1003E037(C) 
;
l1003E06E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003DFF9(C), 1003E011(U) 
;
l1003E0A1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003E0B7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003E0A9(C) 
;
l1003E0B7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003DFE0 ENDP
;
l1003E0C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E58
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003E181
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003E0F6
           jmp near ptr l1003E181
;
;* Jump:
; 1003E0EF(C) 
;
l1003E0F6: cmp dword ptr [ebp-014h], 000000000h
           je l1003E14E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003E10E
;
;* Jump:
; 1003E14C(U) 
;
l1003E105: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003E103(U) 
;
l1003E10E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003E14E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003E145
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003E14C
;
;* Jump:
; 1003E132(C) 
;
l1003E145: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003E143(U) 
;
l1003E14C: jmp l1003E105
;
;* Jump:
; 1003E0FA(C), 1003E117(C) 
;
l1003E14E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003E0D9(C), 1003E0F1(U) 
;
l1003E181: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003E197
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003E189(C) 
;
l1003E197: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003E0C0 ENDP
;
l1003E1A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10042E58
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1003E261
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1003E1D6
           jmp near ptr l1003E261
;
;* Jump:
; 1003E1CF(C) 
;
l1003E1D6: cmp dword ptr [ebp-014h], 000000000h
           je l1003E22E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003E1EE
;
;* Jump:
; 1003E22C(U) 
;
l1003E1E5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003E1E3(U) 
;
l1003E1EE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1003E22E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003E225
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1003E22C
;
;* Jump:
; 1003E212(C) 
;
l1003E225: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1003E223(U) 
;
l1003E22C: jmp l1003E1E5
;
;* Jump:
; 1003E1DA(C), 1003E1F7(C) 
;
l1003E22E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1003E1B9(C), 1003E1D1(U) 
;
l1003E261: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1003E277
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1003E269(C) 
;
l1003E277: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1003E1A0 ENDP
;
;* Call:
; 1003E312, 1003E46F, 1003E535, 1003E5DD 
;
l1003E280 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           cmp ecx, dword ptr [__imp__PyTuple_Type]; [python15.PyTuple_Type].
           jne l1003E330
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__PyTuple_Size]; [python15.PyTuple_Size].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
           push eax
;
;* String: "Tuple with %d args
;          "
;
           push offset g10048988
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           mov dword ptr [ebp-008h], 000000000h
           jmp l1003E2D9
;
;* Jump:
; 1003E32C(U) 
;
l1003E2D0: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1003E2CE(U) 
;
l1003E2D9: mov edx, dword ptr [ebp-008h]
           cmp edx, dword ptr [ebp-004h]
           jnl l1003E32E
           mov eax, dword ptr [ebp-008h]
           push eax
;
;* String: "Item %d is: "
;
           push offset g1004899C
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__PyTuple_GetItem]; [python15.PyTuple_GetItem].
           add esp, 000000008h
           push eax
           call l1003E280
           add esp, 000000004h
           push offset g100489AC
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           jmp l1003E2D0
;
;* Jump:
; 1003E2DF(C) 
;
l1003E32E: jmp l1003E38A
;
;* Jump:
; 1003E292(C) 
;
l1003E330: mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp__PyObject_Str]; [python15.PyObject_Str].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp__PyString_AsString]; [python15.PyString_AsString].
           add esp, 000000004h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l1003E363
           jmp l1003E38A
;
;* Jump:
; 1003E35F(C) 
;
l1003E363: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx], 000000000h
           je l1003E37A
           jmp l1003E38A
;
;* Jump:
; 1003E376(C) 
;
l1003E37A: mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           call [edx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003E32E(U), 1003E361(U), 1003E378(U) 
;
l1003E38A: mov esp, ebp
           pop ebp
           ret
l1003E280 ENDP
;
           push ebp
           mov ebp, esp
           push ecx
           call [__imp__PyErr_Occurred]; [python15.PyErr_Occurred].
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l1003E3B1
           call [__imp__PyErr_Print]; [python15.PyErr_Print].
           call [__imp__PyErr_Clear]; [python15.PyErr_Clear].
           mov al, 001h
           jmp l1003E3B3
;
;* Jump:
; 1003E39F(C) 
;
l1003E3B1: xor al, al
;
;* Jump:
; 1003E3AF(U) 
;
l1003E3B3: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov edi, dword ptr [ebp+008h]
           mov edx, offset g1004AA10
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           push 000000020h
           push offset g1004AA10
           call [__imp_strchr]; [BICRT.strchr].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l1003E42B
           push 000000020h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           push ecx
           call [__imp_strchr]; [BICRT.strchr].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l1003E42B
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx], 03Eh
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], 000h
;
;* Jump:
; 1003E3F9(C), 1003E414(C) 
;
l1003E42B: mov eax, offset g1004AA10
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
;
;* Call:
; 100016D3 
;
;* Export: ?CallPythonObject@@YAPAUPyObject@@PAU1@0@Z, 009E
;
l1003E436 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [g10048984]
           and eax, 000000002h
           test eax, eax
           je l1003E4EB
           call [__imp__PyErr_Occurred]; [python15.PyErr_Occurred].
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1003E4EB
           call [__imp__PyErr_Print]; [python15.PyErr_Print].
           cmp dword ptr [ebp+00Ch], 000000000h
           je l1003E477
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l1003E280
           add esp, 000000004h
;
;* Jump:
; 1003E469(C) 
;
l1003E477: mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__PyObject_Str]; [python15.PyObject_Str].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l1003E4B6
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp__PyString_AsString]; [python15.PyString_AsString].
           add esp, 000000004h
           push eax
;
;* String: "Function (method): %s
;          "
;
           push offset g100489B0
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 1003E48B(C) 
;
l1003E4B6: cmp dword ptr [ebp-00Ch], 000000000h
           jne l1003E4BE
           jmp l1003E4E5
;
;* Jump:
; 1003E4BA(C) 
;
l1003E4BE: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx], 000000000h
           je l1003E4D5
           jmp l1003E4E5
;
;* Jump:
; 1003E4D1(C) 
;
l1003E4D5: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           call [ecx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003E4BC(U), 1003E4D3(U) 
;
l1003E4E5: call [__imp__PyErr_Clear]; [python15.PyErr_Clear].
;
;* Jump:
; 1003E446(C), 1003E459(C) 
;
l1003E4EB: push 000000000h
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp__PyEval_CallObjectWithKeywords]; [python15.PyEval_CallObjectWithKeywords].
           add esp, 00000000Ch
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [g10048984]
           and ecx, 000000001h
           test ecx, ecx
           je l1003E5B3
           call [__imp__PyErr_Occurred]; [python15.PyErr_Occurred].
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l1003E5B1
           call [__imp__PyErr_Print]; [python15.PyErr_Print].
           cmp dword ptr [ebp+00Ch], 000000000h
           je l1003E53D
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call l1003E280
           add esp, 000000004h
;
;* Jump:
; 1003E52F(C) 
;
l1003E53D: mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp__PyObject_Str]; [python15.PyObject_Str].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           je l1003E57C
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp__PyString_AsString]; [python15.PyString_AsString].
           add esp, 000000004h
           push eax
;
;* String: "Function (method): %s
;          "
;
           push offset g100489C8
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 1003E551(C) 
;
l1003E57C: cmp dword ptr [ebp-014h], 000000000h
           jne l1003E584
           jmp l1003E5AB
;
;* Jump:
; 1003E580(C) 
;
l1003E584: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx], 000000000h
           je l1003E59B
           jmp l1003E5AB
;
;* Jump:
; 1003E597(C) 
;
l1003E59B: mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           call [edx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003E582(U), 1003E599(U) 
;
l1003E5AB: call [__imp__PyErr_Clear]; [python15.PyErr_Clear].
;
;* Jump:
; 1003E51F(C) 
;
l1003E5B1: jmp l1003E5C3
;
;* Jump:
; 1003E50C(C) 
;
l1003E5B3: call [__imp__PyErr_Occurred]; [python15.PyErr_Occurred].
           test eax, eax
           je l1003E5C3
           call [__imp__PyErr_Clear]; [python15.PyErr_Clear].
;
;* Jump:
; 1003E5B1(U), 1003E5BB(C) 
;
l1003E5C3: mov eax, dword ptr [g10048984]
           and eax, 000000004h
           test eax, eax
           je l1003E653
           cmp dword ptr [ebp+00Ch], 000000000h
           je l1003E5E5
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l1003E280
           add esp, 000000004h
;
;* Jump:
; 1003E5D7(C) 
;
l1003E5E5: mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__PyObject_Str]; [python15.PyObject_Str].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           je l1003E624
           mov eax, dword ptr [ebp-018h]
           push eax
           call [__imp__PyString_AsString]; [python15.PyString_AsString].
           add esp, 000000004h
           push eax
;
;* String: "Function (method): %s
;          "
;
           push offset g100489E0
           call l10029BE0
           add esp, 000000008h
           push eax
           push offset g1004A53C
           call l1002A2C3
           add esp, 000000008h
;
;* Jump:
; 1003E5F9(C) 
;
l1003E624: cmp dword ptr [ebp-018h], 000000000h
           jne l1003E62C
           jmp l1003E653
;
;* Jump:
; 1003E628(C) 
;
l1003E62C: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx], 000000000h
           je l1003E643
           jmp l1003E653
;
;* Jump:
; 1003E63F(C) 
;
l1003E643: mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           call [ecx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003E5CD(C), 1003E62A(U), 1003E641(U) 
;
l1003E653: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l1003E436 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1003E660 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: "<Global variables>"
;
           push offset g10048CD8
           call [__imp__PyString_FromString]; [python15.PyString_FromString].
           add esp, 000000004h
           pop ebp
           ret
l1003E660 ENDP
;
l1003E679 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp+010h], eax
;
;* String: "Global variables { "
;
           push offset g10048CEC
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_fprintf]; [BICRT.fprintf].
           add esp, 000000008h
;
;* Jump:
; 1003E6F6(U) 
;
l1003E69C: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [eax+ecx*04h], 000000000h
           je l1003E6F8
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov eax, dword ptr [edx]
           push eax
;
;* String: "%s"
;
           push offset g10048D00
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_fprintf]; [BICRT.fprintf].
           add esp, 00000000Ch
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+edx*04h], 000000000h
           je l1003E6F6
;
;* String: ", "
;
           push offset g10048D04
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_fprintf]; [BICRT.fprintf].
           add esp, 000000008h
;
;* Jump:
; 1003E6E2(C) 
;
l1003E6F6: jmp l1003E69C
;
;* Jump:
; 1003E6A9(C) 
;
;* String: " }
;          "
;
l1003E6F8: push offset g10048D08
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_fprintf]; [BICRT.fprintf].
           add esp, 000000008h
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l1003E679 ENDP
;
l1003E710 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000098h
           mov dword ptr [ebp-000000084h], 000000000h
;
;* Jump:
; 1003E7FA(U) 
;
l1003E723: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000084h]
           cmp dword ptr [ecx+edx*04h], 000000000h
           je l1003E7FF
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000084h]
           mov ecx, dword ptr [edx+eax*04h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-00000008Ch], edx
;
;* Jump:
; 1003E7A9(C) 
;
l1003E759: mov eax, dword ptr [ebp-00000008Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-00000008Dh], cl
           mov edx, dword ptr [ebp-000000088h]
           cmp cl, byte ptr [edx]
           jne l1003E7B7
           cmp byte ptr [ebp-00000008Dh], 000h
           je l1003E7AB
           mov eax, dword ptr [ebp-00000008Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000008Eh], cl
           mov edx, dword ptr [ebp-000000088h]
           cmp cl, byte ptr [edx+001h]
           jne l1003E7B7
           add dword ptr [ebp-00000008Ch], 000000002h
           add dword ptr [ebp-000000088h], 000000002h
           cmp byte ptr [ebp-00000008Eh], 000h
           jne l1003E759
;
;* Jump:
; 1003E778(C) 
;
l1003E7AB: mov dword ptr [ebp-000000094h], 000000000h
           jmp l1003E7C2
;
;* Jump:
; 1003E76F(C), 1003E792(C) 
;
l1003E7B7: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000094h], eax
;
;* Jump:
; 1003E7B5(U) 
;
l1003E7C2: mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-000000098h], ecx
           cmp dword ptr [ebp-000000098h], 000000000h
           jne l1003E7EB
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-000000084h]
           mov edx, dword ptr [eax+ecx*04h]
           call [edx+004h]
           jmp l1003E82D
;
;* Jump:
; 1003E7D5(C) 
;
l1003E7EB: mov eax, dword ptr [ebp-000000084h]
           add eax, 000000001h
           mov dword ptr [ebp-000000084h], eax
           jmp near ptr l1003E723
;
;* Jump:
; 1003E733(C) 
;
l1003E7FF: mov ecx, dword ptr [ebp+00Ch]
           push ecx
;
;* String: "C global variable %s not found."
;
           push offset g10048D0C
           lea edx, [ebp-080h]
           push edx
           call [__imp_sprintf]; [BICRT.sprintf].
           add esp, 00000000Ch
           lea eax, [ebp-080h]
           push eax
           mov ecx, dword ptr [__imp__PyExc_NameError]; [python15.PyExc_NameError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
;
;* Jump:
; 1003E7E9(U) 
;
l1003E82D: mov esp, ebp
           pop ebp
           ret
l1003E710 ENDP
;
l1003E831 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000098h
           mov dword ptr [ebp-000000084h], 000000000h
;
;* Jump:
; 1003E922(U) 
;
l1003E844: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000084h]
           cmp dword ptr [ecx+edx*04h], 000000000h
           je l1003E927
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000084h]
           mov ecx, dword ptr [edx+eax*04h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-00000008Ch], edx
;
;* Jump:
; 1003E8CA(C) 
;
l1003E87A: mov eax, dword ptr [ebp-00000008Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-00000008Dh], cl
           mov edx, dword ptr [ebp-000000088h]
           cmp cl, byte ptr [edx]
           jne l1003E8D8
           cmp byte ptr [ebp-00000008Dh], 000h
           je l1003E8CC
           mov eax, dword ptr [ebp-00000008Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000008Eh], cl
           mov edx, dword ptr [ebp-000000088h]
           cmp cl, byte ptr [edx+001h]
           jne l1003E8D8
           add dword ptr [ebp-00000008Ch], 000000002h
           add dword ptr [ebp-000000088h], 000000002h
           cmp byte ptr [ebp-00000008Eh], 000h
           jne l1003E87A
;
;* Jump:
; 1003E899(C) 
;
l1003E8CC: mov dword ptr [ebp-000000094h], 000000000h
           jmp l1003E8E3
;
;* Jump:
; 1003E890(C), 1003E8B3(C) 
;
l1003E8D8: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000094h], eax
;
;* Jump:
; 1003E8D6(U) 
;
l1003E8E3: mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-000000098h], ecx
           cmp dword ptr [ebp-000000098h], 000000000h
           jne l1003E913
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ecx+edx*04h]
           call [eax+008h]
           add esp, 000000004h
           jmp l1003E958
;
;* Jump:
; 1003E8F6(C) 
;
l1003E913: mov ecx, dword ptr [ebp-000000084h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000084h], ecx
           jmp near ptr l1003E844
;
;* Jump:
; 1003E854(C) 
;
l1003E927: mov edx, dword ptr [ebp+00Ch]
           push edx
;
;* String: "C global variable %s not found."
;
           push offset g10048D2C
           lea eax, [ebp-080h]
           push eax
           call [__imp_sprintf]; [BICRT.sprintf].
           add esp, 00000000Ch
           lea ecx, [ebp-080h]
           push ecx
           mov edx, dword ptr [__imp__PyExc_NameError]; [python15.PyExc_NameError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           mov eax, 000000001h
;
;* Jump:
; 1003E911(U) 
;
l1003E958: mov esp, ebp
           pop ebp
           ret
l1003E831 ENDP
;
l1003E95C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":GetnOpenedInputFiles"
;
           push offset g10048D98
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003E982
           xor eax, eax
           jmp l1003E9A2
;
;* Jump:
; 1003E97C(C) 
;
l1003E982: call l100020C3
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           push edx
           push offset g10048DB0
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003E980(U) 
;
l1003E9A2: mov esp, ebp
           pop ebp
           ret
l1003E95C ENDP
;
l1003E9A6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":GetnOpenInputFiles"
;
           push offset g10048DB4
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003E9CC
           xor eax, eax
           jmp l1003E9EC
;
;* Jump:
; 1003E9C6(C) 
;
l1003E9CC: call l100020CD
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           push edx
           push offset g10048DC8
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003E9CA(U) 
;
l1003E9EC: mov esp, ebp
           pop ebp
           ret
l1003E9A6 ENDP
;
l1003E9F0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":ResetnOpenedInputFiles"
;
           push offset g10048DCC
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003EA14
           xor eax, eax
           jmp l1003EA38
;
;* Jump:
; 1003EA0E(C) 
;
l1003EA14: call l100020D7
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ecx], eax
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EA12(U) 
;
l1003EA38: mov esp, ebp
           pop ebp
           ret
l1003E9F0 ENDP
;
l1003EA3C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "O:SetOnOpenInputFileFunc"
;
           push offset g10048DE4
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EA6D
           xor eax, eax
           jmp l1003EAB4
;
;* Jump:
; 1003EA67(C) 
;
l1003EA6D: mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp__PyCallable_Check]; [python15.PyCallable_Check].
           add esp, 000000004h
           test eax, eax
           je l1003EA86
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], ecx
           jmp l1003EA8D
;
;* Jump:
; 1003EA7C(C) 
;
l1003EA86: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1003EA84(U) 
;
l1003EA8D: mov edx, dword ptr [ebp-008h]
           push edx
           call l100020E1
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov eax, dword ptr [ebp-010h]
           push eax
           push offset g10048E00
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EA6B(U) 
;
l1003EAB4: mov esp, ebp
           pop ebp
           ret
l1003EA3C ENDP
;
l1003EAB8 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":RemoveOnOpenInputFileFunc"
;
           push offset g10048E04
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003EADC
           xor eax, eax
           jmp l1003EB00
;
;* Jump:
; 1003EAD6(C) 
;
l1003EADC: call l100020F2
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ecx], eax
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EADA(U) 
;
l1003EB00: mov esp, ebp
           pop ebp
           ret
l1003EAB8 ENDP
;
l1003EB04 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:ReadBOD"
;
           push offset g10048E20
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EB2E
           xor eax, eax
           jmp l1003EB55
;
;* Jump:
; 1003EB28(C) 
;
l1003EB2E: mov eax, dword ptr [ebp-008h]
           push eax
           call l100061BA
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E2C
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EB2C(U) 
;
l1003EB55: mov esp, ebp
           pop ebp
           ret
l1003EB04 ENDP
;
l1003EB59 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:LoadBOD"
;
           push offset g10048E30
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EB83
           xor eax, eax
           jmp l1003EBAA
;
;* Jump:
; 1003EB7D(C) 
;
l1003EB83: mov eax, dword ptr [ebp-008h]
           push eax
           call l100061F0
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E3C
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EB81(U) 
;
l1003EBAA: mov esp, ebp
           pop ebp
           ret
l1003EB59 ENDP
;
l1003EBAE PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:ReadAutoBOD"
;
           push offset g10048E40
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EBD8
           xor eax, eax
           jmp l1003EBFF
;
;* Jump:
; 1003EBD2(C) 
;
l1003EBD8: mov eax, dword ptr [ebp-008h]
           push eax
           call l10006266
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E50
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EBD6(U) 
;
l1003EBFF: mov esp, ebp
           pop ebp
           ret
l1003EBAE ENDP
;
l1003EC03 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:ReadMMP"
;
           push offset g10048E54
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EC2D
           xor eax, eax
           jmp l1003EC54
;
;* Jump:
; 1003EC27(C) 
;
l1003EC2D: mov eax, dword ptr [ebp-008h]
           push eax
           call l10006230
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E60
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EC2B(U) 
;
l1003EC54: mov esp, ebp
           pop ebp
           ret
l1003EC03 ENDP
;
l1003EC58 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:SaveBODData"
;
           push offset g10048E64
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003EC82
           xor eax, eax
           jmp l1003ECA9
;
;* Jump:
; 1003EC7C(C) 
;
l1003EC82: mov eax, dword ptr [ebp-008h]
           push eax
           call l1000660B
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E74
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EC80(U) 
;
l1003ECA9: mov esp, ebp
           pop ebp
           ret
l1003EC58 ENDP
;
l1003ECAD PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:LoadBODData"
;
           push offset g10048E78
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003ECD7
           xor eax, eax
           jmp l1003ECFE
;
;* Jump:
; 1003ECD1(C) 
;
l1003ECD7: mov eax, dword ptr [ebp-008h]
           push eax
           call l10006620
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048E88
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003ECD5(U) 
;
l1003ECFE: mov esp, ebp
           pop ebp
           ret
l1003ECAD ENDP
;
l1003ED02 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:SaveAutoBODData"
;
           push offset g10048E8C
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003ED2C
           xor eax, eax
           jmp l1003ED53
;
;* Jump:
; 1003ED26(C) 
;
l1003ED2C: mov eax, dword ptr [ebp-008h]
           push eax
           call l10006635
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048EA0
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003ED2A(U) 
;
l1003ED53: mov esp, ebp
           pop ebp
           ret
l1003ED02 ENDP
;
l1003ED57 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* String: "s:LoadAutoBODData"
;
           push offset g10048EA4
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003ED81
           xor eax, eax
           jmp l1003EDA8
;
;* Jump:
; 1003ED7B(C) 
;
l1003ED81: mov eax, dword ptr [ebp-008h]
           push eax
           call l1000664A
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push offset g10048EB8
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003ED7F(U) 
;
l1003EDA8: mov esp, ebp
           pop ebp
           ret
l1003ED57 ENDP
;
l1003EDAC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-008h]
           push edx
;
;* String: "is:LoadResourceToMemory"
;
           push offset g10048EBC
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l1003EDDA
           xor eax, eax
           jmp l1003EE05
;
;* Jump:
; 1003EDD4(C) 
;
l1003EDDA: mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l1000665F
           add esp, 000000008h
           mov dword ptr [ebp-010h], eax
           mov eax, dword ptr [ebp-010h]
           push eax
           push offset g10048ED4
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EDD8(U) 
;
l1003EE05: mov esp, ebp
           pop ebp
           ret
l1003EDAC ENDP
;
l1003EE09 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":GetCurrentLanguage"
;
           push offset g10048ED8
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003EE2F
           xor eax, eax
           jmp l1003EE4F
;
;* Jump:
; 1003EE29(C) 
;
l1003EE2F: call l100028EC
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           push edx
           push offset g10048EEC
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EE2D(U) 
;
l1003EE4F: mov esp, ebp
           pop ebp
           ret
l1003EE09 ENDP
;
l1003EE53 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":GetConfigDirectory"
;
           push offset g10048EF0
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003EE79
           xor eax, eax
           jmp l1003EE99
;
;* Jump:
; 1003EE73(C) 
;
l1003EE79: call l10002740
           mov dword ptr [ebp-008h], eax
           mov edx, dword ptr [ebp-008h]
           push edx
           push offset g10048F04
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EE77(U) 
;
l1003EE99: mov esp, ebp
           pop ebp
           ret
l1003EE53 ENDP
;
l1003EE9D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000088h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
;
;* String: ":GetResourceManager"
;
           push offset g10048F08
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000008h
           test eax, eax
           jne l1003EEC6
           xor eax, eax
           jmp l1003EF01
;
;* Jump:
; 1003EEC0(C) 
;
l1003EEC6: call l10003EB0
           mov dword ptr [ebp-008h], eax
;
;* String: "_B_ResourceManager_p"
;
           push offset g10048F1C
           mov edx, dword ptr [ebp-008h]
           push edx
           lea eax, [ebp-000000088h]
           push eax
           call l1003EF05
           add esp, 00000000Ch
           lea ecx, [ebp-000000088h]
           push ecx
           push offset g10048F34
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003EEC4(U) 
;
l1003EF01: mov esp, ebp
           pop ebp
           ret
l1003EE9D ENDP
;
;* Call:
; 1003EEDE, 1003F224 
;
l1003EF05 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           push esi
           push edi
           lea eax, [ebp-020h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp-004h], 000000000h
           jbe l1003EF80
;
;* Jump:
; 1003EF4E(U) 
;
l1003EF1F: cmp dword ptr [ebp-004h], 000000000h
           jbe l1003EF50
           mov edx, dword ptr [ebp-004h]
           and edx, 00000000Fh
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+offset g10048A68]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           shr ecx, 004h
           mov dword ptr [ebp-004h], ecx
           jmp l1003EF1F
;
;* Jump:
; 1003EF23(C) 
;
l1003EF50: mov edx, dword ptr [ebp-008h]
           mov byte ptr [edx], 05Fh
;
;* Jump:
; 1003EF7C(U) 
;
l1003EF56: mov eax, dword ptr [ebp-008h]
           lea ecx, [ebp-020h]
           cmp eax, ecx
           jb l1003EF7E
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [eax]
           mov byte ptr [edx], cl
           mov edx, dword ptr [ebp+008h]
           add edx, 000000001h
           mov dword ptr [ebp+008h], edx
           mov eax, dword ptr [ebp-008h]
           sub eax, 000000001h
           mov dword ptr [ebp-008h], eax
           jmp l1003EF56
;
;* Jump:
; 1003EF5E(C) 
;
l1003EF7E: jmp l1003EFA5
;
;* Jump:
; 1003EF1D(C) 
;
;* String: "NULL"
;
l1003EF80: mov edi, offset g10048D88
           mov edx, dword ptr [ebp+008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
;
;* Jump:
; 1003EF7E(U) 
;
l1003EFA5: cmp dword ptr [ebp+00Ch], 000000000h
           je l1003EFCE
           mov edi, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
;
;* Jump:
; 1003EFA9(C) 
;
l1003EFCE: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1003EF05 ENDP
;
l1003EFD4 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000B8h
           push esi
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-008h]
           push edx
;
;* String: "|ii:new_B_BitMap24"
;
           push offset g10048F38
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l1003F017
           xor eax, eax
           jmp near ptr l1003F247
;
;* Jump:
; 1003F00E(C) 
;
l1003F017: push 000000010h
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000094h], eax
           cmp dword ptr [ebp-000000094h], 000000000h
           je l1003F201
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-0000000B4h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-0000000B0h], edx
           mov eax, dword ptr [ebp-000000094h]
;
;* String: "pt"
;
           mov dword ptr [eax], offset g100421C8
           mov ecx, dword ptr [g1004A530]
           cmp ecx, dword ptr [g1004A528]
           jbe l1003F088
           mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
           jmp near ptr l1003F180
;
;* Jump:
; 1003F05E(C) 
;
l1003F088: mov eax, dword ptr [g1004A530]
           add eax, dword ptr [g1004A52C]
           mov dword ptr [g1004A530], eax
           cmp dword ptr [g1004A528], 000000000h
           je l1003F13A
           mov ecx, dword ptr [g1004A530]
           shl ecx, 002h
           push ecx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000A4h], eax
           mov edx, dword ptr [ebp-0000000A4h]
           mov dword ptr [ebp-00000009Ch], edx
           mov dword ptr [ebp-0000000A0h], 000000000h
           jmp l1003F0E4
;
;* Jump:
; 1003F110(U) 
;
l1003F0D5: mov eax, dword ptr [ebp-0000000A0h]
           add eax, 000000001h
           mov dword ptr [ebp-0000000A0h], eax
;
;* Jump:
; 1003F0D3(U) 
;
l1003F0E4: mov ecx, dword ptr [ebp-0000000A0h]
           cmp ecx, dword ptr [g1004A528]
           jnb l1003F112
           mov edx, dword ptr [g1004A524]
           mov eax, dword ptr [ebp-0000000A0h]
           mov ecx, dword ptr [ebp-00000009Ch]
           mov esi, dword ptr [ebp-0000000A0h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1003F0D5
;
;* Jump:
; 1003F0F0(C) 
;
l1003F112: mov eax, dword ptr [g1004A524]
           mov dword ptr [ebp-0000000A8h], eax
           mov ecx, dword ptr [ebp-0000000A8h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-00000009Ch]
           mov dword ptr [g1004A524], edx
           jmp l1003F15D
;
;* Jump:
; 1003F09F(C) 
;
l1003F13A: mov eax, dword ptr [g1004A530]
           shl eax, 002h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000ACh], eax
           mov ecx, dword ptr [ebp-0000000ACh]
           mov dword ptr [g1004A524], ecx
;
;* Jump:
; 1003F138(U) 
;
l1003F15D: mov edx, dword ptr [g1004A528]
           mov eax, dword ptr [g1004A524]
           mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g1004A528]
           add edx, 000000001h
           mov dword ptr [g1004A528], edx
;
;* Jump:
; 1003F083(U) 
;
l1003F180: mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [ebp-0000000B0h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [ebp-0000000B4h]
           mov dword ptr [edx+008h], eax
           cmp dword ptr [ebp-0000000B0h], 000000000h
           je l1003F1E6
           cmp dword ptr [ebp-0000000B4h], 000000000h
           je l1003F1E6
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [ecx+004h]
           imul eax, dword ptr [edx+008h]
           imul eax, eax, 000000003h
           push eax
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000098h], eax
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ebp-000000098h]
           mov dword ptr [ecx+00Ch], edx
           jmp l1003F1F3
;
;* Jump:
; 1003F1A5(C), 1003F1AE(C) 
;
l1003F1E6: mov eax, dword ptr [ebp-000000094h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 1003F1E4(U) 
;
l1003F1F3: mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-0000000B8h], ecx
           jmp l1003F20B
;
;* Jump:
; 1003F02E(C) 
;
l1003F201: mov dword ptr [ebp-0000000B8h], 000000000h
;
;* Jump:
; 1003F1FF(U) 
;
l1003F20B: mov edx, dword ptr [ebp-0000000B8h]
           mov dword ptr [ebp-010h], edx
;
;* String: "_B_BitMap24_p"
;
           push offset g10048F4C
           mov eax, dword ptr [ebp-010h]
           push eax
           lea ecx, [ebp-000000090h]
           push ecx
           call l1003EF05
           add esp, 00000000Ch
           lea edx, [ebp-000000090h]
           push edx
           push offset g10048F5C
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003F012(U) 
;
l1003F247: pop esi
           mov esp, ebp
           pop ebp
           ret
l1003EFD4 ENDP
;
l1003F24C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "s:delete_B_BitMap24"
;
           push offset g10048F60
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003F280
           xor eax, eax
           jmp near ptr l1003F301
;
;* Jump:
; 1003F277(C) 
;
l1003F280: cmp dword ptr [ebp-00Ch], 000000000h
           je l1003F2BA
;
;* String: "_B_BitMap24_p"
;
           push offset g10048F74
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003F2BA
;
;* String: "Type error in argument 1 of delete_B_BitMap24. Expected _B_BitMap24_p."
;
           push offset g10048F84
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1003F301
;
;* Jump:
; 1003F284(C), 1003F29D(C) 
;
l1003F2BA: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [ebp-010h], 000000000h
           je l1003F2DD
           push 000000001h
           mov eax, dword ptr [ebp-010h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-010h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1003F2E4
;
;* Jump:
; 1003F2CA(C) 
;
l1003F2DD: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1003F2DB(U) 
;
l1003F2E4: mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [edx], ecx
           mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003F27B(U), 1003F2B8(U) 
;
l1003F301: mov esp, ebp
           pop ebp
           ret
l1003F24C ENDP
;
;* Call:
; 1003F293, 1003FB1B, 1003FD38, 1003FDEF, 1003FEC1, 1003FF5A, 1003FFFE, 1004009C, 
; 10040135, 100401D9, 10040273, 1004030C, 100403AA, 1004044D, 100404F0, 10040596, 
; 1004063D, 100406D8, 1004076E 
;
l1003F305 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000174h
           push esi
           push edi
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           movsx ecx, byte ptr [eax]
           cmp ecx, 00000005Fh
           jne l1003F9F2
           mov edx, dword ptr [ebp+008h]
           add edx, 000000001h
           mov dword ptr [ebp+008h], edx
;
;* Jump:
; 1003F39A(U) 
;
l1003F32F: mov eax, dword ptr [ebp+008h]
           movsx ecx, byte ptr [eax]
           test ecx, ecx
           je l1003F39C
           mov edx, dword ptr [ebp+008h]
           movsx eax, byte ptr [edx]
           cmp eax, 000000030h
           jl l1003F364
           mov ecx, dword ptr [ebp+008h]
           movsx edx, byte ptr [ecx]
           cmp edx, 000000039h
           jg l1003F364
           mov eax, dword ptr [ebp-004h]
           shl eax, 004h
           mov ecx, dword ptr [ebp+008h]
           movsx edx, byte ptr [ecx]
           lea eax, [eax+edx-030h]
           mov dword ptr [ebp-004h], eax
           jmp l1003F391
;
;* Jump:
; 1003F342(C), 1003F34D(C) 
;
l1003F364: mov ecx, dword ptr [ebp+008h]
           movsx edx, byte ptr [ecx]
           cmp edx, 000000061h
           jl l1003F38F
           mov eax, dword ptr [ebp+008h]
           movsx ecx, byte ptr [eax]
           cmp ecx, 000000066h
           jg l1003F38F
           mov edx, dword ptr [ebp-004h]
           shl edx, 004h
           mov eax, dword ptr [ebp+008h]
           movsx ecx, byte ptr [eax]
           lea edx, [edx+ecx-057h]
           mov dword ptr [ebp-004h], edx
           jmp l1003F391
;
;* Jump:
; 1003F36D(C), 1003F378(C) 
;
l1003F38F: jmp l1003F39C
;
;* Jump:
; 1003F362(U), 1003F38D(U) 
;
l1003F391: mov eax, dword ptr [ebp+008h]
           add eax, 000000001h
           mov dword ptr [ebp+008h], eax
           jmp l1003F32F
;
;* Jump:
; 1003F337(C), 1003F38F(U) 
;
l1003F39C: cmp dword ptr [ebp+010h], 000000000h
           je l1003F9E6
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000128h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-00000012Ch], edx
;
;* Jump:
; 1003F408(C) 
;
l1003F3B8: mov eax, dword ptr [ebp-00000012Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-00000012Dh], cl
           mov edx, dword ptr [ebp-000000128h]
           cmp cl, byte ptr [edx]
           jne l1003F416
           cmp byte ptr [ebp-00000012Dh], 000h
           je l1003F40A
           mov eax, dword ptr [ebp-00000012Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000012Eh], cl
           mov edx, dword ptr [ebp-000000128h]
           cmp cl, byte ptr [edx+001h]
           jne l1003F416
           add dword ptr [ebp-00000012Ch], 000000002h
           add dword ptr [ebp-000000128h], 000000002h
           cmp byte ptr [ebp-00000012Eh], 000h
           jne l1003F3B8
;
;* Jump:
; 1003F3D7(C) 
;
l1003F40A: mov dword ptr [ebp-000000134h], 000000000h
           jmp l1003F421
;
;* Jump:
; 1003F3CE(C), 1003F3F1(C) 
;
l1003F416: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000134h], eax
;
;* Jump:
; 1003F414(U) 
;
l1003F421: mov ecx, dword ptr [ebp-000000134h]
           mov dword ptr [ebp-000000138h], ecx
           cmp dword ptr [ebp-000000138h], 000000000h
           je l1003F9DA
           cmp dword ptr [g1004BF5C], 000000000h
           jne l1003F547
           push offset l1003FA24
           push 000000010h
           mov edx, dword ptr [g1004BF58]
           push edx
           mov eax, dword ptr [g1004BF60]
           push eax
           call [__imp_qsort]; [BICRT.qsort].
           add esp, 000000010h
           mov dword ptr [ebp-018h], 000000000h
           jmp l1003F476
;
;* Jump:
; 1003F48E(U) 
;
l1003F46D: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 1003F46B(U) 
;
l1003F476: cmp dword ptr [ebp-018h], 000000100h
           jnl l1003F490
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [g1004BF58]
           mov dword ptr [offset g1004BB58+edx*04h], eax
           jmp l1003F46D
;
;* Jump:
; 1003F47D(C) 
;
l1003F490: mov ecx, dword ptr [g1004BF58]
           sub ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
           jmp l1003F4A7
;
;* Jump:
; 1003F4CA(U) 
;
l1003F49E: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1003F49C(U) 
;
l1003F4A7: cmp dword ptr [ebp-018h], 000000000h
           jl l1003F4CC
           mov eax, dword ptr [ebp-018h]
           shl eax, 004h
           mov ecx, dword ptr [g1004BF60]
           mov edx, dword ptr [ecx+eax]
           movsx eax, byte ptr [edx+001h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [offset g1004BB58+eax*04h], ecx
           jmp l1003F49E
;
;* Jump:
; 1003F4AB(C) 
;
l1003F4CC: mov dword ptr [ebp-018h], 0000000FFh
           jmp l1003F4DE
;
;* Jump:
; 1003F50E(U) 
;
l1003F4D5: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1003F4D3(U) 
;
l1003F4DE: cmp dword ptr [ebp-018h], 000000001h
           jl l1003F510
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [offset g1004BB54+eax*04h]
           cmp edx, dword ptr [offset g1004BB58+ecx*04h]
           jle l1003F50E
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [offset g1004BB58+ecx*04h]
           mov dword ptr [offset g1004BB54+eax*04h], edx
;
;* Jump:
; 1003F4F8(C) 
;
l1003F50E: jmp l1003F4D5
;
;* Jump:
; 1003F4E2(C) 
;
l1003F510: mov dword ptr [g1004BF5C], 000000001h
           mov dword ptr [ebp-018h], 000000000h
           jmp l1003F52C
;
;* Jump:
; 1003F545(U) 
;
l1003F523: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1003F521(U) 
;
l1003F52C: cmp dword ptr [ebp-018h], 000000008h
           jnl l1003F547
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000000208h
           mov dword ptr [ecx+offset g1004AB18], 000000000h
           jmp l1003F523
;
;* Jump:
; 1003F441(C), 1003F530(C) 
;
l1003F547: mov edx, dword ptr [g1004BF68]
           imul edx, edx, 000000208h
           add edx, offset g1004AB18
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l1003F56E
;
;* Jump:
; 1003F71E(U) 
;
l1003F565: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1003F563(U) 
;
l1003F56E: cmp dword ptr [ebp-018h], 000000008h
           jnl l1003F723
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx], 000000000h
           je l1003F6EF
           mov edx, dword ptr [ebp-010h]
           add edx, 000000008h
           mov dword ptr [ebp-00000013Ch], edx
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-000000140h], eax
;
;* Jump:
; 1003F5E9(C) 
;
l1003F599: mov ecx, dword ptr [ebp-000000140h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000141h], dl
           mov eax, dword ptr [ebp-00000013Ch]
           cmp dl, byte ptr [eax]
           jne l1003F5F7
           cmp byte ptr [ebp-000000141h], 000h
           je l1003F5EB
           mov ecx, dword ptr [ebp-000000140h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000142h], dl
           mov eax, dword ptr [ebp-00000013Ch]
           cmp dl, byte ptr [eax+001h]
           jne l1003F5F7
           add dword ptr [ebp-000000140h], 000000002h
           add dword ptr [ebp-00000013Ch], 000000002h
           cmp byte ptr [ebp-000000142h], 000h
           jne l1003F599
;
;* Jump:
; 1003F5B8(C) 
;
l1003F5EB: mov dword ptr [ebp-000000148h], 000000000h
           jmp l1003F602
;
;* Jump:
; 1003F5AF(C), 1003F5D2(C) 
;
l1003F5F7: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000148h], ecx
;
;* Jump:
; 1003F5F5(U) 
;
l1003F602: mov edx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-00000014Ch], edx
           cmp dword ptr [ebp-00000014Ch], 000000000h
           jne l1003F6EF
           mov eax, dword ptr [ebp-010h]
           add eax, 000000108h
           mov dword ptr [ebp-000000150h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000154h], ecx
;
;* Jump:
; 1003F682(C) 
;
l1003F632: mov edx, dword ptr [ebp-000000154h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-000000155h], al
           mov ecx, dword ptr [ebp-000000150h]
           cmp al, byte ptr [ecx]
           jne l1003F690
           cmp byte ptr [ebp-000000155h], 000h
           je l1003F684
           mov edx, dword ptr [ebp-000000154h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-000000156h], al
           mov ecx, dword ptr [ebp-000000150h]
           cmp al, byte ptr [ecx+001h]
           jne l1003F690
           add dword ptr [ebp-000000154h], 000000002h
           add dword ptr [ebp-000000150h], 000000002h
           cmp byte ptr [ebp-000000156h], 000h
           jne l1003F632
;
;* Jump:
; 1003F651(C) 
;
l1003F684: mov dword ptr [ebp-00000015Ch], 000000000h
           jmp l1003F69B
;
;* Jump:
; 1003F648(C), 1003F66B(C) 
;
l1003F690: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-00000015Ch], edx
;
;* Jump:
; 1003F68E(U) 
;
l1003F69B: mov eax, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-000000160h], eax
           cmp dword ptr [ebp-000000160h], 000000000h
           jne l1003F6EF
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx]
           add edx, 000000001h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1003F6E8
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ecx+004h]
           call [edx+008h]
           add esp, 000000004h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx], eax
;
;* Jump:
; 1003F6CF(C) 
;
l1003F6E8: xor eax, eax
           jmp near ptr l1003FA1E
;
;* Jump:
; 1003F57E(C), 1003F615(C), 1003F6AE(C) 
;
l1003F6EF: mov edx, dword ptr [g1004BF68]
           add edx, 000000001h
           and edx, 000000007h
           mov dword ptr [g1004BF68], edx
           cmp dword ptr [g1004BF68], 000000000h
           jne l1003F713
           mov dword ptr [ebp-010h], offset g1004AB18
           jmp l1003F71E
;
;* Jump:
; 1003F708(C) 
;
l1003F713: mov eax, dword ptr [ebp-010h]
           add eax, 000000208h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 1003F711(U) 
;
l1003F71E: jmp near ptr l1003F565
;
;* Jump:
; 1003F572(C) 
;
l1003F723: mov ecx, dword ptr [ebp+010h]
           movsx edx, byte ptr [ecx+001h]
           mov eax, dword ptr [offset g1004BB58+edx*04h]
           mov dword ptr [ebp-000000120h], eax
           mov ecx, dword ptr [ebp+010h]
           movsx edx, byte ptr [ecx+001h]
           mov eax, dword ptr [offset g1004BB5C+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-000000120h]
           shl ecx, 004h
           mov edx, dword ptr [g1004BF60]
           add edx, ecx
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1003F795(U) 
;
l1003F75C: mov eax, dword ptr [ebp-000000120h]
           cmp eax, dword ptr [ebp-00Ch]
           jnl l1003F797
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           call l1003FA98
           add esp, 000000008h
           test eax, eax
           jne l1003F77D
           jmp l1003F797
;
;* Jump:
; 1003F779(C) 
;
l1003F77D: mov eax, dword ptr [ebp-008h]
           add eax, 000000010h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-000000120h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000120h], ecx
           jmp l1003F75C
;
;* Jump:
; 1003F765(C), 1003F77B(U) 
;
l1003F797: mov edx, dword ptr [ebp-000000120h]
           cmp edx, dword ptr [ebp-00Ch]
           jl l1003F7A9
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1003F7A0(C) 
;
l1003F7A9: cmp dword ptr [ebp-008h], 000000000h
           je l1003F9CD
;
;* Jump:
; 1003F9C8(U) 
;
l1003F7B3: mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           call l1003FA98
           add esp, 000000008h
           test eax, eax
           jne l1003F9CD
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-000000124h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1003F9BA(U) 
;
l1003F7E8: cmp dword ptr [ebp-014h], 000000000h
           je l1003F9BF
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+004h], 0000000FFh
           jl l1003F806
           mov eax, dword ptr [ebp+008h]
           jmp near ptr l1003FA1E
;
;* Jump:
; 1003F7FC(C) 
;
l1003F806: mov eax, dword ptr [ebp-014h]
           mov edi, dword ptr [eax]
           lea edx, [ebp-00000011Ch]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-014h]
           mov edx, 0000000FFh
           sub edx, dword ptr [ecx+004h]
           push edx
           mov eax, dword ptr [ebp+010h]
           add eax, dword ptr [ebp-01Ch]
           push eax
           lea ecx, [ebp-00000011Ch]
           push ecx
           call [__imp_strncat]; [BICRT.strncat].
           add esp, 00000000Ch
           lea edx, [ebp-00000011Ch]
           mov dword ptr [ebp-000000164h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000168h], eax
;
;* Jump:
; 1003F8B6(C) 
;
l1003F866: mov ecx, dword ptr [ebp-000000168h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000169h], dl
           mov eax, dword ptr [ebp-000000164h]
           cmp dl, byte ptr [eax]
           jne l1003F8C4
           cmp byte ptr [ebp-000000169h], 000h
           je l1003F8B8
           mov ecx, dword ptr [ebp-000000168h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00000016Ah], dl
           mov eax, dword ptr [ebp-000000164h]
           cmp dl, byte ptr [eax+001h]
           jne l1003F8C4
           add dword ptr [ebp-000000168h], 000000002h
           add dword ptr [ebp-000000164h], 000000002h
           cmp byte ptr [ebp-00000016Ah], 000h
           jne l1003F866
;
;* Jump:
; 1003F885(C) 
;
l1003F8B8: mov dword ptr [ebp-000000170h], 000000000h
           jmp l1003F8CF
;
;* Jump:
; 1003F87C(C), 1003F89F(C) 
;
l1003F8C4: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000170h], ecx
;
;* Jump:
; 1003F8C2(U) 
;
l1003F8CF: mov edx, dword ptr [ebp-000000170h]
           mov dword ptr [ebp-000000174h], edx
           cmp dword ptr [ebp-000000174h], 000000000h
           jne l1003F9B1
           mov edi, dword ptr [ebp+008h]
           mov eax, dword ptr [g1004BF64]
           imul eax, eax, 000000208h
           add eax, offset g1004AC20
           mov edx, eax
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov edi, dword ptr [ebp+010h]
           mov ecx, dword ptr [g1004BF64]
           imul ecx, ecx, 000000208h
           add ecx, offset g1004AB20
           mov edx, ecx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [g1004BF64]
           imul ecx, ecx, 000000208h
           mov dword ptr [ecx+offset g1004AB18], 000000001h
           mov edx, dword ptr [g1004BF64]
           imul edx, edx, 000000208h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+offset g1004AB1C], eax
           mov ecx, dword ptr [g1004BF64]
           and ecx, 000000007h
           mov dword ptr [g1004BF64], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1003F9AD
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call [ecx+008h]
           add esp, 000000004h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx], eax
;
;* Jump:
; 1003F997(C) 
;
l1003F9AD: xor eax, eax
           jmp l1003FA1E
;
;* Jump:
; 1003F8E2(C) 
;
l1003F9B1: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-014h], ecx
           jmp near ptr l1003F7E8
;
;* Jump:
; 1003F7EC(C) 
;
l1003F9BF: mov edx, dword ptr [ebp-008h]
           add edx, 000000010h
           mov dword ptr [ebp-008h], edx
           jmp near ptr l1003F7B3
;
;* Jump:
; 1003F7AD(C), 1003F7C5(C) 
;
l1003F9CD: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax], ecx
           mov eax, dword ptr [ebp+008h]
           jmp l1003FA1E
;
;* Jump:
; 1003F434(C) 
;
l1003F9DA: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx], eax
           xor eax, eax
           jmp l1003FA1E
;
;* Jump:
; 1003F3A0(C) 
;
l1003F9E6: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx], edx
           xor eax, eax
           jmp l1003FA1E
;
;* Jump:
; 1003F320(C) 
;
;* String: "NULL"
;
l1003F9F2: mov edi, offset g10048D90
           mov esi, dword ptr [ebp+008h]
           mov ecx, 000000005h
           xor eax, eax
           rep cmpsb
           jne l1003FA12
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx], 000000000h
           xor eax, eax
           jmp l1003FA1E
;
;* Jump:
; 1003FA03(C) 
;
l1003FA12: mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp+008h]
;
;* Jump:
; 1003F6EA(U), 1003F801(U), 1003F9AF(U), 1003F9D8(U), 1003F9E4(U), 
; 1003F9F0(U), 1003FA10(U) 
;
l1003FA1E: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1003F305 ENDP
;
l1003FA24 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1003FA78(C) 
;
l1003FA46: mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-011h], cl
           mov edx, dword ptr [ebp-00Ch]
           cmp cl, byte ptr [edx]
           jne l1003FA83
           cmp byte ptr [ebp-011h], 000h
           je l1003FA7A
           mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-012h], cl
           mov edx, dword ptr [ebp-00Ch]
           cmp cl, byte ptr [edx+001h]
           jne l1003FA83
           add dword ptr [ebp-010h], 000000002h
           add dword ptr [ebp-00Ch], 000000002h
           cmp byte ptr [ebp-012h], 000h
           jne l1003FA46
;
;* Jump:
; 1003FA59(C) 
;
l1003FA7A: mov dword ptr [ebp-018h], 000000000h
           jmp l1003FA8B
;
;* Jump:
; 1003FA53(C), 1003FA6A(C) 
;
l1003FA83: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1003FA81(U) 
;
l1003FA8B: mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov esp, ebp
           pop ebp
           ret
l1003FA24 ENDP
;
;* Call:
; 1003F76F, 1003F7BB 
;
l1003FA98 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_strncmp]; [BICRT.strncmp].
           add esp, 00000000Ch
           mov esp, ebp
           pop ebp
           ret
l1003FA98 ENDP
;
l1003FAC8 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-018h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-01Ch]
           mov dword ptr [ebp-010h], ecx
           lea edx, [ebp-004h]
           mov dword ptr [ebp-014h], edx
           lea eax, [ebp-018h]
           push eax
;
;* String: "s:B_BitMap24_GetDimension"
;
           push offset g10048FCC
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003FB08
           xor eax, eax
           jmp near ptr l1003FBC9
;
;* Jump:
; 1003FAFF(C) 
;
l1003FB08: cmp dword ptr [ebp-018h], 000000000h
           je l1003FB45
;
;* String: "_B_BitMap24_p"
;
           push offset g10048FE8
           lea edx, [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003FB45
;
;* String: "Type error in argument 1 of B_BitMap24_GetDimension. Expected 
;          _B_BitMap24_p."
;
           push offset g10048FF8
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1003FBC9
;
;* Jump:
; 1003FB0C(C), 1003FB25(C) 
;
l1003FB45: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov edx, dword ptr [ecx]
           add edx, 000000001h
           mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [eax], edx
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l1003FBCD
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l1003FBCD
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-008h]
;
;* Jump:
; 1003FB03(U), 1003FB40(U) 
;
l1003FBC9: mov esp, ebp
           pop ebp
           ret
l1003FAC8 ENDP
;
;* Call:
; 1003FB96, 1003FBBB 
;
l1003FBCD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           cmp dword ptr [ebp+008h], 000000000h
           jne l1003FBE4
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], eax
           jmp near ptr l1003FCED
;
;* Jump:
; 1003FBD7(C) 
;
l1003FBE4: mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           jne l1003FC2F
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov eax, dword ptr [edx]
           sub eax, 000000001h
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ecx], eax
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           cmp dword ptr [edx], 000000000h
           je l1003FC0F
           jmp l1003FC24
;
;* Jump:
; 1003FC0B(C) 
;
l1003FC0F: mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           push eax
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov edx, dword ptr [ecx+004h]
           call [edx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003FC0D(U) 
;
l1003FC24: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], eax
           jmp near ptr l1003FCED
;
;* Jump:
; 1003FBED(C) 
;
l1003FC2F: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           cmp edx, dword ptr [__imp__PyTuple_Type]; [python15.PyTuple_Type].
           je l1003FC64
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], eax
           push 000000001h
           call [__imp__PyTuple_New]; [python15.PyTuple_New].
           add esp, 000000004h
           mov dword ptr [ebp+008h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp__PyTuple_SetItem]; [python15.PyTuple_SetItem].
           add esp, 00000000Ch
;
;* Jump:
; 1003FC3B(C) 
;
l1003FC64: push 000000001h
           call [__imp__PyTuple_New]; [python15.PyTuple_New].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp+00Ch]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp__PyTuple_SetItem]; [python15.PyTuple_SetItem].
           add esp, 00000000Ch
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp__PySequence_Concat]; [python15.PySequence_Concat].
           add esp, 000000008h
           mov dword ptr [ebp+008h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], eax
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx], 000000000h
           je l1003FCB6
           jmp l1003FCC6
;
;* Jump:
; 1003FCB2(C) 
;
l1003FCB6: mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           call [edx+018h]
           add esp, 000000004h
;
;* Jump:
; 1003FCB4(U) 
;
l1003FCC6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax], 000000000h
           je l1003FCDD
           jmp l1003FCED
;
;* Jump:
; 1003FCD9(C) 
;
l1003FCDD: mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           call [eax+018h]
           add esp, 000000004h
;
;* Jump:
; 1003FBDF(U), 1003FC2A(U), 1003FCDB(U) 
;
l1003FCED: mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l1003FBCD ENDP
;
l1003FCF4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "s:B_BitMap24_GetData"
;
           push offset g10049048
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003FD25
           xor eax, eax
           jmp l1003FD86
;
;* Jump:
; 1003FD1F(C) 
;
l1003FD25: cmp dword ptr [ebp-00Ch], 000000000h
           je l1003FD5F
;
;* String: "_B_BitMap24_p"
;
           push offset g10049060
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003FD5F
;
;* String: "Type error in argument 1 of B_BitMap24_GetData. Expected 
;          _B_BitMap24_p."
;
           push offset g10049070
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1003FD86
;
;* Jump:
; 1003FD29(C), 1003FD42(C) 
;
l1003FD5F: mov ecx, dword ptr [ebp-008h]
           push ecx
           call l1003FD8A
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp-010h]
           push edx
           push offset g100490B8
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003FD23(U), 1003FD5D(U) 
;
l1003FD86: mov esp, ebp
           pop ebp
           ret
l1003FCF4 ENDP
;
;* Call:
; 1003FD63 
;
l1003FD8A PROC
           push ebp
           mov ebp, esp
           push ecx
           cmp dword ptr [ebp+008h], 000000000h
           je l1003FDA2
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           jmp l1003FDA4
;
;* Jump:
; 1003FD92(C) 
;
l1003FDA2: xor eax, eax
;
;* Jump:
; 1003FDA0(U) 
;
l1003FDA4: mov esp, ebp
           pop ebp
           ret
l1003FD8A ENDP
;
l1003FDA8 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "s:B_BitMap24_Clear"
;
           push offset g100490BC
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l1003FDDC
           xor eax, eax
           jmp near ptr l1003FE75
;
;* Jump:
; 1003FDD3(C) 
;
l1003FDDC: cmp dword ptr [ebp-00Ch], 000000000h
           je l1003FE16
;
;* String: "_B_BitMap24_p"
;
           push offset g100490D0
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003FE16
;
;* String: "Type error in argument 1 of B_BitMap24_Clear. Expected _B_BitMap24_p."
;
           push offset g100490E0
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1003FE75
;
;* Jump:
; 1003FDE0(C), 1003FDF9(C) 
;
l1003FE16: mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+00Ch], 000000000h
           je l1003FE44
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00Ch], 000000000h
;
;* Jump:
; 1003FE23(C) 
;
l1003FE44: mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov ecx, dword ptr [eax]
           add ecx, 000000001h
           mov edx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [edx], ecx
           mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003FDD7(U), 1003FE14(U) 
;
l1003FE75: mov esp, ebp
           pop ebp
           ret
l1003FDA8 ENDP
;
l1003FE79 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "ss:B_BitMap24_SaveToBMP"
;
           push offset g10049128
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l1003FEAE
           xor eax, eax
           jmp l1003FF0E
;
;* Jump:
; 1003FEA8(C) 
;
l1003FEAE: cmp dword ptr [ebp-010h], 000000000h
           je l1003FEE7
;
;* String: "_B_BitMap24_p"
;
           push offset g10049140
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003FEE7
;
;* String: "Type error in argument 1 of B_BitMap24_SaveToBMP. Expected 
;          _B_BitMap24_p."
;
           push offset g10049150
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1003FF0E
;
;* Jump:
; 1003FEB2(C), 1003FECB(C) 
;
l1003FEE7: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10027382
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g1004919C
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003FEAC(U), 1003FEE5(U) 
;
l1003FF0E: mov esp, ebp
           pop ebp
           ret
l1003FE79 ENDP
;
l1003FF12 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "ss:B_BitMap24_ReadFromBMP"
;
           push offset g100491A0
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l1003FF47
           xor eax, eax
           jmp l1003FFA7
;
;* Jump:
; 1003FF41(C) 
;
l1003FF47: cmp dword ptr [ebp-010h], 000000000h
           je l1003FF80
;
;* String: "_B_BitMap24_p"
;
           push offset g100491BC
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1003FF80
;
;* String: "Type error in argument 1 of B_BitMap24_ReadFromBMP. Expected 
;          _B_BitMap24_p."
;
           push offset g100491CC
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1003FFA7
;
;* Jump:
; 1003FF4B(C), 1003FF64(C) 
;
l1003FF80: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10027D86
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g10049218
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003FF45(U), 1003FF7E(U) 
;
l1003FFA7: mov esp, ebp
           pop ebp
           ret
l1003FF12 ENDP
;
l1003FFAB PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-010h], 000000032h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "ss|i:B_BitMap24_SaveToJPEG"
;
           push offset g1004921C
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l1003FFEB
           xor eax, eax
           jmp l10040050
;
;* Jump:
; 1003FFE5(C) 
;
l1003FFEB: cmp dword ptr [ebp-014h], 000000000h
           je l10040025
;
;* String: "_B_BitMap24_p"
;
           push offset g10049238
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040025
;
;* String: "Type error in argument 1 of B_BitMap24_SaveToJPEG. Expected 
;          _B_BitMap24_p."
;
           push offset g10049248
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l10040050
;
;* Jump:
; 1003FFEF(C), 10040008(C) 
;
l10040025: mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10029700
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g10049294
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1003FFE9(U), 10040023(U) 
;
l10040050: mov esp, ebp
           pop ebp
           ret
l1003FFAB ENDP
;
l10040054 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "ss:B_BitMap24_ReadFromJPEG"
;
           push offset g10049298
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l10040089
           xor eax, eax
           jmp l100400E9
;
;* Jump:
; 10040083(C) 
;
l10040089: cmp dword ptr [ebp-010h], 000000000h
           je l100400C2
;
;* String: "_B_BitMap24_p"
;
           push offset g100492B4
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l100400C2
;
;* String: "Type error in argument 1 of B_BitMap24_ReadFromJPEG. Expected 
;          _B_BitMap24_p."
;
           push offset g100492C4
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100400E9
;
;* Jump:
; 1004008D(C), 100400A6(C) 
;
l100400C2: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10029510
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g10049314
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040087(U), 100400C0(U) 
;
l100400E9: mov esp, ebp
           pop ebp
           ret
l10040054 ENDP
;
l100400ED PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "ss:B_BitMap24_ReadFromFile"
;
           push offset g10049318
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l10040122
           xor eax, eax
           jmp l10040182
;
;* Jump:
; 1004011C(C) 
;
l10040122: cmp dword ptr [ebp-010h], 000000000h
           je l1004015B
;
;* String: "_B_BitMap24_p"
;
           push offset g10049334
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1004015B
;
;* String: "Type error in argument 1 of B_BitMap24_ReadFromFile. Expected 
;          _B_BitMap24_p."
;
           push offset g10049344
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l10040182
;
;* Jump:
; 10040126(C), 1004013F(C) 
;
l1004015B: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10027E11
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g10049394
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040120(U), 10040159(U) 
;
l10040182: mov esp, ebp
           pop ebp
           ret
l100400ED ENDP
;
l10040186 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-010h], 000000032h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "ss|i:B_BitMap24_SaveToFile"
;
           push offset g10049398
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l100401C6
           xor eax, eax
           jmp l1004022B
;
;* Jump:
; 100401C0(C) 
;
l100401C6: cmp dword ptr [ebp-014h], 000000000h
           je l10040200
;
;* String: "_B_BitMap24_p"
;
           push offset g100493B4
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040200
;
;* String: "Type error in argument 1 of B_BitMap24_SaveToFile. Expected 
;          _B_BitMap24_p."
;
           push offset g100493C4
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1004022B
;
;* Jump:
; 100401CA(C), 100401E3(C) 
;
l10040200: mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10027F15
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g10049410
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 100401C4(U), 100401FE(U) 
;
l1004022B: mov esp, ebp
           pop ebp
           ret
l10040186 ENDP
;
l1004022F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "s:B_BitMap24_ChangeRGBOrder"
;
           push offset g10049414
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l10040260
           xor eax, eax
           jmp l100402C0
;
;* Jump:
; 1004025A(C) 
;
l10040260: cmp dword ptr [ebp-00Ch], 000000000h
           je l1004029A
;
;* String: "_B_BitMap24_p"
;
           push offset g10049430
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l1004029A
;
;* String: "Type error in argument 1 of B_BitMap24_ChangeRGBOrder. Expected 
;          _B_BitMap24_p."
;
           push offset g10049440
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100402C0
;
;* Jump:
; 10040264(C), 1004027D(C) 
;
l1004029A: mov ecx, dword ptr [ebp-008h]
           call l100283CD
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov edx, dword ptr [ecx]
           add edx, 000000001h
           mov eax, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [eax], edx
           mov ecx, dword ptr [__imp___Py_NoneStruct]; [python15._Py_NoneStruct].
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 1004025E(U), 10040298(U) 
;
l100402C0: mov esp, ebp
           pop ebp
           ret
l1004022F ENDP
;
l100402C4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "si:B_ResourceManager_NResources"
;
           push offset g10049490
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l100402F9
           xor eax, eax
           jmp l1004035A
;
;* Jump:
; 100402F3(C) 
;
l100402F9: cmp dword ptr [ebp-010h], 000000000h
           je l10040332
;
;* String: "_B_ResourceManager_p"
;
           push offset g100494B0
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040332
;
;* String: "Type error in argument 1 of B_ResourceManager_NResources. Expected 
;          _B_ResourceManager_p."
;
           push offset g100494C8
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l1004035A
;
;* Jump:
; 100402FD(C), 10040316(C) 
;
l10040332: mov dx, word ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10005F32
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g10049524
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 100402F7(U), 10040330(U) 
;
l1004035A: mov esp, ebp
           pop ebp
           ret
l100402C4 ENDP
;
l1004035E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "sii:B_ResourceManager_GetResourceName"
;
           push offset g10049528
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l10040397
           xor eax, eax
           jmp l100403FD
;
;* Jump:
; 10040391(C) 
;
l10040397: cmp dword ptr [ebp-014h], 000000000h
           je l100403D1
;
;* String: "_B_ResourceManager_p"
;
           push offset g10049550
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l100403D1
;
;* String: "Type error in argument 1 of B_ResourceManager_GetResourceName. 
;          Expected _B_ResourceManager_p."
;
           push offset g10049568
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100403FD
;
;* Jump:
; 1004039B(C), 100403B4(C) 
;
l100403D1: mov eax, dword ptr [ebp-010h]
           push eax
           mov cx, word ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10005E42
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g100495C8
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040395(U), 100403CF(U) 
;
l100403FD: mov esp, ebp
           pop ebp
           ret
l1004035E ENDP
;
l10040401 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "sii:B_ResourceManager_GetResourceFile"
;
           push offset g100495CC
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l1004043A
           xor eax, eax
           jmp l100404A0
;
;* Jump:
; 10040434(C) 
;
l1004043A: cmp dword ptr [ebp-014h], 000000000h
           je l10040474
;
;* String: "_B_ResourceManager_p"
;
           push offset g100495F4
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040474
;
;* String: "Type error in argument 1 of B_ResourceManager_GetResourceFile. 
;          Expected _B_ResourceManager_p."
;
           push offset g1004960C
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100404A0
;
;* Jump:
; 1004043E(C), 10040457(C) 
;
l10040474: mov eax, dword ptr [ebp-010h]
           push eax
           mov cx, word ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10005E8F
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g1004966C
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040438(U), 10040472(U) 
;
l100404A0: mov esp, ebp
           pop ebp
           ret
l10040401 ENDP
;
l100404A4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "sii:B_ResourceManager_IsResourceLoaded"
;
           push offset g10049670
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l100404DD
           xor eax, eax
           jmp l10040542
;
;* Jump:
; 100404D7(C) 
;
l100404DD: cmp dword ptr [ebp-014h], 000000000h
           je l10040517
;
;* String: "_B_ResourceManager_p"
;
           push offset g10049698
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040517
;
;* String: "Type error in argument 1 of B_ResourceManager_IsResourceLoaded. 
;          Expected _B_ResourceManager_p."
;
           push offset g100496B0
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l10040542
;
;* Jump:
; 100404E1(C), 100404FA(C) 
;
l10040517: mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10005CCD
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g10049710
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 100404DB(U), 10040515(U) 
;
l10040542: mov esp, ebp
           pop ebp
           ret
l100404A4 ENDP
;
l10040546 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-018h]
           push ecx
           lea edx, [ebp-010h]
           push edx
           lea eax, [ebp-00Ch]
           push eax
           lea ecx, [ebp-014h]
           push ecx
;
;* String: "siis:B_ResourceManager_SaveResource"
;
           push offset g10049714
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000018h
           test eax, eax
           jne l10040583
           xor eax, eax
           jmp l100405ED
;
;* Jump:
; 1004057D(C) 
;
l10040583: cmp dword ptr [ebp-014h], 000000000h
           je l100405BD
;
;* String: "_B_ResourceManager_p"
;
           push offset g10049738
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l100405BD
;
;* String: "Type error in argument 1 of B_ResourceManager_SaveResource. Expected 
;          _B_ResourceManager_p."
;
           push offset g10049750
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100405ED
;
;* Jump:
; 10040587(C), 100405A0(C) 
;
l100405BD: mov ecx, dword ptr [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           mov ax, word ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10005C13
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           push offset g100497AC
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040581(U), 100405BB(U) 
;
l100405ED: mov esp, ebp
           pop ebp
           ret
l10040546 ENDP
;
l100405F1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-010h]
           push ecx
           lea edx, [ebp-00Ch]
           push edx
           lea eax, [ebp-014h]
           push eax
;
;* String: "sis:B_ResourceManager_LoadResourceToMemory"
;
           push offset g100497B0
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000014h
           test eax, eax
           jne l1004062A
           xor eax, eax
           jmp l10040690
;
;* Jump:
; 10040624(C) 
;
l1004062A: cmp dword ptr [ebp-014h], 000000000h
           je l10040664
;
;* String: "_B_ResourceManager_p"
;
           push offset g100497DC
           lea edx, [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040664
;
;* String: "Type error in argument 1 of B_ResourceManager_LoadResourceToMemory. 
;          Expected _B_ResourceManager_p."
;
           push offset g100497F4
           mov ecx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov edx, dword ptr [ecx]
           push edx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l10040690
;
;* Jump:
; 1004062E(C), 10040647(C) 
;
l10040664: mov eax, dword ptr [ebp-010h]
           push eax
           mov cx, word ptr [ebp-00Ch]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10005BB2
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           push offset g10049858
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040628(U), 10040662(U) 
;
l10040690: mov esp, ebp
           pop ebp
           ret
l100405F1 ENDP
;
l10040694 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
;
;* String: "s:B_ResourceManager_GetnFiles"
;
           push offset g1004985C
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 00000000Ch
           test eax, eax
           jne l100406C5
           xor eax, eax
           jmp l10040722
;
;* Jump:
; 100406BF(C) 
;
l100406C5: cmp dword ptr [ebp-00Ch], 000000000h
           je l100406FF
;
;* String: "_B_ResourceManager_p"
;
           push offset g1004987C
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l100406FF
;
;* String: "Type error in argument 1 of B_ResourceManager_GetnFiles. Expected 
;          _B_ResourceManager_p."
;
           push offset g10049894
           mov edx, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov eax, dword ptr [edx]
           push eax
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l10040722
;
;* Jump:
; 100406C9(C), 100406E2(C) 
;
l100406FF: mov ecx, dword ptr [ebp-008h]
           call l10004C20
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           push offset g100498EC
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 100406C3(U), 100406FD(U) 
;
l10040722: mov esp, ebp
           pop ebp
           ret
l10040694 ENDP
;
l10040726 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           lea ecx, [ebp-00Ch]
           push ecx
           lea edx, [ebp-010h]
           push edx
;
;* String: "si:B_ResourceManager_GetFile"
;
           push offset g100498F0
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           add esp, 000000010h
           test eax, eax
           jne l1004075B
           xor eax, eax
           jmp l100407BB
;
;* Jump:
; 10040755(C) 
;
l1004075B: cmp dword ptr [ebp-010h], 000000000h
           je l10040794
;
;* String: "_B_ResourceManager_p"
;
           push offset g10049910
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l1003F305
           add esp, 00000000Ch
           test eax, eax
           je l10040794
;
;* String: "Type error in argument 1 of B_ResourceManager_GetFile. Expected 
;          _B_ResourceManager_p."
;
           push offset g10049928
           mov eax, dword ptr [__imp__PyExc_TypeError]; [python15.PyExc_TypeError].
           mov ecx, dword ptr [eax]
           push ecx
           call [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           add esp, 000000008h
           xor eax, eax
           jmp l100407BB
;
;* Jump:
; 1004075F(C), 10040778(C) 
;
l10040794: mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10004C37
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-014h]
           push eax
           push offset g10049980
           call [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 10040759(U), 10040792(U) 
;
l100407BB: mov esp, ebp
           pop ebp
           ret
l10040726 ENDP
;
;* Export: initBBLibc, 0123
;
l100407BF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           call l100409D8
           mov dword ptr [g1004AB10], eax
           push 0000003EFh
           push 000000000h
           push 000000000h
           push offset g10048A78
;
;* String: "BBLibc"
;
           push offset g10049CC8
           call [__imp__Py_InitModule4]; [python15.Py_InitModule4].
           add esp, 000000014h
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp__PyModule_GetDict]; [python15.PyModule_GetDict].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           push 000000001h
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           push eax
;
;* String: "B_CID_OBJDSCR"
;
           push offset g10049CD0
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           add esp, 00000000Ch
           push 000000002h
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           push eax
;
;* String: "B_CID_BITMAP"
;
           push offset g10049CE0
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           add esp, 00000000Ch
           push 000000003h
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           push eax
;
;* String: "B_CID_BMP"
;
           push offset g10049CF0
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           add esp, 00000000Ch
           push 000000004h
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           push eax
;
;* String: "B_CID_ALPHABMP"
;
           push offset g10049CFC
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           add esp, 00000000Ch
           push 000000005h
           call [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           add esp, 000000004h
           push eax
;
;* String: "B_CID_AUTO_OBJDSCR"
;
           push offset g10049D0C
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_long"
;
           push offset g10049D20
;
;* String: "_signed_long"
;
           push offset g10049D28
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_unsigned_long"
;
           push offset g10049D38
;
;* String: "_long"
;
           push offset g10049D48
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_signed_long"
;
           push offset g10049D50
;
;* String: "_long"
;
           push offset g10049D60
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_class_B_BitMap24"
;
           push offset g10049D68
;
;* String: "_B_BitMap24"
;
           push offset g10049D7C
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_class_B_ResourceManager"
;
           push offset g10049D88
;
;* String: "_B_ResourceManager"
;
           push offset g10049DA4
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_long"
;
           push offset g10049DB8
;
;* String: "_unsigned_long"
;
           push offset g10049DC0
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_B_BitMap24"
;
           push offset g10049DD0
;
;* String: "_class_B_BitMap24"
;
           push offset g10049DDC
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_int"
;
           push offset g10049DF0
;
;* String: "_signed_int"
;
           push offset g10049DF8
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_short"
;
           push offset g10049E04
;
;* String: "_unsigned_short"
;
           push offset g10049E0C
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_short"
;
           push offset g10049E1C
;
;* String: "_signed_short"
;
           push offset g10049E24
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_int"
;
           push offset g10049E34
;
;* String: "_unsigned_int"
;
           push offset g10049E3C
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_unsigned_short"
;
           push offset g10049E4C
;
;* String: "_short"
;
           push offset g10049E5C
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_signed_short"
;
           push offset g10049E64
;
;* String: "_short"
;
           push offset g10049E74
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_unsigned_int"
;
           push offset g10049E7C
;
;* String: "_int"
;
           push offset g10049E8C
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_signed_int"
;
           push offset g10049E94
;
;* String: "_int"
;
           push offset g10049EA0
           call l10040A5E
           add esp, 00000000Ch
           push 000000000h
;
;* String: "_B_ResourceManager"
;
           push offset g10049EA8
;
;* String: "_class_B_ResourceManager"
;
           push offset g10049EBC
           call l10040A5E
           add esp, 00000000Ch
           mov esp, ebp
           pop ebp
           ret
l100407BF ENDP
;
;* Call:
; 100407C5 
;
l100409D8 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], 000000000h
           push 000000014h
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [__imp__PyType_Type]; [python15.PyType_Type].
           mov dword ptr [g100489FC], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], offset g100489F8
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000040h
           push 000000100h
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           cmp dword ptr [ebp-004h], 000000000h
           jne l10040A4A
           jmp l10040A57
;
;* Jump:
; 10040A46(C) 
;
l10040A4A: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 10040A48(U) 
;
l10040A57: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l100409D8 ENDP
;
;* Call:
; 100408A0, 100408B4, 100408C8, 100408DC, 100408F0, 10040904, 10040918, 1004092C, 
; 10040940, 10040954, 10040968, 1004097C, 10040990, 100409A4, 100409B8, 100409CC 
;
l10040A5E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push edi
           mov dword ptr [ebp-004h], 000000000h
           cmp dword ptr [g1004BF60], 000000000h
           jne l10040A96
           mov eax, dword ptr [g10048A64]
           shl eax, 004h
           push eax
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           mov dword ptr [g1004BF60], eax
           mov dword ptr [g1004BF58], 000000000h
;
;* Jump:
; 10040A73(C) 
;
l10040A96: mov ecx, dword ptr [g1004BF58]
           cmp ecx, dword ptr [g10048A64]
           jl l10040AD0
           mov edx, dword ptr [g10048A64]
           shl edx, 001h
           mov dword ptr [g10048A64], edx
           mov eax, dword ptr [g10048A64]
           shl eax, 004h
           push eax
           mov ecx, dword ptr [g1004BF60]
           push ecx
           call [__imp_realloc]; [BICRT.realloc].
           add esp, 000000008h
           mov dword ptr [g1004BF60], eax
;
;* Jump:
; 10040AA2(C) 
;
l10040AD0: mov dword ptr [ebp-00Ch], 000000000h
           jmp l10040AE2
;
;* Jump:
; 10040B6C(U) 
;
l10040AD9: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10040AD7(U) 
;
l10040AE2: mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [g1004BF58]
           jnl l10040B71
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           shl edx, 004h
           mov eax, dword ptr [g1004BF60]
           mov ecx, dword ptr [eax+edx]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10040B3A(C) 
;
l10040B08: mov edx, dword ptr [ebp-014h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-015h], al
           mov ecx, dword ptr [ebp-010h]
           cmp al, byte ptr [ecx]
           jne l10040B45
           cmp byte ptr [ebp-015h], 000h
           je l10040B3C
           mov edx, dword ptr [ebp-014h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-016h], al
           mov ecx, dword ptr [ebp-010h]
           cmp al, byte ptr [ecx+001h]
           jne l10040B45
           add dword ptr [ebp-014h], 000000002h
           add dword ptr [ebp-010h], 000000002h
           cmp byte ptr [ebp-016h], 000h
           jne l10040B08
;
;* Jump:
; 10040B1B(C) 
;
l10040B3C: mov dword ptr [ebp-01Ch], 000000000h
           jmp l10040B4D
;
;* Jump:
; 10040B15(C), 10040B2C(C) 
;
l10040B45: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10040B43(U) 
;
l10040B4D: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 000000000h
           jne l10040B6C
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 004h
           mov edx, dword ptr [g1004BF60]
           add edx, ecx
           mov dword ptr [ebp-004h], edx
           jmp l10040B71
;
;* Jump:
; 10040B57(C) 
;
l10040B6C: jmp near ptr l10040AD9
;
;* Jump:
; 10040AEB(C), 10040B6A(U) 
;
l10040B71: cmp dword ptr [ebp-004h], 000000000h
           jne l10040BCC
           mov eax, dword ptr [g1004BF58]
           shl eax, 004h
           mov ecx, dword ptr [g1004BF60]
           add ecx, eax
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-004h]
           mov edi, dword ptr [ecx]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [g1004BF58]
           add edx, 000000001h
           mov dword ptr [g1004BF58], edx
;
;* Jump:
; 10040B75(C), 10040C4E(U) 
;
l10040BCC: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00Ch], 000000000h
           je l10040C53
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 10040C15(C) 
;
l10040BE3: mov ecx, dword ptr [ebp-028h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-029h], dl
           mov eax, dword ptr [ebp-024h]
           cmp dl, byte ptr [eax]
           jne l10040C20
           cmp byte ptr [ebp-029h], 000h
           je l10040C17
           mov ecx, dword ptr [ebp-028h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-02Ah], dl
           mov eax, dword ptr [ebp-024h]
           cmp dl, byte ptr [eax+001h]
           jne l10040C20
           add dword ptr [ebp-028h], 000000002h
           add dword ptr [ebp-024h], 000000002h
           cmp byte ptr [ebp-02Ah], 000h
           jne l10040BE3
;
;* Jump:
; 10040BF6(C) 
;
l10040C17: mov dword ptr [ebp-030h], 000000000h
           jmp l10040C28
;
;* Jump:
; 10040BF0(C), 10040C07(C) 
;
l10040C20: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 10040C1E(U) 
;
l10040C28: mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp-034h], edx
           cmp dword ptr [ebp-034h], 000000000h
           jne l10040C45
           cmp dword ptr [ebp+010h], 000000000h
           je l10040C43
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+008h], ecx
;
;* Jump:
; 10040C38(C) 
;
l10040C43: jmp l10040CA6
;
;* Jump:
; 10040C32(C) 
;
l10040C45: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10040BCC
;
;* Jump:
; 10040BD3(C) 
;
l10040C53: push 000000010h
           call [__imp_malloc]; [BICRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov edi, dword ptr [eax]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], ecx
           mov dword ptr [g1004BF5C], 000000000h
;
;* Jump:
; 10040C43(U) 
;
l10040CA6: pop edi
           mov esp, ebp
           pop ebp
           ret
l10040A5E ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Export: ??0B_RDataLight@@QAE@XZ, 0026
;
l10040CB0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10040CB0 ENDP
;
;* Export: ??0B_RDataLight@@QAE@MMMM@Z, 0025
;
l10040CBE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp+008h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+00Ch], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp+010h], edx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp+014h], eax
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00010h
l10040CBE ENDP
;
;* Export: ?Interp@B_RDataLight@@QAEXNAAV1@N0@Z, 00D7
;
l10040CE6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+010h]
           fld dword ptr [eax]
           fmul qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+01Ch]
           fld dword ptr [ecx]
           fmul qword ptr [ebp+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           fld dword ptr [eax+004h]
           fmul qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+01Ch]
           fld dword ptr [ecx+004h]
           fmul qword ptr [ebp+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+010h]
           fld dword ptr [eax+008h]
           fmul qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+01Ch]
           fld dword ptr [ecx+008h]
           fmul qword ptr [ebp+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp+010h]
           fld dword ptr [eax+00Ch]
           fmul qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+01Ch]
           fld dword ptr [ecx+00Ch]
           fmul qword ptr [ebp+014h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+00Ch]
           mov esp, ebp
           pop ebp
           ret 00018h
l10040CE6 ENDP
;
;* Call:
; 100323AE 
;
l10040D58 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           lea ecx, [ebp-008h]
           call l10003300
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003904
           add esp, 000000008h
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [edx], 000000000h
           je l10040DA1
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+040h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx], eax
           jmp l10040DAA
;
;* Jump:
; 10040D7F(C) 
;
l10040DA1: mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx], 0FFFFFFFFh
;
;* Jump:
; 10040D9F(U) 
;
l10040DAA: mov eax, dword ptr [ebp+00Ch]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000014h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000010h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           push eax
           call l10001C05
           add esp, 000000008h
           cmp dword ptr [g1004BF6C], 000000000h
           jne l10040E4C
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+010h]
           fmul qword ptr [g10042D20]
           mov edx, dword ptr [ebp+00Ch]
           fstp dword ptr [edx+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [eax+014h]
           fmul qword ptr [g10042D20]
           mov ecx, dword ptr [ebp+00Ch]
           fstp dword ptr [ecx+014h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [edx+018h]
           fmul qword ptr [g10042D20]
           mov eax, dword ptr [ebp+00Ch]
           fstp dword ptr [eax+018h]
;
;* Jump:
; 10040E14(C) 
;
l10040E4C: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00Ch], ecx
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l10040D58 ENDP
;
;* Call:
; 10032462 
;
l10040E61 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           push ecx
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+048h]
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10040EAD
           mov ecx, dword ptr [ebp-004h]
           push ecx
           lea ecx, [ebp-00Ch]
           call l10003337
           push eax
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000398A
           add esp, 000000008h
           lea ecx, [ebp-00Ch]
           call l100039BA
           jmp l10040ECF
;
;* Jump:
; 10040E88(C) 
;
l10040EAD: push offset g1004BF70
           lea ecx, [ebp-014h]
           call l10003337
           push eax
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000398A
           add esp, 000000008h
           lea ecx, [ebp-014h]
           call l100039BA
;
;* Jump:
; 10040EAB(U) 
;
l10040ECF: mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000018h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000014h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000010h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000000Ch
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000008h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           push eax
           call l10002034
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10040E61 ENDP
;
;* Call:
; 10040F5D 
;
;* Export: ??0B_RItem@@QAE@K@Z, 0028
;
l10040F39 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10040F39 ENDP
;
;* Export: ??0B_RDataTriangle@@QAE@XZ, 0027
;
l10040F51 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           push 000000001h
           mov ecx, dword ptr [ebp-004h]
           call l10040F39
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10040F51 ENDP
;
;* Export: ??0B_ParticleGType@@QAE@ABVB_Name@@0KI@Z, 0024
;
l10040F69 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           push esi
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           call l10003A07
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 00000000Ch
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 000000001h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042E68
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx+020h], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+028h], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx], offset g10042E64
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+00Ch], offset g10042E60
           mov ecx, dword ptr [ebp+00Ch]
           call l10003457
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+040h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+024h], eax
           mov edx, dword ptr [ebp+014h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-02Ch]
           add eax, 00000000Ch
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-028h]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-024h]
           imul eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp-028h]
           jnb l10041049
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-030h], eax
           jmp l1004104F
;
;* Jump:
; 1004103C(C) 
;
l10041049: mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 10041047(U) 
;
l1004104F: mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+010h]
           cmp ecx, dword ptr [ebp-00Ch]
           je l10041115
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           je l100410B4
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+004h], 000000000h
           jne l100410B2
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
;
;* Jump:
; 100410A4(C) 
;
l100410B2: jmp l100410BE
;
;* Jump:
; 1004107D(C) 
;
l100410B4: mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+004h], 000000000h
;
;* Jump:
; 100410B2(U) 
;
l100410BE: xor ecx, ecx
           test ecx, ecx
           je l100410FD
           mov dword ptr [ebp-018h], 000000000h
           jmp l100410D6
;
;* Jump:
; 100410FB(U) 
;
l100410CD: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 100410CB(U) 
;
l100410D6: mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [ebp-014h]
           jnb l100410FD
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+ecx*08h]
           mov ecx, dword ptr [edx+ecx*08h+004h]
           mov edx, dword ptr [ebp-024h]
           mov edx, dword ptr [edx+004h]
           mov esi, dword ptr [ebp-018h]
           mov dword ptr [edx+esi*08h], eax
           mov dword ptr [edx+esi*08h+004h], ecx
           jmp l100410CD
;
;* Jump:
; 100410C2(C), 100410DC(C) 
;
l100410FD: cmp dword ptr [ebp-010h], 000000000h
           je l10041115
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1004105E(C), 10041101(C) 
;
l10041115: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+008h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l10041130
;
;* Jump:
; 10041183(U) 
;
l10041127: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10041125(U) 
;
l10041130: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+014h]
           jnb l10041185
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [edx+eax*08h], 0FFh
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [edx+eax*08h+001h], 0FFh
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [edx+eax*08h+002h], 0FFh
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [edx+eax*08h+003h], 0FFh
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+eax*08h+004h], 042480000h
           jmp l10041127
;
;* Jump:
; 10041139(C) 
;
l10041185: mov eax, dword ptr [ebp-02Ch]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l10040F69 ENDP
;
;* Call:
; 1004152A 
;
;* Export: ??1B_ParticleGType@@UAE@XZ, 003A
;
l1004118F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g10042E64
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00Ch], offset g10042E60
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100411BC
           mov edx, dword ptr [ebp-00Ch]
           add edx, 00000000Ch
           mov dword ptr [ebp-008h], edx
           jmp l100411C3
;
;* Jump:
; 100411AF(C) 
;
l100411BC: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100411BA(U) 
;
l100411C3: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042E68
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10041213
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l100411E0
           jmp l10041213
;
;* Jump:
; 100411DC(C) 
;
l100411E0: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 100411D3(C), 100411DE(U) 
;
l10041213: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], offset g1004217C
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000004h
           call l100039BA
           mov esp, ebp
           pop ebp
           ret
l1004118F ENDP
;
;* Export: ??5@YAAAVB_IDataFile@@AAV0@AAVB_ParticleGType@@@Z, 005F
;
l1004122B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A40
           add esp, 000000008h
           lea ecx, [ebp-008h]
           call l10003300
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000028h
           push edx
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000020h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10001BEF
           add esp, 000000008h
           push eax
           call l10003904
           add esp, 000000008h
           push eax
           call l10001BD9
           add esp, 000000008h
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+040h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+024h], eax
           lea edx, [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10001BEF
           add esp, 000000008h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 00000000Ch
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-030h]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-02Ch]
           xor edx, edx
           div dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-02Ch]
           imul eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-014h], eax
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+008h]
           cmp ecx, dword ptr [ebp-030h]
           jnb l100412ED
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-034h], eax
           jmp l100412F3
;
;* Jump:
; 100412E0(C) 
;
l100412ED: mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 100412EB(U) 
;
l100412F3: mov edx, dword ptr [ebp-034h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+010h]
           cmp ecx, dword ptr [ebp-014h]
           je l100413B9
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+010h], 000000000h
           je l10041358
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+010h]
           shl edx, 003h
           push edx
           call l100415E4; [BICRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+004h], 000000000h
           jne l10041356
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
;
;* Jump:
; 10041348(C) 
;
l10041356: jmp l10041362
;
;* Jump:
; 10041321(C) 
;
l10041358: mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+004h], 000000000h
;
;* Jump:
; 10041356(U) 
;
l10041362: xor ecx, ecx
           test ecx, ecx
           je l100413A1
           mov dword ptr [ebp-020h], 000000000h
           jmp l1004137A
;
;* Jump:
; 1004139F(U) 
;
l10041371: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 1004136F(U) 
;
l1004137A: mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [ebp-01Ch]
           jnb l100413A1
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+ecx*08h]
           mov ecx, dword ptr [edx+ecx*08h+004h]
           mov edx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [edx+004h]
           mov esi, dword ptr [ebp-020h]
           mov dword ptr [edx+esi*08h], eax
           mov dword ptr [edx+esi*08h+004h], ecx
           jmp l10041371
;
;* Jump:
; 10041366(C), 10041380(C) 
;
l100413A1: cmp dword ptr [ebp-018h], 000000000h
           je l100413B9
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10041302(C), 100413A5(C) 
;
l100413B9: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001A33
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-010h], ecx
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-010h]
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1004122B ENDP
;
;* Export: ??6@YAAAVB_ODataFile@@AAV0@ABVB_ParticleGType@@@Z, 0071
;
l100413EE PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call l10003A58
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+024h]
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+048h]
           push eax
           lea ecx, [ebp-008h]
           call l10003337
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000028h
           push eax
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000020h
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l1000201E
           add esp, 000000008h
           push eax
           call l1000398A
           add esp, 000000008h
           push eax
           call l10002008
           add esp, 000000008h
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000014h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l1000201E
           add esp, 000000008h
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+014h]
           shl ecx, 003h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l10001E86
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00Ch], ecx
           lea ecx, [ebp-008h]
           call l100039BA
           mov eax, dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l100413EE ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l100414A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10042E68
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+010h], 000000000h
           je l100414F9
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+010h], 000000000h
           jne l100414C6
           jmp l100414F9
;
;* Jump:
; 100414C2(C) 
;
l100414C6: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 100414B9(C), 100414C4(U) 
;
l100414F9: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1004150F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10041501(C) 
;
l1004150F: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100414A0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10041553(U) 
;
l10041520 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l1004118F
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10041545
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l100415C0; [BICRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10041537(C) 
;
l10041545: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10041520 ENDP
;
           int 03h
           int 03h
l10041550: sub ecx, 00000000Ch
           jmp near ptr l10041520
           jmp [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           jmp [__imp_LocalFree]; [KERNEL32.LocalFree].
           jmp [__imp_FormatMessageA]; [KERNEL32.FormatMessageA].
           jmp [__imp_GetLastError]; [KERNEL32.GetLastError].
           jmp [__imp_malloc]; [BICRT.malloc].
           jmp [__imp__assert]; [BICRT._assert].
;
;* Call:
; 100415AC 
;
l1004157C: cmp dword ptr [g1004BF84], 0FFFFFFFFh
           jne l10041591
           push dword ptr [esp+004h]
           call [__imp__onexit]; [BICRT._onexit].
           pop ecx
           ret
;
;* Jump:
; 10041583(C) 
;
l10041591: push offset g1004BF80
           push offset g1004BF84
           push dword ptr [esp+00Ch]
           call l100417FC; [BICRT.__dllonexit].
           add esp, 00000000Ch
           ret
;
;* Call:
; 1000120D, 100061A1, 100269E8, 10029C3B, 10034393, 1003445D, 1003DAF6 
;
l100415A8 PROC
           push dword ptr [esp+004h]
           call l1004157C
           neg eax
           sbb eax, eax
           pop ecx
           neg eax
           dec eax
           ret
l100415A8 ENDP
;
           jmp [__imp_free]; [BICRT.free].
;
;* Call:
; 10001579, 100023A9, 10002437, 10002469, 10002622, 100026C0, 100026FB, 10002FDD, 
; 1000305B, 10003081, 1000323E, 100032BC, 100032E3, 100037B3, 10003931, 100039D9, 
; 10003D14, 10003DB3, 10003E75, 100041B1, 10004792, 1000484A, 10004BD0, 10004BF6, 
; 10004DAD, 100051BE, 10005493, 10005785, 10005A92, 100060D1, 1000669D, 100066CD, 
; 1000676D, 100067EB, 10006811, 10006C98, 10006D6A, 10006E3F, 10006F1E, 10007004, 
; 10007075, 1000719A, 100072EE, 100073D4, 10007445, 1000745B, 10007537, 10007555, 
; 1000760F, 100076F4, 10007765, 1000777B, 1000784A, 1000792F, 100079A0, 100079BE, 
; 10007A8A, 10007B6F, 10007BE0, 10007BFE, 10007CC5, 10007D99, 10007E82, 1000803B, 
; 1000806F, 1000811B, 1000814F, 100081EC, 10008212, 10008246, 100082FB, 1000832F, 
; 10008CB7, 10008CDF, 10009002, 10009020, 1000904D, 100090CB, 100090F1, 10026AAB, 
; 10026B90, 10026CAF, 10026D43, 10026E28, 1002720E, 100272EA, 10027766, 10027D5D, 
; 10028051, 10028344, 1002855B, 1002858F, 10029132, 1002944F, 100294FC, 10029612, 
; 10029995, 10029B1D, 10029B9B, 10029BC1, 10029DB9, 10029FE4, 1002A0CD, 1002A38B, 
; 1002A3BF, 1002A46B, 1002A49F, 1002A54B, 1002A57F, 1003141E, 10032063, 1003207A, 
; 100325E8, 10032DE2, 10032FE8, 10033573, 100335A0, 100338C8, 10033B0A, 10034255, 
; 1003426D, 1003429A, 10034495, 1003473A, 10034B0C, 10034DBB, 10035968, 10035AF3, 
; 10035CFC, 10035EDA, 100370CB, 10037191, 1003792E, 10037A3E, 10037B49, 10037C59, 
; 10037E0E, 10037E50, 100382C6, 10038415, 1003846E, 10038B83, 1003978E, 100397D6, 
; 10039819, 10039863, 10039897, 1003991C, 10039943, 1003997D, 100399C3, 100399F7, 
; 10039A43, 10039A77, 10039AC3, 10039AF7, 10039B43, 10039B77, 10039BC3, 10039BF7, 
; 10039C4F, 10039C9C, 10039D15, 10039D7B, 10039E63, 10039E88, 10039FDC, 1003A146, 
; 1003A2F5, 1003A477, 1003A513, 1003A547, 1003A5C9, 1003A5E0, 1003A614, 1003A699, 
; 1003A6B0, 1003A6E4, 1003A733, 1003A767, 1003A7B3, 1003A7E7, 1003A89B, 1003A8CF, 
; 1003A97B, 1003A9AF, 1003A9F3, 1003AA27, 1003AA73, 1003AAA7, 1003AB5B, 1003AB8F, 
; 1003AC3B, 1003AC6F, 1003ACB3, 1003ACE7, 1003AD9B, 1003ADCF, 1003AE7B, 1003AEAF, 
; 1003AFA9, 1003AFC0, 1003AFF6, 1003B01F, 1003B053, 1003B0D9, 1003B0F0, 1003B124, 
; 1003B229, 1003B240, 1003B276, 1003B29F, 1003B2D3, 1003B38B, 1003B3BF, 1003B46B, 
; 1003B49F, 1003B54B, 1003B57F, 1003B62B, 1003B65F, 1003B6A3, 1003B6D7, 1003B76F, 
; 1003B7F3, 1003B827, 1003B88A, 1003B8A1, 1003B8F1, 1003B9A1, 1003B9F1, 1003BAFC, 
; 1003BB51, 1003BC5C, 1003BDAA, 1003BDC1, 1003BDF7, 1003BE20, 1003BF2C, 1003C03C, 
; 1003C10B, 1003C13F, 1003C1EB, 1003C21F, 1003C2CB, 1003C2FF, 1003C3AB, 1003C3DF, 
; 1003C48B, 1003C4BF, 1003C56B, 1003C59F, 1003C64B, 1003C67F, 1003C72B, 1003C75F, 
; 1003C80B, 1003C83F, 1003C8EB, 1003C91F, 1003CA07, 1003CA1E, 1003CA54, 1003CA7D, 
; 1003CC59, 1003CE09, 1003D059, 1003D217, 1003D307, 1003D459, 1003D617, 1003D8B9, 
; 1003D8F9, 1003D939, 1003DA19, 1003DA30, 1003DA64, 1003DB96, 1003DE3B, 1003DEED, 
; 1003DF9B, 1003DFCF, 1003E07B, 1003E0AF, 1003E15B, 1003E18F, 1003E23B, 1003E26F, 
; 1003F124, 1003FE32, 1004110D, 100411ED, 100413B1, 100414D3, 10041507, 1004153D 
;
l100415C0: jmp [__imp_??3@YAXPAX@Z]; [BICRT.??3@YAXPAX@Z].
           jmp [__imp__errno]; [BICRT._errno].
           jmp [__imp__commit]; [BICRT._commit].
           jmp [__imp__mkdir]; [BICRT._mkdir].
           jmp [__imp__access]; [BICRT._access].
           jmp [__imp__getcwd]; [BICRT._getcwd].
;
;* Call:
; 1000330B, 10003361, 100033CB, 1000342C, 100037DC, 1000394C, 10003CA3, 10003D54, 
; 10003DFC, 10004010, 10004082, 100040DB, 10004160, 100041CD, 10004232, 10004287, 
; 100042F5, 10004A2D, 10004CCD, 10004D5B, 10004DCA, 10004EEB, 10005060, 1000513F, 
; 100051E4, 10005339, 10005414, 100054B9, 100055EC, 10005696, 10005733, 100057A2, 
; 10005881, 10005956, 10005A40, 10005AAF, 10005F82, 10005FC8, 1000607F, 100060EE, 
; 1000652A, 10006D19, 10006D86, 10006DE9, 10006F7F, 10007149, 100071B6, 1000721B, 
; 1000734F, 1000766F, 100078AA, 10007AEA, 10007C73, 10007CE2, 10007DFC, 1000867D, 
; 1000869C, 10008750, 10008793, 100087E3, 1000882A, 1000886F, 100088C2, 10008915, 
; 100089DD, 10008A7D, 10008DDB, 10008E11, 10008E60, 10008EA6, 10008EDE, 10008F30, 
; 10008F77, 10026B3F, 10026BAC, 10026C1B, 10026DD7, 10026E44, 10026EFE, 1002703D, 
; 100270CB, 1002725C, 10027315, 1002754A, 10027945, 100281E3, 10028FDE, 10029362, 
; 1002941C, 1002964F, 100298E6, 10029C62, 10029D67, 10029DD6, 1002A047, 100320EF, 
; 10032122, 10032663, 10032B0A, 10032D2C, 10032E08, 10032F32, 1003300E, 100335E1, 
; 10033605, 100337D6, 100338EE, 10033A18, 10033B33, 1003468A, 1003475D, 10034881, 
; 100349DB, 10034DE6, 10035A0D, 10035B88, 10035D4E, 10035E5B, 10035F00, 10036051, 
; 100360A0, 100361AF, 100361FE, 10036347, 10036395, 10036524, 1003656F, 10036767, 
; 10036E33, 1003705E, 100370E5, 1003758F, 100378C1, 10037948, 100379D1, 10037A58, 
; 10037ADC, 10037B63, 10037BEC, 10037C73, 10037CB5, 10037D55, 10038A40, 10038A8F, 
; 10038C25, 10038D55, 10038E50, 10038E9E, 10038F94, 10039084, 100391CC, 10039217, 
; 100393FD, 1003A0CB, 1003A2A3, 1003A312, 1003A425, 1003A494, 1003CAF2, 1003CB29, 
; 1003CCCE, 1003CD04, 1003CE7E, 1003CEB5, 1003D0CE, 1003D105, 1003D285, 1003D378, 
; 1003D4CE, 1003D505, 1003D692, 1003DC92, 1003DDC5, 1003DE5B, 1003F019, 1003F0AF, 
; 1003F143, 1003F1C7, 10041089, 1004132D 
;
l100415E4: jmp [__imp_??2@YAPAXI@Z]; [BICRT.??2@YAPAXI@Z].
           jmp [__imp_strncpy]; [BICRT.strncpy].
           jmp [__imp__strupr]; [BICRT._strupr].
l100415F6: jmp [__imp__purecall]; [BICRT._purecall].
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1000442D, 10004E13, 10005C1B, 100062A4, 10006452, 1002738A, 10027797, 10027D8E 
;
l10041600 PROC
           push ecx
           cmp eax, 000001000h
           lea ecx, [esp+008h]
           jb l10041620
;
;* Jump:
; 1004161E(C) 
;
l1004160C: sub ecx, 000001000h
           sub eax, 000001000h
           test dword ptr [ecx], eax
           cmp eax, 000001000h
           jnb l1004160C
;
;* Jump:
; 1004160A(C) 
;
l10041620: sub ecx, eax
           mov eax, esp
           test dword ptr [ecx], eax
           mov esp, ecx
           mov ecx, dword ptr [eax]
           mov eax, dword ptr [eax+004h]
           push eax
           ret
l10041600 ENDP
;
           int 03h
;
;* Call:
; 1000696A, 10006983, 1000699C, 100069FA, 10006A13, 10006A2C, 1000BD4F, 10020B15, 
; 10020B3C, 10020B64, 10020B8C, 10020BB7, 10020BE2, 10020C0D, 10020C38, 1002C2CA, 
; 1002C2EA, 1002C30A, 1002C344, 1002C364, 1002C384, 1002C409, 1002C42A, 1002C44B, 
; 1002C488, 1002C4AB, 1002C4CE, 1002C508, 1002C528, 1002C548, 1002C5CE, 1002C5EE, 
; 1002C60F, 1002CC1B, 1002CC3E, 1002CC61, 1002CC9E, 1002CCC1, 1002CCE4, 1002CD6C, 
; 1002CD90, 1002CDB4, 1002CDF1, 1002CE14, 1002CE37, 1002CE74, 1002CE97, 1002CEBA, 
; 1002CF43, 1002CF66, 1002CF8A, 1002D58E, 1002D5B1, 1002D5D4, 1002D611, 1002D634, 
; 1002D657, 1002D6DF, 1002D703, 1002D727 
;
l10041630: jmp [__imp__ftol]; [BICRT._ftol].
           jmp [__imp_fwrite]; [BICRT.fwrite].
           jmp [__imp_fflush]; [BICRT.fflush].
           jmp [__imp_fread]; [BICRT.fread].
           jmp [__imp_exit]; [BICRT.exit].
           jmp [__imp_fprintf]; [BICRT.fprintf].
           jmp [__imp_sprintf]; [BICRT.sprintf].
           jmp [__imp_sscanf]; [BICRT.sscanf].
           jmp [__imp_getenv]; [BICRT.getenv].
           jmp [__imp_fclose]; [BICRT.fclose].
           jmp [__imp_fopen]; [BICRT.fopen].
           jmp [__imp_vsprintf]; [BICRT.vsprintf].
;
;* Call:
; 1002E617, 1003025D, 10031BDB 
;
l10041678: jmp [__imp__CIsin]; [BICRT._CIsin].
;
;* Call:
; 1002E60C, 1003026E, 10031BFB 
;
l1004167E: jmp [__imp__CIcos]; [BICRT._CIcos].
;
;* Call:
; 1002EAB7, 1002EDA9, 1002EDE1, 1002EE19, 1003037C, 100303CB, 1003041E, 10030508, 
; 1003055E, 10030572, 100305D7, 10030639, 100306E4, 1003093B, 10030A12, 10030DB7, 
; 10030F6F, 10030F7A, 10031066, 10031940, 10031D11 
;
l10041684: jmp [__imp__CIsqrt]; [BICRT._CIsqrt].
;
;* Call:
; 10031C82, 10031C9C, 10031CC9, 10031CE1, 10031D50, 10031D68 
;
l1004168A: jmp [__imp__CIatan]; [BICRT._CIatan].
           jmp [__imp_fscanf]; [BICRT.fscanf].
           jmp [__imp_strchr]; [BICRT.strchr].
           jmp [__imp_strncat]; [BICRT.strncat].
           jmp [__imp_qsort]; [BICRT.qsort].
           jmp [__imp_strncmp]; [BICRT.strncmp].
           jmp [__imp_realloc]; [BICRT.realloc].
;
;* Call:
; 1004179A, 100417BE, 100417CF 
;
l100416B4 PROC
           mov eax, dword ptr [esp+008h]
           test eax, eax
           jne l100416CA
           cmp dword ptr [g1004BF74], eax
           jle l100416F2
           dec dword ptr [g1004BF74]
;
;* Jump:
; 100416BA(C) 
;
l100416CA: mov ecx, dword ptr [__imp__adjust_fdiv]; [BICRT._adjust_fdiv].
           cmp eax, 000000001h
           mov ecx, dword ptr [ecx]
           mov dword ptr [g1004BF78], ecx
           jne l1004171C
           push 000000080h
           call [__imp_malloc]; [BICRT.malloc].
           test eax, eax
           pop ecx
           mov dword ptr [g1004BF84], eax
           jne l100416F6
;
;* Jump:
; 100416C2(C) 
;
l100416F2: xor eax, eax
           jmp l1004175C
;
;* Jump:
; 100416F0(C) 
;
l100416F6: and dword ptr [eax], 000000000h
           mov eax, dword ptr [g1004BF84]
           push offset g1004702C
           push offset g10047000
           mov dword ptr [g1004BF80], eax
           call l10041802; [BICRT._initterm].
           inc dword ptr [g1004BF74]
           pop ecx
           pop ecx
           jmp l10041759
;
;* Jump:
; 100416DB(C) 
;
l1004171C: test eax, eax
           jne l10041759
           mov eax, dword ptr [g1004BF84]
           test eax, eax
           je l10041759
           mov ecx, dword ptr [g1004BF80]
           push esi
           lea esi, [ecx-004h]
;
;* Jump:
; 10041747(U) 
;
l10041733: cmp esi, eax
           jb l10041749
           mov ecx, dword ptr [esi]
           test ecx, ecx
           je l10041744
           call ecx
           mov eax, dword ptr [g1004BF84]
;
;* Jump:
; 1004173B(C) 
;
l10041744: sub esi, 000000004h
           jmp l10041733
;
;* Jump:
; 10041735(C) 
;
l10041749: push eax
           call [__imp_free]; [BICRT.free].
           and dword ptr [g1004BF84], 000000000h
           pop ecx
           pop esi
;
;* Jump:
; 1004171A(U), 1004171E(C), 10041727(C) 
;
l10041759: push 000000001h
           pop eax
;
;* Jump:
; 100416F4(U) 
;
l1004175C: ret 0000Ch
l100416B4 ENDP
;
;* Entry Point:
;
__startup PROC
           push ebp
           mov ebp, esp
           push ebx
           mov ebx, dword ptr [ebp+008h]
           push esi
           mov esi, dword ptr [ebp+00Ch]
           push edi
           mov edi, dword ptr [ebp+010h]
           test esi, esi
           jne l1004177B
           cmp dword ptr [g1004BF74], 000000000h
           jmp l100417A1
;
;* Jump:
; 10041770(C) 
;
l1004177B: cmp esi, 000000001h
           je l10041785
           cmp esi, 000000002h
           jne l100417A7
;
;* Jump:
; 1004177E(C) 
;
l10041785: mov eax, dword ptr [g1004BF7C]
           test eax, eax
           je l10041797
           push edi
           push esi
           push ebx
           call eax
           test eax, eax
           je l100417A3
;
;* Jump:
; 1004178C(C) 
;
l10041797: push edi
           push esi
           push ebx
           call l100416B4
           test eax, eax
;
;* Jump:
; 10041779(U) 
;
l100417A1: jne l100417A7
;
;* Jump:
; 10041795(C) 
;
l100417A3: xor eax, eax
           jmp l100417F5
;
;* Jump:
; 10041783(C), 100417A1(C) 
;
l100417A7: push edi
           push esi
           push ebx
           call l10041808
           cmp esi, 000000001h
           mov dword ptr [ebp+00Ch], eax
           jne l100417C3
           test eax, eax
           jne l100417F2
           push edi
           push eax
           push ebx
           call l100416B4
;
;* Jump:
; 100417B5(C) 
;
l100417C3: test esi, esi
           je l100417CC
           cmp esi, 000000003h
           jne l100417F2
;
;* Jump:
; 100417C5(C) 
;
l100417CC: push edi
           push esi
           push ebx
           call l100416B4
           test eax, eax
           jne l100417DB
           and dword ptr [ebp+00Ch], eax
;
;* Jump:
; 100417D6(C) 
;
l100417DB: cmp dword ptr [ebp+00Ch], 000000000h
           je l100417F2
           mov eax, dword ptr [g1004BF7C]
           test eax, eax
           je l100417F2
           push edi
           push esi
           push ebx
           call eax
           mov dword ptr [ebp+00Ch], eax
;
;* Jump:
; 100417B9(C), 100417CA(C), 100417DF(C), 100417E8(C) 
;
l100417F2: mov eax, dword ptr [ebp+00Ch]
;
;* Jump:
; 100417A5(U) 
;
l100417F5: pop edi
           pop esi
           pop ebx
           pop ebp
           ret 0000Ch
__startup ENDP
;
;* Call:
; 1004159F 
;
l100417FC: jmp [__imp___dllonexit]; [BICRT.__dllonexit].
;
;* Call:
; 1004170D 
;
l10041802: jmp [__imp__initterm]; [BICRT._initterm].
;
;* Call:
; 100417AA 
;
l10041808 PROC
           cmp dword ptr [esp+008h], 000000001h
           jne l10041822
           cmp dword ptr [g1004BF7C], 000000000h
           jne l10041822
           push dword ptr [esp+004h]
           call [__imp_DisableThreadLibraryCalls]; [KERNEL32.DisableThreadLibraryCalls].
;
;* Jump:
; 1004180D(C), 10041816(C) 
;
l10041822: push 000000001h
           pop eax
           ret 0000Ch
l10041808 ENDP
;
           jmp [__imp__PyString_FromString]; [python15.PyString_FromString].
           jmp [__imp__PyInt_FromLong]; [python15.PyInt_FromLong].
           jmp [__imp__PyTuple_New]; [python15.PyTuple_New].
           jmp [__imp__PyString_AsString]; [python15.PyString_AsString].
           jmp [__imp__PyObject_Str]; [python15.PyObject_Str].
           jmp [__imp__PyTuple_GetItem]; [python15.PyTuple_GetItem].
           jmp [__imp__PyTuple_Size]; [python15.PyTuple_Size].
           jmp [__imp__PyErr_Clear]; [python15.PyErr_Clear].
           jmp [__imp__PyErr_Print]; [python15.PyErr_Print].
           jmp [__imp__PyErr_Occurred]; [python15.PyErr_Occurred].
           jmp [__imp__PyEval_CallObjectWithKeywords]; [python15.PyEval_CallObjectWithKeywords].
           jmp [__imp__PyErr_SetString]; [python15.PyErr_SetString].
           jmp [__imp__Py_BuildValue]; [python15.Py_BuildValue].
           jmp [__imp__PyArg_ParseTuple]; [python15.PyArg_ParseTuple].
           jmp [__imp__PyCallable_Check]; [python15.PyCallable_Check].
           jmp [__imp__PySequence_Concat]; [python15.PySequence_Concat].
           jmp [__imp__PyTuple_SetItem]; [python15.PyTuple_SetItem].
           jmp [__imp__PyDict_SetItemString]; [python15.PyDict_SetItemString].
           jmp [__imp__PyModule_GetDict]; [python15.PyModule_GetDict].
           jmp [__imp__Py_InitModule4]; [python15.Py_InitModule4].
           jmp [__imp_DisableThreadLibraryCalls]; [KERNEL32.DisableThreadLibraryCalls].
           jmp [__imp__read]; [BICRT._read].
           jmp [__imp__open]; [BICRT._open].
           jmp [__imp__close]; [BICRT._close].
           jmp [__imp__lseek]; [BICRT._lseek].
           jmp [__imp__stricmp]; [BICRT._stricmp].
           jmp [__imp__memicmp]; [BICRT._memicmp].
           jmp [__imp__filelength]; [BICRT._filelength].
           jmp [__imp__strdup]; [BICRT._strdup].
           jmp [__imp__eof]; [BICRT._eof].
           jmp [__imp__write]; [BICRT._write].
g100418E2  dd 455 dup (?)
           db 2 dup (?)
;
;...
;
;Section .rdata
;
g10042000  dd 0FE310400h; _onexit
g10042004  dd 008320400h; _initterm
g10042008  dd 066310400h; fclose
g1004200C  dd 070310400h; fopen
g10042010  dd 056340400h; _read
g10042014  dd 07C300400h; malloc
g10042018  dd 086300400h; _assert
g1004201C  dd 090300400h; free
g10042020  dd 098300400h; ??3@YAXPAX@Z
g10042024  dd 0A8300400h; _errno
g10042028  dd 0B2300400h; _commit
g1004202C  dd 0BC300400h; _mkdir
g10042030  dd 0C6300400h; _access
g10042034  dd 0D0300400h; _getcwd
g10042038  dd 0DA300400h; ??2@YAPAXI@Z
g1004203C  dd 0EA300400h; strncpy
g10042040  dd 0F4300400h; _strupr
g10042044  dd 0FE300400h; _purecall
g10042048  dd 00A310400h; _ftol
g1004204C  dd 012310400h; fwrite
g10042050  dd 01C310400h; fflush
g10042054  dd 026310400h; fread
g10042058  dd 02E310400h; exit
g1004205C  dd 036310400h; fprintf
g10042060  dd 040310400h; _iob
g10042064  dd 048310400h; sprintf
g10042068  dd 052310400h; sscanf
g1004206C  dd 05C310400h; getenv
g10042070  dd 066340400h; _close
g10042074  dd 05E340400h; _open
g10042078  dd 078310400h; vsprintf
g1004207C  dd 084310400h; _CIsin
g10042080  dd 08E310400h; _CIcos
g10042084  dd 098310400h; _CIsqrt
g10042088  dd 0A2310400h; _CIatan
g1004208C  dd 0AC310400h; fscanf
g10042090  dd 0B6310400h; strchr
g10042094  dd 0C0310400h; strncat
g10042098  dd 0CA310400h; qsort
g1004209C  dd 0D2310400h; strncmp
g100420A0  dd 0DC310400h; realloc
g100420A4  dd 0F0310400h; __dllonexit
g100420A8  dd 0AA340400h; _eof
g100420AC  dd 0A0340400h; _strdup
g100420B0  dd 014320400h; _adjust_fdiv
g100420B4  dd 0B2340400h; _write
g100420B8  dd 07A340400h; _stricmp
g100420BC  dd 092340400h; _filelength
g100420C0  dd 086340400h; _memicmp
g100420C4  dd 070340400h; _lseek
g100420C8  dd 000000000h
g100420CC  dd 04C300400h; FormatMessageA
g100420D0  dd 024300400h; GetPrivateProfileStringA
g100420D4  dd 05E300400h; GetLastError
g100420D8  dd 040300400h; LocalFree
g100420DC  dd 03A340400h; DisableThreadLibraryCalls
g100420E0  dd 000000000h
g100420E4  dd 0FE330400h; ?B_3D_raster_device@@3PAVB_3DRasterDevice@@A
g100420E8  dd 000000000h
g100420EC  dd 022330400h; Py_BuildValue
g100420F0  dd 032330400h; PyArg_ParseTuple
g100420F4  dd 046330400h; _Py_NoneStruct
g100420F8  dd 058330400h; PyCallable_Check
g100420FC  dd 010330400h; PyExc_NameError
g10042100  dd 0DE320400h; PyEval_CallObjectWithKeywords
g10042104  dd 0FE320400h; PyErr_SetString
g10042108  dd 092330400h; PyTuple_SetItem
g1004210C  dd 0A4330400h; PyDict_SetItemString
g10042110  dd 0BC330400h; PyModule_GetDict
g10042114  dd 0D0330400h; Py_InitModule4
g10042118  dd 0CC320400h; PyErr_Occurred
g1004211C  dd 06C330400h; PyExc_TypeError
g10042120  dd 07E330400h; PySequence_Concat
g10042124  dd 0E2330400h; PyType_Type
g10042128  dd 0BE320400h; PyErr_Print
g1004212C  dd 0B0320400h; PyErr_Clear
g10042130  dd 0A0320400h; PyTuple_Type
g10042134  dd 090320400h; PyTuple_Size
g10042138  dd 07E320400h; PyTuple_GetItem
g1004213C  dd 06E320400h; PyObject_Str
g10042140  dd 05A320400h; PyString_AsString
g10042144  dd 04C320400h; PyTuple_New
g10042148  dd 03A320400h; PyInt_FromLong
g1004214C  dd 024320400h; PyString_FromString
g10042150  dd 5 dup (0)
           dd 03AB0DA18h
           dd 000000000h
           dd 000000002h
           dd 000000028h
           dd 000000000h
           dd 00004C000h
;
;* Export: ??_7B_NamedObj@@6B@, 008E
;
           dd g1004217C; Defined in c++ code
;
;* Export: ??_7B_MessageChannel@@6B@, 008D
;
           dd g10042180; Defined in c++ code
;
;* Export: ??_7B_ListElement@@6B@, 008C
;
           dd g10042190; Defined in c++ code
;
;* Export: ??_7B_List@@6B@, 008B
;
           dd g10042194; Defined in c++ code
;
;* Export: ??_7B_Resource@@6B@, 008F
;
           dd g10042198; Defined in c++ code
g100421A8  dd l100079D0
           dd l100085AD
           dd l10008563
           dd l10008570
g100421B8  dd l10007790
           dd l10008554
           dd l10008563
           dd l10008570
;
;* Export: ??_7B_BitMap24@@6B@, 0087
;
g100421C8  dd l10007470
g100421CC  dd l10006C70
           dd l10008374
           dd l10008383
           dd l10008483
g100421DC  dd l10006680
g100421E0  dd l100066B0
g100421E4  dd l10007FA0
g100421E8  dd l10008260
g100421EC  dd l10008080
;
;* Export: ??_7B_Color@@6B@, 008A
;
           dd g100421F0; Defined in c++ code
g100421F4  dd l10008160
;
;* Export: ??_7B_BitMap@@6B@, 0088
;
g100421F8  dd l10009060
           dd 000000000h
g10042200  dd 058C54000h
           dd 04B42539Fh
           dd 032494000h
           dd 011A822A3h
           dd 07B2158C5h
           dd 0686273FCh
           dd 045BF58C5h
           dd 0187E300Bh
           dd 073FC539Fh
           dd 062546D41h
           dd 041B3539Fh
           dd 017122D41h
           dd 068624B42h
           dd 0587E6254h
           dd 03B214B42h
           dd 014C328BAh
           dd 058C54000h
           dd 04B42539Fh
           dd 032494000h
           dd 011A822A3h
           dd 045BF3249h
           dd 03B2141B3h
           dd 027823249h
           dd 00DE01B37h
           dd 0300B22A3h
           dd 028BA2D41h
           dd 01B3722A3h
           dd 0098E12BFh
           dd 0187E11A8h
           dd 014C31712h
           dd 00DE011A8h
           dd 004DF098Eh
g10042280  dd 000000000h
           dd 03FF00000h
           dd 0B14861EFh
           dd 03FF63150h
           dd 0914D6FCAh
           dd 03FF4E7AEh
           dd 0EF6C11AAh
           dd 03FF2D062h
           dd 000000000h
           dd 03FF00000h
           dd 0C0A7BF3Bh
           dd 03FE92469h
           dd 07BC720BBh
           dd 03FE1517Ah
           dd 0DE72AB5Dh
           dd 03FD1A855h
g100422C0  dd 000000000h
           dd 03FF00000h
g100422C8  dd 000000000h
           dd 040200000h
g100422D0  dd 046800100h
g100422D4  dd 000000010h
           dd 00000000Bh
           dd 00000000Ah
           dd 000000010h
           dd 000000018h
           dd 000000028h
           dd 000000033h
           dd 00000003Dh
           dd 00000000Ch
           dd 00000000Ch
           dd 00000000Eh
           dd 000000013h
           dd 00000001Ah
           dd 00000003Ah
           dd 00000003Ch
           dd 000000037h
           dd 00000000Eh
           dd 00000000Dh
           dd 000000010h
           dd 000000018h
           dd 000000028h
           dd 000000039h
           dd 000000045h
           dd 000000038h
           dd 00000000Eh
           dd 000000011h
           dd 000000016h
           dd 00000001Dh
           dd 000000033h
           dd 000000057h
           dd 000000050h
           dd 00000003Eh
           dd 000000012h
           dd 000000016h
           dd 000000025h
           dd 000000038h
           dd 000000044h
           dd 00000006Dh
           dd 000000067h
           dd 00000004Dh
           dd 000000018h
           dd 000000023h
           dd 000000037h
           dd 000000040h
           dd 000000051h
           dd 000000068h
           dd 000000071h
           dd 00000005Ch
           dd 000000031h
           dd 000000040h
           dd 00000004Eh
           dd 000000057h
           dd 000000067h
           dd 000000079h
           dd 000000078h
           dd 000000065h
           dd 000000048h
           dd 00000005Ch
           dd 00000005Fh
           dd 000000062h
           dd 000000070h
           dd 000000064h
           dd 000000067h
           dd 000000063h
g100423D4  dd 000000011h
           dd 000000012h
           dd 000000018h
           dd 00000002Fh
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000012h
           dd 000000015h
           dd 00000001Ah
           dd 000000042h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000018h
           dd 00000001Ah
           dd 000000038h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 00000002Fh
           dd 000000042h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
           dd 000000063h
g100424D4  dd 005010000h
           dd 001010101h
           dd 000000101h
           dd 2 dup (0)
g100424E8  dd 003020100h
           dd 007060504h
           dd 00B0A0908h
g100424F4  dd 001030000h
           dd 001010101h
           dd 001010101h
           dd 2 dup (0)
g10042508  dd 003020100h
           dd 007060504h
           dd 00B0A0908h
g10042514  dd 001020000h
           dd 004020303h
           dd 004050503h
           dd 001000004h
           dd 00000007Dh
g10042528  dd 000030201h
           dd 012051104h
           dd 006413121h
           dd 007615113h
           dd 032147122h
           dd 008A19181h
           dd 0C1B14223h
           dd 0F0D15215h
           dd 072623324h
           dd 0160A0982h
           dd 01A191817h
           dd 028272625h
           dd 035342A29h
           dd 039383736h
           dd 04544433Ah
           dd 049484746h
           dd 05554534Ah
           dd 059585756h
           dd 06564635Ah
           dd 069686766h
           dd 07574736Ah
           dd 079787776h
           dd 08584837Ah
           dd 089888786h
           dd 09493928Ah
           dd 098979695h
           dd 0A3A29A99h
           dd 0A7A6A5A4h
           dd 0B2AAA9A8h
           dd 0B6B5B4B3h
           dd 0BAB9B8B7h
           dd 0C5C4C3C2h
           dd 0C9C8C7C6h
           dd 0D4D3D2CAh
           dd 0D8D7D6D5h
           dd 0E2E1DAD9h
           dd 0E6E5E4E3h
           dd 0EAE9E8E7h
           dd 0F4F3F2F1h
           dd 0F8F7F6F5h
           dd 00000FAF9h
g100425CC  dd 001020000h
           dd 003040402h
           dd 004050704h
           dd 002010004h
           dd 000000077h
g100425E0  dd 003020100h
           dd 021050411h
           dd 041120631h
           dd 071610751h
           dd 081322213h
           dd 091421408h
           dd 009C1B1A1h
           dd 0F0523323h
           dd 0D1726215h
           dd 03424160Ah
           dd 017F125E1h
           dd 0261A1918h
           dd 02A292827h
           dd 038373635h
           dd 044433A39h
           dd 048474645h
           dd 054534A49h
           dd 058575655h
           dd 064635A59h
           dd 068676665h
           dd 074736A69h
           dd 078777675h
           dd 083827A79h
           dd 087868584h
           dd 0928A8988h
           dd 096959493h
           dd 09A999897h
           dd 0A5A4A3A2h
           dd 0A9A8A7A6h
           dd 0B4B3B2AAh
           dd 0B8B7B6B5h
           dd 0C3C2BAB9h
           dd 0C7C6C5C4h
           dd 0D2CAC9C8h
           dd 0D6D5D4D3h
           dd 0DAD9D8D7h
           dd 0E5E4E3E2h
           dd 0E9E8E7E6h
           dd 0F4F3F2EAh
           dd 0F8F7F6F5h
           dd 00000FAF9h
           dd 000000000h
g10042688  dd 058C54000h
           dd 04B42539Fh
           dd 032494000h
           dd 011A822A3h
           dd 07B2158C5h
           dd 0686273FCh
           dd 045BF58C5h
           dd 0187E300Bh
           dd 073FC539Fh
           dd 062546D41h
           dd 041B3539Fh
           dd 017122D41h
           dd 068624B42h
           dd 0587E6254h
           dd 03B214B42h
           dd 014C328BAh
           dd 058C54000h
           dd 04B42539Fh
           dd 032494000h
           dd 011A822A3h
           dd 045BF3249h
           dd 03B2141B3h
           dd 027823249h
           dd 00DE01B37h
           dd 0300B22A3h
           dd 028BA2D41h
           dd 01B3722A3h
           dd 0098E12BFh
           dd 0187E11A8h
           dd 014C31712h
           dd 00DE011A8h
           dd 004DF098Eh
g10042708  dd 000000000h
           dd 03FF00000h
           dd 0B14861EFh
           dd 03FF63150h
           dd 0914D6FCAh
           dd 03FF4E7AEh
           dd 0EF6C11AAh
           dd 03FF2D062h
           dd 000000000h
           dd 03FF00000h
           dd 0C0A7BF3Bh
           dd 03FE92469h
           dd 07BC720BBh
           dd 03FE1517Ah
           dd 0DE72AB5Dh
           dd 03FD1A855h
g10042748  dd 000000000h
           dd 000000001h
           dd 000000002h
           dd 000000004h
           dd 000000008h
           dd 000000010h
           dd 000000020h
           dd 000000040h
           dd 000000080h
           dd 000000100h
           dd 000000200h
           dd 000000400h
           dd 000000800h
           dd 000001000h
           dd 000002000h
           dd 000004000h
g10042788  dd 000000000h
           dd 0FFFFFFFFh
           dd 0FFFFFFFDh
           dd 0FFFFFFF9h
           dd 0FFFFFFF1h
           dd 0FFFFFFE1h
           dd 0FFFFFFC1h
           dd 0FFFFFF81h
           dd 0FFFFFF01h
           dd 0FFFFFE01h
           dd 0FFFFFC01h
           dd 0FFFFF801h
           dd 0FFFFF001h
           dd 0FFFFE001h
           dd 0FFFFC001h
           dd 0FFFF8001h
g100427C8  dd 000000000h
           dd 000000001h
           dd 000000002h
           dd 000000004h
           dd 000000008h
           dd 000000010h
           dd 000000020h
           dd 000000040h
           dd 000000080h
           dd 000000100h
           dd 000000200h
           dd 000000400h
           dd 000000800h
           dd 000001000h
           dd 000002000h
           dd 000004000h
g10042808  dd 000000000h
           dd 0FFFFFFFFh
           dd 0FFFFFFFDh
           dd 0FFFFFFF9h
           dd 0FFFFFFF1h
           dd 0FFFFFFE1h
           dd 0FFFFFFC1h
           dd 0FFFFFF81h
           dd 0FFFFFF01h
           dd 0FFFFFE01h
           dd 0FFFFFC01h
           dd 0FFFFF801h
           dd 0FFFFF001h
           dd 0FFFFE001h
           dd 0FFFFC001h
           dd 0FFFF8001h
g10042848  dd g10047528
           dd g10047540
           dd g1004757C
           dd g1004759C
           dd g100475C4
           dd g100475E0
           dd g10047600
           dd g10047620
           dd g10047648
           dd g10047668
           dd g10047680
           dd g10047698
           dd g100476AC
           dd g100476EC
           dd g1004771C
           dd g10047738
           dd g1004775C
           dd g10047794
           dd g100477CC
           dd g100477E4
           dd g10047804
           dd g10047830
           dd g10047880
           dd g1004789C
           dd g100478C8
           dd g100478E4
           dd g1004790C
           dd g10047934
           dd g1004795C
           dd g10047970
           dd g10047988
           dd g1004799C
           dd g100479B0
           dd g100479D8
           dd g100479F0
           dd g10047A04
           dd g10047A28
           dd g10047A40
           dd g10047A70
           dd g10047A98
           dd g10047ABC
           dd g10047AE0
           dd g10047B10
           dd g10047B24
           dd g10047B40
           dd g10047B80
           dd g10047BA8
           dd g10047BD0
           dd g10047BE4
           dd g10047C14
           dd g10047C30
           dd g10047C58
           dd g10047C7C
           dd g10047CA8
           dd g10047CD4
           dd g10047CF4
           dd g10047D24
           dd g10047D4C
           dd g10047D74
           dd g10047DA4
           dd g10047DD4
           dd g10047E00
           dd g10047E30
           dd g10047E5C
           dd g10047E80
           dd g10047EA0
           dd g10047EC0
           dd g10047EF8
           dd g10047F24
           dd g10047F44
           dd g10047F68
           dd g10047F90
           dd g10047FA8
           dd g10047FBC
           dd g10047FE0
           dd g10047FF0
           dd g10048030
           dd g10048074
           dd g100480A0
           dd g100480CC
           dd g100480F4
           dd g10048110
           dd g1004813C
           dd g10048158
           dd g1004816C
           dd g10048184
           dd g10048194
           dd g100481BC
           dd g100481F4
           dd g10048230
           dd g10048260
           dd g10048284
           dd g100482AC
           dd g100482C8
           dd g100482F0
           dd g10048314
           dd g1004832C
           dd g10048350
           dd g10048378
           dd g10048380
           dd g100483BC
           dd g100483F8
           dd g10048418
           dd g10048428
           dd g10048448
           dd g10048468
           dd g10048488
           dd g100484A4
           dd g100484C0
           dd g10048504
           dd g10048540
           dd g10048578
           dd g100485AC
           dd g100485C0
           dd g100485D8
           dd g10048600
           dd g10048644
           dd g10048680
           dd g100486B4
           dd g100486D8
           dd g10048708
           dd g10048724
           dd g1004875C
           dd g10048788
           dd 000000000h
g10042A3C  dd 03FA73D75h
g10042A40  dd 03F0A8BD4h
g10042A44  dd 03EC3EF15h
g10042A48  dd 03F3504F3h
g10042A4C  dd 0C0273D75h
g10042A50  dd 03F8A8BD4h
g10042A54  dd 03FEC835Eh
g10042A58  dd 03FB504F3h
g10042A5C  dd 000000640h
           dd 000003E80h
g10042A64  dd 000000000h
           dd 000001388h
g10042A6C  dd 0F030C000h
           dd 0FC3CCC0Ch
           dd 0F333C303h
           dd 0FF3FCF0Fh
           dd 070B04080h
           dd 07CBC4C8Ch
           dd 073B34383h
           dd 07FBF4F8Fh
           dd 0D010E020h
           dd 0DC1CEC2Ch
           dd 0D313E323h
           dd 0DF1FEF2Fh
           dd 0509060A0h
           dd 05C9C6CACh
           dd 0539363A3h
           dd 05F9F6FAFh
           dd 0F838C808h
           dd 0F434C404h
           dd 0FB3BCB0Bh
           dd 0F737C707h
           dd 078B84888h
           dd 074B44484h
           dd 07BBB4B8Bh
           dd 077B74787h
           dd 0D818E828h
           dd 0D414E424h
           dd 0DB1BEB2Bh
           dd 0D717E727h
           dd 0589868A8h
           dd 0549464A4h
           dd 05B9B6BABh
           dd 0579767A7h
           dd 0F232C202h
           dd 0FE3ECE0Eh
           dd 0F131C101h
           dd 0FD3DCD0Dh
           dd 072B24282h
           dd 07EBE4E8Eh
           dd 071B14181h
           dd 07DBD4D8Dh
           dd 0D212E222h
           dd 0DE1EEE2Eh
           dd 0D111E121h
           dd 0DD1DED2Dh
           dd 0529262A2h
           dd 05E9E6EAEh
           dd 0519161A1h
           dd 05D9D6DADh
           dd 0FA3ACA0Ah
           dd 0F636C606h
           dd 0F939C909h
           dd 0F535C505h
           dd 07ABA4A8Ah
           dd 076B64686h
           dd 079B94989h
           dd 075B54585h
           dd 0DA1AEA2Ah
           dd 0D616E626h
           dd 0D919E929h
           dd 0D515E525h
           dd 05A9A6AAAh
           dd 0569666A6h
           dd 0599969A9h
           dd 0559565A5h
g10042B6C  dd 000000001h
           dd 000000000h
           dd 000000002h
g10042B78  dd 000000000h
           dd 000000001h
           dd 000000008h
           dd 000000010h
           dd 000000009h
           dd 000000002h
           dd 000000003h
           dd 00000000Ah
           dd 000000011h
           dd 000000018h
           dd 000000020h
           dd 000000019h
           dd 000000012h
           dd 00000000Bh
           dd 000000004h
           dd 000000005h
           dd 00000000Ch
           dd 000000013h
           dd 00000001Ah
           dd 000000021h
           dd 000000028h
           dd 000000030h
           dd 000000029h
           dd 000000022h
           dd 00000001Bh
           dd 000000014h
           dd 00000000Dh
           dd 000000006h
           dd 000000007h
           dd 00000000Eh
           dd 000000015h
           dd 00000001Ch
           dd 000000023h
           dd 00000002Ah
           dd 000000031h
           dd 000000038h
           dd 000000039h
           dd 000000032h
           dd 00000002Bh
           dd 000000024h
           dd 00000001Dh
           dd 000000016h
           dd 00000000Fh
           dd 000000017h
           dd 00000001Eh
           dd 000000025h
           dd 00000002Ch
           dd 000000033h
           dd 00000003Ah
           dd 00000003Bh
           dd 000000034h
           dd 00000002Dh
           dd 000000026h
           dd 00000001Fh
           dd 000000027h
           dd 00000002Eh
           dd 000000035h
           dd 00000003Ch
           dd 00000003Dh
           dd 000000036h
           dd 00000002Fh
           dd 000000037h
           dd 00000003Eh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
           dd 00000003Fh
g10042CB8  dd l100284C0
;
;* Export: ??_7B_ChannelOFile@@6B@, 0089
;
g10042CBC  dd l10029B30
           dd l100299E1
           dd l10029A08
           dd l10029A22
g10042CCC  dd l1002A2F0
g10042CD0  dd l1002A4B0
g10042CD4  dd l1002A3D0
g10042CD8  dd 000000000h
           dd 040000000h
g10042CE0  dd 0A0B5ED8Dh
           dd 03EB0C6F7h
g10042CE8  dd 000000000h
           dd 03FE00000h
g10042CF0  dd 2 dup (0)
g10042CF8  dd 2 dup (0)
g10042D00  dd 000000000h
           dd 0C0000000h
g10042D08  dd 040000000h
           dd 000000000h
g10042D10  dd 0E7210BE9h
           dd 03FEFFFFDh
g10042D18  dd 0D2F1A9FCh
           dd 03F50624Dh
;
;* Jump:
; 10042D68(C) 
;
g10042D20  dd 000000000h
           dd 0BFF00000h
g10042D28  dd 048E8A71Eh
           dd 0BFEFFF2Eh
g10042D30  dd 048E8A71Eh
           dd 03FEFFF2Eh
g10042D38  dd 03F800000h
g10042D3C  dd l100398B0
g10042D40  dd 054442EEAh
           dd 03FF921FBh
g10042D48  dd 07F332330h
           dd 04012D97Ch
g10042D50  dd 054442EEAh
           dd 0400921FBh
g10042D58  dd 0A0B5ED8Dh
           dd 0BEB0C6F7h
g10042D60  dd 000000000h
           dd 0404A0000h
g10042D68  dd l1003B670
           dd 000000000h
g10042D70  dd 000000000h
           dd 040080000h
g10042D78  dd l1003B6F0
g10042D7C  dd l1003B7C0
g10042D80  dd 09999999Ah
           dd 03FD99999h
g10042D88  dd 000000000h
           dd 040590000h
g10042D90  dd l10039750
g10042D94  dd l10039830
g10042D98  dd l100397F0
g10042D9C  dd l1003A4E0
g10042DA0  dd l10039960
           dd l10032ABD
           dd l10032ACC
           dd l10032AD9
g10042DB0  dd l1003B4B0
g10042DB4  dd l1003B2F0
g10042DB8  dd l1003AEC0
g10042DBC  dd l1003AD00
g10042DC0  dd l10039B90
g10042DC4  dd l1003AAC0
g10042DC8  dd l10039B10
g10042DCC  dd l10039A90
g10042DD0  dd l1003A800
g10042DD4  dd l10039A10
g10042DD8  dd l1003A780
g10042DDC  dd l10039990
g10042DE0  dd l1003A700
g10042DE4  dd l1003A560
g10042DE8  dd l1003A630
g10042DEC  dd l1003A9C0
g10042DF0  dd l1003AA40
g10042DF4  dd l1003AC80
g10042DF8  dd l1003A8E0
g10042DFC  dd l1003ABA0
g10042E00  dd l1003ADE0
g10042E04  dd l1003B140
g10042E08  dd l1003B3D0
g10042E0C  dd l1003B590
g10042E10  dd l1003B070
g10042E14  dd l1003C070
g10042E18  dd l1003C4D0
g10042E1C  dd l1003C150
g10042E20  dd l1003C5B0
g10042E24  dd l1003C230
g10042E28  dd l1003C690
g10042E2C  dd l1003C310
g10042E30  dd l1003C770
g10042E34  dd l1003C3F0
g10042E38  dd l1003C850
g10042E3C  dd l1003D9B0
g10042E40  dd l1003D890
g10042E44  dd l1003D8D0
g10042E48  dd l1003D910
g10042E4C  dd l1003DF00
g10042E50  dd l1003E0C0
g10042E54  dd l1003E1A0
g10042E58  dd l1003DFE0
g10042E5C  dd l1003DED0
g10042E60  dd l10041550
g10042E64  dd l10041520
g10042E68  dd l100414A0
           dd 000042F9Ch
           dd 2 dup (0)
           dd 00004306Eh
           dd 0000420CCh
           dd 000042ED0h
           dd 2 dup (0)
           dd 0000431E6h
           dd 000042000h
           dd 000042FBCh
           dd 2 dup (0)
           dd 0000433F0h
           dd 0000420ECh
           dd 000042FB4h
           dd 2 dup (0)
           dd 00004342Eh
           dd 0000420E4h
           dd 5 dup (0)
           dd 000B9A778h
           dd 000B9A782h
           dd 000B9A6E0h
           dd 000B9A6EAh
           dd 000B9A9D0h
           dd 000B9A5F6h
           dd 000B9A600h
           dd 000B9A60Ah
           dd 000B9A612h
           dd 000B9A622h
           dd 000B9A62Ch
           dd 000B9A636h
           dd 000B9A640h
           dd 000B9A64Ah
           dd 000B9A654h
           dd 000B9A664h
           dd 000B9A66Eh
           dd 000B9A678h
           dd 000B9A684h
           dd 000B9A68Ch
           dd 000B9A696h
           dd 000B9A6A0h
           dd 000B9A6A8h
           dd 000B9A6B0h
           dd 000B9A6BAh
           dd 000B9A6C2h
           dd 000B9A6CCh
           dd 000B9A6D6h
           dd 000B9A9E0h
           dd 000B9A9D8h
           dd 000B9A6F2h
           dd 000B9A6FEh
           dd 000B9A708h
           dd 000B9A712h
           dd 000B9A71Ch
           dd 000B9A726h
           dd 000B9A730h
           dd 000B9A73Ah
           dd 000B9A744h
           dd 000B9A74Ch
           dd 000B9A756h
           dd 000B9A76Ah
           dd 000B9AA24h
           dd 000B9AA1Ah
           dd 000B9A78Eh
           dd 000B9AA2Ch
           dd 000B9A9F4h
           dd 000B9AA0Ch
           dd 000B9AA00h
           dd 000B9A9EAh
           dd 000000000h
           dd 000B9A5C6h
           dd 000B9A59Eh
           dd 000B9A5D8h
           dd 000B9A5BAh
           dd 000B9A9B4h
           dd 000000000h
           dd 000B9A978h
           dd 000000000h
           dd 000B9A89Ch
           dd 000B9A8ACh
           dd 000B9A8C0h
           dd 000B9A8D2h
           dd 000B9A88Ah
           dd 000B9A858h
           dd 000B9A878h
           dd 000B9A90Ch
           dd 000B9A91Eh
           dd 000B9A936h
           dd 000B9A94Ah
           dd 000B9A846h
           dd 000B9A8E6h
           dd 000B9A8F8h
           dd 000B9A95Ch
           dd 000B9A838h
           dd 000B9A82Ah
           dd 000B9A81Ah
           dd 000B9A80Ah
           dd 000B9A7F8h
           dd 000B9A7E8h
           dd 000B9A7D4h
           dd 000B9A7C6h
           dd 000B9A7B4h
           dd 000B9A79Eh
           dd 000000000h
           dd 06547013Ah
           dd 069725074h
           dd 065746176h
           dd 0666F7250h
           dd 053656C69h
           dd 06E697274h
           dd 000004167h
           dd 06F4C01CCh
           dd 0466C6163h
           dd 000656572h
           dd 06F4600AFh
           dd 074616D72h
           dd 07373654Dh
           dd 041656761h
           dd 0011A0000h
           dd 04C746547h
           dd 045747361h
           dd 0726F7272h
           dd 0454B0000h
           dd 04C454E52h
           dd 0642E3233h
           dd 000006C6Ch
           dd 0616D0291h
           dd 0636F6C6Ch
           dd 000A00000h
           dd 07373615Fh
           dd 000747265h
           dd 07266025Eh
           dd 000006565h
           dd 03F3F0010h
           dd 041594033h
           dd 058415058h
           dd 000005A40h
           dd 0655F00C8h
           dd 06F6E7272h
           dd 000B40000h
           dd 06D6F635Fh
           dd 00074696Dh
           dd 06D5F0182h
           dd 07269646Bh
           dd 0008E0000h
           dd 06363615Fh
           dd 000737365h
           dd 0675F00F9h
           dd 077637465h
           dd 0000F0064h
           dd 040323F3Fh
           dd 041504159h
           dd 05A404958h
           dd 002C10000h
           dd 06E727473h
           dd 000797063h
           dd 0735F01CBh
           dd 070757274h
           dd 001920072h
           dd 07275705Fh
           dd 06C616365h
           dd 000F1006Ch
           dd 06F74665Fh
           dd 00266006Ch
           dd 069727766h
           dd 000006574h
           dd 06666024Fh
           dd 06873756Ch
           dd 0025D0000h
           dd 061657266h
           dd 002490064h
           dd 074697865h
           dd 002580000h
           dd 069727066h
           dd 00066746Eh
           dd 0695F0113h
           dd 00000626Fh
           dd 0707302B2h
           dd 0746E6972h
           dd 002B50066h
           dd 061637373h
           dd 00000666Eh
           dd 06567026Ah
           dd 0766E6574h
           dd 0024C0000h
           dd 06F6C6366h
           dd 000006573h
           dd 06F660257h
           dd 0006E6570h
           dd 0737602DCh
           dd 06E697270h
           dd 000006674h
           dd 0435F003Ch
           dd 06E697349h
           dd 000350000h
           dd 06349435Fh
           dd 00000736Fh
           dd 0435F003Eh
           dd 072717349h
           dd 000330074h
           dd 06149435Fh
           dd 0006E6174h
           dd 073660261h
           dd 0666E6163h
           dd 002B70000h
           dd 063727473h
           dd 000007268h
           dd 0747302BFh
           dd 061636E72h
           dd 002A40074h
           dd 0726F7371h
           dd 002C00074h
           dd 06E727473h
           dd 000706D63h
           dd 0657202A7h
           dd 06F6C6C61h
           dd 049420063h
           dd 02E545243h
           dd 0006C6C64h
           dd 05F5F0055h
           dd 06F6C6C64h
           dd 06978656Eh
           dd 001860074h
           dd 0656E6F5Fh
           dd 000746978h
           dd 0695F010Fh
           dd 07474696Eh
           dd 0006D7265h
           dd 0615F009Dh
           dd 073756A64h
           dd 064665F74h
           dd 000007669h
           dd 07950013Dh
           dd 069727453h
           dd 0465F676Eh
           dd 0536D6F72h
           dd 06E697274h
           dd 000A10067h
           dd 06E497950h
           dd 072465F74h
           dd 06F4C6D6Fh
           dd 00000676Eh
           dd 079500164h
           dd 06C707554h
           dd 0654E5F65h
           dd 001380077h
           dd 074537950h
           dd 0676E6972h
           dd 05373415Fh
           dd 06E697274h
           dd 001150067h
           dd 0624F7950h
           dd 07463656Ah
           dd 07274535Fh
           dd 001620000h
           dd 075547950h
           dd 05F656C70h
           dd 049746547h
           dd 0006D6574h
           dd 079500166h
           dd 06C707554h
           dd 069535F65h
           dd 00000657Ah
           dd 079500167h
           dd 06C707554h
           dd 079545F65h
           dd 000006570h
           dd 079500034h
           dd 05F727245h
           dd 061656C43h
           dd 0003D0072h
           dd 072457950h
           dd 072505F72h
           dd 000746E69h
           dd 07950003Ch
           dd 05F727245h
           dd 07563634Fh
           dd 064657272h
           dd 0004B0000h
           dd 076457950h
           dd 0435F6C61h
           dd 04F6C6C61h
           dd 063656A62h
           dd 074695774h
           dd 079654B68h
           dd 064726F77h
           dd 000450073h
           dd 072457950h
           dd 065535F72h
           dd 072745374h
           dd 000676E69h
           dd 079500066h
           dd 05F637845h
           dd 0656D614Eh
           dd 06F727245h
           dd 0016B0072h
           dd 0425F7950h
           dd 0646C6975h
           dd 0756C6156h
           dd 000010065h
           dd 072417950h
           dd 061505F67h
           dd 054657372h
           dd 0656C7075h
           dd 001A70000h
           dd 05F79505Fh
           dd 0656E6F4Eh
           dd 075727453h
           dd 000007463h
           dd 079500016h
           dd 06C6C6143h
           dd 0656C6261h
           dd 06568435Fh
           dd 000006B63h
           dd 07950006Fh
           dd 05F637845h
           dd 065707954h
           dd 06F727245h
           dd 001260072h
           dd 065537950h
           dd 06E657571h
           dd 0435F6563h
           dd 061636E6Fh
           dd 001650074h
           dd 075547950h
           dd 05F656C70h
           dd 049746553h
           dd 0006D6574h
           dd 07950002Dh
           dd 074636944h
           dd 07465535Fh
           dd 06D657449h
           dd 069727453h
           dd 00000676Eh
           dd 0795000D8h
           dd 075646F4Dh
           dd 0475F656Ch
           dd 069447465h
           dd 000007463h
           dd 079500182h
           dd 0696E495Fh
           dd 0646F4D74h
           dd 034656C75h
           dd 001680000h
           dd 079547950h
           dd 0545F6570h
           dd 000657079h
           dd 068747970h
           dd 035316E6Fh
           dd 06C6C642Eh
           dd 000000000h
           dd 0335F423Fh
           dd 061725F44h
           dd 072657473h
           dd 07665645Fh
           dd 040656369h
           dd 041503340h
           dd 0335F4256h
           dd 073615244h
           dd 044726574h
           dd 063697665h
           dd 041404065h
           dd 061520000h
           dd 072657473h
           dd 06C6C642Eh
           dd 0005D0000h
           dd 061736944h
           dd 054656C62h
           dd 061657268h
           dd 062694C64h
           dd 079726172h
           dd 06C6C6143h
           dd 001980073h
           dd 06165725Fh
           dd 001870064h
           dd 065706F5Fh
           dd 000B3006Eh
           dd 06F6C635Fh
           dd 000006573h
           dd 06C5F0144h
           dd 06B656573h
           dd 001C10000h
           dd 07274735Fh
           dd 0706D6369h
           dd 001810000h
           dd 06D656D5Fh
           dd 0706D6369h
           dd 000DC0000h
           dd 06C69665Fh
           dd 06E656C65h
           dd 000687467h
           dd 0735F01BFh
           dd 075647274h
           dd 000C70070h
           dd 0666F655Fh
           dd 002170000h
           dd 06972775Fh
           dd 000006574h
           dd 2 dup (0)
           dd 03AB0DA18h
           dd 000000000h
           dd 000044046h
           dd 000000001h
           dd 000000123h
           dd 000000123h
           dd 0000434E8h
           dd 000043974h
           dd 000043E00h
           dd 000026AD5h
           dd 000026D6Dh
           dd 000006CB0h
           dd 0000086E3h
           dd 000008974h
           dd 000008639h
           dd 0000085F0h
           dd 000029A60h
           dd 0000298B0h
           dd 000006B60h
           dd 000006890h
           dd 000006860h
           dd 000001788h
           dd 000001740h
           dd 000003160h
           dd 0000030A0h
           dd 000002F40h
           dd 000002EA0h
           dd 00003221Ch
           dd 0000321F0h
           dd 0000024C0h
           dd 000002580h
           dd 0000024F0h
           dd 000029C4Ah
           dd 0000033A4h
           dd 000003410h
           dd 000003337h
           dd 000003300h
           dd 000002320h
           dd 000003A07h
           dd 0000039E5h
           dd 000001C44h
           dd 000037EF5h
           dd 0000093A7h
           dd 000006BE0h
           dd 000040F69h
           dd 000040CBEh
           dd 000040CB0h
           dd 000040F51h
           dd 000040F39h
           dd 0000066E0h
           dd 000003ED9h
           dd 000003EBAh
           dd 0000049F8h
           dd 000006E70h
           dd 000008FDAh
           dd 00002994Dh
           dd 00003DBC0h
           dd 000001C31h
           dd 0000030E0h
           dd 000002980h
           dd 000002550h
           dd 000002710h
           dd 0000039BAh
           dd 000002300h
           dd 000002082h
           dd 00003819Bh
           dd 00004118Fh
           dd 000003EFEh
           dd 000004A9Bh
           dd 0000271BEh
           dd 000006C20h
           dd 000029AC0h
           dd 000006BA0h
           dd 000002220h
           dd 0000031A0h
           dd 000002F80h
           dd 000007F70h
           dd 0000025C0h
           dd 000002720h
           dd 00000378Eh
           dd 000002350h
           dd 000002290h
           dd 000006BF0h
           dd 000007EF0h
           dd 000007F40h
           dd 000007F20h
           dd 000006720h
           dd 000006830h
           dd 000001B55h
           dd 000001B6Bh
           dd 000001B81h
           dd 000001B97h
           dd 000001BADh
           dd 000001BEFh
           dd 000001BC3h
           dd 000001BD9h
           dd 000001C05h
           dd 000001C1Bh
           dd 000028021h
           dd 000008C9Bh
           dd 0000091A4h
           dd 000003904h
           dd 000003A40h
           dd 00004122Bh
           dd 00002A2D7h
           dd 00002A2C3h
           dd 000001F5Eh
           dd 000001F9Ah
           dd 000001FB0h
           dd 000001FC6h
           dd 000001FDCh
           dd 00000201Eh
           dd 000001FF2h
           dd 000002008h
           dd 000002034h
           dd 00000204Ah
           dd 0000280CCh
           dd 000008B51h
           dd 0000091DFh
           dd 00000398Ah
           dd 000003A58h
           dd 0000413EEh
           dd 000001F74h
           dd 000006A70h
           dd 00003227Eh
           dd 000002540h
           dd 00000354Dh
           dd 0000035D2h
           dd 000006AD0h
           dd 000003643h
           dd 0000036C5h
           dd 0000022D0h
           dd 000006950h
           dd 000003A70h
           dd 000003B1Eh
           dd 000003BC7h
           dd 0000068D0h
           dd 0000069E0h
           dd 0000034DAh
           dd 000003467h
           dd 000003DCEh
           dd 000003D30h
           dd 000003C70h
           dd 0000421C8h
           dd 0000421F8h
           dd 000042CBCh
           dd 0000421F0h
           dd 000042194h
           dd 000042190h
           dd 000042180h
           dd 00004217Ch
           dd 000042198h
           dd 000049F08h
           dd 0000070E0h
           dd 0000031E0h
           dd 000002A14h
           dd 000029CFCh
           dd 000002A86h
           dd 00000582Eh
           dd 000002B34h
           dd 000005F66h
           dd 000004C76h
           dd 00004A9D0h
           dd 00004A118h
           dd 00004A520h
           dd 000008AF0h
           dd 00003E436h
           dd 0000283CDh
           dd 000048984h
           dd 000032ACCh
           dd 000032ABDh
           dd 000004AE0h
           dd 000006E20h
           dd 000026C70h
           dd 000029A08h
           dd 0000014D2h
           dd 00002A277h
           dd 000029E98h
           dd 000003730h
           dd 000003769h
           dd 00004A940h
           dd 0000029AEh
           dd 000029F19h
           dd 000009110h
           dd 000034D5Ah
           dd 000037E84h
           dd 000001A0Dh
           dd 000028353h
           dd 000002E5Dh
           dd 000002060h
           dd 000005ED1h
           dd 000002E0Eh
           dd 0000070C0h
           dd 0000093FBh
           dd 000002740h
           dd 0000028ECh
           dd 000007090h
           dd 000004C37h
           dd 000002200h
           dd 000002270h
           dd 000003120h
           dd 0000093E1h
           dd 00000946Bh
           dd 000003140h
           dd 000002EE0h
           dd 000002F00h
           dd 000028434h
           dd 000002F20h
           dd 0000093C8h
           dd 000005AF0h
           dd 000005B6Fh
           dd 000005E8Fh
           dd 000005B2Fh
           dd 000005E42h
           dd 0000342BDh
           dd 000004C20h
           dd 000001019h
           dd 0000020CDh
           dd 00000100Fh
           dd 0000020C3h
           dd 0000022C0h
           dd 000003A2Fh
           dd 000009633h
           dd 000040CE6h
           dd 000005DAEh
           dd 000005CCDh
           dd 000005D06h
           dd 000003898h
           dd 000001882h
           dd 0000022E0h
           dd 000003FCEh
           dd 00003896Fh
           dd 00000644Ah
           dd 000005BB2h
           dd 000004E0Bh
           dd 000005533h
           dd 00000921Ah
           dd 000029A22h
           dd 00002A284h
           dd 00002A23Eh
           dd 00002A293h
           dd 00002A13Ch
           dd 00002A1B9h
           dd 000005F32h
           dd 0000021E0h
           dd 000002250h
           dd 000049F04h
           dd 0000299E1h
           dd 0000015E2h
           dd 00002A26Ah
           dd 000029E17h
           dd 00002A590h
           dd 0000019CCh
           dd 000001A33h
           dd 00003DBF3h
           dd 0000017C2h
           dd 000027D86h
           dd 000027E11h
           dd 000029510h
           dd 000002BC5h
           dd 000002CACh
           dd 000002D5Dh
           dd 000001096h
           dd 0000020F2h
           dd 000001000h
           dd 0000020D7h
           dd 000003821h
           dd 000003F26h
           dd 0000384CAh
           dd 00000629Ch
           dd 000005C13h
           dd 000027382h
           dd 00002778Fh
           dd 000027F15h
           dd 000029700h
           dd 0000018A6h
           dd 000001E01h
           dd 000032AD9h
           dd 0000272A5h
           dd 00000944Eh
           dd 000006B30h
           dd 000009431h
           dd 000001023h
           dd 0000020E1h
           dd 000009415h
           dd 000036E0Dh
           dd 000034A8Ah
           dd 0000335C3h
           dd 000032AE6h
           dd 000003457h
           dd 0000019AFh
           dd 000003E91h
           dd 000001E86h
           dd 000001DA0h
           dd 00004A53Ch
           dd 000003100h
           dd 000049F00h
           dd 000049EFCh
           dd 000029BE0h
           dd 0000407BFh
           dd 000044051h
           dd 00004406Ch
           dd 00004408Fh
           dd 0000440A7h
           dd 0000440C0h
           dd 0000440F2h
           dd 000044121h
           dd 000044135h
           dd 000044154h
           dd 00004417Ah
           dd 000044192h
           dd 0000441A8h
           dd 0000441BBh
           dd 0000441D6h
           dd 0000441EDh
           dd 000044204h
           dd 000044228h
           dd 000044246h
           dd 00004425Fh
           dd 000044278h
           dd 00004428Eh
           dd 0000442B5h
           dd 0000442D6h
           dd 0000442F2h
           dd 00004430Eh
           dd 000044325h
           dd 000044338h
           dd 00004434Dh
           dd 00004435Fh
           dd 00004437Ah
           dd 00004439Bh
           dd 0000443B1h
           dd 0000443CCh
           dd 0000443E1h
           dd 0000443F7h
           dd 000044408h
           dd 000044431h
           dd 00004444Dh
           dd 000044465h
           dd 000044480h
           dd 000044494h
           dd 0000444AFh
           dd 0000444D0h
           dd 0000444E6h
           dd 000044503h
           dd 000044519h
           dd 00004452Dh
           dd 000044547h
           dd 00004455Fh
           dd 000044576h
           dd 000044588h
           dd 0000445A1h
           dd 0000445BDh
           dd 0000445D9h
           dd 0000445EBh
           dd 000044601h
           dd 000044618h
           dd 00004462Dh
           dd 000044648h
           dd 00004465Eh
           dd 00004467Bh
           dd 00004469Ah
           dd 0000446B7h
           dd 0000446DAh
           dd 0000446F6h
           dd 000044716h
           dd 000044731h
           dd 000044753h
           dd 000044772h
           dd 000044797h
           dd 0000447BCh
           dd 0000447D7h
           dd 0000447F6h
           dd 000044816h
           dd 000044830h
           dd 000044851h
           dd 000044875h
           dd 000044891h
           dd 0000448B0h
           dd 0000448D6h
           dd 0000448F7h
           dd 000044918h
           dd 000044939h
           dd 00004495Ah
           dd 00004497Bh
           dd 00004499Ch
           dd 0000449BDh
           dd 0000449DEh
           dd 0000449FFh
           dd 000044A20h
           dd 000044A4Dh
           dd 000044A78h
           dd 000044AA2h
           dd 000044ACBh
           dd 000044AF8h
           dd 000044B2Ah
           dd 000044B4Eh
           dd 000044B74h
           dd 000044B95h
           dd 000044BB6h
           dd 000044BD7h
           dd 000044BF8h
           dd 000044C19h
           dd 000044C3Ah
           dd 000044C5Bh
           dd 000044C7Ch
           dd 000044C9Dh
           dd 000044CBEh
           dd 000044CEBh
           dd 000044D16h
           dd 000044D40h
           dd 000044D69h
           dd 000044D96h
           dd 000044DC8h
           dd 000044DE9h
           dd 000044E01h
           dd 000044E1Ch
           dd 000044E3Dh
           dd 000044E54h
           dd 000044E69h
           dd 000044E81h
           dd 000044E98h
           dd 000044EADh
           dd 000044EC1h
           dd 000044ED9h
           dd 000044EF3h
           dd 000044F0Fh
           dd 000044F2Bh
           dd 000044F47h
           dd 000044F5Fh
           dd 000044F76h
           dd 000044F8Dh
           dd 000044FA8h
           dd 000044FBFh
           dd 000044FD8h
           dd 000044FECh
           dd 000044FFEh
           dd 000045016h
           dd 000045027h
           dd 000045037h
           dd 00004504Eh
           dd 000045068h
           dd 00004507Ch
           dd 000045090h
           dd 0000450A0h
           dd 0000450B7h
           dd 0000450CAh
           dd 0000450F0h
           dd 000045123h
           dd 00004514Fh
           dd 000045195h
           dd 0000451C2h
           dd 0000451EEh
           dd 00004521Ch
           dd 000045248h
           dd 000045274h
           dd 0000452AFh
           dd 0000452CFh
           dd 0000452FAh
           dd 00004531Dh
           dd 00004532Fh
           dd 00004534Bh
           dd 000045366h
           dd 000045387h
           dd 0000453A1h
           dd 0000453C6h
           dd 0000453E4h
           dd 0000453FFh
           dd 00004541Fh
           dd 000045451h
           dd 000045474h
           dd 000045495h
           dd 0000454CBh
           dd 0000454E7h
           dd 000045532h
           dd 000045553h
           dd 000045586h
           dd 0000455A6h
           dd 0000455BFh
           dd 0000455E8h
           dd 000045611h
           dd 00004562Ch
           dd 000045663h
           dd 00004568Bh
           dd 0000456A9h
           dd 0000456C1h
           dd 0000456DEh
           dd 0000456FBh
           dd 000045720h
           dd 000045746h
           dd 000045769h
           dd 00004578Ch
           dd 0000457B6h
           dd 0000457CFh
           dd 0000457EBh
           dd 000045814h
           dd 00004583Dh
           dd 000045860h
           dd 00004588Dh
           dd 0000458B0h
           dd 0000458C7h
           dd 000045908h
           dd 00004593Fh
           dd 00004596Eh
           dd 0000459A6h
           dd 0000459D5h
           dd 0000459F4h
           dd 000045A19h
           dd 000045A3Bh
           dd 000045A56h
           dd 000045A7Ah
           dd 000045A97h
           dd 000045AAEh
           dd 000045ACFh
           dd 000045AE5h
           dd 000045B0Ah
           dd 000045B3Ah
           dd 000045B68h
           dd 000045B98h
           dd 000045BB2h
           dd 000045BCEh
           dd 000045BE5h
           dd 000045C12h
           dd 000045C40h
           dd 000045C6Eh
           dd 000045CA2h
           dd 000045CDFh
           dd 000045D27h
           dd 000045D41h
           dd 000045D64h
           dd 000045D89h
           dd 000045DACh
           dd 000045DDAh
           dd 000045DFFh
           dd 000045E2Fh
           dd 000045E56h
           dd 000045E6Eh
           dd 000045E86h
           dd 000045EAFh
           dd 000045ECCh
           dd 000045EEAh
           dd 000045F09h
           dd 000045F3Ah
           dd 000045F56h
           dd 000045F70h
           dd 000045F8Eh
           dd 000045FC3h
           dd 000045FE7h
           dd 00004600Ah
           dd 00004602Eh
           dd 000046052h
           dd 00004607Ch
           dd 0000460AAh
           dd 0000460D7h
           dd 0000460FCh
           dd 00004611Eh
           dd 000046144h
           dd 000046163h
           dd 00004617Eh
           dd 0000461ABh
           dd 0000461D9h
           dd 000046207h
           dd 000046234h
           dd 000046255h
           dd 00004627Dh
           dd 0000462A0h
           dd 0000462C3h
           dd 0000462DFh
           dd 0000462FAh
           dd 000046318h
           dd 00004633Ah
           dd 000046353h
           dd 000046370h
           dd 00004638Ah
           dd 0000463B9h
           dd 0000463E5h
           dd 0000463FDh
           dd 000046419h
           dd 000046437h
           dd 000046459h
           dd 000046479h
           dd 000046492h
           dd 0000464ACh
           dd 0000464C3h
           dd 0000464E2h
           dd 000046507h
           dd 000046524h
           dd 00004653Eh
           dd 00004655Dh
           dd 00004657Eh
           dd 000046592h
           dd 000010000h
           dd 000030002h
           dd 000050004h
           dd 000070006h
           dd 000090008h
           dd 0000B000Ah
           dd 0000D000Ch
           dd 0000F000Eh
           dd 000110010h
           dd 000130012h
           dd 000150014h
           dd 000170016h
           dd 000190018h
           dd 0001B001Ah
           dd 0001D001Ch
           dd 0001F001Eh
           dd 000210020h
           dd 000230022h
           dd 000250024h
           dd 000270026h
           dd 000290028h
           dd 0002B002Ah
           dd 0002D002Ch
           dd 0002F002Eh
           dd 000310030h
           dd 000330032h
           dd 000350034h
           dd 000370036h
           dd 000390038h
           dd 0003B003Ah
           dd 0003D003Ch
           dd 0003F003Eh
           dd 000410040h
           dd 000430042h
           dd 000450044h
           dd 000470046h
           dd 000490048h
           dd 0004B004Ah
           dd 0004D004Ch
           dd 0004F004Eh
           dd 000510050h
           dd 000530052h
           dd 000550054h
           dd 000570056h
           dd 000590058h
           dd 0005B005Ah
           dd 0005D005Ch
           dd 0005F005Eh
           dd 000610060h
           dd 000630062h
           dd 000650064h
           dd 000670066h
           dd 000690068h
           dd 0006B006Ah
           dd 0006D006Ch
           dd 0006F006Eh
           dd 000710070h
           dd 000730072h
           dd 000750074h
           dd 000770076h
           dd 000790078h
           dd 0007B007Ah
           dd 0007D007Ch
           dd 0007F007Eh
           dd 000810080h
           dd 000830082h
           dd 000850084h
           dd 000870086h
           dd 000890088h
           dd 0008B008Ah
           dd 0008D008Ch
           dd 0008F008Eh
           dd 000910090h
           dd 000930092h
           dd 000950094h
           dd 000970096h
           dd 000990098h
           dd 0009B009Ah
           dd 0009D009Ch
           dd 0009F009Eh
           dd 000A100A0h
           dd 000A300A2h
           dd 000A500A4h
           dd 000A700A6h
           dd 000A900A8h
           dd 000AB00AAh
           dd 000AD00ACh
           dd 000AF00AEh
           dd 000B100B0h
           dd 000B300B2h
           dd 000B500B4h
           dd 000B700B6h
           dd 000B900B8h
           dd 000BB00BAh
           dd 000BD00BCh
           dd 000BF00BEh
           dd 000C100C0h
           dd 000C300C2h
           dd 000C500C4h
           dd 000C700C6h
           dd 000C900C8h
           dd 000CB00CAh
           dd 000CD00CCh
           dd 000CF00CEh
           dd 000D100D0h
           dd 000D300D2h
           dd 000D500D4h
           dd 000D700D6h
           dd 000D900D8h
           dd 000DB00DAh
           dd 000DD00DCh
           dd 000DF00DEh
           dd 000E100E0h
           dd 000E300E2h
           dd 000E500E4h
           dd 000E700E6h
           dd 000E900E8h
           dd 000EB00EAh
           dd 000ED00ECh
           dd 000EF00EEh
           dd 000F100F0h
           dd 000F300F2h
           dd 000F500F4h
           dd 000F700F6h
           dd 000F900F8h
           dd 000FB00FAh
           dd 000FD00FCh
           dd 000FF00FEh
           dd 001010100h
           dd 001030102h
           dd 001050104h
           dd 001070106h
           dd 001090108h
           dd 0010B010Ah
           dd 0010D010Ch
           dd 0010F010Eh
           dd 001110110h
           dd 001130112h
           dd 001150114h
           dd 001170116h
           dd 001190118h
           dd 0011B011Ah
           dd 0011D011Ch
           dd 0011F011Eh
           dd 001210120h
           dd 042420122h
           dd 06362694Ch
           dd 06C6C642Eh
           dd 0303F3F00h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 040454151h
           dd 030564241h
           dd 0005A4040h
           dd 042303F3Fh
           dd 07469425Fh
           dd 03270614Dh
           dd 051404034h
           dd 041404541h
           dd 05F425642h
           dd 04D746942h
           dd 040407061h
           dd 03F005A40h
           dd 05F42303Fh
           dd 04D746942h
           dd 034327061h
           dd 041514040h
           dd 048484045h
           dd 03F005A40h
           dd 05F42303Fh
           dd 04D746942h
           dd 040407061h
           dd 040454151h
           dd 030564241h
           dd 0005A4040h
           dd 042303F3Fh
           dd 07469425Fh
           dd 04070614Dh
           dd 045415140h
           dd 042345740h
           dd 0614D7469h
           dd 070795470h
           dd 040304065h
           dd 042564241h
           dd 07469425Fh
           dd 03270614Dh
           dd 040404034h
           dd 03F3F005Ah
           dd 0425F4230h
           dd 0614D7469h
           dd 051404070h
           dd 057404541h
           dd 074694234h
           dd 05470614Dh
           dd 040657079h
           dd 049494030h
           dd 042564250h
           dd 06C61505Fh
           dd 05A404040h
           dd 0303F3F00h
           dd 069425F42h
           dd 070614D74h
           dd 041514040h
           dd 05A584045h
           dd 0303F3F00h
           dd 068435F42h
           dd 0656E6E61h
           dd 069464F6Ch
           dd 04040656Ch
           dd 040454151h
           dd 030564241h
           dd 0005A4040h
           dd 042303F3Fh
           dd 06168435Fh
           dd 06C656E6Eh
           dd 06C69464Fh
           dd 051404065h
           dd 056404541h
           dd 0614E5F42h
           dd 04040656Dh
           dd 040444250h
           dd 03F3F005Ah
           dd 0435F4230h
           dd 0726F6C6Fh
           dd 041514040h
           dd 042414045h
           dd 040403056h
           dd 03F3F005Ah
           dd 0435F4230h
           dd 0726F6C6Fh
           dd 041514040h
           dd 045454045h
           dd 0005A4045h
           dd 042303F3Fh
           dd 06C6F435Fh
           dd 04040726Fh
           dd 040454151h
           dd 03F005A58h
           dd 05F42303Fh
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 050404541h
           dd 040484442h
           dd 03F3F005Ah
           dd 0495F4230h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 05A584045h
           dd 0303F3F00h
           dd 0694C5F42h
           dd 040407473h
           dd 040454151h
           dd 030564241h
           dd 0005A4040h
           dd 042303F3Fh
           dd 073694C5Fh
           dd 051404074h
           dd 050404541h
           dd 05F425641h
           dd 07473694Ch
           dd 06D656C45h
           dd 040746E65h
           dd 0005A4040h
           dd 042303F3Fh
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 041514040h
           dd 042414045h
           dd 040403056h
           dd 03F3F005Ah
           dd 04C5F4230h
           dd 045747369h
           dd 0656D656Ch
           dd 04040746Eh
           dd 040454151h
           dd 03F005A58h
           dd 05F42303Fh
           dd 06873654Dh
           dd 065676445h
           dd 041514040h
           dd 049494045h
           dd 0005A4049h
           dd 042303F3Fh
           dd 073654D5Fh
           dd 067644568h
           dd 051404065h
           dd 058404541h
           dd 03F3F005Ah
           dd 04D5F4230h
           dd 061737365h
           dd 068436567h
           dd 0656E6E61h
           dd 05140406Ch
           dd 041404541h
           dd 05F425641h
           dd 0656D614Eh
           dd 05A404040h
           dd 0303F3F00h
           dd 0654D5F42h
           dd 067617373h
           dd 061684365h
           dd 06C656E6Eh
           dd 041514040h
           dd 042414045h
           dd 040403056h
           dd 03F3F005Ah
           dd 04D5F4230h
           dd 061737365h
           dd 068436567h
           dd 0656E6E61h
           dd 05140406Ch
           dd 058404541h
           dd 03F3F005Ah
           dd 04D5F4230h
           dd 061737365h
           dd 0614D6567h
           dd 06567616Eh
           dd 051404072h
           dd 058404541h
           dd 03F3F005Ah
           dd 04E5F4230h
           dd 040656D61h
           dd 045415140h
           dd 056424140h
           dd 05A404030h
           dd 0303F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 040454151h
           dd 0005A4049h
           dd 042303F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 050404541h
           dd 05A404442h
           dd 0303F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 040454151h
           dd 03F005A58h
           dd 05F42303Fh
           dd 0656D614Eh
           dd 06A624F64h
           dd 041514040h
           dd 042414045h
           dd 040403056h
           dd 03F3F005Ah
           dd 04E5F4230h
           dd 064656D61h
           dd 0406A624Fh
           dd 045415140h
           dd 056424140h
           dd 0614E5F42h
           dd 04040656Dh
           dd 03F005A40h
           dd 05F42303Fh
           dd 0656D614Eh
           dd 06A624F64h
           dd 041514040h
           dd 05A584045h
           dd 0303F3F00h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 044425040h
           dd 0005A4048h
           dd 042303F3Fh
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 05A584045h
           dd 0303F3F00h
           dd 061505F42h
           dd 05140406Ch
           dd 041404541h
           dd 040305642h
           dd 03F005A40h
           dd 05F42303Fh
           dd 0406C6150h
           dd 045415140h
           dd 0005A5840h
           dd 042303F3Fh
           dd 07261505Fh
           dd 06C636974h
           dd 079544765h
           dd 040406570h
           dd 040454151h
           dd 042564241h
           dd 06D614E5Fh
           dd 030404065h
           dd 05A40494Bh
           dd 0303F3F00h
           dd 044525F42h
           dd 04C617461h
           dd 074686769h
           dd 041514040h
           dd 04D4D4045h
           dd 05A404D4Dh
           dd 0303F3F00h
           dd 044525F42h
           dd 04C617461h
           dd 074686769h
           dd 041514040h
           dd 05A584045h
           dd 0303F3F00h
           dd 044525F42h
           dd 054617461h
           dd 06E616972h
           dd 040656C67h
           dd 045415140h
           dd 0005A5840h
           dd 042303F3Fh
           dd 07449525Fh
           dd 040406D65h
           dd 040454151h
           dd 0005A404Bh
           dd 042303F3Fh
           dd 07365525Fh
           dd 06372756Fh
           dd 051404065h
           dd 041404541h
           dd 040305642h
           dd 03F005A40h
           dd 05F42303Fh
           dd 06F736552h
           dd 065637275h
           dd 041514040h
           dd 042414045h
           dd 04E5F4256h
           dd 040656D61h
           dd 0005A4040h
           dd 042303F3Fh
           dd 07365525Fh
           dd 06372756Fh
           dd 051404065h
           dd 058404541h
           dd 03F3F005Ah
           dd 0525F4230h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 040454151h
           dd 03F005A58h
           dd 05F42313Fh
           dd 04D746942h
           dd 034327061h
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 069425F42h
           dd 070614D74h
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 068435F42h
           dd 0656E6E61h
           dd 069464F6Ch
           dd 04040656Ch
           dd 040454155h
           dd 03F005A58h
           dd 05F42313Fh
           dd 06D656C45h
           dd 043746E65h
           dd 040405653h
           dd 040454155h
           dd 03F005A58h
           dd 05F42313Fh
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 058404541h
           dd 03F3F005Ah
           dd 04C5F4231h
           dd 040747369h
           dd 045415540h
           dd 0005A5840h
           dd 042313F3Fh
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 0654D5F42h
           dd 067617373h
           dd 061684365h
           dd 06C656E6Eh
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 0654D5F42h
           dd 067617373h
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 05A584045h
           dd 0313F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 040454151h
           dd 03F005A58h
           dd 05F42313Fh
           dd 0656D614Eh
           dd 06A624F64h
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 0005A5840h
           dd 042313F3Fh
           dd 06A624F5Fh
           dd 072637344h
           dd 041554040h
           dd 05A584045h
           dd 0313F3F00h
           dd 061505F42h
           dd 063697472h
           dd 05447656Ch
           dd 040657079h
           dd 045415540h
           dd 0005A5840h
           dd 042313F3Fh
           dd 07365525Fh
           dd 06372756Fh
           dd 055404065h
           dd 058404541h
           dd 03F3F005Ah
           dd 0525F4231h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 040454151h
           dd 03F005A58h
           dd 05F42343Fh
           dd 04D746942h
           dd 034327061h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 0425F4234h
           dd 0614D7469h
           dd 051404070h
           dd 041414541h
           dd 041403056h
           dd 040305642h
           dd 03F005A40h
           dd 05F42343Fh
           dd 06E616843h
           dd 04F6C656Eh
           dd 0656C6946h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 0435F4234h
           dd 0726F6C6Fh
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 0495F4234h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 04C5F4234h
           dd 040747369h
           dd 045415140h
           dd 030564141h
           dd 056424140h
           dd 05A404030h
           dd 0343F3F00h
           dd 0694C5F42h
           dd 06C457473h
           dd 06E656D65h
           dd 051404074h
           dd 041414541h
           dd 041403056h
           dd 040305642h
           dd 03F005A40h
           dd 05F42343Fh
           dd 06873654Dh
           dd 065676445h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 04D5F4234h
           dd 061737365h
           dd 068436567h
           dd 0656E6E61h
           dd 05140406Ch
           dd 041414541h
           dd 041403056h
           dd 040305642h
           dd 03F005A40h
           dd 05F42343Fh
           dd 07373654Dh
           dd 04D656761h
           dd 067616E61h
           dd 040407265h
           dd 041454151h
           dd 040305641h
           dd 030564241h
           dd 0005A4040h
           dd 042343F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 041414541h
           dd 041403056h
           dd 040305642h
           dd 03F005A40h
           dd 05F42343Fh
           dd 0656D614Eh
           dd 06A624F64h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 04F5F4234h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 0505F4234h
           dd 040406C61h
           dd 041454151h
           dd 040305641h
           dd 030564241h
           dd 0005A4040h
           dd 042343F3Fh
           dd 06144525Fh
           dd 0694C6174h
           dd 040746867h
           dd 045415140h
           dd 030564141h
           dd 056424140h
           dd 05A404030h
           dd 0343F3F00h
           dd 044525F42h
           dd 054617461h
           dd 06E616972h
           dd 040656C67h
           dd 045415140h
           dd 030564141h
           dd 056424140h
           dd 05A404030h
           dd 0343F3F00h
           dd 049525F42h
           dd 0406D6574h
           dd 045415140h
           dd 030564141h
           dd 056424140h
           dd 05A404030h
           dd 0343F3F00h
           dd 065525F42h
           dd 072756F73h
           dd 040406563h
           dd 041454151h
           dd 040305641h
           dd 030564241h
           dd 0005A4040h
           dd 042343F3Fh
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 056414145h
           dd 042414030h
           dd 040403056h
           dd 03F3F005Ah
           dd 041594035h
           dd 042564141h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 044414140h
           dd 03F005A40h
           dd 05940353Fh
           dd 056414141h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 041414030h
           dd 0005A4045h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404641h
           dd 0353F3F00h
           dd 041415940h
           dd 05F425641h
           dd 074614449h
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 040474141h
           dd 03F3F005Ah
           dd 041594035h
           dd 042564141h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 048414140h
           dd 03F005A40h
           dd 05940353Fh
           dd 056414141h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 041414030h
           dd 0005A4049h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404A41h
           dd 0353F3F00h
           dd 041415940h
           dd 05F425641h
           dd 074614449h
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 0404B4141h
           dd 03F3F005Ah
           dd 041594035h
           dd 042564141h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 04D414140h
           dd 03F005A40h
           dd 05940353Fh
           dd 056414141h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 041414030h
           dd 0005A404Eh
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05F425641h
           dd 04D746942h
           dd 034327061h
           dd 05A404040h
           dd 0353F3F00h
           dd 041415940h
           dd 05F425641h
           dd 074614449h
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 042564141h
           dd 07469425Fh
           dd 04070614Dh
           dd 0005A4040h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05F425641h
           dd 06F6C6F43h
           dd 040404072h
           dd 03F3F005Ah
           dd 041594035h
           dd 042564141h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 056414140h
           dd 0614E5F42h
           dd 04040656Dh
           dd 03F005A40h
           dd 05940353Fh
           dd 056414141h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 041414030h
           dd 04E5F4256h
           dd 064656D61h
           dd 0406A624Fh
           dd 0005A4040h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05F425641h
           dd 074726150h
           dd 0656C6369h
           dd 070795447h
           dd 040404065h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 073654D5Fh
           dd 065676173h
           dd 0616E614Dh
           dd 040726567h
           dd 056414140h
           dd 040444030h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 073654D5Fh
           dd 065676173h
           dd 0616E614Dh
           dd 040726567h
           dd 056414140h
           dd 042504030h
           dd 0005A4044h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404442h
           dd 0363F3F00h
           dd 041415940h
           dd 05F425641h
           dd 07461444Fh
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 040454241h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 046424140h
           dd 03F005A40h
           dd 05940363Fh
           dd 056414141h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 042414030h
           dd 0005A4047h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404842h
           dd 0363F3F00h
           dd 041415940h
           dd 05F425641h
           dd 07461444Fh
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 040494241h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 04A424140h
           dd 03F005A40h
           dd 05940363Fh
           dd 056414141h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 042414030h
           dd 0005A404Bh
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404D42h
           dd 0363F3F00h
           dd 041415940h
           dd 05F425641h
           dd 07461444Fh
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 0404E4241h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 056424140h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 03F005A40h
           dd 05940363Fh
           dd 056414141h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 056414140h
           dd 042414030h
           dd 0425F4256h
           dd 0614D7469h
           dd 040404070h
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 056424140h
           dd 06F435F42h
           dd 040726F6Ch
           dd 0005A4040h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05F425642h
           dd 0656D614Eh
           dd 05A404040h
           dd 0363F3F00h
           dd 041415940h
           dd 05F425641h
           dd 07461444Fh
           dd 06C694661h
           dd 041404065h
           dd 040305641h
           dd 042564241h
           dd 06D614E5Fh
           dd 0624F6465h
           dd 04040406Ah
           dd 03F3F005Ah
           dd 041594036h
           dd 042564141h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 030564141h
           dd 056424140h
           dd 061505F42h
           dd 063697472h
           dd 05447656Ch
           dd 040657079h
           dd 0005A4040h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 050403056h
           dd 05A404442h
           dd 0383F3F00h
           dd 06F435F42h
           dd 040726F6Ch
           dd 045415140h
           dd 056424149h
           dd 05A404030h
           dd 0383F3F00h
           dd 0654D5F42h
           dd 064456873h
           dd 040406567h
           dd 049454251h
           dd 030564241h
           dd 0005A4040h
           dd 042383F3Fh
           dd 073654D5Fh
           dd 065676173h
           dd 06E616843h
           dd 0406C656Eh
           dd 045425140h
           dd 056424148h
           dd 05A404030h
           dd 0383F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 049454251h
           dd 030564241h
           dd 0005A4040h
           dd 042383F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 050494542h
           dd 05A404442h
           dd 0393F3F00h
           dd 06F435F42h
           dd 040726F6Ch
           dd 045415140h
           dd 056424149h
           dd 05A404030h
           dd 0393F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 049454251h
           dd 030564241h
           dd 0005A4040h
           dd 042393F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 050494542h
           dd 05A404442h
           dd 0423F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 050454251h
           dd 05A584442h
           dd 0443F3F00h
           dd 06F435F42h
           dd 040726F6Ch
           dd 045425140h
           dd 03056413Fh
           dd 05A404D40h
           dd 0483F3F00h
           dd 03F415940h
           dd 05F425641h
           dd 0656D614Eh
           dd 042414040h
           dd 030403056h
           dd 03F005A40h
           dd 05940483Fh
           dd 056413F41h
           dd 0614E5F42h
           dd 04040656Dh
           dd 030564241h
           dd 044425040h
           dd 03F005A40h
           dd 05940483Fh
           dd 056413F41h
           dd 0614E5F42h
           dd 04040656Dh
           dd 041444250h
           dd 040305642h
           dd 03F005A40h
           dd 05F42483Fh
           dd 06F6C6F43h
           dd 051404072h
           dd 0413F4542h
           dd 041403056h
           dd 040305642h
           dd 03F005A40h
           dd 05F424B3Fh
           dd 06F6C6F43h
           dd 051404072h
           dd 0413F4542h
           dd 04D403056h
           dd 03F005A40h
           dd 05F424D3Fh
           dd 0656D614Eh
           dd 042514040h
           dd 042414945h
           dd 040403056h
           dd 03F3F005Ah
           dd 04E5F424Fh
           dd 040656D61h
           dd 045425140h
           dd 056424149h
           dd 05A404030h
           dd 0593F3F00h
           dd 0614E5F42h
           dd 04040656Dh
           dd 041454151h
           dd 040305642h
           dd 030564241h
           dd 0005A4040h
           dd 042593F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 042414541h
           dd 044403056h
           dd 03F005A40h
           dd 05F42593Fh
           dd 0656D614Eh
           dd 041514040h
           dd 056424145h
           dd 042504030h
           dd 0005A4044h
           dd 0375F3F3Fh
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 000404236h
           dd 0375F3F3Fh
           dd 069425F42h
           dd 070614D74h
           dd 042364040h
           dd 03F3F0040h
           dd 05F42375Fh
           dd 06E616843h
           dd 04F6C656Eh
           dd 0656C6946h
           dd 042364040h
           dd 03F3F0040h
           dd 05F42375Fh
           dd 06F6C6F43h
           dd 036404072h
           dd 03F004042h
           dd 042375F3Fh
           dd 073694C5Fh
           dd 036404074h
           dd 03F004042h
           dd 042375F3Fh
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 042364040h
           dd 03F3F0040h
           dd 05F42375Fh
           dd 07373654Dh
           dd 043656761h
           dd 06E6E6168h
           dd 040406C65h
           dd 000404236h
           dd 0375F3F3Fh
           dd 0614E5F42h
           dd 04F64656Dh
           dd 040406A62h
           dd 000404236h
           dd 0375F3F3Fh
           dd 065525F42h
           dd 072756F73h
           dd 040406563h
           dd 000404236h
           dd 0435F3F3Fh
           dd 030305F40h
           dd 0243F4041h
           dd 000404141h
           dd 0465F3F3Fh
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 058454151h
           dd 03F005A58h
           dd 042465F3Fh
           dd 073694C5Fh
           dd 051404074h
           dd 058584541h
           dd 0413F005Ah
           dd 042406464h
           dd 073694C5Fh
           dd 051404074h
           dd 050494541h
           dd 05F425641h
           dd 07473694Ch
           dd 06D656C45h
           dd 040746E65h
           dd 0005A4040h
           dd 06464413Fh
           dd 04D5F4240h
           dd 061737365h
           dd 0614D6567h
           dd 06567616Eh
           dd 051404072h
           dd 050494541h
           dd 05F425641h
           dd 07373654Dh
           dd 043656761h
           dd 06E6E6168h
           dd 040406C65h
           dd 03F005A40h
           dd 041646441h
           dd 072657466h
           dd 04C5F4240h
           dd 040747369h
           dd 045415140h
           dd 056415049h
           dd 0694C5F42h
           dd 06C457473h
           dd 06E656D65h
           dd 030404074h
           dd 03F005A40h
           dd 041646441h
           dd 0526F7475h
           dd 0756F7365h
           dd 040656372h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 041494541h
           dd 05F425642h
           dd 0656D614Eh
           dd 041504040h
           dd 0525F4256h
           dd 0756F7365h
           dd 040656372h
           dd 05A404840h
           dd 064413F00h
           dd 066654264h
           dd 04065726Fh
           dd 0694C5F42h
           dd 040407473h
           dd 049454151h
           dd 042564150h
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 040304040h
           dd 0413F005Ah
           dd 06F426464h
           dd 06E694C64h
           dd 05F42406Bh
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 040726567h
           dd 045415140h
           dd 044425058h
           dd 040483048h
           dd 0413F005Ah
           dd 069466464h
           dd 04240656Ch
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 041414040h
           dd 042414945h
           dd 04E5F4256h
           dd 040656D61h
           dd 0005A4040h
           dd 0635F423Fh
           dd 040737673h
           dd 03F563340h
           dd 04E5F4224h
           dd 061746144h
           dd 065736142h
           dd 05F425540h
           dd 06D656C45h
           dd 043746E65h
           dd 040405653h
           dd 000414040h
           dd 0725F423Fh
           dd 0756F7365h
           dd 05F656372h
           dd 0616E616Dh
           dd 040726567h
           dd 042563340h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 000414040h
           dd 07469423Fh
           dd 03270614Dh
           dd 074614434h
           dd 073694C61h
           dd 05F424074h
           dd 04D746942h
           dd 034327061h
           dd 056304040h
           dd 05F42243Fh
           dd 061727241h
           dd 042564079h
           dd 07469425Fh
           dd 03270614Dh
           dd 040404034h
           dd 03F004140h
           dd 065747942h
           dd 072655073h
           dd 065786554h
           dd 05F42406Ch
           dd 04D746942h
           dd 040407061h
           dd 048454251h
           dd 03F005A58h
           dd 06C6C6143h
           dd 068747950h
           dd 0624F6E6Fh
           dd 07463656Ah
           dd 041594040h
           dd 050554150h
           dd 06A624F79h
           dd 040746365h
           dd 055415040h
           dd 040304031h
           dd 0433F005Ah
           dd 0676E6168h
           dd 042475265h
           dd 06564724Fh
           dd 05F424072h
           dd 04D746942h
           dd 034327061h
           dd 041514040h
           dd 05A585845h
           dd 068433F00h
           dd 0456B6365h
           dd 0726F7272h
           dd 033404073h
           dd 03F004148h
           dd 063656843h
           dd 06D75536Bh
           dd 04F5F4240h
           dd 073446A62h
           dd 040407263h
           dd 04B454255h
           dd 03F005A58h
           dd 073616C43h
           dd 040644973h
           dd 0624F5F42h
           dd 06373446Ah
           dd 055404072h
           dd 058474542h
           dd 0433F005Ah
           dd 06E61656Ch
           dd 0525F4240h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 058454151h
           dd 03F005A58h
           dd 061656C43h
           dd 05F424072h
           dd 04D746942h
           dd 034327061h
           dd 041514040h
           dd 05A585845h
           dd 06C433F00h
           dd 042726165h
           dd 0614D7469h
           dd 044343270h
           dd 040617461h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 058584153h
           dd 0433F005Ah
           dd 065736F6Ch
           dd 0435F4240h
           dd 06E6E6168h
           dd 0464F6C65h
           dd 040656C69h
           dd 045415540h
           dd 0005A5849h
           dd 06F6C433Fh
           dd 042406573h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 058454151h
           dd 03F005A58h
           dd 0736F6C43h
           dd 05F424065h
           dd 07373654Dh
           dd 043656761h
           dd 06E6E6168h
           dd 040406C65h
           dd 049454155h
           dd 03F005A58h
           dd 0736F6C43h
           dd 061684365h
           dd 06C656E6Eh
           dd 04D5F4240h
           dd 061737365h
           dd 0614D6567h
           dd 06567616Eh
           dd 051404072h
           dd 041494541h
           dd 05F425642h
           dd 0656D614Eh
           dd 05A404040h
           dd 06F433F00h
           dd 07261706Dh
           dd 0436F4E65h
           dd 040657361h
           dd 0614E5F42h
           dd 04040656Dh
           dd 049454251h
           dd 031564241h
           dd 0005A4040h
           dd 06D6F433Fh
           dd 065726170h
           dd 061436F4Eh
           dd 042406573h
           dd 06D614E5Fh
           dd 051404065h
           dd 050494542h
           dd 05A404442h
           dd 065443F00h
           dd 061684366h
           dd 06C656E6Eh
           dd 04D5F4240h
           dd 061737365h
           dd 0614D6567h
           dd 06567616Eh
           dd 030404072h
           dd 042564150h
           dd 073654D5Fh
           dd 065676173h
           dd 06E616843h
           dd 0406C656Eh
           dd 03F004140h
           dd 0656C6544h
           dd 0694C6574h
           dd 042407473h
           dd 073694C5Fh
           dd 051404074h
           dd 049584541h
           dd 03F005A40h
           dd 063736944h
           dd 0656E6E6Fh
           dd 068437463h
           dd 0656E6E61h
           dd 05F42406Ch
           dd 07373654Dh
           dd 04D656761h
           dd 067616E61h
           dd 040407265h
           dd 050454151h
           dd 05F425641h
           dd 07373654Dh
           dd 043656761h
           dd 06E6E6168h
           dd 040406C65h
           dd 042564241h
           dd 06D614E5Fh
           dd 040404065h
           dd 0443F005Ah
           dd 061747369h
           dd 05465636Eh
           dd 05F42406Fh
           dd 06F6C6F43h
           dd 051404072h
           dd 0414D4541h
           dd 040315642h
           dd 03F005A40h
           dd 077617244h
           dd 04F5F4240h
           dd 073446A62h
           dd 040407263h
           dd 058454151h
           dd 042564150h
           dd 05244335Fh
           dd 065747361h
           dd 076654472h
           dd 040656369h
           dd 04D4D4D40h
           dd 040484D4Dh
           dd 0453F005Ah
           dd 046656764h
           dd 047656361h
           dd 042407072h
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 040494545h
           dd 0453F005Ah
           dd 04240666Fh
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 048454151h
           dd 03F005A58h
           dd 072637345h
           dd 041656269h
           dd 069686372h
           dd 041526F76h
           dd 05F424057h
           dd 04D746942h
           dd 034327061h
           dd 042514040h
           dd 042505845h
           dd 0005A4044h
           dd 06978453Fh
           dd 040737473h
           dd 0694C5F42h
           dd 040407473h
           dd 049454151h
           dd 042564250h
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 05A404040h
           dd 06C463F00h
           dd 040687375h
           dd 0444F5F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 0005A5858h
           dd 06572463Fh
           dd 073655265h
           dd 06372756Fh
           dd 05F424065h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 040726567h
           dd 045415140h
           dd 056415058h
           dd 065525F42h
           dd 072756F73h
           dd 040406563h
           dd 03F005A40h
           dd 041746547h
           dd 05F424074h
           dd 07473694Ch
           dd 041514040h
           dd 056415045h
           dd 0694C5F42h
           dd 06C457473h
           dd 06E656D65h
           dd 049404074h
           dd 03F005A40h
           dd 042746547h
           dd 040737469h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 050454251h
           dd 05A584542h
           dd 065473F00h
           dd 0756C4274h
           dd 05F424065h
           dd 0406C6150h
           dd 045425140h
           dd 05A404945h
           dd 065473F00h
           dd 06E6F4374h
           dd 044676966h
           dd 063657269h
           dd 079726F74h
           dd 041594040h
           dd 058444250h
           dd 0473F005Ah
           dd 075437465h
           dd 06E657272h
           dd 06E614C74h
           dd 067617567h
           dd 059404065h
           dd 044425041h
           dd 03F005A58h
           dd 044746547h
           dd 06E656D69h
           dd 06E6F6973h
           dd 0425F4240h
           dd 0614D7469h
           dd 040343270h
           dd 045425140h
           dd 048414158h
           dd 0005A4030h
           dd 07465473Fh
           dd 0656C6946h
           dd 0525F4240h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 050454151h
           dd 040494442h
           dd 0473F005Ah
           dd 069467465h
           dd 0614E656Ch
           dd 04240656Dh
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 050454251h
           dd 05A584442h
           dd 065473F00h
           dd 06C694674h
           dd 06D614E65h
           dd 05F424065h
           dd 07461444Fh
           dd 06C694661h
           dd 051404065h
           dd 042504542h
           dd 0005A5844h
           dd 07465473Fh
           dd 073726946h
           dd 05F424074h
           dd 07473694Ch
           dd 041514040h
           dd 056415045h
           dd 0694C5F42h
           dd 06C457473h
           dd 06E656D65h
           dd 058404074h
           dd 0473F005Ah
           dd 072477465h
           dd 0406E6565h
           dd 061505F42h
           dd 05140406Ch
           dd 049454542h
           dd 03F005A40h
           dd 049746547h
           dd 07865646Eh
           dd 0505F4240h
           dd 040406C61h
           dd 049454251h
           dd 049454545h
           dd 03F005A40h
           dd 04C746547h
           dd 040747361h
           dd 0694C5F42h
           dd 040407473h
           dd 050454151h
           dd 05F425641h
           dd 07473694Ch
           dd 06D656C45h
           dd 040746E65h
           dd 0005A5840h
           dd 07465473Fh
           dd 07473694Ch
           dd 04C5F4240h
           dd 045747369h
           dd 0656D656Ch
           dd 04040746Eh
           dd 050454151h
           dd 05F425641h
           dd 07473694Ch
           dd 05A584040h
           dd 065473F00h
           dd 078654E74h
           dd 05F424074h
           dd 07473694Ch
           dd 06D656C45h
           dd 040746E65h
           dd 045415140h
           dd 031564150h
           dd 0005A5840h
           dd 07465473Fh
           dd 065786950h
           dd 04074416Ch
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 049454251h
           dd 041414848h
           dd 0435F4256h
           dd 0726F6C6Fh
           dd 05A404040h
           dd 065473F00h
           dd 065725074h
           dd 05F424076h
           dd 07473694Ch
           dd 06D656C45h
           dd 040746E65h
           dd 045415140h
           dd 031564150h
           dd 0005A5840h
           dd 07465473Fh
           dd 040646552h
           dd 061505F42h
           dd 05140406Ch
           dd 049454542h
           dd 03F005A40h
           dd 052746547h
           dd 0756F7365h
           dd 040656372h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 041504541h
           dd 0525F4256h
           dd 0756F7365h
           dd 040656372h
           dd 042414740h
           dd 04E5F4256h
           dd 040656D61h
           dd 0005A4040h
           dd 07465473Fh
           dd 06F736552h
           dd 065637275h
           dd 0525F4240h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 050454151h
           dd 05F425641h
           dd 06F736552h
           dd 065637275h
           dd 049474040h
           dd 03F005A40h
           dd 052746547h
           dd 0756F7365h
           dd 046656372h
           dd 040656C69h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 042504541h
           dd 040494744h
           dd 0473F005Ah
           dd 065527465h
           dd 072756F73h
           dd 06E496563h
           dd 040786564h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 047494541h
           dd 042564241h
           dd 06D614E5Fh
           dd 040404065h
           dd 0473F005Ah
           dd 065527465h
           dd 072756F73h
           dd 0614E6563h
           dd 04240656Dh
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 044425045h
           dd 05A404947h
           dd 065473F00h
           dd 078745674h
           dd 065646F4Eh
           dd 04F5F4240h
           dd 073446A62h
           dd 040407263h
           dd 048454151h
           dd 0005A4049h
           dd 07465473Fh
           dd 06C69466Eh
           dd 042407365h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 05A584945h
           dd 065473F00h
           dd 0704F6E74h
           dd 069466E65h
           dd 04073656Ch
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 048415340h
           dd 03F005A58h
           dd 06E746547h
           dd 06E65704Fh
           dd 075706E49h
           dd 06C694674h
           dd 040407365h
           dd 058484159h
           dd 0473F005Ah
           dd 04F6E7465h
           dd 0656E6570h
           dd 06C694664h
           dd 042407365h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 058484153h
           dd 0473F005Ah
           dd 04F6E7465h
           dd 0656E6570h
           dd 0706E4964h
           dd 069467475h
           dd 04073656Ch
           dd 048415940h
           dd 03F005A58h
           dd 042406449h
           dd 06D614E5Fh
           dd 051404065h
           dd 042414542h
           dd 058403156h
           dd 0493F005Ah
           dd 05F424064h
           dd 0656D614Eh
           dd 06A624F64h
           dd 042514040h
           dd 056424145h
           dd 0614E5F42h
           dd 04040656Dh
           dd 03F005A58h
           dd 042406449h
           dd 06C61505Fh
           dd 041514040h
           dd 056424145h
           dd 05A584031h
           dd 06E493F00h
           dd 070726574h
           dd 0525F4240h
           dd 061746144h
           dd 06867694Ch
           dd 051404074h
           dd 04E584541h
           dd 031564141h
           dd 040304E40h
           dd 0493F005Ah
           dd 073655273h
           dd 06372756Fh
           dd 06E694C65h
           dd 04064656Bh
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 048484541h
           dd 040444250h
           dd 0493F005Ah
           dd 073655273h
           dd 06372756Fh
           dd 0616F4C65h
           dd 040646564h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 048484541h
           dd 0005A4048h
           dd 05273493Fh
           dd 0756F7365h
           dd 04C656372h
           dd 06564616Fh
           dd 05F424064h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 040726567h
           dd 045415140h
           dd 042504848h
           dd 0005A4044h
           dd 066654C3Fh
           dd 05F424074h
           dd 0656D614Eh
           dd 042514040h
           dd 056413F45h
           dd 040494031h
           dd 04C3F005Ah
           dd 074676E65h
           dd 05F424068h
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 0584A4542h
           dd 04C3F005Ah
           dd 074676E65h
           dd 05F424068h
           dd 0656D614Eh
           dd 042514040h
           dd 05A584945h
           dd 06F4C3F00h
           dd 042406461h
           dd 07365525Fh
           dd 06372756Fh
           dd 053404065h
           dd 056415041h
           dd 041414031h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 040474040h
           dd 04C3F005Ah
           dd 05064616Fh
           dd 0656B6361h
           dd 05F424064h
           dd 0446A624Fh
           dd 040726373h
           dd 045415140h
           dd 056414149h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 0005A4040h
           dd 0616F4C3Fh
           dd 063615064h
           dd 04464656Bh
           dd 040617461h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 048484541h
           dd 040444250h
           dd 04C3F005Ah
           dd 05264616Fh
           dd 0756F7365h
           dd 054656372h
           dd 06D654D6Fh
           dd 04079726Fh
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 047494541h
           dd 040444250h
           dd 04C3F005Ah
           dd 07461636Fh
           dd 073655265h
           dd 06372756Fh
           dd 0406E4965h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 051404072h
           dd 041494541h
           dd 05F425642h
           dd 0656D614Eh
           dd 042504040h
           dd 048403256h
           dd 03F005A40h
           dd 061636F4Ch
           dd 065526574h
           dd 072756F73h
           dd 049736563h
           dd 05F42406Eh
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 040726567h
           dd 045414140h
           dd 056424149h
           dd 0614E5F42h
           dd 04040656Dh
           dd 042564141h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 03F005A40h
           dd 0656B614Dh
           dd 0736E6F43h
           dd 0435F4240h
           dd 0726F6C6Fh
           dd 041554040h
           dd 05A585845h
           dd 0654D3F00h
           dd 067617373h
           dd 05F424065h
           dd 06E616843h
           dd 04F6C656Eh
           dd 0656C6946h
           dd 041554040h
           dd 042504945h
           dd 0005A4044h
           dd 073654D3Fh
           dd 065676173h
           dd 04D5F4240h
           dd 061737365h
           dd 068436567h
           dd 0656E6E61h
           dd 05540406Ch
           dd 050494541h
           dd 05A404442h
           dd 0654D3F00h
           dd 067617373h
           dd 05F424065h
           dd 07373654Dh
           dd 04D656761h
           dd 067616E61h
           dd 040407265h
           dd 049454151h
           dd 0005A4044h
           dd 073654D3Fh
           dd 065676173h
           dd 04D5F4240h
           dd 061737365h
           dd 0614D6567h
           dd 06567616Eh
           dd 051404072h
           dd 044494541h
           dd 042564241h
           dd 06D614E5Fh
           dd 040404065h
           dd 04D3F005Ah
           dd 061737365h
           dd 042406567h
           dd 073654D5Fh
           dd 065676173h
           dd 0616E614Dh
           dd 040726567h
           dd 045415140h
           dd 044425049h
           dd 03F005A40h
           dd 07373654Dh
           dd 040656761h
           dd 0654D5F42h
           dd 067617373h
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 042504945h
           dd 056424144h
           dd 0614E5F42h
           dd 04040656Dh
           dd 03F005A40h
           dd 07365524Eh
           dd 06372756Fh
           dd 042407365h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 041514040h
           dd 040474945h
           dd 04F3F005Ah
           dd 05F42404Bh
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 058494542h
           dd 04F3F005Ah
           dd 05F42404Bh
           dd 07461444Fh
           dd 06C694661h
           dd 051404065h
           dd 058494542h
           dd 04F3F005Ah
           dd 065704F6Eh
           dd 06E75466Eh
           dd 05F424063h
           dd 074614449h
           dd 06C694661h
           dd 030404065h
           dd 050554150h
           dd 06A624F79h
           dd 040746365h
           dd 03F004140h
           dd 06E65704Fh
           dd 0435F4240h
           dd 06E6E6168h
           dd 0464F6C65h
           dd 040656C69h
           dd 045415540h
           dd 0005A5849h
           dd 065704F3Fh
           dd 05F42406Eh
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 050584541h
           dd 040484442h
           dd 04F3F005Ah
           dd 0406E6570h
           dd 0654D5F42h
           dd 067617373h
           dd 061684365h
           dd 06C656E6Eh
           dd 041554040h
           dd 05A584945h
           dd 0704F3F00h
           dd 068436E65h
           dd 0656E6E61h
           dd 05F42406Ch
           dd 07373654Dh
           dd 04D656761h
           dd 067616E61h
           dd 040407265h
           dd 049454151h
           dd 042564241h
           dd 06D614E5Fh
           dd 040404065h
           dd 04F3F005Ah
           dd 075707475h
           dd 06E695774h
           dd 072453233h
           dd 040726F72h
           dd 058415940h
           dd 040444250h
           dd 0503F005Ah
           dd 0406B6565h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 0005A5845h
           dd 06165523Fh
           dd 05F424064h
           dd 074614449h
           dd 06C694661h
           dd 051404065h
           dd 050584541h
           dd 040495841h
           dd 0523F005Ah
           dd 043646165h
           dd 040405653h
           dd 050494159h
           dd 041504442h
           dd 042243F56h
           dd 061444E5Fh
           dd 061426174h
           dd 055406573h
           dd 06C455F42h
           dd 06E656D65h
           dd 056534374h
           dd 040404040h
           dd 03F005A40h
           dd 064616552h
           dd 068636143h
           dd 06F6C4265h
           dd 042406B63h
           dd 06144495Fh
           dd 069466174h
           dd 04040656Ch
           dd 049454141h
           dd 03F005A58h
           dd 064616552h
           dd 06D6F7246h
           dd 040504D42h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 048454151h
           dd 040444250h
           dd 0523F005Ah
           dd 046646165h
           dd 0466D6F72h
           dd 040656C69h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 048454151h
           dd 040444250h
           dd 0523F005Ah
           dd 046646165h
           dd 04A6D6F72h
           dd 040474550h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 048454151h
           dd 040444250h
           dd 0523F005Ah
           dd 0766F6D65h
           dd 05F424065h
           dd 07473694Ch
           dd 041514040h
           dd 041504945h
           dd 04C5F4256h
           dd 045747369h
           dd 0656D656Ch
           dd 04040746Eh
           dd 0005A4049h
           dd 06D65523Fh
           dd 04665766Fh
           dd 074737269h
           dd 04C5F4240h
           dd 040747369h
           dd 045415140h
           dd 042564150h
           dd 073694C5Fh
           dd 0656C4574h
           dd 0746E656Dh
           dd 040494040h
           dd 0523F005Ah
           dd 0766F6D65h
           dd 073614C65h
           dd 05F424074h
           dd 07473694Ch
           dd 041514040h
           dd 056415045h
           dd 0694C5F42h
           dd 06C457473h
           dd 06E656D65h
           dd 049404074h
           dd 03F005A40h
           dd 06F6D6552h
           dd 06E4F6576h
           dd 06E65704Fh
           dd 0636E7546h
           dd 0495F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041534040h
           dd 0005A5858h
           dd 06D65523Fh
           dd 04F65766Fh
           dd 065704F6Eh
           dd 0706E496Eh
           dd 069467475h
           dd 07546656Ch
           dd 04040636Eh
           dd 058584159h
           dd 0523F005Ah
           dd 074657365h
           dd 065704F6Eh
           dd 04664656Eh
           dd 073656C69h
           dd 0495F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041534040h
           dd 0005A5858h
           dd 07365523Fh
           dd 04F6E7465h
           dd 0656E6570h
           dd 0706E4964h
           dd 069467475h
           dd 04073656Ch
           dd 058415940h
           dd 03F005A58h
           dd 068676952h
           dd 05F424074h
           dd 0656D614Eh
           dd 042514040h
           dd 056413F45h
           dd 040494031h
           dd 0533F005Ah
           dd 040657661h
           dd 065525F42h
           dd 072756F73h
           dd 040406563h
           dd 041584153h
           dd 05F425641h
           dd 07461444Fh
           dd 06C694661h
           dd 050404065h
           dd 040315642h
           dd 03F005A40h
           dd 065766153h
           dd 06B636150h
           dd 042406465h
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 041414945h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 05A404040h
           dd 061533F00h
           dd 061506576h
           dd 064656B63h
           dd 061746144h
           dd 0525F4240h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 048454151h
           dd 044425048h
           dd 03F005A40h
           dd 065766153h
           dd 06F736552h
           dd 065637275h
           dd 0525F4240h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 040407265h
           dd 049454151h
           dd 042504947h
           dd 0005A4044h
           dd 07661533Fh
           dd 0426F5465h
           dd 04240504Dh
           dd 07469425Fh
           dd 03270614Dh
           dd 051404034h
           dd 050484542h
           dd 05A404442h
           dd 061533F00h
           dd 06F546576h
           dd 053504D42h
           dd 064657A69h
           dd 0425F4240h
           dd 0614D7469h
           dd 040343270h
           dd 045425140h
           dd 044425048h
           dd 05A404848h
           dd 061533F00h
           dd 06F546576h
           dd 0656C6946h
           dd 0425F4240h
           dd 0614D7469h
           dd 040343270h
           dd 045425140h
           dd 044425048h
           dd 0005A4048h
           dd 07661533Fh
           dd 04A6F5465h
           dd 040474550h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 048454251h
           dd 048444250h
           dd 03F005A40h
           dd 06B656553h
           dd 0495F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 0484A4A45h
           dd 03F005A40h
           dd 06B656553h
           dd 04F5F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 0404A4A45h
           dd 0533F005Ah
           dd 061697265h
           dd 07A69536Ch
           dd 05F424065h
           dd 0446A624Fh
           dd 040726373h
           dd 045425540h
           dd 0005A5849h
           dd 07465533Fh
           dd 073746942h
           dd 0425F4240h
           dd 0614D7469h
           dd 040343270h
           dd 045415140h
           dd 050484849h
           dd 040304442h
           dd 0533F005Ah
           dd 06C427465h
           dd 042406575h
           dd 06C61505Fh
           dd 041514040h
           dd 045495845h
           dd 03F005A40h
           dd 043746553h
           dd 0726F6C6Fh
           dd 0435F4240h
           dd 0726F6C6Fh
           dd 041514040h
           dd 045455845h
           dd 0005A4045h
           dd 07465533Fh
           dd 065657247h
           dd 05F42406Eh
           dd 0406C6150h
           dd 045415140h
           dd 040454958h
           dd 0533F005Ah
           dd 06E4F7465h
           dd 06E65704Fh
           dd 0636E7546h
           dd 0495F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041534040h
           dd 055415048h
           dd 0624F7950h
           dd 07463656Ah
           dd 05A404040h
           dd 065533F00h
           dd 04F6E4F74h
           dd 0496E6570h
           dd 07475706Eh
           dd 0656C6946h
           dd 0636E7546h
           dd 041594040h
           dd 055415048h
           dd 0624F7950h
           dd 07463656Ah
           dd 05A404040h
           dd 065533F00h
           dd 064655274h
           dd 0505F4240h
           dd 040406C61h
           dd 058454151h
           dd 05A404549h
           dd 065533F00h
           dd 042705574h
           dd 042405053h
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 05A585845h
           dd 065533F00h
           dd 045705574h
           dd 073656764h
           dd 04F5F4240h
           dd 073446A62h
           dd 040407263h
           dd 058454151h
           dd 03F005A58h
           dd 055746553h
           dd 0656E4970h
           dd 061697472h
           dd 04240546Ch
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 05A585845h
           dd 065533F00h
           dd 04E705574h
           dd 0616D726Fh
           dd 04240736Ch
           dd 06A624F5Fh
           dd 072637344h
           dd 041514040h
           dd 05A585845h
           dd 074533F00h
           dd 0676E6972h
           dd 04E5F4240h
           dd 040656D61h
           dd 045425140h
           dd 058444151h
           dd 0543F005Ah
           dd 0406C6C65h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 0005A584Ah
           dd 04370553Fh
           dd 040657361h
           dd 0614E5F42h
           dd 04040656Dh
           dd 058454151h
           dd 03F005A58h
           dd 074697257h
           dd 05F424065h
           dd 07461444Fh
           dd 06C694661h
           dd 051404065h
           dd 050584541h
           dd 040495842h
           dd 0573F005Ah
           dd 065746972h
           dd 068636143h
           dd 06F6C4265h
           dd 042406B63h
           dd 061444F5Fh
           dd 069466174h
           dd 04040656Ch
           dd 058454141h
           dd 03F005A58h
           dd 074756F6Dh
           dd 056334040h
           dd 0654D5F42h
           dd 067617373h
           dd 06E614D65h
           dd 072656761h
           dd 000414040h
           dd 06C456E3Fh
           dd 06E656D65h
           dd 042407374h
           dd 073694C5Fh
           dd 051404074h
           dd 058494541h
           dd 06E3F005Ah
           dd 065706F5Fh
           dd 069665F6Eh
           dd 04073656Ch
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 041483040h
           dd 05F6E3F00h
           dd 06E65706Fh
           dd 0665F6465h
           dd 073656C69h
           dd 0495F4240h
           dd 061746144h
           dd 0656C6946h
           dd 048304040h
           dd 0763F0041h
           dd 072617261h
           dd 059404067h
           dd 044425041h
           dd 05A444250h
           dd 06E69005Ah
           dd 042427469h
           dd 06362694Ch
           db 000h
           db 000h
           dd 664 dup (?)
           db 2 dup (?)
;
;...
;
;Section .data
;
g10047000  dd 000000000h
           dd l1000617B
           dd l100010E4
           dd l10026990
           dd l10029C15
           dd l10031430
           dd l10031477
           dd l100314BE
           dd l10034345
           dd l1003440F
           dd l1003DA80
g1004702C  dd 5 dup (0)
g10047040  dd 02E2F2E2Eh
           dd 06E612F2Eh
           dd 000002F6Dh
g1004704C  dd 0612F2E2Eh
           dd 0612F6D6Eh
           dd 0622E6D6Eh
           dd 00000646Ch
g1004705C  dd 06C756F43h
           dd 06F6E2064h
           dd 072772074h
           dd 020657469h
           dd 074206F74h
           dd 066206568h
           dd 020656C69h
           dd 00A2E7325h
           dd 000000000h
g10047080  dd 064616572h
           dd 06C6E6F2Dh
           dd 06F202C79h
           dd 069662072h
           dd 07392656Ch
           dd 061687320h
           dd 0676E6972h
           dd 0646F6D20h
           dd 06F642065h
           dd 06E207365h
           dd 06120746Fh
           dd 0776F6C6Ch
           dd 065707320h
           dd 069666963h
           dd 06F206465h
           dd 061726570h
           dd 06E6F6974h
           dd 06F202C73h
           dd 069672072h
           dd 0206E6576h
           dd 068746170h
           dd 020736920h
           dd 065726964h
           dd 0726F7463h
           dd 000000A79h
g100470E4  dd 0435F4F5Fh
           dd 054414552h
           dd 0646E6120h
           dd 05F4F5F20h
           dd 04C435845h
           dd 0616C6620h
           dd 073207367h
           dd 069636570h
           dd 064656966h
           dd 07562202Ch
           dd 069662074h
           dd 0616E656Ch
           dd 06120656Dh
           dd 06165726Ch
           dd 065207964h
           dd 074736978h
           dd 000000A73h
g10047128  dd 061766E49h
           dd 02064696Ch
           dd 0616C666Fh
           dd 0726F2067h
           dd 06F6D7020h
           dd 061206564h
           dd 06D756772h
           dd 00A746E65h
           dd 000000000h
g1004714C  dd 06D206F4Eh
           dd 02065726Fh
           dd 0656C6966h
           dd 06E616820h
           dd 073656C64h
           dd 061766120h
           dd 062616C69h
           dd 02820656Ch
           dd 0206F6F74h
           dd 0796E616Dh
           dd 065706F20h
           dd 06966206Eh
           dd 02973656Ch
           dd 00000000Ah
g10047184  dd 0656C6946h
           dd 020726F20h
           dd 068746170h
           dd 0746F6E20h
           dd 0756F6620h
           dd 0000A646Eh
g1004719C  dd 06E6B6E55h
           dd 0206E776Fh
           dd 06F727265h
           dd 021212172h
           dd 021212121h
           dd 0000A3121h
g100471B4  dd 063727473h
           dd 07028706Dh
           dd 0614D2E68h
           dd 057636967h
           dd 02C64726Fh
           dd 05F4B4150h
           dd 04947414Dh
           dd 04F575F43h
           dd 03D294452h
           dd 00000303Dh
g100471DC  dd 0635C3A43h
           dd 05C65646Fh
           dd 05C534447h
           dd 0702F2E2Eh
           dd 0702F6B61h
           dd 0682E6B61h
           dd 000000000h
;
;* Jump:
; 1004718E(C) 
;
g100471F8  dd 064616C42h
           dd 061502065h
           dd 046206B63h
           dd 000656C69h
g10047208  dd 07370614Dh
g1004720C  dd 000000000h
g10047210  dd 0666E6F43h
g10047214  db 069h
           db 067h
g10047216  db 000h
           db 000h
g10047218  dd 06E614C2Fh
g1004721C  dd 06E692E67h
g10047220  dd 000000069h
g10047224  dd 06C676E45h
           dd 000687369h
g1004722C  dd 072727543h
           dd 04C746E65h
           dd 075676E61h
           dd 000656761h
g1004723C  dd 0676E614Ch
           dd 065676175h
           dd 000000000h
g10047248  dd 06F727245h
           dd 03E2D2072h
           dd 064644120h
           dd 020676E69h
           dd 06D656C65h
           dd 020746E65h
           dd 063697774h
           dd 0000A2E65h
g10047268  dd 065525F42h
           dd 072756F73h
           dd 06F4C6563h
           dd 069746163h
           dd 03A3A6E6Fh
           dd 052746547h
           dd 0756F7365h
           dd 020656372h
           dd 045203E2Dh
           dd 0524F5252h
           dd 06F4E203Ah
           dd 020657320h
           dd 070206168h
           dd 06469646Fh
           dd 06261206Fh
           dd 020726972h
           dd 068637261h
           dd 03A6F7669h
           dd 00000000Ah
g100472B4  dd 000002020h
g100472B8  dd 00000000Ah
g100472BC  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 04C3A3A72h
           dd 07461636Fh
           dd 073655265h
           dd 06372756Fh
           dd 0286E4965h
           dd 03E2D2029h
           dd 072724520h
           dd 06F20726Fh
           dd 0696E6570h
           dd 06620676Eh
           dd 03A656C69h
           dd 00A732520h
           dd 000000000h
g10047300  dd 0635C3A43h
           dd 05C65646Fh
           dd 05C534447h
           dd 06F736552h
           dd 065637275h
           dd 07070632Eh
           dd 000000000h
g1004731C  dd 06F736572h
           dd 065637275h
           dd 000000000h
g10047328  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 0413A3A72h
           dd 075416464h
           dd 065526F74h
           dd 072756F73h
           dd 029286563h
           dd 05020203Ah
           dd 06F667265h
           dd 06E616D72h
           dd 057206563h
           dd 0696E7261h
           dd 02E2E676Eh
           dd 0616F4C20h
           dd 0676E6964h
           dd 073657220h
           dd 06372756Fh
           dd 073252065h
           dd 069777420h
           dd 00A2E6563h
           dd 000000000h
;
;* Jump:
; 10047310(C) 
;
g10047384  dd 0616C423Ch
           dd 049206564h
           dd 07265746Eh
           dd 03E6C616Eh
           dd 000000000h
g10047398  dd 0635C3A43h
           dd 05C65646Fh
           dd 05C534447h
           dd 06F736552h
           dd 065637275h
           dd 07070632Eh
           dd 000000000h
g100473B4  dd 05F736572h
           dd 000636F6Ch
g100473BC  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 0463A3A72h
           dd 052656572h
           dd 0756F7365h
           dd 028656372h
           dd 03E2D2029h
           dd 072615720h
           dd 0676E696Eh
           dd 07274202Ch
           dd 0676E6979h
           dd 0206F7420h
           dd 065657266h
           dd 06C756E20h
           dd 06572206Ch
           dd 072756F73h
           dd 00A2E6563h
           dd 000000000h
g1004740C  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 0413A3A72h
           dd 06F426464h
           dd 06E694C64h
           dd 02029286Bh
           dd 074203E2Dh
           dd 066206568h
           dd 020656C69h
           dd 063207325h
           dd 0656C6C61h
           dd 073252064h
           dd 020736920h
           dd 06C707564h
           dd 074616369h
           dd 0000A6465h
g10047454  dd 0635C3A43h
           dd 05C65646Fh
           dd 05C534447h
           dd 06F736552h
           dd 065637275h
           dd 07070632Eh
           dd 000000000h
g10047470  dd 073616C63h
           dd 064695F73h
           dd 05F423D3Dh
           dd 05F444943h
           dd 0444A424Fh
           dd 020524353h
           dd 063207C7Ch
           dd 07373616Ch
           dd 03D64695Fh
           dd 0435F423Dh
           dd 0415F4449h
           dd 05F4F5455h
           dd 0444A424Fh
           dd 000524353h
g100474A8  dd 0635C3A43h
           dd 05C65646Fh
           dd 05C534447h
           dd 06F736552h
           dd 065637275h
           dd 07070632Eh
           dd 000000000h
g100474C4  dd 073616C63h
           dd 064695F73h
           dd 05F423D3Dh
           dd 05F444943h
           dd 0444A424Fh
           dd 020524353h
           dd 063207C7Ch
           dd 07373616Ch
           dd 03D64695Fh
           dd 0435F423Dh
           dd 0415F4449h
           dd 05F4F5455h
           dd 0444A424Fh
           dd 000524353h
g100474FC  dd 0635C3A43h
           dd 05C65646Fh
           dd 04D544942h
           dd 0425C5041h
           dd 0414D5449h
           dd 050432E50h
           dd 000000050h
g10047518  dd 065742E62h
           dd 0736C6578h
           dd 0554E3D3Dh
           dd 000004C4Ch
g10047528  dd 075676F42h
           dd 0656D2073h
           dd 067617373h
           dd 06F632065h
           dd 025206564h
           dd 000000064h
g10047540  dd 072726F53h
           dd 074202C79h
           dd 065726568h
           dd 065726120h
           dd 067656C20h
           dd 072206C61h
           dd 072747365h
           dd 069746369h
           dd 020736E6Fh
           dd 061206E6Fh
           dd 068746972h
           dd 06974656Dh
           dd 06F632063h
           dd 0676E6964h
           dd 000000000h
g1004757C  dd 047494C41h
           dd 059545F4Eh
           dd 069204550h
           dd 072772073h
           dd 02C676E6Fh
           dd 0656C7020h
           dd 020657361h
           dd 000786966h
;
;* Jump:
; 1004759A(C) 
;
g1004759C  dd 05F58414Dh
           dd 04F4C4C41h
           dd 048435F43h
           dd 0204B4E55h
           dd 077207369h
           dd 0676E6F72h
           dd 06C70202Ch
           dd 065736165h
           dd 078696620h
           dd 000000000h
g100475C4  dd 075676F42h
           dd 075622073h
           dd 072656666h
           dd 06E6F6320h
           dd 06C6F7274h
           dd 0646F6D20h
           dd 000000065h
g100475E0  dd 061766E49h
           dd 02064696Ch
           dd 0706D6F63h
           dd 06E656E6Fh
           dd 044492074h
           dd 020642520h
           dd 053206E69h
           dd 00000534Fh
g10047600  dd 020544344h
           dd 066656F63h
           dd 069636966h
           dd 020746E65h
           dd 02074756Fh
           dd 07220666Fh
           dd 065676E61h
           dd 000000000h
g10047620  dd 054434449h
           dd 074756F20h
           dd 020747570h
           dd 0636F6C62h
           dd 06973206Bh
           dd 02520657Ah
           dd 06F6E2064h
           dd 075732074h
           dd 0726F7070h
           dd 000646574h
g10047648  dd 075676F42h
           dd 075482073h
           dd 0616D6666h
           dd 06174206Eh
           dd 020656C62h
           dd 069666564h
           dd 06974696Eh
           dd 000006E6Fh
g10047668  dd 075676F42h
           dd 06E692073h
           dd 020747570h
           dd 06F6C6F63h
           dd 061707372h
           dd 000006563h
g10047680  dd 075676F42h
           dd 0504A2073h
           dd 063204745h
           dd 0726F6C6Fh
           dd 063617073h
           dd 000000065h
g10047698  dd 075676F42h
           dd 0616D2073h
           dd 072656B72h
           dd 06E656C20h
           dd 000687467h
g100476AC  dd 06E6F7257h
           dd 0504A2067h
           dd 06C204745h
           dd 061726269h
           dd 076207972h
           dd 069737265h
           dd 0203A6E6Fh
           dd 07262696Ch
           dd 020797261h
           dd 025207369h
           dd 063202C64h
           dd 0656C6C61h
           dd 078652072h
           dd 074636570h
           dd 064252073h
           dd 000000000h
g100476EC  dd 0706D6153h
           dd 0676E696Ch
           dd 063616620h
           dd 073726F74h
           dd 06F6F7420h
           dd 072616C20h
           dd 066206567h
           dd 06920726Fh
           dd 07265746Eh
           dd 07661656Ch
           dd 073206465h
           dd 0006E6163h
g1004771C  dd 061766E49h
           dd 02064696Ch
           dd 06F6D656Dh
           dd 070207972h
           dd 0206C6F6Fh
           dd 065646F63h
           dd 000642520h
g10047738  dd 075736E55h
           dd 0726F7070h
           dd 020646574h
           dd 04745504Ah
           dd 074616420h
           dd 072702061h
           dd 073696365h
           dd 0206E6F69h
           dd 000006425h
g1004775C  dd 061766E49h
           dd 02064696Ch
           dd 0676F7270h
           dd 073736572h
           dd 020657669h
           dd 061726170h
           dd 06574656Dh
           dd 053207372h
           dd 064253D73h
           dd 03D655320h
           dd 041206425h
           dd 064253D68h
           dd 03D6C4120h
           dd 000006425h
g10047794  dd 061766E49h
           dd 02064696Ch
           dd 0676F7270h
           dd 073736572h
           dd 020657669h
           dd 061726170h
           dd 06574656Dh
           dd 061207372h
           dd 063732074h
           dd 073206E61h
           dd 070697263h
           dd 06E652074h
           dd 020797274h
           dd 000006425h
g100477CC  dd 075676F42h
           dd 061732073h
           dd 0696C706Dh
           dd 06620676Eh
           dd 06F746361h
           dd 000007372h
g100477E4  dd 061766E49h
           dd 02064696Ch
           dd 06E616373h
           dd 072637320h
           dd 020747069h
           dd 065207461h
           dd 07972746Eh
           dd 000642520h
g10047804  dd 072706D49h
           dd 07265706Fh
           dd 06C616320h
           dd 06F74206Ch
           dd 045504A20h
           dd 0696C2047h
           dd 072617262h
           dd 06E692079h
           dd 061747320h
           dd 025206574h
           dd 000000064h
g10047830  dd 04745504Ah
           dd 072617020h
           dd 074656D61h
           dd 073207265h
           dd 063757274h
           dd 0696D2074h
           dd 074616D73h
           dd 0203A6863h
           dd 07262696Ch
           dd 020797261h
           dd 06E696874h
           dd 07320736Bh
           dd 020657A69h
           dd 025207369h
           dd 063202C75h
           dd 0656C6C61h
           dd 078652072h
           dd 074636570h
           dd 075252073h
           dd 000000000h
g10047880  dd 075676F42h
           dd 069762073h
           dd 061757472h
           dd 07261206Ch
           dd 020796172h
           dd 065636361h
           dd 000007373h
g1004789C  dd 066667542h
           dd 070207265h
           dd 065737361h
           dd 06F742064h
           dd 045504A20h
           dd 0696C2047h
           dd 072617262h
           dd 073692079h
           dd 06F6F7420h
           dd 0616D7320h
           dd 000006C6Ch
;
;* Jump:
; 10047861(C) 
;
g100478C8  dd 070737553h
           dd 069736E65h
           dd 06E206E6Fh
           dd 06120746Fh
           dd 0776F6C6Ch
           dd 068206465h
           dd 000657265h
g100478E4  dd 052494343h
           dd 020313036h
           dd 0706D6173h
           dd 0676E696Ch
           dd 0746F6E20h
           dd 0706D6920h
           dd 0656D656Ch
           dd 06465746Eh
           dd 074657920h
           dd 000000000h
g1004790C  dd 0206F6F54h
           dd 0796E616Dh
           dd 06C6F6320h
           dd 06320726Fh
           dd 06F706D6Fh
           dd 0746E656Eh
           dd 025203A73h
           dd 06D202C64h
           dd 025207861h
           dd 000000064h
g10047934  dd 075736E55h
           dd 0726F7070h
           dd 020646574h
           dd 06F6C6F63h
           dd 06F632072h
           dd 07265766Eh
           dd 06E6F6973h
           dd 071657220h
           dd 074736575h
           dd 000000000h
g1004795C  dd 075676F42h
           dd 041442073h
           dd 06E692043h
           dd 020786564h
           dd 000006425h
g10047970  dd 075676F42h
           dd 041442073h
           dd 061762043h
           dd 02065756Ch
           dd 078257830h
           dd 000000000h
g10047988  dd 075676F42h
           dd 048442073h
           dd 06E692054h
           dd 020786564h
           dd 000006425h
g1004799C  dd 075676F42h
           dd 051442073h
           dd 06E692054h
           dd 020786564h
           dd 000006425h
g100479B0  dd 074706D45h
           dd 0504A2079h
           dd 069204745h
           dd 06567616Dh
           dd 04E442820h
           dd 06F6E204Ch
           dd 075732074h
           dd 0726F7070h
           dd 029646574h
           dd 000000000h
g100479D8  dd 064616552h
           dd 06F726620h
           dd 04D45206Dh
           dd 061662053h
           dd 064656C69h
           dd 000000000h
g100479F0  dd 074697257h
           dd 06F742065h
           dd 0534D4520h
           dd 069616620h
           dd 00064656Ch
g10047A04  dd 06E646944h
           dd 065207427h
           dd 063657078h
           dd 06F6D2074h
           dd 074206572h
           dd 0206E6168h
           dd 020656E6Fh
           dd 06E616373h
           dd 000000000h
;
;* Jump:
; 100479B2(C) 
;
g10047A28  dd 075706E49h
           dd 069662074h
           dd 07220656Ch
           dd 020646165h
           dd 06F727265h
           dd 000000072h
g10047A40  dd 07074754Fh
           dd 066207475h
           dd 020656C69h
           dd 074697277h
           dd 072652065h
           dd 020726F72h
           dd 0202D2D2Dh
           dd 02074756Fh
           dd 06420666Fh
           dd 0206B7369h
           dd 063617073h
           dd 000003F65h
g10047A70  dd 063617246h
           dd 06E6F6974h
           dd 073206C61h
           dd 06C706D61h
           dd 020676E69h
           dd 020746F6Eh
           dd 06C706D69h
           dd 06E656D65h
           dd 020646574h
           dd 000746579h
;
;* Jump:
; 10047A96(C) 
;
g10047A98  dd 066667548h
           dd 0206E616Dh
           dd 065646F63h
           dd 07A697320h
           dd 061742065h
           dd 020656C62h
           dd 07265766Fh
           dd 0776F6C66h
           dd 000000000h
g10047ABC  dd 07373694Dh
           dd 020676E69h
           dd 066667548h
           dd 0206E616Dh
           dd 065646F63h
           dd 062617420h
           dd 06520656Ch
           dd 07972746Eh
           dd 000000000h
g10047AE0  dd 06978614Dh
           dd 0206D756Dh
           dd 070707573h
           dd 06574726Fh
           dd 06D692064h
           dd 020656761h
           dd 0656D6964h
           dd 06F69736Eh
           dd 07369206Eh
           dd 020752520h
           dd 065786970h
           dd 00000736Ch
g10047B10  dd 074706D45h
           dd 06E692079h
           dd 020747570h
           dd 0656C6966h
           dd 000000000h
g10047B24  dd 06D657250h
           dd 072757461h
           dd 06E652065h
           dd 0666F2064h
           dd 0706E6920h
           dd 066207475h
           dd 000656C69h
g10047B40  dd 06E6E6143h
           dd 07420746Fh
           dd 0736E6172h
           dd 065646F63h
           dd 065756420h
           dd 0206F7420h
           dd 0746C756Dh
           dd 0656C7069h
           dd 065737520h
           dd 020666F20h
           dd 06E617571h
           dd 0617A6974h
           dd 06E6F6974h
           dd 062617420h
           dd 02520656Ch
           dd 000000064h
g10047B80  dd 06E616353h
           dd 072637320h
           dd 020747069h
           dd 073656F64h
           dd 0746F6E20h
           dd 061727420h
           dd 0696D736Eh
           dd 06C612074h
           dd 06164206Ch
           dd 000006174h
g10047BA8  dd 061766E49h
           dd 02064696Ch
           dd 06F6C6F63h
           dd 075712072h
           dd 069746E61h
           dd 06974617Ah
           dd 06D206E6Fh
           dd 02065646Fh
           dd 06E616863h
           dd 000006567h
g10047BD0  dd 020746F4Eh
           dd 06C706D69h
           dd 06E656D65h
           dd 020646574h
           dd 000746579h
;
;* Jump:
; 10047BE2(C) 
;
g10047BE4  dd 075716552h
           dd 065747365h
           dd 065662064h
           dd 072757461h
           dd 061772065h
           dd 06D6F2073h
           dd 065747469h
           dd 074612064h
           dd 06D6F6320h
           dd 0656C6970h
           dd 06D697420h
           dd 000000065h
g10047C14  dd 06B636142h
           dd 020676E69h
           dd 0726F7473h
           dd 06F6E2065h
           dd 075732074h
           dd 0726F7070h
           dd 000646574h
g10047C30  dd 066667548h
           dd 0206E616Dh
           dd 06C626174h
           dd 078302065h
           dd 078323025h
           dd 073617720h
           dd 0746F6E20h
           dd 066656420h
           dd 064656E69h
           dd 000000000h
g10047C58  dd 04745504Ah
           dd 074616420h
           dd 072747361h
           dd 0206D6165h
           dd 0746E6F63h
           dd 0736E6961h
           dd 0206F6E20h
           dd 067616D69h
           dd 000000065h
g10047C7C  dd 06E617551h
           dd 0617A6974h
           dd 06E6F6974h
           dd 062617420h
           dd 03020656Ch
           dd 032302578h
           dd 061772078h
           dd 06F6E2073h
           dd 065642074h
           dd 0656E6966h
           dd 000000064h
;
;* Jump:
; 10047C45(C) 
;
g10047CA8  dd 020746F4Eh
           dd 0504A2061h
           dd 066204745h
           dd 03A656C69h
           dd 061747320h
           dd 020737472h
           dd 068746977h
           dd 025783020h
           dd 020783230h
           dd 030257830h
           dd 000007832h
g10047CD4  dd 075736E49h
           dd 063696666h
           dd 0746E6569h
           dd 06D656D20h
           dd 02079726Fh
           dd 073616328h
           dd 064252065h
           dd 000000029h
g10047CF4  dd 06E6E6143h
           dd 07120746Fh
           dd 0746E6175h
           dd 020657A69h
           dd 065726F6Dh
           dd 061687420h
           dd 06425206Eh
           dd 06C6F6320h
           dd 06320726Fh
           dd 06F706D6Fh
           dd 0746E656Eh
           dd 000000073h
g10047D24  dd 06E6E6143h
           dd 07120746Fh
           dd 0746E6175h
           dd 020657A69h
           dd 066206F74h
           dd 072657765h
           dd 061687420h
           dd 06425206Eh
           dd 06C6F6320h
           dd 00073726Fh
g10047D4C  dd 06E6E6143h
           dd 07120746Fh
           dd 0746E6175h
           dd 020657A69h
           dd 06D206F74h
           dd 02065726Fh
           dd 06E616874h
           dd 020642520h
           dd 06F6C6F63h
           dd 000007372h
g10047D74  dd 061766E49h
           dd 02064696Ch
           dd 04745504Ah
           dd 06C696620h
           dd 074732065h
           dd 074637572h
           dd 03A657275h
           dd 06F777420h
           dd 0464F5320h
           dd 072616D20h
           dd 07372656Bh
           dd 000000000h
g10047DA4  dd 061766E49h
           dd 02064696Ch
           dd 04745504Ah
           dd 06C696620h
           dd 074732065h
           dd 074637572h
           dd 03A657275h
           dd 073696D20h
           dd 0676E6973h
           dd 0534F5320h
           dd 072616D20h
           dd 00072656Bh
;
;* Jump:
; 10047DD1(C) 
;
g10047DD4  dd 075736E55h
           dd 0726F7070h
           dd 020646574h
           dd 04745504Ah
           dd 06F727020h
           dd 073736563h
           dd 04F53203Ah
           dd 079742046h
           dd 030206570h
           dd 032302578h
           dd 000000078h
g10047E00  dd 061766E49h
           dd 02064696Ch
           dd 04745504Ah
           dd 06C696620h
           dd 074732065h
           dd 074637572h
           dd 03A657275h
           dd 06F777420h
           dd 0494F5320h
           dd 072616D20h
           dd 07372656Bh
           dd 000000000h
g10047E30  dd 061766E49h
           dd 02064696Ch
           dd 04745504Ah
           dd 06C696620h
           dd 074732065h
           dd 074637572h
           dd 03A657275h
           dd 0534F5320h
           dd 066656220h
           dd 02065726Fh
           dd 000464F53h
g10047E5C  dd 06C696146h
           dd 074206465h
           dd 07263206Fh
           dd 065746165h
           dd 06D657420h
           dd 061726F70h
           dd 066207972h
           dd 020656C69h
           dd 000007325h
g10047E80  dd 064616552h
           dd 069616620h
           dd 02064656Ch
           dd 074206E6Fh
           dd 06F706D65h
           dd 079726172h
           dd 06C696620h
           dd 000000065h
g10047EA0  dd 06B656553h
           dd 069616620h
           dd 02064656Ch
           dd 074206E6Fh
           dd 06F706D65h
           dd 079726172h
           dd 06C696620h
           dd 000000065h
g10047EC0  dd 074697257h
           dd 061662065h
           dd 064656C69h
           dd 0206E6F20h
           dd 0706D6574h
           dd 07261726Fh
           dd 069662079h
           dd 02D20656Ch
           dd 06F202D2Dh
           dd 06F207475h
           dd 069642066h
           dd 073206B73h
           dd 065636170h
           dd 00000003Fh
g10047EF8  dd 06C707041h
           dd 074616369h
           dd 0206E6F69h
           dd 06E617274h
           dd 072656673h
           dd 020646572h
           dd 0206F6F74h
           dd 020776566h
           dd 06E616373h
           dd 0656E696Ch
           dd 000000073h
g10047F24  dd 075736E55h
           dd 0726F7070h
           dd 020646574h
           dd 06B72616Dh
           dd 074207265h
           dd 020657079h
           dd 030257830h
           dd 000007832h
g10047F44  dd 074726956h
           dd 0206C6175h
           dd 061727261h
           dd 06F632079h
           dd 06F72746Eh
           dd 072656C6Ch
           dd 073656D20h
           dd 020646573h
           dd 000007075h
;
;* Jump:
; 10047EFA(C) 
;
g10047F68  dd 067616D49h
           dd 06F742065h
           dd 06977206Fh
           dd 066206564h
           dd 07420726Fh
           dd 020736968h
           dd 06C706D69h
           dd 06E656D65h
           dd 069746174h
           dd 000006E6Fh
g10047F90  dd 064616552h
           dd 06F726620h
           dd 04D58206Dh
           dd 061662053h
           dd 064656C69h
           dd 000000000h
g10047FA8  dd 074697257h
           dd 06F742065h
           dd 0534D5820h
           dd 069616620h
           dd 00064656Ch
g10047FBC  dd 079706F43h
           dd 068676972h
           dd 043282074h
           dd 039312029h
           dd 0202C3839h
           dd 06D6F6854h
           dd 047207361h
           dd 0614C202Eh
           dd 00000656Eh
g10047FE0  dd 020206236h
           dd 04D2D3732h
           dd 0312D7261h
           dd 000383939h
g10047FF0  dd 074756143h
           dd 03A6E6F69h
           dd 061757120h
           dd 07A69746Eh
           dd 06F697461h
           dd 06174206Eh
           dd 073656C62h
           dd 065726120h
           dd 06F6F7420h
           dd 0616F6320h
           dd 020657372h
           dd 020726F66h
           dd 065736162h
           dd 0656E696Ch
           dd 045504A20h
           dd 000000047h
g10048030  dd 0626F6441h
           dd 050412065h
           dd 020343150h
           dd 06B72616Dh
           dd 0203A7265h
           dd 073726576h
           dd 0206E6F69h
           dd 0202C6425h
           dd 067616C66h
           dd 078302073h
           dd 078343025h
           dd 025783020h
           dd 02C783430h
           dd 061727420h
           dd 06F66736Eh
           dd 025206D72h
           dd 000000064h
g10048074  dd 06E6B6E55h
           dd 0206E776Fh
           dd 030505041h
           dd 072616D20h
           dd 02072656Bh
           dd 0746F6E28h
           dd 049464A20h
           dd 0202C2946h
           dd 0676E656Ch
           dd 025206874h
           dd 000000075h
g100480A0  dd 06E6B6E55h
           dd 0206E776Fh
           dd 031505041h
           dd 0616D2034h
           dd 072656B72h
           dd 06F6E2820h
           dd 064412074h
           dd 02965626Fh
           dd 0656C202Ch
           dd 06874676Eh
           dd 000752520h
g100480CC  dd 069666544h
           dd 04120656Eh
           dd 068746972h
           dd 06974656Dh
           dd 061542063h
           dd 020656C62h
           dd 030257830h
           dd 0203A7832h
           dd 030257830h
           dd 000007832h
g100480F4  dd 069666544h
           dd 04820656Eh
           dd 06D666675h
           dd 054206E61h
           dd 0656C6261h
           dd 025783020h
           dd 000783230h
;
;* Jump:
; 1004810E(C) 
;
g10048110  dd 069666544h
           dd 05120656Eh
           dd 0746E6175h
           dd 074617A69h
           dd 0206E6F69h
           dd 06C626154h
           dd 064252065h
           dd 072702020h
           dd 073696365h
           dd 0206E6F69h
           dd 000006425h
g1004813C  dd 069666544h
           dd 05220656Eh
           dd 061747365h
           dd 049207472h
           dd 07265746Eh
           dd 0206C6176h
           dd 000007525h
g10048158  dd 065657246h
           dd 04D452064h
           dd 061682053h
           dd 0656C646Eh
           dd 000752520h
g1004816C  dd 06174624Fh
           dd 064656E69h
           dd 0534D4520h
           dd 06E616820h
           dd 020656C64h
           dd 000007525h
g10048184  dd 020646E45h
           dd 04920664Fh
           dd 06567616Dh
           dd 000000000h
g10048194  dd 020202020h
           dd 020202020h
           dd 020643325h
           dd 020643325h
           dd 020643325h
           dd 020643325h
           dd 020643325h
           dd 020643325h
           dd 020643325h
           dd 000643325h
g100481BC  dd 04649464Ah
           dd 050504120h
           dd 0616D2030h
           dd 072656B72h
           dd 06576203Ah
           dd 06F697372h
           dd 06425206Eh
           dd 03230252Eh
           dd 064202C64h
           dd 069736E65h
           dd 025207974h
           dd 064257864h
           dd 064252020h
           dd 000000000h
g100481F4  dd 06E726157h
           dd 03A676E69h
           dd 075687420h
           dd 0616E626Dh
           dd 069206C69h
           dd 06567616Dh
           dd 07A697320h
           dd 06F642065h
           dd 06E207365h
           dd 06D20746Fh
           dd 068637461h
           dd 074616420h
           dd 0656C2061h
           dd 06874676Eh
           dd 000752520h
g10048230  dd 04649464Ah
           dd 074786520h
           dd 069736E65h
           dd 06D206E6Fh
           dd 0656B7261h
           dd 074203A72h
           dd 020657079h
           dd 030257830h
           dd 0202C7832h
           dd 0676E656Ch
           dd 025206874h
           dd 000000075h
g10048260  dd 020202020h
           dd 068746977h
           dd 020642520h
           dd 064252078h
           dd 075687420h
           dd 0616E626Dh
           dd 069206C69h
           dd 06567616Dh
           dd 000000000h
g10048284  dd 06373694Dh
           dd 0616C6C65h
           dd 0756F656Eh
           dd 0616D2073h
           dd 072656B72h
           dd 025783020h
           dd 02C783230h
           dd 06E656C20h
           dd 020687467h
           dd 000007525h
g100482AC  dd 078656E55h
           dd 074636570h
           dd 06D206465h
           dd 0656B7261h
           dd 078302072h
           dd 078323025h
           dd 000000000h
g100482C8  dd 020202020h
           dd 020202020h
           dd 020753425h
           dd 020753425h
           dd 020753425h
           dd 020753425h
           dd 020753425h
           dd 020753425h
           dd 020753425h
           dd 000753425h
g100482F0  dd 06E617551h
           dd 0697A6974h
           dd 07420676Eh
           dd 06425206Fh
           dd 025203D20h
           dd 064252A64h
           dd 02064252Ah
           dd 06F6C6F63h
           dd 000007372h
g10048314  dd 06E617551h
           dd 0697A6974h
           dd 07420676Eh
           dd 06425206Fh
           dd 06C6F6320h
           dd 00073726Fh
g1004832C  dd 0656C6553h
           dd 064657463h
           dd 020642520h
           dd 06F6C6F63h
           dd 066207372h
           dd 07120726Fh
           dd 0746E6175h
           dd 074617A69h
           dd 0006E6F69h
g10048350  dd 06D207441h
           dd 0656B7261h
           dd 078302072h
           dd 078323025h
           dd 06572202Ch
           dd 065766F63h
           dd 061207972h
           dd 06F697463h
           dd 06425206Eh
           dd 000000000h
g10048378  dd 025545352h
           dd 000000064h
g10048380  dd 06F6F6D53h
           dd 06E696874h
           dd 06F6E2067h
           dd 075732074h
           dd 0726F7070h
           dd 020646574h
           dd 068746977h
           dd 06E6F6E20h
           dd 06E617473h
           dd 064726164h
           dd 06D617320h
           dd 06E696C70h
           dd 061722067h
           dd 0736F6974h
           dd 000000000h
g100483BC  dd 072617453h
           dd 0664F2074h
           dd 061724620h
           dd 03020656Dh
           dd 032302578h
           dd 077203A78h
           dd 068746469h
           dd 02C75253Dh
           dd 069656820h
           dd 03D746867h
           dd 0202C7525h
           dd 0706D6F63h
           dd 06E656E6Fh
           dd 0253D7374h
           dd 000000064h
g100483F8  dd 020202020h
           dd 0706D6F43h
           dd 06E656E6Fh
           dd 064252074h
           dd 06425203Ah
           dd 064257868h
           dd 03D712076h
           dd 000006425h
g10048418  dd 072617453h
           dd 0666F2074h
           dd 0616D4920h
           dd 000006567h
g10048428  dd 072617453h
           dd 0664F2074h
           dd 061635320h
           dd 025203A6Eh
           dd 06F632064h
           dd 06E6F706Dh
           dd 073746E65h
           dd 000000000h
g10048448  dd 020202020h
           dd 0706D6F43h
           dd 06E656E6Fh
           dd 064252074h
           dd 06364203Ah
           dd 02064253Dh
           dd 0253D6361h
           dd 000000064h
g10048468  dd 073532020h
           dd 02C64253Dh
           dd 03D655320h
           dd 0202C6425h
           dd 0253D6841h
           dd 041202C64h
           dd 064253D6Ch
           dd 000000000h
g10048488  dd 0736F6C43h
           dd 074206465h
           dd 06F706D65h
           dd 079726172h
           dd 06C696620h
           dd 073252065h
           dd 000000000h
g100484A4  dd 06E65704Fh
           dd 074206465h
           dd 06F706D65h
           dd 079726172h
           dd 06C696620h
           dd 073252065h
           dd 000000000h
g100484C0  dd 04649464Ah
           dd 074786520h
           dd 069736E65h
           dd 06D206E6Fh
           dd 0656B7261h
           dd 04A203A72h
           dd 02D474550h
           dd 0706D6F63h
           dd 073736572h
           dd 074206465h
           dd 0626D7568h
           dd 06C69616Eh
           dd 0616D6920h
           dd 0202C6567h
           dd 0676E656Ch
           dd 025206874h
           dd 000000075h
g10048504  dd 04649464Ah
           dd 074786520h
           dd 069736E65h
           dd 06D206E6Fh
           dd 0656B7261h
           dd 070203A72h
           dd 074656C61h
           dd 074206574h
           dd 0626D7568h
           dd 06C69616Eh
           dd 0616D6920h
           dd 0202C6567h
           dd 0676E656Ch
           dd 025206874h
           dd 000000075h
g10048540  dd 04649464Ah
           dd 074786520h
           dd 069736E65h
           dd 06D206E6Fh
           dd 0656B7261h
           dd 052203A72h
           dd 074204247h
           dd 0626D7568h
           dd 06C69616Eh
           dd 0616D6920h
           dd 0202C6567h
           dd 0676E656Ch
           dd 025206874h
           dd 000000075h
g10048578  dd 065726E55h
           dd 06E676F63h
           dd 064657A69h
           dd 06D6F6320h
           dd 0656E6F70h
           dd 04920746Eh
           dd 025207344h
           dd 064252064h
           dd 02C642520h
           dd 073736120h
           dd 06E696D75h
           dd 043592067h
           dd 000724362h
;
;* Jump:
; 100485AA(C) 
;
g100485AC  dd 065657246h
           dd 04D582064h
           dd 061682053h
           dd 0656C646Eh
           dd 000752520h
g100485C0  dd 06174624Fh
           dd 064656E69h
           dd 0534D5820h
           dd 06E616820h
           dd 020656C64h
           dd 000007525h
g100485D8  dd 06E6B6E55h
           dd 0206E776Fh
           dd 0626F6441h
           dd 06F632065h
           dd 020726F6Ch
           dd 06E617274h
           dd 0726F6673h
           dd 06F63206Dh
           dd 025206564h
           dd 000000064h
g10048600  dd 06F636E49h
           dd 07369736Eh
           dd 0746E6574h
           dd 06F727020h
           dd 073657267h
           dd 06E6F6973h
           dd 071657320h
           dd 0636E6575h
           dd 06F662065h
           dd 06F632072h
           dd 06E6F706Dh
           dd 020746E65h
           dd 063206425h
           dd 06666656Fh
           dd 065696369h
           dd 02520746Eh
           dd 000000064h
g10048644  dd 072726F43h
           dd 020747075h
           dd 04745504Ah
           dd 074616420h
           dd 025203A61h
           dd 078652075h
           dd 06E617274h
           dd 073756F65h
           dd 074796220h
           dd 062207365h
           dd 0726F6665h
           dd 0616D2065h
           dd 072656B72h
           dd 025783020h
           dd 000783230h
;
;* Jump:
; 1004867E(C) 
;
g10048680  dd 072726F43h
           dd 020747075h
           dd 04745504Ah
           dd 074616420h
           dd 070203A61h
           dd 0616D6572h
           dd 065727574h
           dd 0646E6520h
           dd 020666F20h
           dd 061746164h
           dd 067657320h
           dd 0746E656Dh
           dd 000000000h
g100486B4  dd 072726F43h
           dd 020747075h
           dd 04745504Ah
           dd 074616420h
           dd 062203A61h
           dd 048206461h
           dd 06D666675h
           dd 063206E61h
           dd 00065646Fh
g100486D8  dd 06E726157h
           dd 03A676E69h
           dd 06B6E7520h
           dd 06E776F6Eh
           dd 049464A20h
           dd 065722046h
           dd 069736976h
           dd 06E206E6Fh
           dd 065626D75h
           dd 064252072h
           dd 03230252Eh
           dd 000000064h
g10048708  dd 06D657250h
           dd 072757461h
           dd 06E652065h
           dd 0666F2064h
           dd 045504A20h
           dd 069662047h
           dd 00000656Ch
g10048724  dd 072726F43h
           dd 020747075h
           dd 04745504Ah
           dd 074616420h
           dd 066203A61h
           dd 0646E756Fh
           dd 072616D20h
           dd 02072656Bh
           dd 030257830h
           dd 069207832h
           dd 06574736Eh
           dd 06F206461h
           dd 053522066h
           dd 000642554h
g1004875C  dd 061766E49h
           dd 02064696Ch
           dd 020534F53h
           dd 061726170h
           dd 06574656Dh
           dd 066207372h
           dd 07320726Fh
           dd 065757165h
           dd 06169746Eh
           dd 0504A206Ch
           dd 000004745h
g10048788  dd 06C707041h
           dd 074616369h
           dd 0206E6F69h
           dd 06E617274h
           dd 072656673h
           dd 020646572h
           dd 0206F6F74h
           dd 0796E616Dh
           dd 061637320h
           dd 06E696C6Eh
           dd 000007365h
g100487B4  dd 0000A7325h
g100487B8  dd 04745504Ah
           dd 0004D454Dh
g100487C0  dd 025646C25h
           dd 000000063h
g100487C8  dd 000424752h
g100487CC  dd 0635C3A43h
           dd 05C65646Fh
           dd 04D544942h
           dd 034325041h
           dd 05449425Ch
           dd 03250414Dh
           dd 050432E34h
           dd 000000050h
g100487EC  dd 073746942h
           dd 000000000h
g100487F4  dd 0504D422Eh
           dd 000000000h
g100487FC  dd 047504A2Eh
           dd 000000000h
g10048804  dd 045504A2Eh
           dd 000000047h
g1004880C  dd 0504D422Eh
           dd 000000000h
g10048814  dd 047504A2Eh
           dd 000000000h
g1004881C  dd 045504A2Eh
           dd 000000047h
g10048824  dd 000006277h
g10048828  dd 000006272h
g1004882C  dd 069425F42h
           dd 070614D74h
           dd 0203A3432h
           dd 0276E6163h
           dd 0706F2074h
           dd 025206E65h
           dd 000000A73h
g10048848  dd 069425F42h
           dd 070614D74h
           dd 0203A3432h
           dd 06E6F7277h
           dd 0756E2067h
           dd 07265626Dh
           dd 020666F20h
           dd 0706D6F63h
           dd 06E656E6Fh
           dd 0000A7374h
g10048870  dd 000006277h
g10048874  dd 069425F42h
           dd 070614D74h
           dd 0203A3432h
           dd 0276E6163h
           dd 0706F2074h
           dd 025206E65h
           dd 000000A73h
g10048890  dd 0635C3A43h
           dd 05C65646Fh
           dd 055424544h
           dd 045445C47h
           dd 02E475542h
           dd 000505043h
g100488A8  dd 03D216264h
           dd 04C4C554Eh
           dd 000000000h
g100488B4  dd 000000001h
g100488B8  dd 03F800000h
g100488BC  dd 041200000h
g100488C0  dd 0624F5F42h
           dd 06373446Ah
           dd 0443A3A72h
           dd 028776172h
           dd 03E2D2029h
           dd 072615720h
           dd 0676E696Eh
           dd 06163202Ch
           dd 02074B46Eh
           dd 06F6C6C61h
           dd 065746163h
           dd 072657620h
           dd 065636974h
           dd 04F202E73h
           dd 06974696Dh
           dd 0000A676Eh
g10048900  dd 000766E49h
;
;* Jump:
; 100488C8(C), 10048902(C) 
;
g10048904  dd 07A616D41h
           dd 000006E6Fh
g1004890C  dd 073757243h
           dd 000000068h
g10048914  dd 000000043h
g10048918  dd 0525F4831h
           dd 000000000h
g10048920  dd 000003043h
g10048924  dd 0525F4831h
           dd 000000000h
g1004892C  dd 000003043h
g10048930  dd 073757243h
           dd 000000068h
g10048938  dd 000000043h
g1004893C  dd 000007472h
g10048940  dd 064616552h
           dd 028565343h
           dd 03E2D2029h
           dd 0206F4E20h
           dd 068206573h
           dd 06F702061h
           dd 06F646964h
           dd 072626120h
           dd 065207269h
           dd 07261206Ch
           dd 076696863h
           dd 07325206Fh
           dd 000000A2Eh
g10048974  dd 025207325h
           dd 066252073h
           dd 020642520h
           dd 000007325h
;
;* Export: ?CheckErrors@@3HA, 00A0
;
;* Jump:
; 1004890D(C) 
;
           dd g10048984; Defined in c++ code
g10048988  dd 06C707554h
           dd 069772065h
           dd 025206874h
           dd 072612064h
           dd 0000A7367h
g1004899C  dd 06D657449h
           dd 020642520h
           dd 0203A7369h
           dd 000000000h
g100489AC  dd 00000000Ah
g100489B0  dd 0636E7546h
           dd 06E6F6974h
           dd 0656D2820h
           dd 0646F6874h
           dd 025203A29h
           dd 000000A73h
g100489C8  dd 0636E7546h
           dd 06E6F6974h
           dd 0656D2820h
           dd 0646F6874h
           dd 025203A29h
           dd 000000A73h
g100489E0  dd 0636E7546h
           dd 06E6F6974h
           dd 0656D2820h
           dd 0646F6874h
           dd 025203A29h
           dd 000000A73h
g100489F8  dd 000000001h
;
;* Jump:
; 10048A14(C) 
;
g100489FC  dd 2 dup (0)
           dd g10048D4C
           dd 000000014h
           dd 2 dup (0)
           dd l1003E679
           dd l1003E710
           dd l1003E831
           dd 000000000h
           dd l1003E660
           dd 15 dup (0)
g10048A64  dd 000000040h
g10048A68  dd 033323130h
           dd 037363534h
           dd 062613938h
           dd 066656463h
g10048A78  dd g10049984
           dd l10040726
           dd 000000001h
           dd 000000000h
           dd g100499A0
           dd l10040694
           dd 000000001h
           dd 000000000h
           dd g100499BC
           dd l100405F1
           dd 000000001h
           dd 000000000h
           dd g100499E4
           dd l10040546
           dd 000000001h
           dd 000000000h
           dd g10049A04
           dd l100404A4
           dd 000000001h
           dd 000000000h
           dd g10049A28
           dd l10040401
           dd 000000001h
           dd 000000000h
           dd g10049A4C
           dd l1004035E
           dd 000000001h
           dd 000000000h
           dd g10049A70
           dd l100402C4
           dd 000000001h
           dd 000000000h
           dd g10049A90
           dd l1004022F
           dd 000000001h
           dd 000000000h
           dd g10049AAC
           dd l10040186
           dd 000000001h
           dd 000000000h
           dd g10049AC4
           dd l100400ED
           dd 000000001h
           dd 000000000h
           dd g10049ADC
           dd l10040054
           dd 000000001h
           dd 000000000h
           dd g10049AF4
           dd l1003FFAB
           dd 000000001h
           dd 000000000h
           dd g10049B0C
           dd l1003FF12
           dd 000000001h
           dd 000000000h
           dd g10049B24
           dd l1003FE79
           dd 000000001h
           dd 000000000h
           dd g10049B3C
           dd l1003FDA8
           dd 000000001h
           dd 000000000h
           dd g10049B50
           dd l1003FCF4
           dd 000000001h
           dd 000000000h
           dd g10049B64
           dd l1003FAC8
           dd 000000001h
           dd 000000000h
           dd g10049B7C
           dd l1003F24C
           dd 000000001h
           dd 000000000h
           dd g10049B90
           dd l1003EFD4
           dd 000000001h
           dd 000000000h
           dd g10049BA0
           dd l1003EE9D
           dd 000000001h
           dd 000000000h
           dd g10049BB4
           dd l1003EE53
           dd 000000001h
           dd 000000000h
           dd g10049BC8
           dd l1003EE09
           dd 000000001h
           dd 000000000h
           dd g10049BDC
           dd l1003EDAC
           dd 000000001h
           dd 000000000h
           dd g10049BF4
           dd l1003ED57
           dd 000000001h
           dd 000000000h
           dd g10049C04
           dd l1003ED02
           dd 000000001h
           dd 000000000h
           dd g10049C14
           dd l1003ECAD
           dd 000000001h
           dd 000000000h
           dd g10049C20
           dd l1003EC58
           dd 000000001h
           dd 000000000h
           dd g10049C2C
           dd l1003EC03
           dd 000000001h
           dd 000000000h
           dd g10049C34
           dd l1003EBAE
           dd 000000001h
           dd 000000000h
           dd g10049C40
           dd l1003EB59
           dd 000000001h
           dd 000000000h
           dd g10049C48
           dd l1003EB04
           dd 000000001h
           dd 000000000h
           dd g10049C50
           dd l1003EAB8
           dd 000000001h
           dd 000000000h
           dd g10049C6C
           dd l1003EA3C
           dd 000000001h
           dd 000000000h
           dd g10049C84
           dd l1003E9F0
           dd 000000001h
           dd 000000000h
           dd g10049C9C
           dd l1003E9A6
           dd 000000001h
           dd 000000000h
           dd g10049CB0
           dd l1003E95C
           dd 000000001h
           dd 5 dup (0)
g10048CD8  dd 06F6C473Ch
           dd 0206C6162h
           dd 069726176h
           dd 0656C6261h
           dd 000003E73h
g10048CEC  dd 0626F6C47h
           dd 076206C61h
           dd 061697261h
           dd 073656C62h
           dd 000207B20h
g10048D00  dd 000007325h
g10048D04  dd 00000202Ch
g10048D08  dd 0000A7D20h
g10048D0C  dd 06C672043h
           dd 06C61626Fh
           dd 072617620h
           dd 06C626169h
           dd 073252065h
           dd 0746F6E20h
           dd 0756F6620h
           dd 0002E646Eh
g10048D2C  dd 06C672043h
           dd 06C61626Fh
           dd 072617620h
           dd 06C626169h
           dd 073252065h
           dd 0746F6E20h
           dd 0756F6620h
           dd 0002E646Eh
g10048D4C  dd 06C726176h
           dd 0006B6E69h
           dd 047495753h
           dd 046203A20h
           dd 06C617461h
           dd 072726520h
           dd 06920726Fh
           dd 06E69206Eh
           dd 061697469h
           dd 0697A696Ch
           dd 05020676Eh
           dd 06F687479h
           dd 06F6D206Eh
           dd 0656C7564h
           dd 000000A2Eh
g10048D88  dd 04C4C554Eh
           dd 000000000h
g10048D90  dd 04C4C554Eh
           dd 000000000h
g10048D98  dd 07465473Ah
           dd 065704F6Eh
           dd 04964656Eh
           dd 07475706Eh
           dd 0656C6946h
           dd 000000073h
g10048DB0  dd 000000069h
g10048DB4  dd 07465473Ah
           dd 065704F6Eh
           dd 0706E496Eh
           dd 069467475h
           dd 00073656Ch
g10048DC8  dd 000000069h
g10048DCC  dd 07365523Ah
           dd 04F6E7465h
           dd 0656E6570h
           dd 0706E4964h
           dd 069467475h
           dd 00073656Ch
g10048DE4  dd 065533A4Fh
           dd 04F6E4F74h
           dd 0496E6570h
           dd 07475706Eh
           dd 0656C6946h
           dd 0636E7546h
           dd 000000000h
g10048E00  dd 000000069h
g10048E04  dd 06D65523Ah
           dd 04F65766Fh
           dd 065704F6Eh
           dd 0706E496Eh
           dd 069467475h
           dd 07546656Ch
           dd 00000636Eh
g10048E20  dd 065523A73h
           dd 04F426461h
           dd 000000044h
g10048E2C  dd 000000069h
g10048E30  dd 06F4C3A73h
           dd 04F426461h
           dd 000000044h
g10048E3C  dd 000000069h
g10048E40  dd 065523A73h
           dd 075416461h
           dd 04F426F74h
           dd 000000044h
g10048E50  dd 000000069h
g10048E54  dd 065523A73h
           dd 04D4D6461h
           dd 000000050h
g10048E60  dd 000000069h
g10048E64  dd 061533A73h
           dd 04F426576h
           dd 074614444h
           dd 000000061h
g10048E74  dd 000000069h
g10048E78  dd 06F4C3A73h
           dd 04F426461h
           dd 074614444h
           dd 000000061h
g10048E88  dd 000000069h
g10048E8C  dd 061533A73h
           dd 075416576h
           dd 04F426F74h
           dd 074614444h
           dd 000000061h
g10048EA0  dd 000000069h
g10048EA4  dd 06F4C3A73h
           dd 075416461h
           dd 04F426F74h
           dd 074614444h
           dd 000000061h
g10048EB8  dd 000000069h
g10048EBC  dd 04C3A7369h
           dd 05264616Fh
           dd 0756F7365h
           dd 054656372h
           dd 06D654D6Fh
           dd 00079726Fh
g10048ED4  dd 000000069h
g10048ED8  dd 07465473Ah
           dd 072727543h
           dd 04C746E65h
           dd 075676E61h
           dd 000656761h
g10048EEC  dd 000000073h
g10048EF0  dd 07465473Ah
           dd 0666E6F43h
           dd 069446769h
           dd 074636572h
           dd 00079726Fh
;
;* Jump:
; 10048F02(C) 
;
g10048F04  dd 000000073h
g10048F08  dd 07465473Ah
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 000726567h
;
;* Jump:
; 10048F18(C) 
;
g10048F1C  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g10048F34  dd 000000073h
;
;* Jump:
; 10048EF3(C) 
;
g10048F38  dd 03A69697Ch
           dd 05F77656Eh
           dd 069425F42h
           dd 070614D74h
           dd 000003432h
g10048F4C  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g10048F5C  dd 000000073h
g10048F60  dd 065643A73h
           dd 06574656Ch
           dd 0425F425Fh
           dd 0614D7469h
           dd 000343270h
g10048F74  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
;
;* Jump:
; 10048F10(C) 
;
g10048F84  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 0656C6564h
           dd 0425F6574h
           dd 07469425Fh
           dd 03270614Dh
           dd 045202E34h
           dd 063657078h
           dd 020646574h
           dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000002E70h
g10048FCC  dd 05F423A73h
           dd 04D746942h
           dd 034327061h
           dd 07465475Fh
           dd 0656D6944h
           dd 06F69736Eh
           dd 00000006Eh
g10048FE8  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
;
;* Jump:
; 10048FC8(C) 
;
g10048FF8  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0475F3432h
           dd 069447465h
           dd 0736E656Dh
           dd 02E6E6F69h
           dd 070784520h
           dd 065746365h
           dd 0425F2064h
           dd 07469425Fh
           dd 03270614Dh
           dd 02E705F34h
           dd 000000000h
g10049048  dd 05F423A73h
           dd 04D746942h
           dd 034327061h
           dd 07465475Fh
           dd 061746144h
           dd 000000000h
g10049060  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
;
;* Jump:
; 10048FFF(C) 
;
g10049070  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0475F3432h
           dd 061447465h
           dd 0202E6174h
           dd 065707845h
           dd 064657463h
           dd 05F425F20h
           dd 04D746942h
           dd 034327061h
           dd 0002E705Fh
g100490B8  dd 00000006Ch
g100490BC  dd 05F423A73h
           dd 04D746942h
           dd 034327061h
           dd 0656C435Fh
           dd 000007261h
g100490D0  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g100490E0  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0435F3432h
           dd 07261656Ch
           dd 07845202Eh
           dd 074636570h
           dd 05F206465h
           dd 069425F42h
           dd 070614D74h
           dd 0705F3432h
           dd 00000002Eh
g10049128  dd 0423A7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 061535F34h
           dd 06F546576h
           dd 000504D42h
g10049140  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g10049150  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 0504D426Fh
           dd 07845202Eh
           dd 074636570h
           dd 05F206465h
           dd 069425F42h
           dd 070614D74h
           dd 0705F3432h
           dd 00000002Eh
g1004919C  dd 000000069h
g100491A0  dd 0423A7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 065525F34h
           dd 072466461h
           dd 04D426D6Fh
           dd 000000050h
g100491BC  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g100491CC  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 0426D6F72h
           dd 0202E504Dh
           dd 065707845h
           dd 064657463h
           dd 05F425F20h
           dd 04D746942h
           dd 034327061h
           dd 0002E705Fh
g10049218  dd 000000069h
g1004921C  dd 0697C7373h
           dd 0425F423Ah
           dd 0614D7469h
           dd 05F343270h
           dd 065766153h
           dd 0504A6F54h
           dd 000004745h
g10049238  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g10049248  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 045504A6Fh
           dd 045202E47h
           dd 063657078h
           dd 020646574h
           dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000002E70h
g10049294  dd 000000069h
g10049298  dd 0423A7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 065525F34h
           dd 072466461h
           dd 0504A6D6Fh
           dd 000004745h
g100492B4  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g100492C4  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 04A6D6F72h
           dd 02E474550h
           dd 070784520h
           dd 065746365h
           dd 0425F2064h
           dd 07469425Fh
           dd 03270614Dh
           dd 02E705F34h
           dd 000000000h
g10049314  dd 000000069h
g10049318  dd 0423A7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 065525F34h
           dd 072466461h
           dd 069466D6Fh
           dd 00000656Ch
g10049334  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g10049344  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 0466D6F72h
           dd 02E656C69h
           dd 070784520h
           dd 065746365h
           dd 0425F2064h
           dd 07469425Fh
           dd 03270614Dh
           dd 02E705F34h
           dd 000000000h
g10049394  dd 000000069h
g10049398  dd 0697C7373h
           dd 0425F423Ah
           dd 0614D7469h
           dd 05F343270h
           dd 065766153h
           dd 069466F54h
           dd 00000656Ch
g100493B4  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g100493C4  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 06C69466Fh
           dd 045202E65h
           dd 063657078h
           dd 020646574h
           dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000002E70h
g10049410  dd 000000069h
g10049414  dd 05F423A73h
           dd 04D746942h
           dd 034327061h
           dd 06168435Fh
           dd 05265676Eh
           dd 0724F4247h
           dd 000726564h
;
;* Jump:
; 1004942D(C) 
;
g10049430  dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000000070h
g10049440  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 069425F42h
           dd 070614D74h
           dd 0435F3432h
           dd 0676E6168h
           dd 042475265h
           dd 06564724Fh
           dd 045202E72h
           dd 063657078h
           dd 020646574h
           dd 0425F425Fh
           dd 0614D7469h
           dd 05F343270h
           dd 000002E70h
g10049490  dd 0423A6973h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 065524E5Fh
           dd 072756F73h
           dd 000736563h
g100494B0  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g100494C8  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 0524E5F72h
           dd 0756F7365h
           dd 073656372h
           dd 07845202Eh
           dd 074636570h
           dd 05F206465h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 02E705F72h
           dd 000000000h
g10049524  dd 000000069h
g10049528  dd 03A696973h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06D614E65h
           dd 000000065h
g10049550  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g10049568  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06D614E65h
           dd 045202E65h
           dd 063657078h
           dd 020646574h
           dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 00000002Eh
g100495C8  dd 000000073h
g100495CC  dd 03A696973h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06C694665h
           dd 000000065h
g100495F4  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g1004960C  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06C694665h
           dd 045202E65h
           dd 063657078h
           dd 020646574h
           dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 00000002Eh
g1004966C  dd 000000073h
g10049670  dd 03A696973h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 073495F72h
           dd 06F736552h
           dd 065637275h
           dd 064616F4Ch
           dd 000006465h
g10049698  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g100496B0  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 073495F72h
           dd 06F736552h
           dd 065637275h
           dd 064616F4Ch
           dd 0202E6465h
           dd 065707845h
           dd 064657463h
           dd 05F425F20h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 05F726567h
           dd 000002E70h
g10049710  dd 000000069h
g10049714  dd 073696973h
           dd 0525F423Ah
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0535F7265h
           dd 052657661h
           dd 0756F7365h
           dd 000656372h
g10049738  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g10049750  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 061535F72h
           dd 065526576h
           dd 072756F73h
           dd 0202E6563h
           dd 065707845h
           dd 064657463h
           dd 05F425F20h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 05F726567h
           dd 000002E70h
g100497AC  dd 000000069h
g100497B0  dd 03A736973h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 06F4C5F72h
           dd 065526461h
           dd 072756F73h
           dd 06F546563h
           dd 06F6D654Dh
           dd 000007972h
g100497DC  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g100497F4  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 06F4C5F72h
           dd 065526461h
           dd 072756F73h
           dd 06F546563h
           dd 06F6D654Dh
           dd 0202E7972h
           dd 065707845h
           dd 064657463h
           dd 05F425F20h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 05F726567h
           dd 000002E70h
g10049858  dd 000000069h
g1004985C  dd 05F423A73h
           dd 06F736552h
           dd 065637275h
           dd 0616E614Dh
           dd 05F726567h
           dd 06E746547h
           dd 0656C6946h
           dd 000000073h
g1004987C  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g10049894  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 069466E74h
           dd 02E73656Ch
           dd 070784520h
           dd 065746365h
           dd 0425F2064h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 0002E705Fh
g100498EC  dd 000000069h
g100498F0  dd 0423A6973h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 07465475Fh
           dd 0656C6946h
           dd 000000000h
g10049910  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 000000000h
g10049928  dd 065707954h
           dd 072726520h
           dd 06920726Fh
           dd 07261206Eh
           dd 0656D7567h
           dd 03120746Eh
           dd 020666F20h
           dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 06C694674h
           dd 045202E65h
           dd 063657078h
           dd 020646574h
           dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 0705F7265h
           dd 00000002Eh
g10049980  dd 000000073h
g10049984  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 06C694674h
           dd 000000065h
g100499A0  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 069466E74h
           dd 00073656Ch
g100499BC  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 06F4C5F72h
           dd 065526461h
           dd 072756F73h
           dd 06F546563h
           dd 06F6D654Dh
           dd 000007972h
g100499E4  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 061535F72h
           dd 065526576h
           dd 072756F73h
           dd 000006563h
g10049A04  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 073495F72h
           dd 06F736552h
           dd 065637275h
           dd 064616F4Ch
           dd 000006465h
g10049A28  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06C694665h
           dd 000000065h
g10049A4C  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 065475F72h
           dd 073655274h
           dd 06372756Fh
           dd 06D614E65h
           dd 000000065h
g10049A70  dd 065525F42h
           dd 072756F73h
           dd 0614D6563h
           dd 06567616Eh
           dd 0524E5F72h
           dd 0756F7365h
           dd 073656372h
           dd 000000000h
;
;* Jump:
; 10049A1C(C), 10049A3B(C) 
;
g10049A90  dd 069425F42h
           dd 070614D74h
           dd 0435F3432h
           dd 0676E6168h
           dd 042475265h
           dd 06564724Fh
           dd 000000072h
g10049AAC  dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 06C69466Fh
           dd 000000065h
g10049AC4  dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 0466D6F72h
           dd 000656C69h
g10049ADC  dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 04A6D6F72h
           dd 000474550h
g10049AF4  dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 045504A6Fh
           dd 000000047h
g10049B0C  dd 069425F42h
           dd 070614D74h
           dd 0525F3432h
           dd 046646165h
           dd 0426D6F72h
           dd 00000504Dh
g10049B24  dd 069425F42h
           dd 070614D74h
           dd 0535F3432h
           dd 054657661h
           dd 0504D426Fh
           dd 000000000h
g10049B3C  dd 069425F42h
           dd 070614D74h
           dd 0435F3432h
           dd 07261656Ch
           dd 000000000h
g10049B50  dd 069425F42h
           dd 070614D74h
           dd 0475F3432h
           dd 061447465h
           dd 000006174h
g10049B64  dd 069425F42h
           dd 070614D74h
           dd 0475F3432h
           dd 069447465h
           dd 0736E656Dh
           dd 0006E6F69h
g10049B7C  dd 0656C6564h
           dd 0425F6574h
           dd 07469425Fh
           dd 03270614Dh
           dd 000000034h
g10049B90  dd 05F77656Eh
           dd 069425F42h
           dd 070614D74h
           dd 000003432h
g10049BA0  dd 052746547h
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 000007265h
g10049BB4  dd 043746547h
           dd 069666E6Fh
           dd 072694467h
           dd 06F746365h
           dd 000007972h
g10049BC8  dd 043746547h
           dd 065727275h
           dd 0614C746Eh
           dd 06175676Eh
           dd 000006567h
g10049BDC  dd 064616F4Ch
           dd 06F736552h
           dd 065637275h
           dd 0654D6F54h
           dd 079726F6Dh
           dd 000000000h
g10049BF4  dd 064616F4Ch
           dd 06F747541h
           dd 044444F42h
           dd 000617461h
g10049C04  dd 065766153h
           dd 06F747541h
           dd 044444F42h
           dd 000617461h
g10049C14  dd 064616F4Ch
           dd 044444F42h
           dd 000617461h
g10049C20  dd 065766153h
           dd 044444F42h
           dd 000617461h
g10049C2C  dd 064616552h
           dd 000504D4Dh
g10049C34  dd 064616552h
           dd 06F747541h
           dd 000444F42h
g10049C40  dd 064616F4Ch
           dd 000444F42h
g10049C48  dd 064616552h
           dd 000444F42h
g10049C50  dd 06F6D6552h
           dd 06E4F6576h
           dd 06E65704Fh
           dd 075706E49h
           dd 06C694674h
           dd 06E754665h
           dd 000000063h
g10049C6C  dd 04F746553h
           dd 065704F6Eh
           dd 0706E496Eh
           dd 069467475h
           dd 07546656Ch
           dd 00000636Eh
g10049C84  dd 065736552h
           dd 0704F6E74h
           dd 064656E65h
           dd 075706E49h
           dd 06C694674h
           dd 000007365h
g10049C9C  dd 06E746547h
           dd 06E65704Fh
           dd 075706E49h
           dd 06C694674h
           dd 000007365h
g10049CB0  dd 06E746547h
           dd 06E65704Fh
           dd 06E496465h
           dd 046747570h
           dd 073656C69h
           dd 000000000h
g10049CC8  dd 0694C4242h
           dd 000006362h
g10049CD0  dd 049435F42h
           dd 0424F5F44h
           dd 04353444Ah
           dd 000000052h
g10049CE0  dd 049435F42h
           dd 049425F44h
           dd 050414D54h
           dd 000000000h
;
;* Jump:
; 10049CA8(C) 
;
g10049CF0  dd 049435F42h
           dd 04D425F44h
           dd 000000050h
g10049CFC  dd 049435F42h
           dd 04C415F44h
           dd 042414850h
           dd 00000504Dh
g10049D0C  dd 049435F42h
           dd 055415F44h
           dd 04F5F4F54h
           dd 053444A42h
           dd 000005243h
g10049D20  dd 06E6F6C5Fh
           dd 000000067h
g10049D28  dd 06769735Fh
           dd 05F64656Eh
           dd 0676E6F6Ch
           dd 000000000h
g10049D38  dd 0736E755Fh
           dd 0656E6769h
           dd 06F6C5F64h
           dd 00000676Eh
g10049D48  dd 06E6F6C5Fh
           dd 000000067h
g10049D50  dd 06769735Fh
           dd 05F64656Eh
           dd 0676E6F6Ch
           dd 000000000h
g10049D60  dd 06E6F6C5Fh
           dd 000000067h
g10049D68  dd 0616C635Fh
           dd 0425F7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 000000034h
g10049D7C  dd 0425F425Fh
           dd 0614D7469h
           dd 000343270h
g10049D88  dd 0616C635Fh
           dd 0425F7373h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 000000000h
g10049DA4  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 000007265h
g10049DB8  dd 06E6F6C5Fh
           dd 000000067h
g10049DC0  dd 0736E755Fh
           dd 0656E6769h
           dd 06F6C5F64h
           dd 00000676Eh
g10049DD0  dd 0425F425Fh
           dd 0614D7469h
           dd 000343270h
g10049DDC  dd 0616C635Fh
           dd 0425F7373h
           dd 07469425Fh
           dd 03270614Dh
           dd 000000034h
g10049DF0  dd 0746E695Fh
           dd 000000000h
g10049DF8  dd 06769735Fh
           dd 05F64656Eh
           dd 000746E69h
g10049E04  dd 06F68735Fh
           dd 000007472h
g10049E0C  dd 0736E755Fh
           dd 0656E6769h
           dd 068735F64h
           dd 00074726Fh
g10049E1C  dd 06F68735Fh
           dd 000007472h
g10049E24  dd 06769735Fh
           dd 05F64656Eh
           dd 0726F6873h
           dd 000000074h
g10049E34  dd 0746E695Fh
           dd 000000000h
g10049E3C  dd 0736E755Fh
           dd 0656E6769h
           dd 06E695F64h
           dd 000000074h
g10049E4C  dd 0736E755Fh
           dd 0656E6769h
           dd 068735F64h
           dd 00074726Fh
g10049E5C  dd 06F68735Fh
           dd 000007472h
g10049E64  dd 06769735Fh
           dd 05F64656Eh
           dd 0726F6873h
           dd 000000074h
g10049E74  dd 06F68735Fh
           dd 000007472h
g10049E7C  dd 0736E755Fh
           dd 0656E6769h
           dd 06E695F64h
           dd 000000074h
g10049E8C  dd 0746E695Fh
           dd 000000000h
g10049E94  dd 06769735Fh
           dd 05F64656Eh
           dd 000746E69h
g10049EA0  dd 0746E695Fh
           dd 000000000h
g10049EA8  dd 0525F425Fh
           dd 0756F7365h
           dd 04D656372h
           dd 067616E61h
           dd 000007265h
g10049EBC  dd 0616C635Fh
           dd 0425F7373h
           dd 07365525Fh
           dd 06372756Fh
           dd 06E614D65h
           dd 072656761h
           dd 3 dup (0)
g10049EE0  dd 000000000h
g10049EE4  dd 000000000h
g10049EE8  dd 000000000h
g10049EEC  dd 2 dup (0)
g10049EF4  dd 2 dup (0)
;
;* Export: ?n_opened_files@B_IDataFile@@0HA, 0121
;
           dd g10049EFC; Defined in c++ code
;
;* Export: ?n_open_files@B_IDataFile@@0HA, 0120
;
;* Jump:
; 10049E95(C) 
;
           dd g10049F00; Defined in c++ code
;
;* Export: ?OnOpenFunc@B_IDataFile@@0PAUPyObject@@A, 00EE
;
           dd g10049F04; Defined in c++ code
;
;* Export: ??_C@_00A@?$AA@, 0090
;
g10049F08  dd 000000000h
g10049F0C  dd 61 dup (0)
           dd 2 dup (?)
           db 2 dup (?)
; Unresolved addresses:
