; This file was automatically generated by process_asm.py
; and should not be edited.
;File: ropengl.dll
;Path: Bin\Raster
;Size: 434 226
;Type: PE
;Base Of Code: 00001000, Code Size: 00036000
;Base Of Data: 00037000, Data Size: 00048000
;Image Base: 10000000
;Entry Point: 10035FD5
;
;Sections:
;
;   Name   | VirtAddr | VirtSize |  Offset  | PhysSize |  Flags   | Code
;----------+----------+----------+----------+----------+----------+------
; .text    | 10001000 | 00035C9C | 00001000 | 00036000 | 60000020 |  Yes
; .rdata   | 10037000 | 00001020 | 00037000 | 00002000 | 40000040 |  
; .data    | 10039000 | 00018A88 | 00039000 | 00004000 | C0000040 |  
; .idata   | 10052000 | 00001A5E | 0003D000 | 00002000 | C0000040 |  
; .rsrc    | 10054000 | 00027696 | 0003F000 | 00028000 | 40000040 |  
; .reloc   | 1007C000 | 00002978 | 00067000 | 00003000 | 42000040 |  
;
;Section .text
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1001D117, 1001FD72 
;
l10001005: jmp near ptr l1001CC77
l1000100A: jmp near ptr l10010366
l1000100F: jmp near ptr l1000F569
           jmp near ptr l1000824C
           jmp near ptr l100042F2
           jmp near ptr l10005F34
l10001023: jmp near ptr l1002BD00
           jmp near ptr l100054B9
l1000102D: jmp near ptr l1002C4C0
;
;* Call:
; 100093A7, 1001F20C 
;
l10001032: jmp near ptr l1000D2AE
l10001037: jmp near ptr l10026067
l1000103C: jmp near ptr l1002B7A0
l10001041: jmp near ptr l1002B8A0
;
;* Call:
; 100040E4, 10004261 
;
l10001046: jmp near ptr l1000408A
           jmp near ptr l10007104
;
;* Call:
; 100179B1, 100179BD, 10026839, 10026852, 10026C83 
;
l10001050: jmp near ptr l100171E6
l10001055: jmp near ptr l1002BD70
           jmp near ptr l10006290
l1000105F: jmp near ptr l1001FE3A
l10001064: jmp near ptr l10024730
;
;* Call:
; 100096C0, 1001F217 
;
l10001069: jmp near ptr l1000D5CE
l1000106E: jmp near ptr l1000F67B
;
;* Call:
; 100220B5, 10023D46, 10023F5C, 1002F65C, 1002F7E6, 10031263, 10031889 
;
l10001073: jmp near ptr l1002DC7D
l10001078: jmp near ptr l1002B5C0
;
;* Call:
; 10023A75, 10023AF4, 100305EB, 10030973, 10030FDF, 1003105F 
;
l1000107D: jmp near ptr l100076E7
;
;* Call:
; 10008E54, 10008E93 
;
l10001082: jmp near ptr l1000895C
;
;* Call:
; 10011941, 1002F8EB, 10030072, 100303F5 
;
l10001087: jmp near ptr l1002EF9D
           jmp near ptr l100024EF
;
;* Export: ConfigDlg, 0001
;
l10001091: jmp near ptr l10009030
l10001096: jmp near ptr l1001C0D8
;
;* Call:
; 10016063 
;
l1000109B: jmp near ptr l1001651F
;
;* Call:
; 10028A80 
;
l100010A0: jmp near ptr l1001E100
;
;* Call:
; 1000723B 
;
l100010A5: jmp near ptr l1000864D
           jmp near ptr l100038A0
l100010AF: jmp near ptr l1001212B
l100010B4: jmp near ptr l1001203C
           jmp near ptr l1001DFE0
l100010BE: jmp near ptr l1000F654
;
;* Call:
; 10007267 
;
l100010C3: jmp near ptr l10008664
;
;* Call:
; 100096B5 
;
l100010C8: jmp near ptr l1000D785
;
;* Export: CreateRaster, 0002
;
l100010CD: jmp near ptr l100289BA
l100010D2: jmp near ptr l1000FB62
l100010D7: jmp near ptr l10034D50
;
;* Call:
; 10015395, 100154FD, 10015864 
;
l100010DC: jmp near ptr l10015243
;
;* Call:
; 10016055 
;
l100010E1: jmp near ptr l10016072
;
;* Call:
; 10030D5E 
;
l100010E6: jmp near ptr l10002C1E
           jmp near ptr l100084D0
l100010F0: jmp near ptr l10034FF0
l100010F5: jmp near ptr l1002BD30
l100010FA: jmp near ptr l10025F18
;
;* Call:
; 10022507 
;
l100010FF: jmp near ptr l10012820
;
;* Call:
; 100229FB, 10023445 
;
l10001104: jmp near ptr l10018DF0
           jmp near ptr l100059E1
           jmp near ptr l10005FAB
;
;* Call:
; 100096E0 
;
l10001113: jmp near ptr l1000DF59
;
;* Call:
; 1000967E, 1001F314 
;
l10001118: jmp near ptr l1000CA7C
l1000111D: jmp near ptr l10023A08
           jmp near ptr l1002C310
l10001127: jmp near ptr l1000F1E0
l1000112C: jmp near ptr l1002B760
;
;* Call:
; 1001E700 
;
l10001131: jmp near ptr l1001CD74
l10001136: jmp near ptr l1002BCF0
           jmp near ptr l10007FA9
l10001140: jmp near ptr l100173D3
l10001145: jmp near ptr l1002B550
l1000114A: jmp near ptr l10007940
l1000114F: jmp near ptr l10017A3A
;
;* Call:
; 10031623 
;
l10001154: jmp near ptr l1002C67F
;
;* Call:
; 1001FF57 
;
l10001159: jmp near ptr l1002F28D
l1000115E: jmp near ptr l1002CA05
;
;* Call:
; 10009689 
;
l10001163: jmp near ptr l1000CDE5
;
;* Call:
; 100092C2, 1001F297 
;
l10001168: jmp near ptr l1000D9A4
           jmp near ptr l100060A7
l10001172: jmp near ptr l10025E28
l10001177: jmp near ptr l10025F82
l1000117C: jmp near ptr l10034DF0
           jmp near ptr l1001DDA0
;
;* Call:
; 10014130, 100143E8, 1001C4FB, 1001C833, 1001D028, 1001D1EE 
;
l10001186: jmp near ptr l10013C7A
;
;* Call:
; 1001453D, 100173C3 
;
l1000118B: jmp near ptr l10016031
;
;* Call:
; 10009245, 1001C0CC, 1001E6C2 
;
l10001190: jmp near ptr l1001BEDC
;
;* Call:
; 1002114F 
;
l10001195: jmp near ptr l1002C230
l1000119A: jmp near ptr l1000E700
l1000119F: jmp near ptr l10027929
;
;* Call:
; 10017824 
;
l100011A4: jmp near ptr l100176F7
l100011A9: jmp near ptr l1000C6A0
;
;* Call:
; 10012283 
;
l100011AE: jmp near ptr l10005153
l100011B3: jmp near ptr l1000F3F3
           jmp near ptr l1000833A
l100011BD: jmp near ptr l10034D40
;
;* Call:
; 1001C6C2 
;
l100011C2: jmp near ptr l1001DCC0
l100011C7: jmp near ptr l10011BDF
l100011CC: jmp near ptr l10035030
l100011D1: jmp near ptr l10011642
l100011D6: jmp near ptr l10034DA0
l100011DB: jmp near ptr l10034D90
           jmp near ptr l100054D3
;
;* Call:
; 1001E98E 
;
l100011E5: jmp near ptr l100202D7
l100011EA: jmp near ptr l10007980
           jmp near ptr l1000330B
           jmp near ptr l1000423F
l100011F9: jmp near ptr l1002B5D0
;
;* Call:
; 100261E9, 10026259, 100262CF, 10026372, 10026415, 100264B8 
;
l100011FE: jmp near ptr l1001500E
l10001203: jmp near ptr l1000EFD9
l10001208: jmp near ptr l1002B780
l1000120D: jmp near ptr l1000E9C5
;
;* Call:
; 100040CE, 1000424B 
;
l10001212: jmp near ptr l1000401C
;
;* Call:
; 10002662 
;
l10001217: jmp near ptr l100025B1
l1000121C: jmp near ptr l10034DC0
l10001221: jmp near ptr l1002B830
l10001226: jmp near ptr l1002B5E0
l1000122B: jmp near ptr l10034E70
;
;* Call:
; 10014B0E, 10014CC7, 10014EEF, 10014FFE 
;
l10001230: jmp near ptr l1001463F
           jmp near ptr l1001194C
;
;* Call:
; 10011235, 1001180F, 100118E6, 10011B16, 1002F02C, 1002F103, 100306A1, 100306A8, 
; 100306F8, 100307AD, 10030802, 10030809, 10030859, 1003090E, 10031F6A, 100323D1, 
; 10032B14, 10032D71 
;
l1000123A: jmp near ptr l10007F40
           jmp near ptr l10005926
l10001244: jmp near ptr l1000F2D3
;
;* Call:
; 10011726 
;
l10001249: jmp near ptr l10008129
l1000124E: jmp near ptr l1002BF80
           jmp near ptr l100053F7
l10001258: jmp near ptr l1000F482
;
;* Call:
; 100043BC, 1000470D 
;
l1000125D: jmp near ptr l10005341
;
;* Call:
; 1001FB1C 
;
l10001262: jmp near ptr l1001F7EF
;
;* Call:
; 1001482E, 10014902, 10014DE6 
;
l10001267: jmp near ptr l1001D6A5
l1000126C: jmp near ptr l10030E68
;
;* Call:
; 1002CA50, 1002CA6F 
;
l10001271: jmp near ptr l1002C82F
l10001276: jmp near ptr l100208FB
l1000127B: jmp near ptr l10031845
l10001280: jmp near ptr l10034FD0
           jmp near ptr l10002C99
l1000128A: jmp near ptr l1002BDB0
;
;* Call:
; 10031987, 100319E1, 10031A55, 10031AAF 
;
l1000128F: jmp near ptr l10003204
           jmp near ptr l10007226
           jmp near ptr l100054ED
l1000129E: jmp near ptr l1000F246
l100012A3: jmp near ptr l1002BDF0
l100012A8: jmp near ptr l10018CF0
;
;* Call:
; 100212B0 
;
l100012AD: jmp near ptr l10020BB9
l100012B2: jmp near ptr l100152E9
l100012B7: jmp near ptr l10026115
l100012BC: jmp near ptr l10030F8C
           jmp near ptr l100085E7
;
;* Call:
; 10011639 
;
l100012C6: jmp near ptr l10031FC4
;
;* Call:
; 1001C7AD, 1001D192, 1001E7A8 
;
l100012CB: jmp near ptr l1001FA3E
l100012D0: jmp near ptr l10007960
;
;* Export: DestroyRaster, 0003
;
l100012D5: jmp near ptr l10028A98
l100012DA: jmp near ptr l10018CA0
;
;* Call:
; 100096C8 
;
l100012DF: jmp near ptr l1000DCC6
l100012E4: jmp near ptr l1002B860
l100012E9: jmp near ptr l1001C197
l100012EE: jmp near ptr l100155B4
           jmp near ptr l10003666
           jmp near ptr l10008E79
;
;* Call:
; 10017A2F, 10017A65, 10017AB4, 10017B03, 1001EFC7 
;
l100012FD: jmp near ptr l100177EC
;
;* Call:
; 10003132 
;
l10001302: jmp near ptr l10003070
           jmp near ptr l10003259
           jmp near ptr l1002C4C0
;
;* Call:
; 100096D8 
;
l10001311: jmp near ptr l1000E017
l10001316: jmp near ptr l100151A0
           jmp near ptr l10005C38
           jmp near ptr l100071D8
l10001325: jmp near ptr l10034E30
           jmp near ptr l1000898C
l1000132F: jmp near ptr l1002B700
l10001334: jmp near ptr l100260DA
;
;* Call:
; 100096D0, 1001F29F 
;
l10001339: jmp near ptr l1000DBA4
           jmp near ptr l10003BFC
;
;* Call:
; 1002E5AF, 1002E5BD, 1002E5CB, 1002E5D9, 1002E5E7 
;
l10001343: jmp near ptr l10034C00
           jmp near ptr l100043F9
l1000134D: jmp near ptr l1002C0A0
l10001352: jmp near ptr l1000FA80
l10001357: jmp near ptr l1000F68F
l1000135C: jmp near ptr l1001CCF8
l10001361: jmp near ptr l10021A5B
;
;* Call:
; 1002B55A 
;
l10001366: jmp near ptr l1001F599
l1000136B: jmp near ptr l1002045B
l10001370: jmp near ptr l1002BDD0
l10001375: jmp near ptr l1000F178
l1000137A: jmp near ptr l1002F40C
;
;* Call:
; 10009673 
;
l1000137F: jmp near ptr l1000CAC4
           jmp near ptr l1000475D
l10001389: jmp near ptr l1001408A
;
;* Call:
; 100040D9, 10004256 
;
l1000138E: jmp near ptr l10004052
l10001393: jmp near ptr l10034E40
l10001398: jmp near ptr l10017A70
l1000139D: jmp near ptr l10034DB0
;
;* Call:
; 100208F2 
;
l100013A2: jmp near ptr l1002F3DF
;
;* Call:
; 1001E58A 
;
l100013A7: jmp near ptr l1001C0BC
           jmp near ptr l1001DEC0
l100013B1: jmp near ptr l1002F3EA
           jmp near ptr l10006F80
           jmp near ptr l1000377F
;
;* Call:
; 100116E2 
;
l100013C0: jmp near ptr l1002F4BF
l100013C5: jmp near ptr l1000F3DF
;
;* Call:
; 10023DFD, 1003131A 
;
l100013CA: jmp near ptr l10007CE5
;
;* Call:
; 10002527, 10002623, 10002866, 100028C6, 10002CD8, 10006FF3, 10007069, 100070EF, 
; 10007167, 10007192, 100071ED, 10007213, 10011098, 100110CE, 1001152A, 1001155D, 
; 10011827, 100118FE, 10011B33, 10011CC9, 10011CF0, 10011EAB, 10011ED2, 100220CD, 
; 100220DC, 10022176, 1002219E, 10023DE8, 10023E58, 10023E79, 1002F044, 1002F11B, 
; 1002F88E, 1002F8B5, 1002FB76, 1002FBA9, 1002FD20, 1002FD53, 1002FF06, 1002FF2D, 
; 10030289, 100302B0, 10031305, 10031345, 10031360, 10031523, 10031978, 100319D2, 
; 10031A46, 10031AA0, 10031B60, 10031B80, 10031E12, 10031E45, 100320C6, 100320F9, 
; 100323EE, 10032B2C, 10032D89 
;
l100013CF: jmp near ptr l1000802F
l100013D4: jmp near ptr l10035010
           jmp near ptr l100047D7
;
;* Call:
; 100113EA 
;
l100013DE: jmp near ptr l10031D0E
l100013E3: jmp near ptr l1001DDA0
l100013E8: jmp near ptr l100103BF
l100013ED: jmp near ptr l10034D80
;
;* Call:
; 1002F710, 1002F736 
;
l100013F2: jmp near ptr l100030BB
l100013F7: jmp near ptr l1002249D
           jmp near ptr l100350B0
           jmp near ptr l100040C2
           jmp near ptr l1000521B
l1000140B: jmp near ptr l1002B740
l10001410: jmp near ptr l10021EB5
;
;* Call:
; 1001E951 
;
l10001415: jmp near ptr l10021571
;
;* Call:
; 100091BE, 1000928D, 100092FF, 1000937A, 100093E4, 1000944B, 1001F2DC, 1001F34E 
;
l1000141A: jmp near ptr l1000C650
;
;* Call:
; 100221D1, 10023ECD, 1002FA86, 100313AE 
;
l1000141F: jmp near ptr l1002CA7A
;
;* Call:
; 10011930, 10021F51, 1002EED8, 1002F159 
;
l10001424: jmp near ptr l10032E58
           jmp near ptr l10007E03
l1000142E: jmp near ptr l10034E80
l10001433: jmp near ptr l1002B650
l10001438: jmp near ptr l10010C80
l1000143D: jmp near ptr l1000F550
;
;* Call:
; 1002EE39 
;
l10001442: jmp near ptr l1002E98A
l10001447: jmp near ptr l100313DE
;
;* Call:
; 1001E117 
;
l1000144C: jmp near ptr l1002E3D1
l10001451: jmp near ptr l1000F45E
;
;* Call:
; 10030E95, 10030ECB, 10030EF8, 10030F24, 10030F48, 10030F81 
;
l10001456: jmp near ptr l10030567
l1000145B: jmp near ptr l10024FA8
           jmp near ptr l100052B7
;
;* Call:
; 100116FF 
;
l10001465: jmp near ptr l1002F42E
l1000146A: jmp near ptr l1002BCD0
;
;* Call:
; 1001FA85 
;
l1000146F: jmp near ptr l1001FD7B
;
;* Call:
; 1002C9EF 
;
l10001474: jmp near ptr l1002C6C0
;
;* Call:
; 10021EE2 
;
l10001479: jmp near ptr l1002EE80
           jmp near ptr l10006196
;
;* Call:
; 10006FDB, 1000704B, 100070D1, 10007149, 10030DFE, 10030E38 
;
l10001483: jmp near ptr l10007DA2
l10001488: jmp near ptr l1001DFE0
;
;* Call:
; 10023ED8 
;
l1000148D: jmp near ptr l10013483
l10001492: jmp near ptr l1000C6B0
;
;* Call:
; 10032ED3, 10032F3F, 10032FCC 
;
l10001497: jmp near ptr l100329C6
;
;* Call:
; 1001459F 
;
l1000149C: jmp near ptr l100146ED
;
;* Call:
; 10009748, 100097DD 
;
l100014A1: jmp near ptr l1000C700
l100014A6: jmp near ptr l1000F2AE
;
;* Call:
; 1000969F 
;
l100014AB: jmp near ptr l1000D116
;
;* Call:
; 100145EA 
;
l100014B0: jmp near ptr l10014D0C
           jmp near ptr l10013FFD
l100014BA: jmp near ptr l100239E7
l100014BF: jmp near ptr l1002B6E0
           jmp near ptr l10004B88
;
;* Call:
; 1002F325 
;
l100014C9: jmp near ptr l10008EB5
l100014CE: jmp near ptr l1002872D
;
;* Call:
; 1001EE47, 1001EE59, 1001EE6B, 1001EE7D, 1001EE8F, 1001F802 
;
l100014D3: jmp near ptr l10017B27
l100014D8: jmp near ptr l1001D667
l100014DD: jmp near ptr l10034DE0
;
;* Call:
; 10002334, 10002850, 100028B0, 10008DB7, 10008DD9, 10008DFB, 10008E1D 
;
l100014E2: jmp near ptr l10007E3E
;
;* Call:
; 1002E82B 
;
l100014E7: jmp near ptr l10003170
;
;* Call:
; 10009253, 1001E6D0 
;
l100014EC: jmp near ptr l1000CEAB
;
;* Call:
; 100089AA 
;
l100014F1: jmp near ptr l10008920
l100014F6: jmp near ptr l10034E60
l100014FB: jmp near ptr l1001BEC0
;
;* Call:
; 100022A7, 100022DA, 10002398, 1000241F, 10002715, 100027E3, 10007022, 1000711A, 
; 10008AB4, 10008B91, 10008C8C, 10008D83, 10031517 
;
l10001500: jmp near ptr l10008062
;
;* Call:
; 1000231E, 10002815, 10002822, 10006FC6, 10007036, 100070BF, 10007134, 10008135, 
; 10008DA3, 10008DC5, 10008DE7, 10008E09 
;
l10001505: jmp near ptr l100080F3
l1000150A: jmp near ptr l100286FC
l1000150F: jmp near ptr l1001CED6
l10001514: jmp near ptr l100252A6
;
;* Call:
; 100145B8 
;
l10001519: jmp near ptr l10014B62
l1000151E: jmp near ptr l10034BC0
l10001523: jmp near ptr l10010F60
l10001528: jmp near ptr l1001752D
l1000152D: jmp near ptr l10017B0E
;
;* Call:
; 100145D1 
;
l10001532: jmp near ptr l10014CE9
l10001537: jmp near ptr l100350B0
l1000153C: jmp near ptr l1000F112
l10001541: jmp near ptr l100260C0
l10001546: jmp near ptr l10028764
l1000154B: jmp near ptr l10034D20
l10001550: jmp near ptr l10015451
           jmp near ptr l10004192
l1000155A: jmp near ptr l10017AD8
l1000155F: jmp near ptr l1000F5CE
           jmp near ptr l1002B550
           jmp near ptr l10003FDA
;
;* Call:
; 10021594, 1002160A, 10021670, 100216A2, 100216D5, 10021708, 10021788, 10021820, 
; 100218C6, 100219CD 
;
l1000156E: jmp near ptr l10020B94
;
;* Call:
; 10027516 
;
l10001573: jmp near ptr l1001F101
l10001578: jmp near ptr l10025C79
l1000157D: jmp near ptr l1002B590
;
;* Call:
; 100242CD, 100247BD 
;
l10001582: jmp near ptr l1001AFEA
l10001587: jmp near ptr l10007A10
           jmp near ptr l10006355
l10001591: jmp near ptr l10034D30
;
;* Call:
; 1002DCA8, 1002E069 
;
l10001596: jmp near ptr l1002D581
           jmp near ptr l10007202
l100015A0: jmp near ptr l100221EA
           jmp near ptr l10018CA0
;
;* Call:
; 1002D4EC, 1002D51D, 1002D7CB, 1002D8A9, 1002DAF5, 1002DBD3 
;
l100015AA: jmp near ptr l1002CCF9
;
;* Call:
; 10021F45, 1002EECC 
;
l100015AF: jmp near ptr l1002ECB6
;
;* Call:
; 10023AA2, 10023B21, 10030621, 1003100C, 1003108C 
;
l100015B4: jmp near ptr l1002C360
           jmp near ptr l10018CF0
           jmp near ptr l100081D5
l100015C3: jmp near ptr l1002B5B0
l100015C8: jmp near ptr l10034E90
l100015CD: jmp near ptr l10034D60
l100015D2: jmp near ptr l10034E00
l100015D7: jmp near ptr l1002B8F0
;
;* Call:
; 1002E56E, 1002E579, 1002E58D 
;
l100015DC: jmp near ptr l10034B70
l100015E1: jmp near ptr l1000EA2C
           jmp near ptr l10007009
           jmp near ptr l1000218D
           jmp near ptr l1000625B
;
;* Call:
; 1001429C 
;
l100015F5: jmp near ptr l10013FB1
;
;* Call:
; 1002D935, 1002DC5F 
;
l100015FA: jmp near ptr l1002D392
l100015FF: jmp near ptr l1002B800
           jmp near ptr l10034BC0
l10001609: jmp near ptr l100314A0
l1000160E: jmp near ptr l10034F70
           jmp near ptr l1000354D
;
;* Call:
; 1001F7E6, 10034BCA 
;
l10001618: jmp near ptr l1002E851
           jmp near ptr l1000817C
           jmp near ptr l10007980
;
;* Call:
; 10022531 
;
l10001627: jmp near ptr l10022F9D
           jmp near ptr l10008557
           jmp near ptr l1002BF80
;
;* Call:
; 10022A25, 1002346F 
;
l10001636: jmp near ptr l10018F46
l1000163B: jmp near ptr l10023F15
l10001640: jmp near ptr l1002B5F0
;
;* Call:
; 1001614B, 10016351, 10016440, 10016829, 10016D5B, 1001703F, 1001711C 
;
l10001645: jmp near ptr l10015EBB
           jmp near ptr l10007A10
;
;* Call:
; 10021A00 
;
l1000164F: jmp near ptr l10020B5D
l10001654: jmp near ptr l10010279
l10001659: jmp near ptr l10034DD0
           jmp near ptr l10007252
l10001663: jmp near ptr l1000F4E8
l10001668: jmp near ptr l100241EF
l1000166D: jmp near ptr l100179C6
           jmp near ptr l1000717C
;
;* Call:
; 10011225, 1002216D, 10022195, 10023E1F, 1003059B, 100306AF, 10030706, 1003075D, 
; 100307B4, 10030810, 10030867, 100308BE, 10030915, 10030DF7, 10030E31, 10031F5A 
;
l10001677: jmp near ptr l10007D41
;
;* Call:
; 10014603 
;
l1000167C: jmp near ptr l10014F11
           jmp near ptr l10002648
l10001686: jmp near ptr l10021DD4
l1000168B: jmp near ptr l10017A89
           jmp near ptr l1000C7E0
l10001695: jmp near ptr l10024ECB
           jmp near ptr l1002BE60
;
;* Call:
; 1000440D, 100047E5, 10004B96, 10005C64, 1001E181, 1001E192 
;
l1000169F: jmp near ptr l10003430
;
;* Call:
; 1002F334 
;
l100016A4: jmp near ptr l1000254A
l100016A9: jmp near ptr l10025AAF
           jmp near ptr l10002343
l100016B3: jmp near ptr l1002206C
l100016B8: jmp near ptr l1002BE60
           jmp near ptr l100083EC
l100016C2: jmp near ptr l10020755
l100016C7: jmp near ptr l10007340
;
;* Call:
; 10009694, 1001F38B 
;
l100016CC: jmp near ptr l1000CD33
           jmp near ptr l1002C0A0
;
;* Call:
; 10012319 
;
l100016D6: jmp near ptr l1002FC49
;
;* Call:
; 10012120 
;
l100016DB: jmp near ptr l1002FA9F
l100016E0: jmp near ptr l10024A68
l100016E5: jmp near ptr l1001DEC0
           jmp near ptr l10007FEC
l100016EF: jmp near ptr l1002B600
l100016F4: jmp near ptr l1000C6C0
;
;* Call:
; 100089C6, 10008E6E, 10008EAA 
;
l100016F9: jmp near ptr l100089D4
;
;* Call:
; 10009472 
;
l100016FE: jmp near ptr l1000DE1E
l10001703: jmp near ptr l1000F42D
l10001708: jmp near ptr l10034FE0
;
;* Call:
; 10011E27, 10012007, 100221BD 
;
l1000170D: jmp near ptr l10011771
;
;* Call:
; 100305A7 
;
l10001712: jmp near ptr l100070B1
l10001717: jmp near ptr l1001FE50
l1000171C: jmp near ptr l1002B7D0
l10001721: jmp near ptr l10017ABF
           jmp near ptr l100082C3
;
;* Call:
; 100210C2, 100211CD 
;
l1000172B: jmp near ptr l10003040
l10001730: jmp near ptr l10024F36
;
;* Call:
; 100275B9 
;
l10001735: jmp near ptr l10021256
l1000173A: jmp near ptr l10034FA0
l1000173F: jmp near ptr l10015B32
;
;* Call:
; 100306FF, 1003074F, 10030756, 100307A6, 10030860, 100308B0, 100308B7, 10030907 
;
l10001744: jmp near ptr l10007ED7
l10001749: jmp near ptr l1001522F
l1000174E: jmp near ptr l10007870
;
;* Call:
; 10009492, 100094C8, 10009501, 1000953A, 10009570, 100095A9, 100095DD, 1000964F, 
; 1000996E, 10009990, 100099B2, 100099D4, 100099F6, 10009A18, 10009A3A, 1000A194, 
; 1000A1B6, 1000A1D8, 1000A1FA, 1000A21C, 1000A75D, 1000A77F, 1000A7A1, 1000A7C3, 
; 1000A7E5, 1000AC70, 1000AC92, 1000ACB4, 1000B0D3, 1000B0F5, 1000B117, 1000B139, 
; 1000B15B, 1000B17D, 1000B19F, 1000B1C1, 1000B51A, 1000B53C, 1000B55E, 1000B81C, 
; 1000B83E, 1000B860, 1000B882, 1000B8A4 
;
l10001753: jmp near ptr l10009045
l10001758: jmp near ptr l1001FDF8
l1000175D: jmp near ptr l1002BE10
l10001762: jmp near ptr l10031630
l10001767: jmp near ptr l100116ED
l1000176C: jmp near ptr l10034E10
;
;* Call:
; 10009411, 1001F309 
;
l10001771: jmp near ptr l1000C8E0
l10001776: jmp near ptr l10007B10
l1000177B: jmp near ptr l100113F7
           jmp near ptr l10010C80
;
;* Call:
; 1002046D 
;
l10001785: jmp near ptr l1002F33F
           jmp near ptr l10007081
;
;* Call:
; 10030D09 
;
l1000178F: jmp near ptr l10002248
           jmp near ptr l10004D97
           jmp near ptr l10003A77
;
;* Call:
; 100140A9, 10015948, 10015E85, 100172E0, 1001CA84, 1001D408 
;
l1000179E: jmp near ptr l1001455A
           jmp near ptr l10008E28
;
;* Call:
; 10032EC5 
;
l100017A8: jmp near ptr l10032646
           jmp near ptr l100083B1
;
;* Call:
; 10011BCD, 100325ED 
;
l100017B2: jmp near ptr l100321A0
;
;* Call:
; 10011924, 1002F14D 
;
l100017B7: jmp near ptr l1003248C
l100017BC: jmp near ptr l1002F5F7
l100017C1: jmp near ptr l10034E50
;
;* Call:
; 1000903B, 100273AE 
;
l100017C6: jmp near ptr l10009070
l100017CB: jmp near ptr l1002B720
           jmp near ptr l10003F6F
l100017D5: jmp near ptr l100175CE
           jmp near ptr l10006FBC
l100017DF: jmp near ptr l10015D70
l100017E4: jmp near ptr l10020380
l100017E9: jmp near ptr l10025229
;
;* Call:
; 10021DE4 
;
l100017EE: jmp near ptr l1002F7AF
l100017F3: jmp near ptr l10024D13
;
;* Call:
; 10032F4D, 1003302C, 10033098 
;
l100017F8: jmp near ptr l10032C9A
l100017FD: jmp near ptr l1002562B
;
;* Call:
; 10020B89, 10020BAE 
;
l10001802: jmp near ptr l10020A1A
;
;* Call:
; 10030594, 1003069A, 100306F1, 10030748, 1003079F, 100307FB, 10030852, 100308A9, 
; 10030900, 10030EAE, 10030EBF, 10030EEC, 10030F14, 10030F65, 10030F75 
;
l10001807: jmp near ptr l10007E79
;
;* Call:
; 100245DD 
;
l1000180C: jmp near ptr l1001320E
l10001811: jmp near ptr l10034E20
;
;* Call:
; 1001202F 
;
l10001816: jmp near ptr l1002FDF4
l1000181B: jmp near ptr l1002022E
;
;* Call:
; 100096F2, 100096FD, 1000972C, 1000973D, 10009753, 100097C1, 100097D2, 100097E8, 
; 1001F574 
;
l10001820: jmp near ptr l1000C6D0
l10001825: jmp near ptr l100176AF
l1000182A: jmp near ptr l1000EDA2
           jmp near ptr l10007B10
l10001834: jmp near ptr l10025FEA
           jmp near ptr l10005EDD
;
;* Call:
; 1000933D, 1001F383 
;
l1000183E: jmp near ptr l1000CBE9
l10001843: jmp near ptr l100157F0
;
;* Call:
; 1001C65B, 1001D10C, 1001F5AE 
;
l10001848: jmp near ptr l1001FBEC
l1000184D: jmp near ptr l1000F359
           jmp near ptr l10005552
           jmp near ptr l1002BE10
;
;* Call:
; 100096AA 
;
l1000185C: jmp near ptr l1000D109
l10001861: jmp near ptr l1000ED1B
l10001866: jmp near ptr l10034D70
l1000186B: jmp near ptr l1000C7E0
;
;* Call:
; 100089BE, 1002E5A1, 1002E5F5, 10030CFA, 10034CD2 
;
l10001870: jmp near ptr l10002110
l10001875: jmp near ptr l1000EECF
l1000187A: jmp near ptr l1002B670
           jmp near ptr l10007340
;
;* Call:
; 1002D47B, 1002D538, 1002D576 
;
l10001884: jmp near ptr l1002CE09
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001870(U) 
;
l10002110 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-00Ch], 000000020h
           mov dword ptr [ebp-008h], 000000018h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10002177(U) 
;
l1000212D: mov ecx, dword ptr [ebp-00Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l10002179
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           add edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           jmp l1000212D
;
;* Jump:
; 1000213A(C) 
;
l10002179: mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+000000300h], 000000000h
           mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret
l10002110 ENDP
;
;* Jump:
; 100015EB(U) 
;
l1000218D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           push esi
           push edi
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-010h], 000000020h
           mov dword ptr [ebp-00Ch], 000000018h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 100021F6(U) 
;
l100021AC: mov ecx, dword ptr [ebp-010h]
           sub ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           cmp dword ptr [ebp-010h], 000000000h
           jl l100021F8
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-008h]
           add edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           jmp l100021AC
;
;* Jump:
; 100021B9(C) 
;
l100021F8: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+000000300h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002216
;
;* Jump:
; 1000223B(U) 
;
l1000220D: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000220B(U) 
;
l10002216: mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l1000223D
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000018h
           mov esi, dword ptr [ebp+008h]
           add esi, ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000018h
           mov edi, dword ptr [ebp-014h]
           add edi, edx
           mov ecx, 000000006h
           rep movsd
           jmp l1000220D
;
;* Jump:
; 1000221C(C) 
;
l1000223D: mov eax, dword ptr [ebp-014h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l1000218D ENDP
;
;* Jump:
; 1000178F(U) 
;
l10002248 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           push esi
           push edi
           mov dword ptr [ebp-038h], ecx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+000000300h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002274
;
;* Jump:
; 100022C0(U) 
;
l1000226B: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10002269(U) 
;
l10002274: mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+000000300h]
           sub edx, 000000001h
           cmp dword ptr [ebp-004h], edx
           jnb l100022C2
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax+008h]
           push edx
           lea eax, [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea ecx, [edx+ecx+008h]
           call l10001500
           mov esi, eax
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov edi, dword ptr [ebp-038h]
           add edi, eax
           mov ecx, 000000006h
           rep movsd
           jmp l1000226B
;
;* Jump:
; 10002283(C) 
;
l100022C2: mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx+008h]
           push eax
           lea ecx, [ebp-034h]
           push ecx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000008h
           call l10001500
           mov esi, eax
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 000000018h
           mov edi, dword ptr [ebp-038h]
           add edi, edx
           mov ecx, 000000006h
           rep movsd
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002305
;
;* Jump:
; 10002339(U) 
;
l100022FC: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100022FA(U) 
;
l10002305: mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l1000233B
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-038h]
           add ecx, eax
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-038h]
           add ecx, edx
           call l100014E2
           jmp l100022FC
;
;* Jump:
; 10002311(C) 
;
l1000233B: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10002248 ENDP
;
;* Jump:
; 100016AE(U) 
;
l10002343 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000078h
           push esi
           push edi
           mov dword ptr [ebp-068h], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           lea eax, [ebp-010h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+000000300h]
           sub eax, 000000001h
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-068h]
           add ecx, eax
           push ecx
           lea edx, [ebp-04Ch]
           push edx
           mov ecx, dword ptr [ebp-068h]
           call l10001500
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           fld dword ptr [ebp+010h]
           fmul qword ptr [ebp-010h]
           fmul dword ptr [ebp+00Ch]
           fdiv qword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-030h], eax
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-034h], eax
           fld dword ptr [ebp+00Ch]
           fmul qword ptr [ebp-018h]
           fdiv qword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-02Ch], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l100023EC
;
;* Jump:
; 100024C5(U) 
;
l100023E3: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 100023E1(U) 
;
l100023EC: mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+000000300h]
           sub ecx, 000000001h
           cmp dword ptr [ebp-01Ch], ecx
           jnb l100024CA
           mov edx, dword ptr [ebp-01Ch]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-068h]
           add eax, edx
           push eax
           lea ecx, [ebp-064h]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           imul edx, edx, 000000018h
           mov ecx, dword ptr [ebp-068h]
           add ecx, edx
           call l10001500
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           fld dword ptr [ebp+00Ch]
           fmul qword ptr [ebp-018h]
           fdiv qword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-024h], eax
           fld dword ptr [ebp+010h]
           fmul qword ptr [ebp-010h]
           fmul dword ptr [ebp+00Ch]
           fdiv qword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-020h], eax
           mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [ebp-024h]
           jnl l10002465
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-06Ch], ecx
           jmp l1000246B
;
;* Jump:
; 1000245B(C) 
;
l10002465: mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-06Ch], edx
;
;* Jump:
; 10002463(U) 
;
l1000246B: mov eax, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-024h]
           jle l10002481
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-070h], edx
           jmp l10002487
;
;* Jump:
; 10002477(C) 
;
l10002481: mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-070h], eax
;
;* Jump:
; 1000247F(U) 
;
l10002487: mov ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-034h]
           cmp edx, dword ptr [ebp-020h]
           jnl l1000249D
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-074h], eax
           jmp l100024A3
;
;* Jump:
; 10002493(C) 
;
l1000249D: mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-074h], ecx
;
;* Jump:
; 1000249B(U) 
;
l100024A3: mov edx, dword ptr [ebp-074h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [ebp-020h]
           jle l100024B9
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-078h], ecx
           jmp l100024BF
;
;* Jump:
; 100024AF(C) 
;
l100024B9: mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-078h], edx
;
;* Jump:
; 100024B7(U) 
;
l100024BF: mov eax, dword ptr [ebp-078h]
           mov dword ptr [ebp-030h], eax
           jmp near ptr l100023E3
;
;* Jump:
; 100023FB(C) 
;
l100024CA: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [ecx+00Ch], eax
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10002343 ENDP
;
;* Jump:
; 1000108C(U) 
;
l100024EF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000250A
;
;* Jump:
; 1000253D(U) 
;
l10002501: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100024FF(U) 
;
l1000250A: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l1000253F
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-008h]
           add ecx, eax
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100013CF
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l1000253D
           xor eax, eax
           jmp l10002544
;
;* Jump:
; 10002537(C) 
;
l1000253D: jmp l10002501
;
;* Jump:
; 10002516(C) 
;
;* Control "OK", Dialog 006E
;
l1000253F: mov eax, 000000001h
;
;* Jump:
; 1000253B(U) 
;
l10002544: mov esp, ebp
           pop ebp
           ret 00004h
l100024EF ENDP
;
;* Jump:
; 100016A4(U) 
;
l1000254A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           push edi
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000300h]
           mov dword ptr [eax+000000300h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002579
;
;* Jump:
; 100025A4(U) 
;
l10002570: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000256E(U) 
;
l10002579: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l100025A6
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov esi, dword ptr [ebp+008h]
           add esi, eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000018h
           mov edi, dword ptr [ebp-008h]
           add edi, ecx
           mov ecx, 000000006h
           rep movsd
           jmp l10002570
;
;* Jump:
; 10002585(C) 
;
l100025A6: mov eax, dword ptr [ebp-008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1000254A ENDP
;
;* Jump:
; 10001217(U) 
;
l100025B1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax], 000000000h
           jmp l100025D0
;
;* Jump:
; 1000263E(U) 
;
l100025C3: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           add edx, 000000001h
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax], edx
;
;* Jump:
; 100025C1(U) 
;
l100025D0: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx]
           cmp eax, dword ptr [edx+000000300h]
           jnb l10002640
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx], 000000000h
           jmp l100025F8
;
;* Jump:
; 1000263C(U) 
;
l100025EB: mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [ecx], eax
;
;* Jump:
; 100025E9(U) 
;
l100025F8: mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx]
           cmp ecx, dword ptr [eax+000000300h]
           jnb l1000263E
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+008h]
           add ecx, eax
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-004h]
           add ecx, eax
           call l100013CF
           fcomp qword ptr [g10037030]
           fnstsw ax
           test ah, 001h
           je l1000263C
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l10002642
;
;* Jump:
; 10002633(C) 
;
l1000263C: jmp l100025EB
;
;* Jump:
; 10002606(C) 
;
l1000263E: jmp l100025C3
;
;* Jump:
; 100025DE(C) 
;
l10002640: xor eax, eax
;
;* Jump:
; 1000263A(U) 
;
l10002642: mov esp, ebp
           pop ebp
           ret 0000Ch
l100025B1 ENDP
;
;* Jump:
; 10001681(U) 
;
l10002648 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           push esi
           push edi
           mov dword ptr [ebp-070h], ecx
           lea eax, [ebp-028h]
           push eax
           lea ecx, [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-070h]
           call l10001217
           test eax, eax
           jne l10002672
           xor eax, eax
           jmp near ptr l10002C07
;
;* Jump:
; 10002669(C) 
;
l10002672: xor eax, eax
           mov al, byte ptr [g1003C648]
           and eax, 000000001h
           test eax, eax
           jne l100026D4
           mov cl, byte ptr [g1003C648]
           or cl, 001h
           mov byte ptr [g1003C648], cl
           mov dword ptr [g1003C650], 000000000h
           mov dword ptr [g1003C654], 000000000h
           mov edx, offset g1003C658
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, offset g1003C660
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           push offset l10002C19
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 1000267E(C) 
;
l100026D4: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+000000300h]
           mov eax, dword ptr [ebp-028h]
           lea eax, [eax+edx-001h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+008h]
           add eax, edx
           push eax
           lea ecx, [ebp-048h]
           push ecx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-070h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           imul edx, edx, 000000018h
           mov ecx, dword ptr [ebp-070h]
           add ecx, edx
           call l10001500
           mov esi, eax
           mov ecx, 000000006h
           mov edi, offset g1003C650
           rep movsd
           fld qword ptr [g1003C660]
           fcomp qword ptr [g10037050]
           fnstsw ax
           test ah, 001h
           je l10002742
           xor eax, eax
           jmp near ptr l10002C07
;
;* Jump:
; 10002739(C) 
;
l10002742: xor edx, edx
           mov dl, byte ptr [g1003C648]
           and edx, 000000002h
           test edx, edx
           jne l100027A2
           mov al, byte ptr [g1003C648]
           or al, 002h
           mov byte ptr [g1003C648], al
           mov dword ptr [g1003C330], 000000000h
           mov dword ptr [g1003C334], 000000000h
           mov ecx, offset g1003C338
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, offset g1003C340
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           push offset l10002C14
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 1000274F(C) 
;
l100027A2: mov eax, dword ptr [ebp-070h]
           mov ecx, dword ptr [eax+000000300h]
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx-001h]
           mov ecx, dword ptr [ebp-070h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-070h]
           add eax, edx
           push eax
           lea ecx, [ebp-060h]
           push ecx
           mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           imul edx, edx, 000000018h
           mov ecx, dword ptr [ebp+008h]
           add ecx, edx
           call l10001500
           mov esi, eax
           mov ecx, 000000006h
           mov edi, offset g1003C330
           rep movsd
           fld qword ptr [g1003C340]
           fcomp qword ptr [g10037050]
           fnstsw ax
           test ah, 001h
           je l10002810
           xor eax, eax
           jmp near ptr l10002C07
;
;* Jump:
; 10002807(C) 
;
l10002810: mov ecx, offset g1003C650
           call l10001505
           fstp qword ptr [ebp-030h]
           mov ecx, offset g1003C330
           call l10001505
           fstp qword ptr [ebp-00Ch]
           fld qword ptr [ebp-030h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l10002843
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-010h], 000000001h
           jmp l1000288A
;
;* Jump:
; 10002838(C) 
;
l10002843: mov edx, dword ptr [ebp-02Ch]
           push edx
           mov eax, dword ptr [ebp-030h]
           push eax
           mov ecx, offset g1003C650
           call l100014E2
           mov ecx, dword ptr [ebp-024h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-070h]
           add edx, ecx
           push edx
           mov ecx, offset g1003C650
           call l100013CF
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l10002883
           mov dword ptr [ebp-010h], 000000000h
           jmp l1000288A
;
;* Jump:
; 10002878(C) 
;
l10002883: xor eax, eax
           jmp near ptr l10002C07
;
;* Jump:
; 10002841(U), 10002881(U) 
;
l1000288A: fld qword ptr [ebp-00Ch]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l100028A3
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-018h], 000000001h
           jmp l100028EA
;
;* Jump:
; 10002898(C) 
;
l100028A3: mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov ecx, offset g1003C330
           call l100014E2
           mov edx, dword ptr [ebp-024h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-070h]
           add eax, edx
           push eax
           mov ecx, offset g1003C330
           call l100013CF
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l100028E3
           mov dword ptr [ebp-018h], 000000000h
           jmp l100028EA
;
;* Jump:
; 100028D8(C) 
;
l100028E3: xor eax, eax
           jmp near ptr l10002C07
;
;* Jump:
; 100028A1(U), 100028E1(U) 
;
l100028EA: xor ecx, ecx
           mov cl, byte ptr [g1003C648]
           and ecx, 000000004h
           test ecx, ecx
           jne l10002976
           mov dl, byte ptr [g1003C648]
           or dl, 004h
           mov byte ptr [g1003C648], dl
           mov dword ptr [ebp-06Ch], 000000020h
           mov dword ptr [ebp-068h], 000000018h
           mov dword ptr [ebp-064h], offset g1003C348
;
;* Jump:
; 10002967(U) 
;
l1000291D: mov eax, dword ptr [ebp-06Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
           cmp dword ptr [ebp-06Ch], 000000000h
           jl l10002969
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-064h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-064h]
           add ecx, dword ptr [ebp-068h]
           mov dword ptr [ebp-064h], ecx
           jmp l1000291D
;
;* Jump:
; 1000292A(C) 
;
l10002969: push offset l10002C0F
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 100028F7(C) 
;
l10002976: mov dword ptr [ebp-014h], 000000000h
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-024h]
           lea eax, [eax+edx+001h]
           mov ecx, dword ptr [ebp-070h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           mov dword ptr [ebp-004h], edx
           mov edx, dword ptr [ebp-070h]
           mov eax, dword ptr [edx+000000300h]
           mov ecx, dword ptr [ebp-024h]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp-070h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           mov dword ptr [ebp-01Ch], edx
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp-01Ch]
           ja l10002A02
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], eax
           jmp l100029CC
;
;* Jump:
; 100029FB(U) 
;
l100029C3: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 100029C1(U) 
;
l100029CC: mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ebp-01Ch]
           ja l100029FD
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov esi, dword ptr [ebp-070h]
           add esi, eax
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           jmp l100029C3
;
;* Jump:
; 100029D2(C) 
;
l100029FD: jmp near ptr l10002A8D
;
;* Jump:
; 100029B9(C) 
;
l10002A02: mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], edx
           jmp l10002A13
;
;* Jump:
; 10002A48(U) 
;
l10002A0A: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10002A08(U) 
;
l10002A13: mov ecx, dword ptr [ebp-070h]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l10002A4A
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov esi, dword ptr [ebp-070h]
           add esi, eax
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           jmp l10002A0A
;
;* Jump:
; 10002A1F(C) 
;
l10002A4A: mov dword ptr [ebp-020h], 000000000h
           jmp l10002A5C
;
;* Jump:
; 10002A8B(U) 
;
l10002A53: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10002A51(U) 
;
l10002A5C: mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [ebp-01Ch]
           ja l10002A8D
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000018h
           mov esi, dword ptr [ebp-070h]
           add esi, ecx
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           jmp l10002A53
;
;* Jump:
; 100029FD(U), 10002A62(C) 
;
l10002A8D: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-028h]
           lea eax, [ecx+eax+001h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           mov dword ptr [ebp-004h], edx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000300h]
           mov ecx, dword ptr [ebp-028h]
           lea eax, [ecx+eax-001h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           div dword ptr [ecx+000000300h]
           mov dword ptr [ebp-01Ch], edx
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ebp-01Ch]
           ja l10002B12
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], eax
           jmp l10002ADC
;
;* Jump:
; 10002B0B(U) 
;
l10002AD3: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10002AD1(U) 
;
l10002ADC: mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ebp-01Ch]
           ja l10002B0D
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov esi, dword ptr [ebp+008h]
           add esi, eax
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           jmp l10002AD3
;
;* Jump:
; 10002AE2(C) 
;
l10002B0D: jmp near ptr l10002B9D
;
;* Jump:
; 10002AC9(C) 
;
l10002B12: mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], edx
           jmp l10002B23
;
;* Jump:
; 10002B58(U) 
;
l10002B1A: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10002B18(U) 
;
l10002B23: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l10002B5A
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov esi, dword ptr [ebp+008h]
           add esi, eax
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
           jmp l10002B1A
;
;* Jump:
; 10002B2F(C) 
;
l10002B5A: mov dword ptr [ebp-020h], 000000000h
           jmp l10002B6C
;
;* Jump:
; 10002B9B(U) 
;
l10002B63: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 10002B61(U) 
;
l10002B6C: mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [ebp-01Ch]
           ja l10002B9D
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 000000018h
           mov esi, dword ptr [ebp+008h]
           add esi, ecx
           mov edi, dword ptr [ebp-014h]
           imul edi, edi, 000000018h
           add edi, offset g1003C348
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
           jmp l10002B63
;
;* Jump:
; 10002B0D(U), 10002B72(C) 
;
l10002B9D: mov eax, dword ptr [ebp-070h]
           mov ecx, dword ptr [eax+000000300h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+000000300h]
           lea ecx, [ecx+eax-002h]
           sub ecx, dword ptr [ebp-010h]
           sub ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-070h]
           mov dword ptr [edx+000000300h], ecx
           mov dword ptr [ebp-020h], 000000000h
           jmp l10002BD4
;
;* Jump:
; 10002C00(U) 
;
l10002BCB: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 10002BC9(U) 
;
l10002BD4: mov ecx, dword ptr [ebp-070h]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l10002C02
           mov esi, dword ptr [ebp-020h]
           imul esi, esi, 000000018h
           add esi, offset g1003C348
           mov eax, dword ptr [ebp-020h]
           imul eax, eax, 000000018h
           mov edi, dword ptr [ebp-070h]
           add edi, eax
           mov ecx, 000000006h
           rep movsd
           jmp l10002BCB
;
;* Jump:
; 10002BE0(C) 
;
;* Control "OK", Dialog 006E
;
l10002C02: mov eax, 000000001h
;
;* Jump:
; 1000266D(U), 1000273D(U), 1000280B(U), 10002885(U), 100028E5(U) 
;
l10002C07: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10002648 ENDP
;
l10002C0F PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10002C0F ENDP
;
l10002C14 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10002C14 ENDP
;
l10002C19 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10002C19 ENDP
;
;* Jump:
; 100010E6(U) 
;
l10002C1E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10002C39
;
;* Jump:
; 10002C8E(U) 
;
l10002C30: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10002C2E(U) 
;
l10002C39: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+000000300h]
           jbe l10002C90
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+eax]
           fsub qword ptr [edx]
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l10002C8E
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+eax+008h]
           fsub qword ptr [edx+008h]
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l10002C8E
           mov eax, dword ptr [ebp-004h]
           jmp l10002C93
;
;* Jump:
; 10002C65(C), 10002C87(C) 
;
l10002C8E: jmp l10002C30
;
;* Jump:
; 10002C45(C) 
;
l10002C90: or eax, 0FFFFFFFFh
;
;* Jump:
; 10002C8C(U) 
;
l10002C93: mov esp, ebp
           pop ebp
           ret 00004h
l10002C1E ENDP
;
;* Jump:
; 10001285(U) 
;
l10002C99 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10002CBB
;
;* Jump:
; 10002D12(U) 
;
l10002CB2: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10002CB0(U) 
;
l10002CBB: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+000000300h]
           jnb l10002D14
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-014h]
           add ecx, edx
           call l100013CF
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [eax+018h]
           fnstsw ax
           test ah, 041h
           jne l10002CFB
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           jmp l10002D12
;
;* Jump:
; 10002CEE(C) 
;
l10002CFB: mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx+018h]
           fchs
           fcomp qword ptr [ebp-008h]
           fnstsw ax
           test ah, 041h
           jne l10002D12
           or eax, 0FFFFFFFFh
           jmp l10002D2B
;
;* Jump:
; 10002CF9(U), 10002D0B(C) 
;
l10002D12: jmp l10002CB2
;
;* Jump:
; 10002CC7(C) 
;
l10002D14: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+000000300h]
           jne l10002D29
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l10002D2B
;
;* Jump:
; 10002D20(C) 
;
l10002D29: xor eax, eax
;
;* Jump:
; 10002D10(U), 10002D27(U) 
;
l10002D2B: mov esp, ebp
           pop ebp
           ret 00004h
l10002C99 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000172B(U) 
;
l10003040 PROC
           push ebp
           mov ebp, esp
;
;* Jump:
; 10003061(U) 
;
l10003043: mov eax, dword ptr [ebp+010h]
           sub eax, 000000001h
           mov dword ptr [ebp+010h], eax
           cmp dword ptr [ebp+010h], 000000000h
           jl l10003063
           mov ecx, dword ptr [ebp+008h]
           call [ebp+014h]
           mov ecx, dword ptr [ebp+008h]
           add ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], ecx
           jmp l10003043
;
;* Jump:
; 10003050(C) 
;
l10003063: pop ebp
           ret 00010h
l10003040 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001302(U) 
;
l10003070 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000308B
;
;* Jump:
; 100030B2(U) 
;
l10003082: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10003080(U) 
;
l1000308B: cmp dword ptr [ebp-004h], 0000003E8h
           jg l100030B4
           fild dword ptr [ebp-004h]
           fdiv qword ptr [g10037060]
           call l10035ECA; [MSVCRT._CIsqrt].
           fchs
           call l10035EC4; [MSVCRT._CIexp].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+ecx*04h]
           jmp l10003082
;
;* Jump:
; 10003092(C) 
;
l100030B4: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10003070 ENDP
;
;* Jump:
; 100013F2(U) 
;
l100030BB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           fld dword ptr [ebp+008h]
           fcomp dword ptr [g10037078]
           fnstsw ax
           test ah, 001h
           jne l100030DC
           fld dword ptr [g10037074]
           jmp l1000311A
;
;* Jump:
; 100030D2(C) 
;
l100030DC: fld dword ptr [ebp+008h]
           fmul dword ptr [g10037070]
           fst dword ptr [ebp+008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fsubr dword ptr [ebp+008h]
           fstp dword ptr [ebp-004h]
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fmul dword ptr [ecx+eax*04h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-004h]
           fmul dword ptr [eax+edx*04h+004h]
           faddp st(01h), st(00h)
;
;* Jump:
; 100030DA(U) 
;
l1000311A: mov esp, ebp
           pop ebp
           ret 00004h
l100030BB ENDP
;
l10003120 PROC
           push ebp
           mov ebp, esp
           call l1000312A
           pop ebp
           ret
l10003120 ENDP
;
;* Call:
; 10003123 
;
l1000312A PROC
           push ebp
           mov ebp, esp
           mov ecx, offset g1003C710
           call l10001302
           pop ebp
           ret
l1000312A ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014E7(U) 
;
l10003170 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push 000000080h
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [g1004D9DC], eax
           mov eax, dword ptr [g1004D9DC]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [g1004D9DC]
           mov dword ptr [ebp-00Ch], ecx
           jmp l100031AC
;
;* Jump:
; 100031F4(U) 
;
l100031A3: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 100031A1(U) 
;
l100031AC: cmp dword ptr [ebp-004h], 000000080h
           jnl l100031F6
           mov eax, dword ptr [ebp-004h]
           shl eax, 011h
           or eax, 03F000000h
           mov dword ptr [ebp-008h], eax
           fld dword ptr [ebp-008h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fdivr qword ptr [g10037080]
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000002000h
           shr ecx, 00Fh
           and ecx, 0000000FFh
           mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx], cl
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp l100031A3
;
;* Jump:
; 100031B3(C) 
;
l100031F6: mov ecx, dword ptr [g1004D9DC]
           mov byte ptr [ecx+040h], 0FFh
           mov esp, ebp
           pop ebp
           ret
l10003170 ENDP
;
;* Jump:
; 1000128F(U) 
;
l10003204 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           push ebx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           shr edx, 017h
           and edx, 0000000FFh
           mov eax, 00000017Ch
           sub eax, edx
           shr eax, 001h
           shl eax, 017h
           mov ecx, dword ptr [ebp-004h]
           shr ecx, 011h
           and ecx, 00000007Fh
           mov edx, dword ptr [g1004D9DC]
           xor ebx, ebx
           mov bl, [edx+ecx]
           shl ebx, 00Fh
           or eax, ebx
           mov dword ptr [ebp-010h], eax
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-008h], eax
           fld dword ptr [ebp-008h]
           pop ebx
           mov esp, ebp
           pop ebp
           ret
l10003204 ENDP
;
;* Jump:
; 10001307(U) 
;
l10003259 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           lea eax, [ebp-004h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l10003277
;
;* Jump:
; 10003302(U) 
;
l1000326E: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1000326C(U) 
;
l10003277: cmp dword ptr [ebp-010h], 000002000h
           jnl l10003307
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov edx, dword ptr [ebp-010h]
           shl edx, 007h
           or edx, 03FF00000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax], edx
           fld qword ptr [ebp-008h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           and edx, 0000FFFFFh
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [offset g1003D9DC+eax*04h], edx
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           shl ecx, 007h
           or ecx, 040000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx], ecx
           fld qword ptr [ebp-008h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           and ecx, 0000FFFFFh
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [offset g100459DC+edx*04h], ecx
           jmp near ptr l1000326E
;
;* Jump:
; 1000327E(C) 
;
l10003307: mov esp, ebp
           pop ebp
           ret
l10003259 ENDP
;
;* Jump:
; 100011EF(U) 
;
l1000330B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           lea eax, [ebp+00Ch]
           mov dword ptr [ebp-008h], eax
           fld qword ptr [ebp+008h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 040h
           je l1000332F
           fld qword ptr [g10037020]
           jmp l10003397
;
;* Jump:
; 10003325(C) 
;
l1000332F: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           shr edx, 014h
           sub edx, 0000003FFh
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           and ecx, 0000FFFFFh
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], ecx
           mov eax, dword ptr [ebp-004h]
           and eax, 000000001h
           test eax, eax
           je l1000336A
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           or edx, 000100000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], edx
;
;* Jump:
; 10003358(C) 
;
l1000336A: mov ecx, dword ptr [ebp-004h]
           shr ecx, 001h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx]
           shr eax, 007h
           mov ecx, dword ptr [ebp-004h]
           add ecx, 0000003FFh
           shl ecx, 014h
           mov edx, dword ptr [offset g1003D9DC+eax*04h]
           or edx, ecx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], edx
           fld qword ptr [ebp+008h]
;
;* Jump:
; 1000332D(U) 
;
l10003397: mov esp, ebp
           pop ebp
           ret
l1000330B ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000169F(U) 
;
           call l10003430; Implemented in c++ code
;
;* Jump:
; 10001613(U) 
;
l1000354D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+020h], 000000000h
           mov dword ptr [eax+024h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+028h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+02Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+050h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+054h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1000354D ENDP
;
;* Jump:
; 100012F3(U) 
;
l10003666 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+020h], 000000000h
           mov dword ptr [eax+024h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+028h], edx
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [ecx+02Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+050h], eax
           mov ecx, dword ptr [ebp+01Ch]
           mov dword ptr [edx+054h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00018h
l10003666 ENDP
;
;* Jump:
; 100013BB(U) 
;
           call l1000377F; Implemented in c++ code
;
;* Jump:
; 100010AA(U) 
;
l100038A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           fld qword ptr [ebp+00Ch]
           call l10035EDC; [MSVCRT._CIcos].
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp+00Ch]
           call l10035ED6; [MSVCRT._CIsin].
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [eax+014h]
           mov dword ptr [ebp-024h], edx
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+030h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-008h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+060h], 000000000h
           mov dword ptr [eax+064h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+068h], 000000000h
           mov dword ptr [ecx+06Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+070h], 000000000h
           mov dword ptr [edx+074h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100038A0 ENDP
;
;* Jump:
; 10001799(U) 
;
l10003A77 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g100370A0]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           fsubr qword ptr [g10037080]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+020h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+040h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+060h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g100370A0]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           fsubr qword ptr [g10037080]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+028h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+048h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+068h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g100370A0]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+014h]
           fsubr qword ptr [g10037080]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037090]
           fmul qword ptr [eax+014h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+070h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+018h], 000000000h
           mov dword ptr [eax+01Ch], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+038h], 000000000h
           mov dword ptr [ecx+03Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+058h], 000000000h
           mov dword ptr [edx+05Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+078h], 000000000h
           mov dword ptr [eax+07Ch], 03FF00000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10003A77 ENDP
;
;* Jump:
; 1000133E(U) 
;
l10003BFC PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax]
           fcomp qword ptr [g100370B0]
           fnstsw ax
           test ah, 041h
           jne l10003D2F
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+018h], 000000000h
           mov dword ptr [ecx+01Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+020h], 000000000h
           mov dword ptr [edx+024h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+028h], 000000000h
           mov dword ptr [eax+02Ch], 03FF00000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+030h], 000000000h
           mov dword ptr [ecx+034h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+040h], 000000000h
           mov dword ptr [eax+044h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+048h], 000000000h
           mov dword ptr [ecx+04Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+050h], 000000000h
           mov dword ptr [edx+054h], 03FF00000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+058h], 000000000h
           mov dword ptr [eax+05Ch], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+060h], 000000000h
           mov dword ptr [ecx+064h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+068h], 000000000h
           mov dword ptr [edx+06Ch], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+070h], 000000000h
           mov dword ptr [eax+074h], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+078h], 000000000h
           mov dword ptr [ecx+07Ch], 03FF00000h
           jmp near ptr l10003F66
;
;* Jump:
; 10003C15(C) 
;
l10003D2F: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-010h]
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 03FF00000h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l10003DBD
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [edx+004h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+00Ch]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 10003D97(C) 
;
l10003DBD: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           fld qword ptr [ebp-010h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [g100370AC]
           fmul dword ptr [ecx]
           fmul qword ptr [ebp-010h]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+018h], 000000000h
           mov dword ptr [edx+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+038h], 000000000h
           mov dword ptr [eax+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp qword ptr [ecx+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp-02Ch]
           fstp qword ptr [edx+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-02Ch]
           fstp qword ptr [eax+050h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+058h], 000000000h
           mov dword ptr [ecx+05Ch], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+060h], 000000000h
           mov dword ptr [edx+064h], 000000000h
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+068h], 000000000h
           mov dword ptr [eax+06Ch], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+070h], 000000000h
           mov dword ptr [ecx+074h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+078h], 000000000h
           mov dword ptr [edx+07Ch], 03FF00000h
;
;* Jump:
; 10003D2A(U) 
;
l10003F66: mov eax, dword ptr [ebp-02Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10003BFC ENDP
;
;* Jump:
; 100017D0(U) 
;
           call l10003F6F; Implemented in c++ code
;
;* Jump:
; 10001569(U) 
;
l10003FDA PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+060h], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+064h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+068h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+06Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+070h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+074h], eax
           mov esp, ebp
           pop ebp
           ret 00004h
l10003FDA ENDP
;
;* Jump:
; 10001212(U) 
;
l1000401C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l1000401C ENDP
;
;* Jump:
; 1000138E(U) 
;
l10004052 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l10004052 ENDP
;
;* Jump:
; 10001046(U) 
;
l1000408A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l1000408A ENDP
;
;* Jump:
; 10001401(U) 
;
l100040C2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-034h], ecx
           mov ecx, dword ptr [ebp-034h]
           call l10001212
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-034h]
           call l1000138E
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-034h]
           call l10001046
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-008h]
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
           fld qword ptr [ebp+008h]
           fdiv qword ptr [ebp-018h]
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [eax+020h]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [edx+028h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+028h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [eax+040h]
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [edx+048h]
           mov eax, dword ptr [ebp-034h]
           fstp qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ebp-030h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-034h]
           fstp qword ptr [edx+050h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100040C2 ENDP
;
;* Jump:
; 10001555(U) 
;
l10004192 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov ecx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [edx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+010h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [eax+014h]
           mov dword ptr [ecx+014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+020h]
           mov dword ptr [edx+020h], eax
           mov ecx, dword ptr [ecx+024h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+028h]
           mov dword ptr [eax+028h], ecx
           mov edx, dword ptr [edx+02Ch]
           mov dword ptr [eax+02Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+030h]
           mov dword ptr [ecx+030h], edx
           mov eax, dword ptr [eax+034h]
           mov dword ptr [ecx+034h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+040h]
           mov dword ptr [edx+040h], eax
           mov ecx, dword ptr [ecx+044h]
           mov dword ptr [edx+044h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+048h]
           mov dword ptr [eax+048h], ecx
           mov edx, dword ptr [edx+04Ch]
           mov dword ptr [eax+04Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+050h]
           mov dword ptr [ecx+050h], edx
           mov eax, dword ptr [eax+054h]
           mov dword ptr [ecx+054h], eax
           mov esp, ebp
           pop ebp
           ret 00004h
l10004192 ENDP
;
;* Jump:
; 100011F4(U) 
;
l1000423F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov ecx, dword ptr [ebp-01Ch]
           call l10001212
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           call l1000138E
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           call l10001046
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax]
           fdiv qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+020h]
           fdiv qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+028h]
           fdiv qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+028h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+030h]
           fdiv qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+040h]
           fdiv qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fstp qword ptr [ecx+040h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx+048h]
           fdiv qword ptr [ebp-018h]
           mov eax, dword ptr [ebp-01Ch]
           fstp qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+050h]
           fdiv qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+050h]
           mov esp, ebp
           pop ebp
           ret
l1000423F ENDP
;
;* Jump:
; 10001019(U) 
;
l100042F2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           push esi
           push edi
           mov dword ptr [ebp-054h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000430F
;
;* Jump:
; 10004359(U) 
;
l10004306: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10004304(U) 
;
l1000430F: cmp dword ptr [ebp-004h], 000000003h
           jnb l1000435B
           mov dword ptr [ebp-020h], 000000000h
           jmp l10004327
;
;* Jump:
; 10004357(U) 
;
l1000431E: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1000431C(U) 
;
l10004327: cmp dword ptr [ebp-020h], 000000003h
           jnb l10004359
           mov edx, dword ptr [ebp-020h]
           shl edx, 005h
           mov eax, dword ptr [ebp-054h]
           add eax, edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov esi, dword ptr [ebp+008h]
           add esi, edx
           mov edx, dword ptr [ebp-020h]
           mov edi, dword ptr [eax+ecx*08h]
           mov dword ptr [esi+edx*08h], edi
           mov eax, dword ptr [eax+ecx*08h+004h]
           mov dword ptr [esi+edx*08h+004h], eax
           jmp l1000431E
;
;* Jump:
; 1000432B(C) 
;
l10004359: jmp l10004306
;
;* Jump:
; 10004313(C) 
;
l1000435B: mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+070h]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ecx+074h]
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+068h]
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ecx+06Ch]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-054h]
           mov edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ecx+064h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-018h], edx
           lea eax, [ebp-014h]
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [eax+004h], edx
           lea eax, [ebp-00Ch]
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-01Ch]
           push ecx
           lea edx, [ebp-038h]
           push edx
           call l1000125D
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-01Ch]
           rep movsd
           fld qword ptr [ebp-01Ch]
           fchs
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+060h]
           fld qword ptr [ebp-014h]
           fchs
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+068h]
           fld qword ptr [ebp-00Ch]
           fchs
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+070h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100042F2 ENDP
;
;* Jump:
; 10001348(U) 
;
l100043F9 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000D4h
           push esi
           push edi
           mov dword ptr [ebp-0000000D4h], ecx
           lea ecx, [ebp-080h]
           call l1000169F
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+028h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+048h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+028h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+020h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx+050h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+048h]
           mov edx, dword ptr [ebp-0000000D4h]
           fmul qword ptr [edx]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-0000000A0h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+028h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+030h]
           fmul qword ptr [eax+048h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-080h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+020h]
           fmul qword ptr [edx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+040h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-060h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax+048h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-078h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+050h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+040h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-058h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax]
           fmul qword ptr [edx+048h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+040h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-038h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+028h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-070h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [edx]
           fmul qword ptr [ecx+030h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+020h]
           fsubp st(01h), st(00h)
           fchs
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-050h]
           mov edx, dword ptr [ebp-0000000D4h]
           mov eax, dword ptr [ebp-0000000D4h]
           fld qword ptr [eax]
           fmul qword ptr [edx+028h]
           mov ecx, dword ptr [ebp-0000000D4h]
           mov edx, dword ptr [ebp-0000000D4h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+020h]
           fsubp st(01h), st(00h)
           fdiv qword ptr [ebp-0000000A0h]
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-0000000D0h], ecx
           mov edx, dword ptr [eax+074h]
           mov dword ptr [ebp-0000000CCh], edx
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+068h]
           mov dword ptr [ebp-0000000C8h], ecx
           mov edx, dword ptr [eax+06Ch]
           mov dword ptr [ebp-0000000C4h], edx
           mov eax, dword ptr [ebp-0000000D4h]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-0000000C0h], ecx
           mov edx, dword ptr [eax+064h]
           mov dword ptr [ebp-0000000BCh], edx
           mov eax, dword ptr [ebp-0000000C0h]
           mov dword ptr [ebp-000000098h], eax
           mov ecx, dword ptr [ebp-0000000BCh]
           mov dword ptr [ebp-000000094h], ecx
           lea edx, [ebp-000000090h]
           mov eax, dword ptr [ebp-0000000C8h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-0000000C4h]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-000000088h]
           mov eax, dword ptr [ebp-0000000D0h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-0000000CCh]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-080h]
           push edx
           lea eax, [ebp-000000098h]
           push eax
           lea ecx, [ebp-0000000B8h]
           push ecx
           call l1000125D
           add esp, 00000000Ch
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-000000098h]
           rep movsd
           fld qword ptr [ebp-000000098h]
           fchs
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp-000000090h]
           fchs
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp-000000088h]
           fchs
           fstp qword ptr [ebp-010h]
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100043F9 ENDP
;
;* Jump:
; 10001384(U) 
;
l1000475D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           mov dword ptr [ebp-004h], 000000000h
           jmp l10004776
;
;* Jump:
; 100047CB(U) 
;
l1000476D: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000476B(U) 
;
l10004776: cmp dword ptr [ebp-004h], 000000004h
           jnl l100047CD
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000478E
;
;* Jump:
; 100047C9(U) 
;
l10004785: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10004783(U) 
;
l1000478E: cmp dword ptr [ebp-008h], 000000004h
           jnl l100047CB
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov eax, dword ptr [ebp+008h]
           add eax, edx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           shl edx, 005h
           mov esi, dword ptr [ebp+00Ch]
           add esi, edx
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [eax+ecx*08h]
           fsub qword ptr [esi+edx*08h]
           fabs
           fcomp qword ptr [g100370C0]
           fnstsw ax
           test ah, 041h
           jne l100047C9
           xor eax, eax
           jmp l100047D2
;
;* Jump:
; 100047C3(C) 
;
l100047C9: jmp l10004785
;
;* Jump:
; 10004792(C) 
;
l100047CB: jmp l1000476D
;
;* Jump:
; 1000477A(C) 
;
;* Control "OK", Dialog 006E
;
l100047CD: mov eax, 000000001h
;
;* Jump:
; 100047C7(U) 
;
l100047D2: pop esi
           mov esp, ebp
           pop ebp
           ret
l1000475D ENDP
;
;* Jump:
; 100013D9(U) 
;
l100047D7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000080h
           push esi
           push edi
           lea ecx, [ebp-080h]
           call l1000169F
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-080h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+018h]
           fmul qword ptr [eax+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-078h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+018h]
           fmul qword ptr [edx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-070h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-068h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+020h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+040h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+038h]
           fmul qword ptr [eax+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+020h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+028h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+030h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+038h]
           fmul qword ptr [edx+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+020h]
           fmul qword ptr [eax+018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+028h]
           fmul qword ptr [edx+038h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+030h]
           fmul qword ptr [ecx+058h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+038h]
           fmul qword ptr [eax+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-048h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+040h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+048h]
           fmul qword ptr [ecx+020h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+050h]
           fmul qword ptr [eax+040h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+058h]
           fmul qword ptr [edx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-038h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+040h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+048h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+050h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+058h]
           fmul qword ptr [eax+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+040h]
           fmul qword ptr [edx+018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+048h]
           fmul qword ptr [ecx+038h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+050h]
           fmul qword ptr [eax+058h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+058h]
           fmul qword ptr [edx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-028h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+060h]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+068h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+070h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+078h]
           fmul qword ptr [eax+068h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+060h]
           fmul qword ptr [edx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+068h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+070h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+078h]
           fmul qword ptr [edx+070h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l100047D7 ENDP
;
;* Jump:
; 100014C4(U) 
;
l10004B88 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000080h
           push esi
           push edi
           lea ecx, [ebp-080h]
           call l1000169F
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-080h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-078h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-070h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-068h], ecx
           mov edx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-060h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+038h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [eax+03Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-038h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+058h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [eax+05Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [eax+064h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+068h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [eax+06Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+070h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [eax+074h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+078h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [eax+07Ch]
           mov dword ptr [ebp-004h], edx
           mov ecx, 000000020h
           lea esi, [ebp-080h]
           mov edi, dword ptr [ebp+008h]
           rep movsd
           mov eax, dword ptr [ebp+008h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10004B88 ENDP
;
;* Jump:
; 10001794(U) 
;
l10004D97 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+018h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+018h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+020h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+028h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+030h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+020h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+028h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+030h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+038h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+038h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+040h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+048h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+040h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+048h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+050h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+058h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+058h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+060h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+060h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+068h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+068h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+070h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+070h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+060h]
           fmul qword ptr [ecx+018h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+068h]
           fmul qword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+070h]
           fmul qword ptr [edx+058h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+078h]
           fmul qword ptr [ecx+078h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+078h]
           pop ebp
           ret
l10004D97 ENDP
;
;* Jump:
; 100011AE(U) 
;
l10005153 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           fadd qword ptr [eax+070h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           fadd qword ptr [ecx+068h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+020h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+040h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+010h]
           fadd qword ptr [edx+060h]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10005153 ENDP
;
;* Jump:
; 10001406(U) 
;
l1000521B PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           fadd qword ptr [eax+060h]
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+028h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+048h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+010h]
           fadd qword ptr [edx+068h]
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+030h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+050h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           fadd qword ptr [ecx+070h]
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           pop ebp
           ret
l1000521B ENDP
;
;* Jump:
; 10001460(U) 
;
l100052B7 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [edx]
           fmul qword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [eax]
           fmul qword ptr [edx+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+010h]
           pop ebp
           ret
l100052B7 ENDP
;
;* Jump:
; 1000125D(U) 
;
l10005341 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+030h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+050h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+028h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+048h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10005341 ENDP
;
;* Jump:
; 10001253(U) 
;
l100053F7 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+004h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+00Ch]
           fmul qword ptr [eax+020h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+014h]
           fmul qword ptr [edx+040h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+004h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+004h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx+028h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax+048h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+004h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+00Ch]
           fmul qword ptr [edx+030h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+014h]
           fmul qword ptr [ecx+050h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+014h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ecx+004h]
           fmul qword ptr [edx+060h]
           fsubr qword ptr [eax+01Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+010h]
           fld qword ptr [eax+00Ch]
           fmul qword ptr [ecx+068h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+010h]
           fld qword ptr [edx+014h]
           fmul qword ptr [eax+070h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+01Ch]
           pop ebp
           ret
l100053F7 ENDP
;
;* Jump:
; 10001028(U) 
;
l100054B9 PROC
           push ebp
           mov ebp, esp
           push 000000080h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?Read@B_IDataFile@@QAEXPAXI@Z]; [BBLibc.?Read@B_IDataFile@@QAEXPAXI@Z].
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100054B9 ENDP
;
;* Jump:
; 100011E0(U) 
;
l100054D3 PROC
           push ebp
           mov ebp, esp
           push 000000080h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?Write@B_ODataFile@@QAEXPBXI@Z]; [BBLibc.?Write@B_ODataFile@@QAEXPBXI@Z].
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100054D3 ENDP
;
;* Jump:
; 10001299(U) 
;
l100054ED PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           fld qword ptr [ebp+00Ch]
           fdiv qword ptr [g100370A0]
           call l10035ED6; [MSVCRT._CIsin].
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp+00Ch]
           fdiv qword ptr [g100370A0]
           call l10035EDC; [MSVCRT._CIcos].
           fst qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [edx+010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100054ED ENDP
;
;* Jump:
; 10001852(U) 
;
l10005552 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000007Ch
           mov dword ptr [ebp-064h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx]
           fadd qword ptr [eax+028h]
           mov edx, dword ptr [ebp+008h]
           fadd qword ptr [edx+050h]
           fsub qword ptr [g10037080]
           fdiv qword ptr [g100370A0]
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g100370F0]
           fnstsw ax
           test ah, 041h
           jne l100055B7
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax], 03F800000h
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-064h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [eax+00Ch], 000000000h
           jmp near ptr l1000591D
;
;* Jump:
; 10005589(C) 
;
l100055B7: fld qword ptr [ebp-008h]
           fcomp qword ptr [g100370E0]
           fnstsw ax
           test ah, 001h
           je l100057F1
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 03FF00000h
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx]
           fadd qword ptr [g10037080]
           fdiv qword ptr [g100370A0]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1000560D
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx]
           fadd qword ptr [g10037080]
           fdiv qword ptr [g100370A0]
           fstp qword ptr [ebp-06Ch]
           jmp l1000561B
;
;* Jump:
; 100055F5(C) 
;
l1000560D: mov dword ptr [ebp-06Ch], 000000000h
           mov dword ptr [ebp-068h], 000000000h
;
;* Jump:
; 1000560B(U) 
;
l1000561B: fld qword ptr [ebp-06Ch]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax+050h]
           fadd qword ptr [g10037080]
           fdiv qword ptr [g100370A0]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1000565C
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+050h]
           fadd qword ptr [g10037080]
           fdiv qword ptr [g100370A0]
           fstp qword ptr [ebp-074h]
           jmp l1000566A
;
;* Jump:
; 10005643(C) 
;
l1000565C: mov dword ptr [ebp-074h], 000000000h
           mov dword ptr [ebp-070h], 000000000h
;
;* Jump:
; 1000565A(U) 
;
l1000566A: fld qword ptr [ebp-074h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-028h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fadd qword ptr [edx+028h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l100056AF
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fadd qword ptr [eax+028h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-07Ch]
           jmp l100056BD
;
;* Jump:
; 10005694(C) 
;
l100056AF: mov dword ptr [ebp-07Ch], 000000000h
           mov dword ptr [ebp-078h], 000000000h
;
;* Jump:
; 100056AD(U) 
;
l100056BD: fld qword ptr [ebp-07Ch]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l10005724
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+040h]
           fadd qword ptr [edx+010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l100056FD
           fld qword ptr [ebp-028h]
           fmul qword ptr [g100370D0]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 100056EF(C) 
;
l100056FD: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fadd qword ptr [ecx+020h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l10005722
           fld qword ptr [ebp-020h]
           fmul qword ptr [g100370D0]
           fstp qword ptr [ebp-020h]
;
;* Jump:
; 10005714(C) 
;
l10005722: jmp l10005749
;
;* Jump:
; 100056D6(C) 
;
l10005724: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+030h]
           fadd qword ptr [eax+048h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l10005749
           fld qword ptr [ebp-028h]
           fmul qword ptr [g100370D0]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 10005722(U), 1000573B(C) 
;
l10005749: mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ecx], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+004h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+008h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx]
           fdiv qword ptr [ebp-030h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax+004h]
           fdiv qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [edx+008h]
           fdiv qword ptr [ebp-030h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx+00Ch]
           fdiv qword ptr [ebp-030h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+00Ch]
           jmp near ptr l1000591D
;
;* Jump:
; 100055C5(C) 
;
l100057F1: fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fdiv qword ptr [g100370A0]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-038h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ebp-008h]
           fsubr qword ptr [g10037080]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+030h]
           fsub qword ptr [ecx+048h]
           fld qword ptr [g100370A0]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-048h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+040h]
           fsub qword ptr [eax+010h]
           fld qword ptr [g100370A0]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-050h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+008h]
           fsub qword ptr [edx+020h]
           fld qword ptr [g100370A0]
           fmul qword ptr [ebp-040h]
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-058h]
           fld qword ptr [g10037080]
           fadd qword ptr [ebp-008h]
           fdiv qword ptr [g100370A0]
           call l10035ECA; [MSVCRT._CIsqrt].
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax]
           fld qword ptr [ebp-048h]
           fmul qword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+004h]
           fld qword ptr [ebp-050h]
           fmul qword ptr [ebp-038h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+008h]
           fld qword ptr [ebp-058h]
           fmul qword ptr [ebp-038h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [eax+004h]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [edx+008h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [ecx+00Ch]
           fmul dword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-060h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax]
           fdiv qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-064h]
           fld dword ptr [edx+004h]
           fdiv qword ptr [ebp-060h]
           mov eax, dword ptr [ebp-064h]
           fstp dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-064h]
           fld dword ptr [ecx+008h]
           fdiv qword ptr [ebp-060h]
           mov edx, dword ptr [ebp-064h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-064h]
           fld dword ptr [eax+00Ch]
           fdiv qword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fstp dword ptr [ecx+00Ch]
;
;* Jump:
; 100055B2(U), 100057EC(U) 
;
l1000591D: mov eax, dword ptr [ebp-064h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10005552 ENDP
;
;* Jump:
; 1000123F(U) 
;
l10005926 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-004h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l100059D8
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+00Ch]
;
;* Jump:
; 1000599C(C) 
;
l100059D8: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00010h
l10005926 ENDP
;
;* Jump:
; 10001109(U) 
;
l100059E1 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+010h]
           fstp dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fsub dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx]
           fsub dword ptr [eax]
           fmulp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fsub dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+004h]
           fsub dword ptr [ecx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fsub dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fsub dword ptr [edx+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fsub dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+00Ch]
           fsub dword ptr [eax+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx]
           fadd dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fadd dword ptr [ecx]
           fmulp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fadd dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fadd dword ptr [edx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+008h]
           fadd dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fadd dword ptr [eax+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+00Ch]
           fadd dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fadd dword ptr [ecx+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-008h]
           fcomp dword ptr [ebp-004h]
           fnstsw ax
           test ah, 041h
           je l10005B44
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+00Ch]
           jmp l10005BA9
;
;* Jump:
; 10005ADB(C) 
;
l10005B44: mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+004h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+008h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+008h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [eax+00Ch]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+00Ch]
;
;* Jump:
; 10005B42(U) 
;
l10005BA9: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp dword ptr [ebp-010h]
           fld dword ptr [ebp-010h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l10005C2F
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+00Ch]
;
;* Jump:
; 10005BF3(C) 
;
l10005C2F: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100059E1 ENDP
;
;* Jump:
; 1000131B(U) 
;
l10005C38 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000ACh
           push esi
           push edi
           mov dword ptr [ebp-0000000ACh], ecx
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax]
           fcomp qword ptr [g100370B0]
           fnstsw ax
           test ah, 041h
           jne l10005C7A
           lea ecx, [ebp-0000000A8h]
           call l1000169F
           mov esi, eax
           mov ecx, 000000020h
           mov edi, dword ptr [ebp+008h]
           rep movsd
           jmp near ptr l10005ED5
;
;* Jump:
; 10005C5C(C) 
;
l10005C7A: mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           mov eax, dword ptr [ebp-0000000ACh]
           mov ecx, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-0000000ACh]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-010h]
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 03FF00000h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l10005D23
           mov ecx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx+004h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [edx+008h]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [eax+00Ch]
           fdiv qword ptr [ebp-010h]
           fstp qword ptr [ebp-028h]
;
;* Jump:
; 10005CF4(C) 
;
l10005D23: mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [ebp-0000000ACh]
           fld dword ptr [ecx]
           fmul dword ptr [edx]
           fld qword ptr [ebp-010h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-0000000ACh]
           fld dword ptr [g100370AC]
           fmul dword ptr [eax]
           fmul qword ptr [ebp-010h]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+008h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+018h], 000000000h
           mov dword ptr [ecx+01Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+020h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-020h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-018h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+028h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+030h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+038h], 000000000h
           mov dword ptr [edx+03Ch], 000000000h
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           fstp qword ptr [eax+040h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fld qword ptr [ebp-018h]
           fmul qword ptr [ebp-010h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           fstp qword ptr [ecx+048h]
           fld qword ptr [ebp-028h]
           fmul qword ptr [ebp-028h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-008h]
           fmulp st(01h), st(00h)
           fadd qword ptr [ebp-008h]
           mov edx, dword ptr [ebp+008h]
           fstp qword ptr [edx+050h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+058h], 000000000h
           mov dword ptr [eax+05Ch], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+060h], 000000000h
           mov dword ptr [ecx+064h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+068h], 000000000h
           mov dword ptr [edx+06Ch], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+070h], 000000000h
           mov dword ptr [eax+074h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+078h], 000000000h
           mov dword ptr [ecx+07Ch], 03FF00000h
;
;* Jump:
; 10005C75(U) 
;
l10005ED5: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10005C38 ENDP
;
;* Jump:
; 10001839(U) 
;
l10005EDD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax]
           fchs
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+004h]
           fchs
           fstp dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+008h]
           fchs
           fstp dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+00Ch]
           fchs
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], eax
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], eax
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10005EDD ENDP
;
;* Jump:
; 1000101E(U) 
;
l10005F34 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax]
           fsub dword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx]
           fsub dword ptr [eax]
           fmulp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+004h]
           fsub dword ptr [edx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+004h]
           fsub dword ptr [ecx+004h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+008h]
           fsub dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ecx+008h]
           fsub dword ptr [edx+008h]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [eax+00Ch]
           fsub dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [edx+00Ch]
           fsub dword ptr [eax+00Ch]
           fmulp st(01h), st(00h)
           faddp st(01h), st(00h)
           mov esp, ebp
           pop ebp
           ret 00004h
l10005F34 ENDP
;
;* Jump:
; 1000110E(U) 
;
l10005FAB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+00Ch]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [ebp+00Ch]
           fmul dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+010h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fdivr qword ptr [g10037080]
           fstp dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+00Ch]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10005FAB ENDP
;
;* Jump:
; 1000116D(U) 
;
l100060A7 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+004h]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+008h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+00Ch]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+00Ch]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+008h]
           fsubp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+008h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+00Ch]
           fsubp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx+004h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax]
           fmul dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+008h]
           fmul dword ptr [edx+004h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+008h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l100060A7 ENDP
;
;* Jump:
; 1000147E(U) 
;
l10006196 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           fld dword ptr [eax+004h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-024h]
           fld dword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-024h]
           fld dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+008h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-024h]
           fdiv dword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           fld dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp-024h]
           fld dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-024h]
           fld dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-024h]
           fdiv dword ptr [ecx]
           fmulp st(01h), st(00h)
           fadd qword ptr [g10037080]
           fdivr qword ptr [g10037080]
           fstp qword ptr [ebp-010h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-010h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fst qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-024h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-024h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-024h]
           fstp dword ptr [edx+00Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10006196 ENDP
;
;* Jump:
; 100015F0(U) 
;
l1000625B PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+004h]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+008h]
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+00Ch]
           fchs
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+00Ch]
           mov esp, ebp
           pop ebp
           ret
l1000625B ENDP
;
;* Jump:
; 1000105A(U) 
;
l10006290 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_??5@YAAAVB_IDataFile@@AAV0@AAM@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??5@YAAAVB_IDataFile@@AAV0@AAM@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??5@YAAAVB_IDataFile@@AAV0@AAM@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??5@YAAAVB_IDataFile@@AAV0@AAM@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAM@Z].
           add esp, 000000008h
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx]
           fmul dword ptr [eax]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+004h]
           fmul dword ptr [edx+004h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [eax+008h]
           fmul dword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           fld dword ptr [eax+004h]
           fdiv dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+00Ch]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp+00Ch]
           fld dword ptr [edx+008h]
           fdiv dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp+00Ch]
           fld dword ptr [ecx+00Ch]
           fdiv dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10006290 ENDP
;
;* Jump:
; 1000158C(U) 
;
l10006355 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000008h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000004h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_??6@YAAAVB_ODataFile@@AAV0@ABM@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??6@YAAAVB_ODataFile@@AAV0@ABM@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??6@YAAAVB_ODataFile@@AAV0@ABM@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABM@Z].
           add esp, 000000008h
           push eax
           call [__imp_??6@YAAAVB_ODataFile@@AAV0@ABM@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABM@Z].
           add esp, 000000008h
           pop ebp
           ret
l10006355 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100013B6(U) 
;
l10006F80 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+010h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+020h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g100370FC
           mov eax, dword ptr [ebp-004h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10006F80 ENDP
;
;* Jump:
; 100017DA(U) 
;
l10006FBC PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l10001483
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g100370FC
           mov edx, dword ptr [ebp-004h]
           add edx, 000000004h
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l100013CF
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+01Ch]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10006FBC ENDP
;
;* Jump:
; 100015E6(U) 
;
l10007009 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001500
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx], offset g100370FC
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call l10001483
           mov esi, eax
           mov edi, dword ptr [ebp-01Ch]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100013CF
           fchs
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10007009 ENDP
;
;* Jump:
; 1000178A(U) 
;
l10007081 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp+010h]
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+01Ch], ecx
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+020h], edx
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10007081 ENDP
;
;* Jump:
; 10001712(U) 
;
l100070B1 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           call l10001483
           mov esi, eax
           mov edi, dword ptr [ebp-01Ch]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           call l100013CF
           fchs
           mov edx, dword ptr [ebp-01Ch]
           fstp qword ptr [edx+01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l100070B1 ENDP
;
;* Jump:
; 1000104B(U) 
;
l10007104 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           push edi
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           lea ecx, [ebp-018h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001500
           mov esi, eax
           mov edi, dword ptr [ebp-034h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000004h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-030h]
           push edx
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000004h
           call l10001483
           mov esi, eax
           mov edi, dword ptr [ebp-034h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov eax, dword ptr [ebp-034h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           call l100013CF
           fchs
           mov ecx, dword ptr [ebp-034h]
           fstp qword ptr [ecx+01Ch]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10007104 ENDP
;
;* Jump:
; 10001672(U) 
;
l1000717C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000004h
           call l100013CF
           fcomp qword ptr [g100370B0]
           fnstsw ax
           test ah, 041h
           jne l100071C8
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+01Ch]
           fsub qword ptr [edx+01Ch]
           fabs
           fcomp qword ptr [g10037100]
           fnstsw ax
           test ah, 001h
           je l100071C8
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l100071CF
;
;* Jump:
; 100071A2(C), 100071BD(C) 
;
l100071C8: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100071C6(U) 
;
l100071CF: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000717C ENDP
;
;* Jump:
; 10001320(U) 
;
l100071D8 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           mov dword ptr [ebp-004h], ecx
           mov esi, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100013CF
           fsubr qword ptr [esi+01Ch]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+01Ch]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100071D8 ENDP
;
;* Jump:
; 1000159B(U) 
;
l10007202 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call l100013CF
           fchs
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+01Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007202 ENDP
;
;* Jump:
; 10001294(U) 
;
l10007226 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100010A5
           add esp, 000000008h
           push eax
           call [__imp_??5@YAAAVB_IDataFile@@AAV0@AAN@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAN@Z].
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10007226 ENDP
;
;* Jump:
; 1000165E(U) 
;
l10007252 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call l100010C3
           add esp, 000000008h
           push eax
           call [__imp_??6@YAAAVB_ODataFile@@AAV0@ABN@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABN@Z].
           add esp, 000000008h
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10007252 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100016C7(U), 1000187F(U) 
;
l10007340 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g100370FC
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10007366
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007358(C) 
;
l10007366: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007340 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10007380 PROC
           push ebp
           mov ebp, esp
           call l1000738F
           call l100073E4
           pop ebp
           ret
l10007380 ENDP
;
;* Call:
; 10007383 
;
l1000738F PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g10050D1C], 000000000h
           mov dword ptr [g10050D20], 000000000h
           mov dword ptr [g10050D24], 000000010h
           mov dword ptr [g10050D28], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [g10050D2C], 000000001h
           mov dword ptr [g10050D18], offset g10037110
           mov dword ptr [g10050D30], 000000000h
           mov dword ptr [g10050D18], offset g1003710C
           pop ebp
           ret
l1000738F ENDP
;
;* Call:
; 10007388 
;
l100073E4 PROC
           push ebp
           mov ebp, esp
           push offset l100073F6
           call l10035EB2
           add esp, 000000004h
           pop ebp
           ret
l100073E4 ENDP
;
l100073F6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [g10050D18], offset g10037110
           cmp dword ptr [g10050D28], 000000000h
           je l10007498
           mov eax, dword ptr [g10050D2C]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [g10050D28], 000000000h
           jne l10007426
           jmp l10007498
;
;* Jump:
; 10007422(C) 
;
l10007426: cmp dword ptr [ebp-010h], 000000000h
           je l10007465
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000743E
;
;* Jump:
; 10007463(U) 
;
l10007435: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10007433(U) 
;
l1000743E: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [g10050D20]
           jnb l10007465
           mov eax, dword ptr [g10050D1C]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10007435
;
;* Jump:
; 1000742A(C), 10007447(C) 
;
l10007465: mov ecx, dword ptr [g10050D1C]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g10050D1C], 000000000h
           mov dword ptr [g10050D20], 000000000h
           mov dword ptr [g10050D28], 000000000h
;
;* Jump:
; 1000740D(C), 10007424(U) 
;
l10007498: mov esp, ebp
           pop ebp
           ret
l100073F6 ENDP
;
l1000749C PROC
           push ebp
           mov ebp, esp
           call l100074AB
           call l1000757E
           pop ebp
           ret
l1000749C ENDP
;
;* Call:
; 1000749F 
;
l100074AB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [g10050D38], offset g10037128
           mov dword ptr [ebp-004h], offset g10050D3C
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+00Ch], 000000080h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+014h], 000000001h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g10037110
           mov dword ptr [g10050D54], 000000000h
           mov dword ptr [ebp-008h], offset g10050D58
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+00Ch], offset g10050D38
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10037124
           mov dword ptr [g10050D38], offset g10037114
           mov dword ptr [ebp-00Ch], offset g10050D58
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [g100518CC]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+008h], offset g100518C8
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [g100518CC], ecx
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+004h], 000000000h
           je l1000757A
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], edx
;
;* Jump:
; 1000756C(C) 
;
l1000757A: mov esp, ebp
           pop ebp
           ret
l100074AB ENDP
;
;* Call:
; 100074A4 
;
l1000757E PROC
           push ebp
           mov ebp, esp
           push offset l10007590
           call l10035EB2
           add esp, 000000004h
           pop ebp
           ret
l1000757E ENDP
;
l10007590 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [g10050D38], offset g10037114
           mov dword ptr [ebp-004h], offset g10050D58
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l100075BF
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 100075AE(C) 
;
l100075BF: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+008h], 000000000h
           je l100075D7
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx+004h], eax
;
;* Jump:
; 100075C6(C) 
;
l100075D7: mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [ebp-008h], offset g10050D58
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax], offset g10037124
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10007613
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10007602(C) 
;
l10007613: mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+008h], 000000000h
           je l1000762B
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
;
;* Jump:
; 1000761A(C) 
;
l1000762B: mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [ebp-01Ch], offset g10050D3C
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx], offset g10037110
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+010h], 000000000h
           je l100076E3
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+010h], 000000000h
           jne l10007670
           jmp l100076E3
;
;* Jump:
; 1000766C(C) 
;
l10007670: cmp dword ptr [ebp-018h], 000000000h
           je l100076B0
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10007688
;
;* Jump:
; 100076AE(U) 
;
l1000767F: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1000767D(U) 
;
l10007688: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l100076B0
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1000767F
;
;* Jump:
; 10007674(C), 10007691(C) 
;
l100076B0: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 10007656(C), 1000766E(U) 
;
l100076E3: mov esp, ebp
           pop ebp
           ret
l10007590 ENDP
;
;* Jump:
; 1000107D(U) 
;
l100076E7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+004h], 000000000h
           mov dword ptr [ebp-00Ch], 000000020h
           mov dword ptr [ebp-008h], 000000018h
           mov edx, dword ptr [ebp-010h]
           add edx, 000000008h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10007764(U) 
;
l1000771A: mov eax, dword ptr [ebp-00Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l10007766
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           add ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           jmp l1000771A
;
;* Jump:
; 10007727(C) 
;
l10007766: mov eax, dword ptr [ebp-010h]
           mov esp, ebp
           pop ebp
           ret
l100076E7 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000174E(U) 
;
l10007870 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000004h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1000788D
           jmp l10007903
;
;* Jump:
; 10007889(C) 
;
;* Control "OK", Dialog 006E
;
l1000788D: mov edx, 000000001h
           test edx, edx
           je l100078D0
           mov dword ptr [ebp-004h], 000000000h
           jmp l100078A8
;
;* Jump:
; 100078CE(U) 
;
l1000789F: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1000789D(U) 
;
l100078A8: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l100078D0
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1000789F
;
;* Jump:
; 10007894(C), 100078B1(C) 
;
l100078D0: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+010h], 000000000h
;
;* Jump:
; 1000788B(U) 
;
l10007903: mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+01Ch], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10007870 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000114A(U) 
;
l10007940 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+01Ch]
           mov esp, ebp
           pop ebp
           ret
l10007940 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100012D0(U) 
;
l10007960 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+01Ch], 000000000h
           mov esp, ebp
           pop ebp
           ret
l10007960 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011EA(U), 10001622(U) 
;
l10007980 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g10037124
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+004h], 000000000h
           je l100079A8
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10007997(C) 
;
l100079A8: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+008h], 000000000h
           je l100079C0
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
;
;* Jump:
; 100079AF(C) 
;
l100079C0: mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100079EA
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100079DC(C) 
;
l100079EA: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007980 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001587(U), 1000164A(U) 
;
l10007A10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10037110
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10007AB6
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10007A43
           jmp l10007AB6
;
;* Jump:
; 10007A3F(C) 
;
l10007A43: cmp dword ptr [ebp-010h], 000000000h
           je l10007A83
           mov dword ptr [ebp-004h], 000000000h
           jmp l10007A5B
;
;* Jump:
; 10007A81(U) 
;
l10007A52: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10007A50(U) 
;
l10007A5B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10007A83
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10007A52
;
;* Jump:
; 10007A47(C), 10007A64(C) 
;
l10007A83: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10007A29(C), 10007A41(U) 
;
l10007AB6: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10007ACC
           mov edx, dword ptr [ebp-014h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007ABE(C) 
;
l10007ACC: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007A10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001776(U), 1000182F(U) 
;
l10007B10 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10037110
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10007BB6
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10007B43
           jmp l10007BB6
;
;* Jump:
; 10007B3F(C) 
;
l10007B43: cmp dword ptr [ebp-010h], 000000000h
           je l10007B83
           mov dword ptr [ebp-004h], 000000000h
           jmp l10007B5B
;
;* Jump:
; 10007B81(U) 
;
l10007B52: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10007B50(U) 
;
l10007B5B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10007B83
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10007B52
;
;* Jump:
; 10007B47(C), 10007B64(C) 
;
l10007B83: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10007B29(C), 10007B41(U) 
;
l10007BB6: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10007BCC
           mov edx, dword ptr [ebp-014h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10007BBE(C) 
;
l10007BCC: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007B10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10007C10 PROC
           push ebp
           mov ebp, esp
           call l10007C1A
           pop ebp
           ret
l10007C10 ENDP
;
;* Call:
; 10007C13 
;
l10007C1A PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g10050D90], 000000000h
           mov dword ptr [g10050D94], 03FF00000h
           mov eax, offset g10050D98
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, offset g10050DA0
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           pop ebp
           ret
l10007C1A ENDP
;
l10007C57 PROC
           push ebp
           mov ebp, esp
           call l10007C61
           pop ebp
           ret
l10007C57 ENDP
;
;* Call:
; 10007C5A 
;
l10007C61 PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g10050D78], 000000000h
           mov dword ptr [g10050D7C], 000000000h
           mov eax, offset g10050D80
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 03FF00000h
           mov ecx, offset g10050D88
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           pop ebp
           ret
l10007C61 ENDP
;
l10007C9E PROC
           push ebp
           mov ebp, esp
           call l10007CA8
           pop ebp
           ret
l10007C9E ENDP
;
;* Call:
; 10007CA1 
;
l10007CA8 PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g10050DA8], 000000000h
           mov dword ptr [g10050DAC], 000000000h
           mov eax, offset g10050DB0
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, offset g10050DB8
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           pop ebp
           ret
l10007CA8 ENDP
;
;* Jump:
; 100013CA(U) 
;
l10007CE5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov eax, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [ecx+008h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp+014h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret
l10007CE5 ENDP
;
;* Jump:
; 10001677(U) 
;
l10007D41 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [ecx+008h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10007D41 ENDP
;
;* Jump:
; 10001483(U) 
;
l10007DA2 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+010h]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+008h]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx]
           fdiv qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10007DA2 ENDP
;
;* Jump:
; 10001429(U) 
;
l10007E03 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ebp+008h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10007E03 ENDP
;
;* Jump:
; 100014E2(U) 
;
l10007E3E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fdiv qword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10007E3E ENDP
;
;* Jump:
; 10001807(U) 
;
l10007E79 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           fld qword ptr [eax+010h]
           fchs
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx+008h]
           fchs
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           fld qword ptr [edx]
           fchs
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007E79 ENDP
;
;* Jump:
; 10001744(U) 
;
l10007ED7 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+010h]
           fadd qword ptr [ecx+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fadd qword ptr [eax+008h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fadd qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10007ED7 ENDP
;
;* Jump:
; 1000123A(U) 
;
l10007F40 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fld qword ptr [eax+010h]
           fsub qword ptr [ecx+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fsub qword ptr [eax+008h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx]
           fsub qword ptr [edx]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10007F40 ENDP
;
;* Jump:
; 1000113B(U) 
;
l10007FA9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fadd qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fadd qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+010h]
           fadd qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007FA9 ENDP
;
;* Jump:
; 100016EA(U) 
;
l10007FEC PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fsub qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+008h]
           fsub qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10007FEC ENDP
;
;* Jump:
; 100013CF(U) 
;
l1000802F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov esp, ebp
           pop ebp
           ret 00004h
l1000802F ENDP
;
;* Jump:
; 10001500(U) 
;
l10008062 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+010h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+008h]
           fsubp st(01h), st(00h)
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [eax+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00008h
l10008062 ENDP
;
;* Jump:
; 10001505(U) 
;
l100080F3 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           mov esp, ebp
           pop ebp
           ret
l100080F3 ENDP
;
;* Jump:
; 10001249(U) 
;
l10008129 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov ecx, dword ptr [ebp-00Ch]
           call l10001505
           fstp qword ptr [ebp-008h]
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 040h
           jne l10008178
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [eax]
           fdiv qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+008h]
           fdiv qword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fstp qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+010h]
;
;* Jump:
; 1000814B(C) 
;
l10008178: mov esp, ebp
           pop ebp
           ret
l10008129 ENDP
;
;* Jump:
; 1000161D(U) 
;
l1000817C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fcomp qword ptr [ecx]
           fnstsw ax
           test ah, 040h
           je l100081C5
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fcomp qword ptr [eax+008h]
           fnstsw ax
           test ah, 040h
           je l100081C5
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fcomp qword ptr [edx+010h]
           fnstsw ax
           test ah, 040h
           je l100081C5
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l100081CC
;
;* Jump:
; 10008194(C), 100081A7(C), 100081BA(C) 
;
l100081C5: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100081C3(U) 
;
l100081CC: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000817C ENDP
;
;* Jump:
; 100015BE(U) 
;
l100081D5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 041h
           jne l1000823C
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l10008243
;
;* Jump:
; 10008231(C) 
;
l1000823C: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1000823A(U) 
;
l10008243: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100081D5 ENDP
;
;* Jump:
; 10001014(U) 
;
l1000824C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 001h
           jne l100082B3
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l100082BA
;
;* Jump:
; 100082A8(C) 
;
l100082B3: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100082B1(U) 
;
l100082BA: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000824C ENDP
;
;* Jump:
; 10001726(U) 
;
l100082C3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 001h
           je l1000832A
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l10008331
;
;* Jump:
; 1000831F(C) 
;
l1000832A: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10008328(U) 
;
l10008331: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100082C3 ENDP
;
;* Jump:
; 100011B8(U) 
;
l1000833A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fcompp
           fnstsw ax
           test ah, 041h
           je l100083A1
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l100083A8
;
;* Jump:
; 10008396(C) 
;
l100083A1: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1000839F(U) 
;
l100083A8: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000833A ENDP
;
;* Jump:
; 100017AD(U) 
;
l100083B1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           fld qword ptr [ebp+008h]
           call l10035ED6; [MSVCRT._CIsin].
           fchs
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           fld qword ptr [ebp+008h]
           call l10035EDC; [MSVCRT._CIcos].
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+010h]
           mov esp, ebp
           pop ebp
           ret 00008h
l100083B1 ENDP
;
;* Jump:
; 100016BD(U) 
;
l100083EC PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           jne l10008489
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 040h
           je l10008444
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10008439
           fld qword ptr [g10037020]
           jmp near ptr l100084CC
;
;* Jump:
; 1000842C(C) 
;
l10008439: fld qword ptr [g10037158]
           jmp near ptr l100084CC
;
;* Jump:
; 10008419(C) 
;
l10008444: mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           jne l1000846F
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fdiv qword ptr [edx]
           call l10035EEE; [MSVCRT._CIatan].
           fadd qword ptr [g10037148]
           jmp l100084CC
;
;* Jump:
; 10008455(C) 
;
l1000846F: mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fdiv qword ptr [ecx+010h]
           call l10035EEE; [MSVCRT._CIatan].
           fadd qword ptr [g10037158]
           jmp l100084CC
;
;* Jump:
; 10008403(C) 
;
l10008489: mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           jne l100084B6
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+010h]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fdiv qword ptr [ecx]
           call l10035EEE; [MSVCRT._CIatan].
           fsubr qword ptr [g10037138]
           jmp l100084CC
;
;* Jump:
; 1000849A(C) 
;
l100084B6: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fdiv qword ptr [eax]
           call l10035EEE; [MSVCRT._CIatan].
           fadd qword ptr [g10037138]
;
;* Jump:
; 10008434(U), 1000843F(U), 1000846D(U), 10008487(U), 100084B4(U) 
;
l100084CC: mov esp, ebp
           pop ebp
           ret
l100083EC ENDP
;
;* Jump:
; 100010EB(U) 
;
l100084D0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fstp qword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+008h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 040h
           je l10008514
           fld qword ptr [g10037020]
           jmp l10008553
;
;* Jump:
; 1000850A(C) 
;
l10008514: mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+008h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1000853D
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [ebp-008h]
           fdiv qword ptr [eax+008h]
           call l10035EEE; [MSVCRT._CIatan].
           fsub qword ptr [g10037138]
           jmp l10008553
;
;* Jump:
; 10008525(C) 
;
l1000853D: fld qword ptr [ebp-008h]
           fchs
           mov ecx, dword ptr [ebp-00Ch]
           fdiv qword ptr [ecx+008h]
           call l10035EEE; [MSVCRT._CIatan].
           fsubr qword ptr [g10037138]
;
;* Jump:
; 10008512(U), 1000853B(U) 
;
l10008553: mov esp, ebp
           pop ebp
           ret
l100084D0 ENDP
;
;* Jump:
; 1000162C(U) 
;
l10008557 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax]
           fcomp qword ptr [g10037050]
           fnstsw ax
           test ah, 041h
           je l10008584
           mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l100085D9
;
;* Jump:
; 10008570(C) 
;
l10008584: mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+008h]
           fcomp qword ptr [g10037050]
           fnstsw ax
           test ah, 041h
           je l100085AA
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+008h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l100085D9
;
;* Jump:
; 10008595(C) 
;
l100085AA: mov ecx, dword ptr [ebp-004h]
           fld qword ptr [ecx+010h]
           fcomp qword ptr [g10037050]
           fnstsw ax
           test ah, 041h
           je l100085D0
           mov edx, dword ptr [ebp-004h]
           fld qword ptr [edx+010h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l100085D9
;
;* Jump:
; 100085BB(C) 
;
;* Control "OK", Dialog 006E
;
l100085D0: mov dword ptr [ebp-008h], 000000001h
           jmp l100085E0
;
;* Jump:
; 10008582(C), 100085A8(C), 100085CE(C) 
;
l100085D9: mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 100085D7(U) 
;
l100085E0: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10008557 ENDP
;
;* Jump:
; 100012C1(U) 
;
l100085E7 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           fld qword ptr [g10037080]
           fsub qword ptr [ebp+00Ch]
           fstp qword ptr [ebp-008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+008h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [ebp+00Ch]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp+014h]
           fld qword ptr [ebp-008h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp qword ptr [edx+010h]
           mov esp, ebp
           pop ebp
           ret 00010h
l100085E7 ENDP
;
;* Jump:
; 100010A5(U) 
;
l1000864D PROC
           push ebp
           mov ebp, esp
           push 000000018h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?Read@B_IDataFile@@QAEXPAXI@Z]; [BBLibc.?Read@B_IDataFile@@QAEXPAXI@Z].
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l1000864D ENDP
;
;* Jump:
; 100010C3(U) 
;
l10008664 PROC
           push ebp
           mov ebp, esp
           push 000000018h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?Write@B_ODataFile@@QAEXPBXI@Z]; [BBLibc.?Write@B_ODataFile@@QAEXPBXI@Z].
           mov eax, dword ptr [ebp+008h]
           pop ebp
           ret
l10008664 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014F1(U) 
;
l10008920 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00014h
l10008920 ENDP
;
;* Jump:
; 10001082(U) 
;
l1000895C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+00Ch], ecx
           mov esp, ebp
           pop ebp
           ret 00010h
l1000895C ENDP
;
;* Jump:
; 1000132A(U) 
;
l1000898C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+018h]
           push eax
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           call l100014F1
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000018h
           call l10001870
           mov ecx, dword ptr [ebp-004h]
           call l100016F9
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00018h
l1000898C ENDP
;
;* Jump:
; 100016F9(U) 
;
l100089D4 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001A4h
           push esi
           push edi
           mov dword ptr [ebp-0000001A4h], ecx
           mov eax, dword ptr [ebp-0000001A4h]
           mov dword ptr [eax+000000318h], 000000004h
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000130h]
           mov edx, dword ptr [ebp-0000001A4h]
           fld dword ptr [edx+008h]
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000128h]
           mov eax, dword ptr [ebp-000000128h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-000000124h]
           mov dword ptr [ebp-02Ch], ecx
           lea edx, [ebp-028h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 03FF00000h
           lea eax, [ebp-020h]
           mov ecx, dword ptr [ebp-000000130h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-00000012Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-0000001A4h]
           fld dword ptr [eax+008h]
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000138h]
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000140h]
           mov edx, dword ptr [ebp-000000138h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-000000134h]
           mov dword ptr [ebp-014h], eax
           lea ecx, [ebp-010h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 0BFF00000h
           lea edx, [ebp-008h]
           mov eax, dword ptr [ebp-000000140h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-030h]
           push edx
           lea eax, [ebp-048h]
           push eax
           lea ecx, [ebp-018h]
           call l10001500
           mov esi, eax
           mov edi, dword ptr [ebp-0000001A4h]
           add edi, 000000018h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000150h]
           mov edx, dword ptr [ebp-0000001A4h]
           fld dword ptr [edx+00Ch]
           fchs
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000148h]
           mov dword ptr [ebp-078h], 000000000h
           mov dword ptr [ebp-074h], 03FF00000h
           lea eax, [ebp-070h]
           mov ecx, dword ptr [ebp-000000148h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-000000144h]
           mov dword ptr [eax+004h], edx
           lea eax, [ebp-068h]
           mov ecx, dword ptr [ebp-000000150h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-00000014Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-0000001A4h]
           fld dword ptr [eax+00Ch]
           fchs
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000158h]
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000160h]
           mov dword ptr [ebp-060h], 000000000h
           mov dword ptr [ebp-05Ch], 0BFF00000h
           lea edx, [ebp-058h]
           mov eax, dword ptr [ebp-000000158h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-000000154h]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-050h]
           mov eax, dword ptr [ebp-000000160h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00000015Ch]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-078h]
           push edx
           lea eax, [ebp-000000090h]
           push eax
           lea ecx, [ebp-060h]
           call l10001500
           mov esi, eax
           mov edi, dword ptr [ebp-0000001A4h]
           add edi, 000000030h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000170h]
           mov edx, dword ptr [ebp-0000001A4h]
           fld dword ptr [edx+008h]
           fchs
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000168h]
           mov eax, dword ptr [ebp-000000168h]
           mov dword ptr [ebp-0000000C0h], eax
           mov ecx, dword ptr [ebp-000000164h]
           mov dword ptr [ebp-0000000BCh], ecx
           lea edx, [ebp-0000000B8h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 0BFF00000h
           lea eax, [ebp-0000000B0h]
           mov ecx, dword ptr [ebp-000000170h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-00000016Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-0000001A4h]
           fld dword ptr [eax+008h]
           fchs
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000178h]
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000180h]
           mov edx, dword ptr [ebp-000000178h]
           mov dword ptr [ebp-0000000A8h], edx
           mov eax, dword ptr [ebp-000000174h]
           mov dword ptr [ebp-0000000A4h], eax
           lea ecx, [ebp-0000000A0h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 03FF00000h
           lea edx, [ebp-000000098h]
           mov eax, dword ptr [ebp-000000180h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00000017Ch]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-0000000C0h]
           push edx
           lea eax, [ebp-0000000D8h]
           push eax
           lea ecx, [ebp-0000000A8h]
           call l10001500
           mov esi, eax
           mov edi, dword ptr [ebp-0000001A4h]
           add edi, 000000048h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-000000190h]
           mov edx, dword ptr [ebp-0000001A4h]
           fld dword ptr [edx+00Ch]
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000188h]
           mov dword ptr [ebp-000000108h], 000000000h
           mov dword ptr [ebp-000000104h], 0BFF00000h
           lea eax, [ebp-000000100h]
           mov ecx, dword ptr [ebp-000000188h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-000000184h]
           mov dword ptr [eax+004h], edx
           lea eax, [ebp-0000000F8h]
           mov ecx, dword ptr [ebp-000000190h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-00000018Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-0000001A4h]
           fld dword ptr [eax+00Ch]
           fdiv dword ptr [g100370AC]
           fstp qword ptr [ebp-000000198h]
           mov ecx, dword ptr [ebp-0000001A4h]
           fld dword ptr [ecx+014h]
           fstp qword ptr [ebp-0000001A0h]
           mov dword ptr [ebp-0000000F0h], 000000000h
           mov dword ptr [ebp-0000000ECh], 03FF00000h
           lea edx, [ebp-0000000E8h]
           mov eax, dword ptr [ebp-000000198h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-000000194h]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-0000000E0h]
           mov eax, dword ptr [ebp-0000001A0h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00000019Ch]
           mov dword ptr [edx+004h], ecx
           lea edx, [ebp-000000108h]
           push edx
           lea eax, [ebp-000000120h]
           push eax
           lea ecx, [ebp-0000000F0h]
           call l10001500
           mov esi, eax
           mov edi, dword ptr [ebp-0000001A4h]
           add edi, 000000060h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000018h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000018h
           call l100014E2
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000030h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000030h
           call l100014E2
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000048h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000048h
           call l100014E2
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000060h
           call l10001505
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-0000001A4h]
           add ecx, 000000060h
           call l100014E2
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l100089D4 ENDP
;
;* Jump:
; 100017A3(U) 
;
l10008E28 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [eax+014h]
           fdiv dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+014h]
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10001082
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ecx+014h]
           fmul dword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+014h]
           mov ecx, dword ptr [ebp-004h]
           call l100016F9
           mov esp, ebp
           pop ebp
           ret 00010h
l10008E28 ENDP
;
;* Jump:
; 100012F8(U) 
;
l10008E79 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10001082
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ebp+018h]
           fmul dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+014h]
           mov ecx, dword ptr [ebp-004h]
           call l100016F9
           mov esp, ebp
           pop ebp
           ret 00014h
l10008E79 ENDP
;
;* Jump:
; 100014C9(U) 
;
l10008EB5 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           add eax, 000000018h
           mov esp, ebp
           pop ebp
           ret
l10008EB5 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001091(U) 
;
l10009030 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call l100017C6
           add esp, 000000008h
           pop ebp
           ret
l10009030 ENDP
;
;* Jump:
; 10001753(U) 
;
l10009045 PROC
           push ebp
           mov ebp, esp
           push offset g10050DD0
           push 000000100h
           push offset g10050ED0
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           mov eax, offset g10050ED0
           pop ebp
           ret
l10009045 ENDP
;
;* Jump:
; 100017C6(U) 
;
l10009070 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000003FCh
           push ebx
           push esi
           push edi
           call [__imp_?GetConfigDirectory@@YAPBDXZ]; [BBLibc.?GetConfigDirectory@@YAPBDXZ].
           mov edi, eax
           lea edx, [ebp-0000001D8h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea edi, [ebp-0000001D8h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "/rOpenGL.ini"
;
           mov ecx, dword ptr [g10039540]
           mov dword ptr [edi], ecx
;
;* String: "enGL.ini"
;
           mov edx, dword ptr [g10039544]
           mov dword ptr [edi+004h], edx
;
;* String: ".ini"
;
           mov eax, dword ptr [g10039548]
           mov dword ptr [edi+008h], eax
           mov cl, byte ptr [g1003954C]
           mov byte ptr [edi+00Ch], cl
           call [__imp_?GetConfigDirectory@@YAPBDXZ]; [BBLibc.?GetConfigDirectory@@YAPBDXZ].
           mov edi, eax
           mov edx, offset g10050DD0
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
;
;* String: "/../Data/Dialogs/Raster/OpenGL/"
;
           mov esi, offset g10039550
           mov edi, offset g10050DD0
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, 000000008h
           rep movsd
           call [__imp_?GetCurrentLanguage@@YAPBDXZ]; [BBLibc.?GetCurrentLanguage@@YAPBDXZ].
           mov edi, eax
           mov edx, offset g10050DD0
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov ebx, ecx
           mov edi, edx
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
           mov ecx, ebx
           shr ecx, 002h
           rep movsd
           mov ecx, ebx
           and ecx, 000000003h
           rep movsb
           mov edi, offset g10050DD0
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "/Texts.ini"
;
           mov eax, dword ptr [g10039570]
           mov dword ptr [edi], eax
;
;* String: "ts.ini"
;
           mov ecx, dword ptr [g10039574]
           mov dword ptr [edi+004h], ecx
;
;* String: "ni"
;
           mov dx, word ptr [g10039578]
           mov word ptr [edi+008h], dx
           mov al, byte ptr [g1003957A]
           mov byte ptr [edi+00Ah], al
;
;* String: "VideoModes"
;
           push offset g1003A028
           lea ecx, [ebp-0000003A0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000001D8h]
           push ecx
           lea ecx, [ebp-0000003A8h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea edx, [ebp-0000003A0h]
           push edx
           lea eax, [ebp-0000003A8h]
           push eax
           lea ecx, [ebp-000000390h]
           call l1000141A
           lea ecx, [ebp-0000003A8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003A0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-000000364h]
           mov dword ptr [ebp-0000003ACh], ecx
           mov edx, dword ptr [ebp-0000003ACh]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-0000003ACh]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-0000003ACh]
           mov dword ptr [ecx+00Ch], 000000010h
           mov edx, dword ptr [ebp-0000003ACh]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-0000003ACh]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+014h], 000000001h
           mov ecx, dword ptr [ebp-0000003ACh]
           mov dword ptr [ecx], offset g100371C4
           mov dword ptr [ebp-000000390h], offset g100371B4
           lea edx, [ebp-000000364h]
           push edx
           call l10001190
           add esp, 000000004h
           lea ecx, [ebp-000000390h]
           call l100014EC
;
;* String: "Texture"
;
           push offset g1003A01C
           lea ecx, [ebp-0000003B4h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-0000001D8h]
           push eax
           lea ecx, [ebp-0000003BCh]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000003B4h]
           push ecx
           lea edx, [ebp-0000003BCh]
           push edx
           lea ecx, [ebp-02Ch]
           call l1000141A
           lea ecx, [ebp-0000003BCh]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003B4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           push offset g1005104C
           lea ecx, [ebp-018h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov dword ptr [ebp-02Ch], offset g100371A4
           lea ecx, [ebp-02Ch]
           call l10001168
;
;* String: "Toon"
;
           push offset g1003A014
           lea ecx, [ebp-0000003C4h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-0000001D8h]
           push eax
           lea ecx, [ebp-0000003CCh]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000003C4h]
           push ecx
           lea edx, [ebp-0000003CCh]
           push edx
           lea ecx, [ebp-0000000D8h]
           call l1000141A
           lea ecx, [ebp-0000003CCh]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003C4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           push offset g1005104C
           lea ecx, [ebp-0000000C0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov dword ptr [ebp-0000000D8h], offset g10037194
           lea ecx, [ebp-0000000D8h]
           call l1000183E
;
;* String: "Misc"
;
           push offset g1003A00C
           lea ecx, [ebp-0000003D4h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-0000001D8h]
           push eax
           lea ecx, [ebp-0000003DCh]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000003D4h]
           push ecx
           lea edx, [ebp-0000003DCh]
           push edx
           lea ecx, [ebp-0000000B4h]
           call l1000141A
           lea ecx, [ebp-0000003DCh]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003D4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-0000000B4h], offset g10037184
           lea ecx, [ebp-0000000B4h]
           call l10001032
;
;* String: "Color"
;
           push offset g1003A004
           lea ecx, [ebp-0000003E4h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-0000001D8h]
           push eax
           lea ecx, [ebp-0000003ECh]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000003E4h]
           push ecx
           lea edx, [ebp-0000003ECh]
           push edx
           lea ecx, [ebp-00000034Ch]
           call l1000141A
           lea ecx, [ebp-0000003ECh]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003E4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-00000034Ch], offset g10037174
           lea ecx, [ebp-00000034Ch]
           call l10001771
;
;* String: "Atmosphere"
;
           push offset g10039FF4
           lea ecx, [ebp-0000003F4h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-0000001D8h]
           push eax
           lea ecx, [ebp-0000003FCh]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000003F4h]
           push ecx
           lea edx, [ebp-0000003FCh]
           push edx
           lea ecx, [ebp-080h]
           call l1000141A
           lea ecx, [ebp-0000003FCh]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000003F4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-080h], offset g10037164
           lea ecx, [ebp-080h]
           call l100016FE
           lea eax, [ebp-000000390h]
           push eax
           push offset l1000986D
;
;* String: "Video Mode"
;
           push offset g1003957C
;
;* String: "Title"
;
           push offset g10039588
;
;* String: "Video Tab"
;
           push offset g10039590
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 00000006Fh
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-000000328h]
           push edx
           call l100097FA
           add esp, 000000018h
           lea eax, [ebp-02Ch]
           push eax
           push offset l10009F69
;
;* String: "Textures"
;
           push offset g1003959C
;
;* String: "Title"
;
           push offset g100395A8
;
;* String: "Textures Tab"
;
           push offset g100395B0
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 000000070h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-0000002F8h]
           push edx
           call l100097FA
           add esp, 000000018h
           lea eax, [ebp-00000034Ch]
           push eax
           push offset l1000A51D
;
;* String: "Color"
;
           push offset g100395C0
;
;* String: "Title"
;
           push offset g100395C8
;
;* String: "Color Tab"
;
           push offset g100395D0
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 000000072h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-0000002C8h]
           push edx
           call l100097FA
           add esp, 000000018h
           lea eax, [ebp-0000000D8h]
           push eax
           push offset l1000AACE
;
;* String: "Toon"
;
           push offset g100395DC
;
;* String: "Title"
;
           push offset g100395E4
;
;* String: "Toon Tab"
;
           push offset g100395EC
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 000000073h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-000000298h]
           push edx
           call l100097FA
           add esp, 000000018h
           lea eax, [ebp-080h]
           push eax
           push offset l1000B473
;
;* String: "Atmosphere"
;
           push offset g100395F8
;
;* String: "Title"
;
           push offset g10039604
;
;* String: "Atmosphere Tab"
;
           push offset g1003960C
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 000000079h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-000000268h]
           push edx
           call l100097FA
           add esp, 000000018h
           lea eax, [ebp-0000000B4h]
           push eax
           push offset l1000AF09
;
;* String: "Misc"
;
           push offset g1003961C
;
;* String: "Title"
;
           push offset g10039624
;
;* String: "Misc Tab"
;
           push offset g1003962C
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 000000075h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-000000238h]
           push edx
           call l100097FA
           add esp, 000000018h
           push 000000000h
           push offset l1000B783
;
;* String: "OpenGL Information"
;
           push offset g10039638
;
;* String: "Title"
;
           push offset g1003964C
;
;* String: "GLInfo Tab"
;
           push offset g10039654
           call l10001753
           add esp, 00000000Ch
           push eax
;
;* Dialog "
;
           push 00000007Ch
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-000000208h]
           push ecx
           call l100097FA
           add esp, 000000018h
           mov dword ptr [ebp-060h], 000000034h
           mov dword ptr [ebp-05Ch], 000000008h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-058h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-054h], eax
           mov dword ptr [ebp-050h], 000000000h
           xor ecx, ecx
;
;* String: "IDD_CONFIGDLG"
;
           mov edx, offset g10039660
           mov cx, dx
           mov dword ptr [ebp-04Ch], ecx
           mov dword ptr [ebp-048h], 000000007h
           mov dword ptr [ebp-044h], 000000000h
           lea eax, [ebp-000000328h]
           mov dword ptr [ebp-040h], eax
;
;* String: "Blade - OpenGL Configuration"
;
           push offset g10039670
;
;* String: "Title"
;
           push offset g10039690
;
;* String: "Dialog"
;
           push offset g10039698
           call l10001753
           add esp, 00000000Ch
           mov dword ptr [ebp-04Ch], eax
           lea ecx, [ebp-060h]
           push ecx
           call [__imp_PropertySheetA]; [COMCTL32.PropertySheetA].
           cmp eax, 000000001h
           jne l10009763
           lea ecx, [ebp-00000034Ch]
           call l1000137F
           lea ecx, [ebp-00000034Ch]
           call l10001118
           lea ecx, [ebp-0000000D8h]
           call l10001163
           lea ecx, [ebp-0000000D8h]
           call l100016CC
           lea ecx, [ebp-000000390h]
           call l100014AB
           lea ecx, [ebp-000000390h]
           call l1000185C
           lea ecx, [ebp-0000000B4h]
           call l100010C8
           lea ecx, [ebp-0000000B4h]
           call l10001069
           lea ecx, [ebp-02Ch]
           call l100012DF
           lea ecx, [ebp-02Ch]
           call l10001339
           lea ecx, [ebp-080h]
           call l10001311
           lea ecx, [ebp-080h]
           call l10001113
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-000000394h], 000000001h
           lea ecx, [ebp-080h]
           call l10001820
           lea ecx, [ebp-00000034Ch]
           call l10001820
           lea ecx, [ebp-0000000A8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000B0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000C0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000D8h]
           call l10001820
           lea ecx, [ebp-018h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-02Ch]
           call l10001820
           lea ecx, [ebp-000000364h]
           call l100014A1
           lea ecx, [ebp-000000390h]
           call l10001820
           mov eax, dword ptr [ebp-000000394h]
           jmp near ptr l100097F3
;
;* Jump:
; 10009667(C) 
;
l10009763: mov dword ptr [ebp-000000398h], 000000000h
           lea ecx, [ebp-074h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-07Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-000000340h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-000000348h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000A8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000B0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000C0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000000D8h]
           call l10001820
           lea ecx, [ebp-018h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-02Ch]
           call l10001820
           lea ecx, [ebp-000000364h]
           call l100014A1
           lea ecx, [ebp-000000390h]
           call l10001820
           mov eax, dword ptr [ebp-000000398h]
;
;* Jump:
; 1000975E(U) 
;
l100097F3: pop edi
           pop esi
           pop ebx
           mov esp, ebp
           pop ebp
           ret
l10009070 ENDP
;
;* Call:
; 100094A8, 100094DE, 10009517, 10009550, 10009586, 100095BF, 100095F3 
;
l100097FA PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], 000000030h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+004h], 000000008h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp+010h]
           and ecx, 00000FFFFh
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+00Ch], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp+014h]
           push eax
           call [__imp__strdup]; [MSVCRT._strdup].
           add esp, 000000004h
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+014h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+01Ch]
           mov dword ptr [edx+01Ch], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ecx+020h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+024h], 000000000h
           pop ebp
           ret
l100097FA ENDP
;
l1000986D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000148h
;
;* Control "C&olour Depth", Dialog 006F
;
           push 000000410h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
;
;* Control "16 bpp", Dialog 006F
;
           push 0000003EBh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "32 bpp", Dialog 006F
;
           push 0000003ECh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-014h], eax
;
;* Control "&Window", Dialog 006F
;
           push 0000003EAh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "&Full Screen", Dialog 006F
;
           push 0000003E9h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-020h], eax
;
;* Control "&Resolution", Dialog 006F
;
           push 000000411h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "Test", Dialog 006F
;
           push 0000003FBh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "", Dialog 006F
;
           push 0000003EDh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000140h], edx
           mov eax, dword ptr [ebp-000000140h]
           sub eax, 00000004Eh
           mov dword ptr [ebp-000000140h], eax
           cmp dword ptr [ebp-000000140h], 0000000C3h
           ja l10009CD4
           mov edx, dword ptr [ebp-000000140h]
           xor ecx, ecx
           mov cl, byte ptr [edx+offset l10009CF7]
           jmp [offset g10009CE3+ecx*04h]
l10009943: mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           push 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-024h], ecx
;
;* String: "&Windowed"
;
           push offset g100396B4
;
;* String: "Windowed"
;
           push offset g100396C0
;
;* String: "Video Tab"
;
           push offset g100396CC
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Full Screen"
;
           push offset g100396D8
;
;* String: "FullScreen"
;
           push offset g100396E8
;
;* String: "Video Tab"
;
           push offset g100396F4
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "C&olour Depth"
;
           push offset g10039700
;
;* String: "ColourDepth"
;
           push offset g10039710
;
;* String: "Video Tab"
;
           push offset g1003971C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "16 bpp"
;
           push offset g10039728
;
;* String: "16bpp"
;
           push offset g10039730
;
;* String: "Video Tab"
;
           push offset g10039738
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "32 bpp"
;
           push offset g10039744
;
;* String: "32bpp"
;
           push offset g1003974C
;
;* String: "Video Tab"
;
           push offset g10039754
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Resolution"
;
           push offset g10039760
;
;* String: "Resolution"
;
           push offset g1003976C
;
;* String: "Video Tab"
;
           push offset g10039778
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Test"
;
           push offset g10039784
;
;* String: "Test"
;
           push offset g1003978C
;
;* String: "Video Tab"
;
           push offset g10039794
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 00000002Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009EA7
           add esp, 00000000Ch
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+018h], 000000010h
           jne l10009A98
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 0000000F1h
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           push 000000000h
           push 0000000F1h
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           jmp l10009ABE
;
;* Jump:
; 10009A6E(C) 
;
l10009A98: push 000000000h
           push 000000000h
           push 0000000F1h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 0000000F1h
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Jump:
; 10009A96(U) 
;
l10009ABE: mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+014h], 000000000h
           je l10009AFD
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 0000000F1h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           push 000000000h
           push 0000000F1h
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009DCB
           add esp, 000000008h
           jmp l10009B31
;
;* Jump:
; 10009AC5(C) 
;
l10009AFD: push 000000000h
           push 000000000h
           push 0000000F1h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 0000000F1h
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009DCB
           add esp, 000000008h
;
;* Jump:
; 10009AFB(U) 
;
l10009B31: jmp near ptr l10009CD8
l10009B36: mov ecx, dword ptr [ebp+010h]
           and ecx, 00000FFFFh
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-000000144h]
           sub eax, 0000003E9h
           mov dword ptr [ebp-000000144h], eax
           cmp dword ptr [ebp-000000144h], 000000003h
           ja l10009BDC
           mov ecx, dword ptr [ebp-000000144h]
           jmp [offset g10009DBB+ecx*04h]
l10009B72: push 000000000h
           mov edx, dword ptr [ebp+008h]
           push edx
           call l10009DCB
           add esp, 000000008h
           jmp l10009BDC
;
;* Control "OK", Dialog 006E
;
l10009B82: push 000000001h
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009DCB
           add esp, 000000008h
           jmp l10009BDC
l10009B92: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-02Ch], eax
           push 000000010h
           mov edx, dword ptr [ebp-02Ch]
           add edx, 00000002Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009EA7
           add esp, 00000000Ch
           jmp l10009BDC
l10009BB8: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-030h], eax
           push 000000020h
           mov edx, dword ptr [ebp-030h]
           add edx, 00000002Ch
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call l10009EA7
           add esp, 00000000Ch
;
;* Jump:
; 10009B63(C), 10009B80(U), 10009B90(U), 10009BB6(U) 
;
l10009BDC: jmp near ptr l10009CD8
l10009BE1: jmp near ptr l10009CD8
l10009BE6: mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-000000148h], eax
           cmp dword ptr [ebp-000000148h], 0FFFFFF37h
           je l10009C09
           jmp near ptr l10009CD0
;
;* Jump:
; 10009C02(C) 
;
l10009C09: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-00000013Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+014h], eax
           push 000000000h
           push 000000000h
           push 0000000F0h
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           cmp eax, 000000001h
           jne l10009C57
           mov eax, dword ptr [ebp-00000013Ch]
           mov dword ptr [eax+018h], 000000010h
           jmp l10009C64
;
;* Jump:
; 10009C46(C) 
;
l10009C57: mov ecx, dword ptr [ebp-00000013Ch]
           mov dword ptr [ecx+018h], 000000020h
;
;* Jump:
; 10009C55(U) 
;
l10009C64: push 000000000h
           push 000000000h
           push 000000188h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-038h], eax
           lea eax, [ebp-000000138h]
           push eax
           mov ecx, dword ptr [ebp-038h]
;
;* Jump:
; 10009CE7(C) 
;
           push ecx
           push 000000189h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           cmp eax, 0FFFFFFFFh
           je l10009CCC
           mov eax, dword ptr [ebp-00000013Ch]
           add eax, 000000028h
           push eax
           mov ecx, dword ptr [ebp-00000013Ch]
           add ecx, 000000020h
           push ecx
           mov edx, dword ptr [ebp-00000013Ch]
           add edx, 00000001Ch
           push edx
;
;* String: "%d x %d at %d"
;
           push offset g100397A0
           lea eax, [ebp-000000138h]
           push eax
           call [__imp_sscanf]; [MSVCRT.sscanf].
           add esp, 000000014h
;
;* Jump:
; 10009C97(C) 
;
l10009CCC: xor eax, eax
           jmp l10009CDD
;
;* Jump:
; 10009C04(U) 
;
l10009CD0: xor eax, eax
           jmp l10009CDD
;
;* Jump:
; 10009928(C) 
;
l10009CD4: xor eax, eax
           jmp l10009CDD
;
;* Jump:
; 10009B31(U), 10009BDC(U), 10009BE1(U) 
;
;* Control "OK", Dialog 006E
;
l10009CD8: mov eax, 000000001h
;
;* Jump:
; 10009CCE(U), 10009CD2(U), 10009CD6(U) 
;
l10009CDD: mov esp, ebp
           pop ebp
           ret 00010h
;
g10009CE3  dd l10009BE6
           dd l10009BE1
           dd l10009943
           dd l10009B36
           dd l10009CD4
l1000986D ENDP
l10009CF7: add byte ptr [esp+eax], al
           add al, 004h
           add dword ptr [esp+eax], eax
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, byte ptr [ebx]
g10009DBB  dd l10009B82
           dd l10009B72
           dd l10009B92
           dd l10009BB8
;
;* Call:
; 10009AF3, 10009B29, 10009B78, 10009B88 
;
l10009DCB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
;
;* Control "", Dialog 006F
;
           push 0000003EDh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "16 bpp", Dialog 006F
;
           push 0000003EBh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "32 bpp", Dialog 006F
;
           push 0000003ECh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
;
;* Control "Test", Dialog 006F
;
           push 0000003FBh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "&Resolution", Dialog 006F
;
           push 000000411h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-014h], eax
;
;* Control "C&olour Depth", Dialog 006F
;
           push 000000410h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "(Some of these modes may not be accelerated)", Dialog 006F
;
           push 000000431h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_EnableWindow]; [USER32.EnableWindow].
           mov esp, ebp
           pop ebp
           ret
l10009DCB ENDP
;
;* Call:
; 10009A5F, 10009BAE, 10009BD4 
;
l10009EA7 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
;
;* Control "", Dialog 006F
;
           push 0000003EDh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
           push 000000000h
           push 000000000h
           push 000000184h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-004h], 000000000h
           jmp l10009EE4
;
;* Jump:
; 10009F3D(U) 
;
l10009EDB: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10009ED9(U) 
;
l10009EE4: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10009F3F
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax]
           cmp ecx, dword ptr [ebp+010h]
           jne l10009F3D
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+004h]
           push ecx
;
;* String: "%d x %d at %d Hz"
;
           push offset g100396A0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000010h
           push eax
           push 000000000h
           push 000000180h
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Jump:
; 10009F06(C) 
;
l10009F3D: jmp l10009EDB
;
;* Jump:
; 10009EED(C) 
;
l10009F3F: mov esp, ebp
           pop ebp
           ret
l10009EA7 ENDP
;
;* Call:
; 10009C1F, 1000A3DD, 1000A3EF, 1000A965, 1000AE09, 1000B2BC, 1000B2CE, 1000B2E0, 
; 1000B2F2, 1000B304, 1000B316, 1000B64D, 1000B65F 
;
l10009F43 PROC
           push ebp
           mov ebp, esp
           push 000000000h
           push 000000000h
           push 0000000F0h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           cmp eax, 000000001h
           jne l10009F65
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l10009F67
;
;* Jump:
; 10009F5C(C) 
;
l10009F65: xor eax, eax
;
;* Jump:
; 10009F63(U) 
;
l10009F67: pop ebp
           ret
l10009F43 ENDP
;
l10009F69 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000014Ch
;
;* Control "", Dialog 0070
;
           push 0000003F0h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "Do Not &Use Palettes", Dialog 0070
;
           push 0000003F4h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-014h], eax
;
;* Control "Do &Not Use Compressed Textures", Dialog 0070
;
           push 0000003F2h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "", Dialog 0070
;
           push 0000003F3h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "", Dialog 0070
;
           push 000000412h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000144h], edx
           mov eax, dword ptr [ebp-000000144h]
           sub eax, 00000004Eh
           mov dword ptr [ebp-000000144h], eax
           cmp dword ptr [ebp-000000144h], 0000000C3h
           ja l1000A403
           mov edx, dword ptr [ebp-000000144h]
           xor ecx, ecx
           mov cl, byte ptr [edx+offset g1000A426]
           jmp [offset g1000A412+ecx*04h]
l1000A009: mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           push 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-018h], ecx
;
;* String: "GL_NEAREST"
;
           push offset g100397B0
           push 000000000h
           push 000000143h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "GL_LINEAR"
;
           push offset g100397BC
           push 000000000h
           push 000000143h
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "GL_NEAREST_MIPMAP_NEAREST"
;
           push offset g100397C8
           push 000000000h
           push 000000143h
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "GL_LINEAR_MIPMAP_NEAREST"
;
           push offset g100397E4
           push 000000000h
           push 000000143h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "GL_NEAREST_MIPMAP_LINEAR"
;
           push offset g10039800
           push 000000000h
           push 000000143h
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "GL_LINEAR_MIPMAP_LINEAR"
;
           push offset g1003981C
           push 000000000h
           push 000000143h
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000014h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           push 000000000h
           push 000000158h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-028h], eax
           push 000000000h
           mov eax, dword ptr [ebp-028h]
           push eax
           push 00000014Eh
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov edx, dword ptr [ebp-018h]
           fld dword ptr [edx+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g10039834
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov ecx, dword ptr [ebp-018h]
           fld dword ptr [ecx+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%d"
;
           push offset g10039838
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+020h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l1000A4EA
           add esp, 000000008h
;
;* Control "&Anisotropic", Dialog 0070
;
           push 00000042Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-020h], eax
;
;* Control "&LOD Bias", Dialog 0070
;
           push 00000042Ch
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "&Filter Mode", Dialog 0070
;
           push 00000042Dh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-024h], eax
;
;* String: "&Anisotropic"
;
           push offset g1003983C
;
;* String: "Anisotropic"
;
           push offset g1003984C
;
;* String: "Textures Tab"
;
           push offset g10039858
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&LOD Bias"
;
           push offset g10039868
;
;* String: "LODBias"
;
           push offset g10039874
;
;* String: "Textures Tab"
;
           push offset g1003987C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Filter Mode"
;
           push offset g1003988C
;
;* String: "FilterMode"
;
           push offset g1003989C
;
;* String: "Textures Tab"
;
           push offset g100398A8
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-024h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Do &Not Use Compressed Textures"
;
           push offset g100398B8
;
;* String: "NotCompressTextures"
;
           push offset g100398D8
;
;* String: "Textures Tab"
;
           push offset g100398EC
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Do Not &Use Palettes"
;
           push offset g100398FC
;
;* String: "NoPalettes"
;
           push offset g10039914
;
;* String: "Textures Tab"
;
           push offset g10039920
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp near ptr l1000A407
l1000A234: mov edx, dword ptr [ebp+010h]
           and edx, 00000FFFFh
           mov dword ptr [ebp-000000148h], edx
           cmp dword ptr [ebp-000000148h], 00000040Bh
           je l1000A254
           jmp near ptr l1000A2DE
;
;* Jump:
; 1000A24D(C) 
;
;* String: "GL_LINEAR"
;
l1000A254: push offset g10039930
           push 000000000h
           push 000000158h
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-02Ch], eax
           push 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           push 00000014Eh
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           push 000000000h
           push 0000000F1h
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           push 000000000h
           push 0000000F1h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
;
;* String: "%f"
;
           push offset g1003993C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 000000000h
;
;* String: "%d"
;
           push offset g10039940
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Jump:
; 1000A24F(U) 
;
l1000A2DE: jmp near ptr l1000A407
l1000A2E3: jmp near ptr l1000A407
l1000A2E8: mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-00000014Ch], eax
           cmp dword ptr [ebp-00000014Ch], 0FFFFFF37h
           je l1000A30B
           jmp near ptr l1000A3FF
;
;* Jump:
; 1000A304(C) 
;
l1000A30B: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-038h], eax
           push 000000000h
           push 000000000h
           push 000000147h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-034h], eax
           lea eax, [ebp-000000138h]
           push eax
           mov ecx, dword ptr [ebp-034h]
           push ecx
           push 000000148h
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           cmp eax, 0FFFFFFFFh
           je l1000A381
           lea eax, [ebp-000000138h]
           push eax
           lea ecx, [ebp-000000140h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-000000140h]
           push ecx
           mov ecx, dword ptr [ebp-038h]
           add ecx, 000000014h
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           lea ecx, [ebp-000000140h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
;
;* Jump:
; 1000A34D(C) 
;
l1000A381: push 000000100h
           lea edx, [ebp-000000138h]
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           lea ecx, [ebp-000000138h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+024h]
           push 000000100h
           lea eax, [ebp-000000138h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           lea edx, [ebp-000000138h]
           push edx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l10009F43
           add esp, 000000004h
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+01Ch], eax
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+020h], eax
           jmp l1000A403
;
;* Jump:
; 1000A306(U) 
;
l1000A3FF: xor eax, eax
           jmp l1000A40C
;
;* Jump:
; 10009FEE(C), 1000A3FD(U) 
;
l1000A403: xor eax, eax
           jmp l1000A40C
;
;* Jump:
; 1000A22F(U), 1000A2DE(U), 1000A2E3(U) 
;
;* Control "OK", Dialog 006E
;
l1000A407: mov eax, 000000001h
;
;* Jump:
; 1000A401(U), 1000A405(U) 
;
l1000A40C: mov esp, ebp
           pop ebp
           ret 00010h
;
g1000A412  dd l1000A2E8
           dd l1000A2E3
           dd l1000A009
           dd l1000A234
           dd l1000A403
g1000A426  dd 004040400h
           dd 004040104h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 003020404h
l10009F69 ENDP
;
;* Call:
; 1000A134, 1000A147, 1000A6FE, 1000AC35, 1000AFF4, 1000B007, 1000B01A, 1000B02D, 
; 1000B040, 1000B053, 1000B1F9, 1000B207, 1000B215, 1000B223, 1000B231, 1000B23F, 
; 1000B5A1, 1000B5B4, 1000B5DD, 1000B5EB 
;
l1000A4EA PROC
           push ebp
           mov ebp, esp
           cmp dword ptr [ebp+00Ch], 000000000h
           je l1000A508
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 0000000F1h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           jmp l1000A51B
;
;* Jump:
; 1000A4F1(C) 
;
l1000A508: push 000000000h
           push 000000000h
           push 0000000F1h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Jump:
; 1000A506(U) 
;
l1000A51B: pop ebp
           ret
l1000A4EA ENDP
;
l1000A51D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
;
;* Control "Slider1", Dialog 0072
;
           push 0000003FDh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-014h], eax
;
;* Control "Slider3", Dialog 0072
;
           push 0000003FFh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "Slider2", Dialog 0072
;
           push 0000003FEh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "&Use Hardware Gamma if possible", Dialog 0072
;
           push 000000413h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "Static", Dialog 0072
;
           push 00000040Dh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
;
;* Control "Static", Dialog 0072
;
           push 00000040Fh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "Static", Dialog 0072
;
           push 00000040Eh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-040h]
           sub edx, 00000004Eh
           mov dword ptr [ebp-040h], edx
           cmp dword ptr [ebp-040h], 0000000C6h
           ja l1000A97B
           mov ecx, dword ptr [ebp-040h]
           xor eax, eax
           mov al, byte ptr [ecx+offset g1000A9A2]
           jmp [offset g1000A98A+eax*04h]
l1000A5CF: mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov edx, dword ptr [ebp+014h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-02Ch], eax
           push 00064FF9Ch
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Object Triangles", Dialog 0075
;
           push 000000406h
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov edx, dword ptr [ebp-02Ch]
           fld dword ptr [edx+014h]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov ecx, dword ptr [ebp-02Ch]
           fld dword ptr [ecx+014h]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* String: "%d"
;
           push offset g10039948
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 00064FF9Ch
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Object Triangles", Dialog 0075
;
           push 000000406h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov ecx, dword ptr [ebp-02Ch]
           fld dword ptr [ecx+01Ch]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov eax, dword ptr [ebp-02Ch]
           fld dword ptr [eax+01Ch]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* String: "%d"
;
           push offset g1003994C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 00064FF9Ch
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Object Triangles", Dialog 0075
;
           push 000000406h
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov eax, dword ptr [ebp-02Ch]
           fld dword ptr [eax+018h]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov edx, dword ptr [ebp-02Ch]
           fld dword ptr [edx+018h]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* String: "%d"
;
           push offset g10039950
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+020h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l1000A4EA
           add esp, 000000008h
;
;* Control "&Gamma", Dialog 0072
;
           push 000000421h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-030h], eax
;
;* Control "&Brightness", Dialog 0072
;
           push 000000422h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-020h], eax
;
;* Control "&Contrast", Dialog 0072
;
           push 000000423h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-028h], eax
;
;* Control "&Reset", Dialog 0072
;
           push 000000400h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-024h], eax
;
;* String: "&Gamma"
;
           push offset g10039954
;
;* String: "Gamma"
;
           push offset g1003995C
;
;* String: "Colour Tab"
;
           push offset g10039964
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-030h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Brightness"
;
           push offset g10039970
;
;* String: "Brightness"
;
           push offset g1003997C
;
;* String: "Colour Tab"
;
           push offset g10039988
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Contrast"
;
           push offset g10039994
;
;* String: "Contrast"
;
           push offset g100399A0
;
;* String: "Colour Tab"
;
           push offset g100399AC
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Use Hardware Gamma if possible"
;
           push offset g100399B8
;
;* String: "UseHWGamma"
;
           push offset g100399D8
;
;* String: "Colour Tab"
;
           push offset g100399E4
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Reset"
;
           push offset g100399F0
;
;* String: "Reset"
;
           push offset g100399F8
;
;* String: "Colour Tab"
;
           push offset g10039A00
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-024h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp near ptr l1000A97F
l1000A7FD: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-034h], eax
           mov edx, dword ptr [ebp+014h]
           cmp edx, dword ptr [ebp-014h]
           jne l1000A831
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000014h
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call l1000AA69
           add esp, 000000010h
           jmp l1000A879
;
;* Jump:
; 1000A812(C) 
;
l1000A831: mov ecx, dword ptr [ebp+014h]
           cmp ecx, dword ptr [ebp-004h]
           jne l1000A856
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l1000AA69
           add esp, 000000010h
           jmp l1000A879
;
;* Jump:
; 1000A837(C) 
;
l1000A856: mov eax, dword ptr [ebp+014h]
           cmp eax, dword ptr [ebp-01Ch]
           jne l1000A879
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp-034h]
           add edx, 00000001Ch
           push edx
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call l1000AA69
           add esp, 000000010h
;
;* Jump:
; 1000A82F(U), 1000A854(U), 1000A85C(C) 
;
l1000A879: jmp near ptr l1000A97F
l1000A87E: mov edx, dword ptr [ebp+010h]
           and edx, 00000FFFFh
           mov dword ptr [ebp-044h], edx
           cmp dword ptr [ebp-044h], 000000400h
           je l1000A895
           jmp l1000A8CE
;
;* Jump:
; 1000A891(C) 
;
l1000A895: push 00000003Dh
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 00000000Bh
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000024h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Jump:
; 1000A893(U) 
;
l1000A8CE: jmp near ptr l1000A97F
l1000A8D3: jmp near ptr l1000A97F
l1000A8D8: mov eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-048h], edx
           cmp dword ptr [ebp-048h], 0FFFFFF37h
           je l1000A8F5
           jmp near ptr l1000A977
;
;* Jump:
; 1000A8EE(C) 
;
l1000A8F5: push 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-03Ch], eax
           push 000000000h
           push 000000000h
;
;* Control "&Reset", Dialog 0072
;
           push 000000400h
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-04Ch], eax
           fild dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-03Ch]
           fstp dword ptr [edx+014h]
           push 000000000h
           push 000000000h
;
;* Control "&Reset", Dialog 0072
;
           push 000000400h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-050h], eax
           fild dword ptr [ebp-050h]
           mov ecx, dword ptr [ebp-03Ch]
           fstp dword ptr [ecx+01Ch]
           push 000000000h
           push 000000000h
;
;* Control "&Reset", Dialog 0072
;
           push 000000400h
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-054h], eax
           fild dword ptr [ebp-054h]
           mov eax, dword ptr [ebp-03Ch]
           fstp dword ptr [eax+018h]
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10009F43
           add esp, 000000004h
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [edx+020h], eax
           xor eax, eax
           jmp l1000A984
;
;* Jump:
; 1000A8F0(U) 
;
l1000A977: xor eax, eax
           jmp l1000A984
;
;* Jump:
; 1000A5B7(C) 
;
l1000A97B: xor eax, eax
           jmp l1000A984
;
;* Jump:
; 1000A7F8(U), 1000A879(U), 1000A8CE(U), 1000A8D3(U) 
;
;* Control "OK", Dialog 006E
;
l1000A97F: mov eax, 000000001h
;
;* Jump:
; 1000A975(U), 1000A979(U), 1000A97D(U) 
;
l1000A984: mov esp, ebp
           pop ebp
           ret 00010h
;
g1000A98A  dd l1000A8D8
           dd l1000A8D3
           dd l1000A5CF
           dd l1000A87E
           dd l1000A7FD
           dd l1000A97B
g1000A9A2  dd 005050500h
           dd 005050105h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 005050505h
           dd 003020505h
           db 005h
           db 005h
           db 004h
l1000A51D ENDP
l1000AA69 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov eax, dword ptr [ebp+014h]
           and eax, 00000FFFFh
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jl l1000AACA
           cmp dword ptr [ebp-008h], 000000007h
           jle l1000AA88
           jmp l1000AACA
;
;* Jump:
; 1000AA84(C) 
;
l1000AA88: push 000000000h
           push 000000000h
;
;* Control "&Reset", Dialog 0072
;
           push 000000400h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-004h], eax
           fild dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp+010h]
           fld dword ptr [eax]
           call l10035E80; [MSVCRT._ftol].
           push eax
;
;* String: "%d"
;
           push offset g10039944
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Jump:
; 1000AA7E(C), 1000AA86(U) 
;
l1000AACA: mov esp, ebp
           pop ebp
           ret
l1000AA69 ENDP
;
l1000AACE PROC
           push ebp
           mov ebp, esp
           sub esp, 00000013Ch
;
;* Control "Toon Colour", Dialog 0073
;
           push 000000404h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "", Dialog 0073
;
           push 000000409h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "", Dialog 0073
;
           push 000000401h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000134h], eax
           mov ecx, dword ptr [ebp-000000134h]
           sub ecx, 00000004Eh
           mov dword ptr [ebp-000000134h], ecx
           cmp dword ptr [ebp-000000134h], 0000000C3h
           ja l1000AE22
           mov eax, dword ptr [ebp-000000134h]
           xor edx, edx
           mov dl, byte ptr [eax+offset g1000AE45]
           jmp [offset g1000AE31+edx*04h]
l1000AB4A: mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           push 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+014h]
           push ecx
;
;* String: "%d"
;
           push offset g10039A0C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Normal"
;
           push offset g10039A10
           push 000000000h
           push 000000143h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "Toon Shade"
;
           push offset g10039A18
           push 000000000h
           push 000000143h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "Toon Shade + Textures"
;
           push offset g10039A24
           push 000000000h
           push 000000143h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "Toon Shade + Toon Textures (BW)"
;
           push offset g10039A3C
           push 000000000h
           push 000000143h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* String: "Toon Shade + Toon Textures (Color)"
;
           push offset g10039A5C
           push 000000000h
           push 000000143h
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000018h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           push 000000000h
           push 000000158h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-01Ch], eax
           push 000000000h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           push 00000014Eh
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
;
;* Control "&Line Width", Dialog 0073
;
           push 00000042Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
;
;* Control "&Shade Mode", Dialog 0073
;
           push 00000042Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
;
;* String: "&Line Width"
;
           push offset g10039A80
;
;* String: "LineWidth"
;
           push offset g10039A8C
;
;* String: "Toon Tab"
;
           push offset g10039A98
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Shade Mode"
;
           push offset g10039AA4
;
;* String: "ShadeMode"
;
           push offset g10039AB0
;
;* String: "Toon Tab"
;
           push offset g10039ABC
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Toon Colour"
;
           push offset g10039AC8
;
;* String: "ToonColour"
;
           push offset g10039AD8
;
;* String: "Toon Tab"
;
           push offset g10039AE4
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp near ptr l1000AE26
l1000ACCC: mov ecx, dword ptr [ebp+010h]
           and ecx, 00000FFFFh
           mov dword ptr [ebp-000000138h], ecx
           cmp dword ptr [ebp-000000138h], 00000040Ah
           je l1000ACE9
           jmp l1000AD2D
;
;* Jump:
; 1000ACE5(C) 
;
l1000ACE9: push 000000000h
;
;* String: "%d"
;
           push offset g10039AF0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Normal"
;
           push offset g10039AF4
           push 000000000h
           push 00000014Dh
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           push 000000000h
           push 000000000h
           push 0000000F1h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
;
;* Jump:
; 1000ACE7(U) 
;
l1000AD2D: jmp near ptr l1000AE26
l1000AD32: jmp near ptr l1000AE26
l1000AD37: mov edx, dword ptr [ebp+014h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-00000013Ch], ecx
           cmp dword ptr [ebp-00000013Ch], 0FFFFFF37h
           je l1000AD5A
           jmp near ptr l1000AE1E
;
;* Jump:
; 1000AD53(C) 
;
l1000AD5A: push 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-000000128h], eax
           push 000000100h
           lea eax, [ebp-000000124h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           lea edx, [ebp-000000124h]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000128h]
           mov dword ptr [ecx+014h], eax
           push 000000000h
           push 000000000h
           push 000000147h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           mov dword ptr [ebp-024h], eax
           lea eax, [ebp-000000124h]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           push 000000148h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           cmp eax, 0FFFFFFFFh
           je l1000AE05
           lea eax, [ebp-000000124h]
           push eax
           lea ecx, [ebp-000000130h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-000000130h]
           push ecx
           mov ecx, dword ptr [ebp-000000128h]
           add ecx, 000000018h
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           lea ecx, [ebp-000000130h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
;
;* Jump:
; 1000ADCE(C) 
;
l1000AE05: mov edx, dword ptr [ebp-008h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000128h]
           mov dword ptr [ecx+020h], eax
           xor eax, eax
           jmp l1000AE2B
;
;* Jump:
; 1000AD55(U) 
;
l1000AE1E: xor eax, eax
           jmp l1000AE2B
;
;* Jump:
; 1000AB2F(C) 
;
l1000AE22: xor eax, eax
           jmp l1000AE2B
;
;* Jump:
; 1000ACC7(U), 1000AD2D(U), 1000AD32(U) 
;
;* Control "OK", Dialog 006E
;
l1000AE26: mov eax, 000000001h
;
;* Jump:
; 1000AE1C(U), 1000AE20(U), 1000AE24(U) 
;
l1000AE2B: mov esp, ebp
           pop ebp
           ret 00010h
;
g1000AE31  dd l1000AD37
           dd l1000AD32
           dd l1000AB4A
           dd l1000ACCC
           dd l1000AE22
g1000AE45  dd 004040400h
           dd 004040104h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 004040404h
           dd 003020404h
l1000AACE ENDP
l1000AF09 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-020h], eax
;
;* Control "Show &Object Triangles", Dialog 0075
;
           push 000000406h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
;
;* Control "Show &Map Outline", Dialog 0075
;
           push 000000407h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-014h], eax
;
;* Control "Show Map &Triangles", Dialog 0075
;
           push 000000408h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
;
;* Control "", Dialog 0075
;
           push 000000418h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "Use Texture Font For System", Dialog 0075
;
           push 00000041Eh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "", Dialog 0075
;
           push 000000420h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "", Dialog 007C
;
;* Control "Opaque Background", Dialog 0075
;
           push 00000041Fh
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-05Ch], edx
           mov eax, dword ptr [ebp-05Ch]
           sub eax, 00000004Eh
           mov dword ptr [ebp-05Ch], eax
           cmp dword ptr [ebp-05Ch], 0000000C3h
           ja l1000B38C
           mov edx, dword ptr [ebp-05Ch]
           xor ecx, ecx
           mov cl, byte ptr [edx+offset l1000B3AF]
           jmp [offset g1000B39B+ecx*04h]
l1000AFCD: mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           push 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov eax, dword ptr [ebp+014h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+01Ch]
           push eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+020h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+028h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+02Ch]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+030h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g10039AFC
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+024h]
           push edx
;
;* String: "%d"
;
           push offset g10039B00
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Control "Swap Interval", Dialog 0075
;
           push 000000430h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-024h], eax
;
;* Control "Scale", Dialog 0075
;
           push 000000425h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-02Ch], eax
;
;* String: "Show &Info"
;
           push offset g10039B04
;
;* String: "ShowInfo"
;
           push offset g10039B10
;
;* String: "Misc Tab"
;
           push offset g10039B1C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Show &Object Triangles"
;
           push offset g10039B28
;
;* String: "ShowObjTris"
;
           push offset g10039B40
;
;* String: "Misc Tab"
;
           push offset g10039B4C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Show &Map Outline"
;
           push offset g10039B58
;
;* String: "ShowMapOutline"
;
           push offset g10039B6C
;
;* String: "Misc Tab"
;
           push offset g10039B7C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Show Map &Triangles"
;
           push offset g10039B88
;
;* String: "ShowMapTris"
;
           push offset g10039B9C
;
;* String: "Misc Tab"
;
           push offset g10039BA8
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Use Texture Font For System"
;
           push offset g10039BB4
;
;* String: "UseTextureFont"
;
           push offset g10039BD0
;
;* String: "Misc Tab"
;
           push offset g10039BE0
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Opaque Background"
;
           push offset g10039BEC
;
;* String: "OpaqueBackground"
;
           push offset g10039C00
;
;* String: "Misc Tab"
;
           push offset g10039C14
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Swap Interval"
;
           push offset g10039C20
;
;* String: "SwapInterval"
;
           push offset g10039C30
;
;* String: "Misc Tab"
;
           push offset g10039C40
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-024h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Scale"
;
           push offset g10039C4C
;
;* String: "Scale"
;
           push offset g10039C54
;
;* String: "Misc Tab"
;
           push offset g10039C5C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp near ptr l1000B390
l1000B1D9: mov edx, dword ptr [ebp+010h]
           and edx, 00000FFFFh
           mov dword ptr [ebp-060h], edx
           cmp dword ptr [ebp-060h], 00000040Ch
           je l1000B1F3
           jmp near ptr l1000B282
;
;* Jump:
; 1000B1EC(C) 
;
l1000B1F3: push 000000000h
           mov eax, dword ptr [ebp-020h]
           push eax
           call l1000A4EA
           add esp, 000000008h
           push 000000000h
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           push 000000000h
           mov edx, dword ptr [ebp-014h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           push 000000000h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l1000A4EA
           add esp, 000000008h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call l1000A4EA
           add esp, 000000008h
           push 000000000h
           mov edx, dword ptr [ebp-018h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           push 03FE00000h
           push 000000000h
;
;* String: "%f"
;
           push offset g10039C68
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 000000000h
;
;* String: "%d"
;
           push offset g10039C6C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Jump:
; 1000B1EE(U) 
;
l1000B282: jmp near ptr l1000B390
l1000B287: jmp near ptr l1000B390
l1000B28C: mov edx, dword ptr [ebp+014h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [ebp-064h], ecx
           cmp dword ptr [ebp-064h], 0FFFFFF37h
           je l1000B2A9
           jmp near ptr l1000B388
;
;* Jump:
; 1000B2A2(C) 
;
l1000B2A9: push 000000008h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-038h], eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+014h], eax
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+018h], eax
           mov edx, dword ptr [ebp-014h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+020h], eax
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+028h], eax
           mov edx, dword ptr [ebp-018h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+02Ch], eax
;
;* Control "", Dialog 0075
;
           push 000000418h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-034h], eax
           push 000000020h
           lea eax, [ebp-058h]
           push eax
           mov ecx, dword ptr [ebp-034h]
           push ecx
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           test eax, eax
           je l1000B35D
           lea edx, [ebp-058h]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+024h], eax
;
;* Jump:
; 1000B348(C) 
;
l1000B35D: push 000000020h
           lea edx, [ebp-058h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           test eax, eax
           je l1000B384
           lea ecx, [ebp-058h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+030h]
;
;* Jump:
; 1000B36F(C) 
;
l1000B384: xor eax, eax
           jmp l1000B395
;
;* Jump:
; 1000B2A4(U) 
;
l1000B388: xor eax, eax
           jmp l1000B395
;
;* Jump:
; 1000AFB5(C) 
;
l1000B38C: xor eax, eax
           jmp l1000B395
;
;* Jump:
; 1000B1D4(U), 1000B282(U), 1000B287(U) 
;
;* Control "OK", Dialog 006E
;
l1000B390: mov eax, 000000001h
;
;* Jump:
; 1000B386(U), 1000B38A(U), 1000B38E(U) 
;
l1000B395: mov esp, ebp
           pop ebp
           ret 00010h
;
g1000B39B  dd l1000B28C
           dd l1000B287
           dd l1000AFCD
           dd l1000B1D9
           dd l1000B38C
l1000AF09 ENDP
l1000B3AF PROC
           add byte ptr [esp+eax], al
           add al, 004h
           add dword ptr [esp+eax], eax
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, byte ptr [ebx]
l1000B473: push ebp
           mov ebp, esp
           sub esp, 000000048h
;
;* Control "Use OpenGL Fog", Dialog 0079
;
           push 000000414h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-008h], eax
;
;* Control "Subdivide Map", Dialog 0079
;
           push 000000415h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* Control "", Dialog 0079
;
           push 000000417h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-040h]
           sub ecx, 00000004Eh
           mov dword ptr [ebp-040h], ecx
           cmp dword ptr [ebp-040h], 0000000C3h
           ja l1000B69C
           mov eax, dword ptr [ebp-040h]
           xor edx, edx
           mov dl, byte ptr [eax+offset g1000B6BF]
           jmp [offset g1000B6AB+edx*04h]
l1000B4DD: mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
           push 000000008h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-014h], edx
;
;* Control "Fog Factor", Dialog 0079
;
           push 000000424h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
;
;* String: "&Use OpenGL Fog"
;
           push offset g10039C70
;
;* String: "UseOGLFog"
;
           push offset g10039C80
;
;* String: "Atmosphere Tab"
;
           push offset g10039C8C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Subdivide Map"
;
           push offset g10039C9C
;
;* String: "SubdivideMap"
;
           push offset g10039CAC
;
;* String: "Atmosphere Tab"
;
           push offset g10039CBC
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "&Fog Factor"
;
           push offset g10039CCC
;
;* String: "FogFactor"
;
           push offset g10039CD8
;
;* String: "Atmosphere Tab"
;
           push offset g10039CE4
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g10039CF4
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           jmp near ptr l1000B6A0
l1000B5C1: mov eax, dword ptr [ebp+010h]
           and eax, 00000FFFFh
           mov dword ptr [ebp-044h], eax
           cmp dword ptr [ebp-044h], 000000432h
           je l1000B5D7
           jmp l1000B616
;
;* Jump:
; 1000B5D3(C) 
;
l1000B5D7: push 000000000h
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l1000A4EA
           add esp, 000000008h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov edx, dword ptr [ebp-004h]
           push edx
           call l1000A4EA
           add esp, 000000008h
           push 03F947AE1h
           push 040000000h
;
;* String: "%f"
;
           push offset g10039CF8
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Jump:
; 1000B5D5(U) 
;
l1000B616: jmp near ptr l1000B6A0
l1000B61B: jmp near ptr l1000B6A0
l1000B620: mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-048h], eax
           cmp dword ptr [ebp-048h], 0FFFFFF37h
           je l1000B63A
           jmp l1000B698
;
;* Jump:
; 1000B636(C) 
;
l1000B63A: push 000000008h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-008h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+018h], eax
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10009F43
           add esp, 000000004h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+01Ch], eax
           push 000000020h
           lea edx, [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           test eax, eax
           je l1000B694
           lea ecx, [ebp-03Ch]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-01Ch]
           fstp dword ptr [edx+014h]
;
;* Jump:
; 1000B67F(C) 
;
l1000B694: xor eax, eax
           jmp l1000B6A5
;
;* Jump:
; 1000B638(U) 
;
l1000B698: xor eax, eax
           jmp l1000B6A5
;
;* Jump:
; 1000B4C5(C) 
;
l1000B69C: xor eax, eax
           jmp l1000B6A5
;
;* Jump:
; 1000B5BC(U), 1000B616(U), 1000B61B(U) 
;
;* Control "OK", Dialog 006E
;
l1000B6A0: mov eax, 000000001h
;
;* Jump:
; 1000B696(U), 1000B69A(U), 1000B69E(U) 
;
l1000B6A5: mov esp, ebp
           pop ebp
           ret 00010h
;
g1000B6AB  dd l1000B620
           dd l1000B61B
           dd l1000B4DD
           dd l1000B5C1
           dd l1000B69C
g1000B6BF  db 000h
           db 004h
l1000B3AF ENDP
           add al, 004h
           add al, 001h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, 004h
           add al, byte ptr [ebx]
l1000B783 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           push esi
           push edi
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-044h], eax
           cmp dword ptr [ebp-044h], 00000004Eh
           je l1000BB67
           cmp dword ptr [ebp-044h], 000000053h
           je l1000BB65
           cmp dword ptr [ebp-044h], 000000110h
           je l1000B7B3
           jmp near ptr l1000BB69
;
;* Jump:
; 1000B7AC(C) 
;
;* Control "Vendor:", Dialog 007C
;
l1000B7B3: push 000000426h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-020h], eax
;
;* Control "Renderer:", Dialog 007C
;
           push 000000427h
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-018h], eax
;
;* Control "Version:", Dialog 007C
;
           push 000000428h
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-024h], eax
;
;* Control "Extensions gl:", Dialog 007C
;
           push 000000429h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-010h], eax
;
;* Control "Extensions wgl:", Dialog 007C
;
           push 00000042Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-004h], eax
;
;* String: "Vendor:"
;
           push offset g10039CFC
;
;* String: "Vendor"
;
           push offset g10039D04
;
;* String: "GLInfo Tab"
;
           push offset g10039D0C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Renderer:"
;
           push offset g10039D18
;
;* String: "Renderer"
;
           push offset g10039D24
;
;* String: "GLInfo Tab"
;
           push offset g10039D30
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Version:"
;
           push offset g10039D3C
;
;* String: "Version"
;
           push offset g10039D48
;
;* String: "GLInfo Tab"
;
           push offset g10039D50
           call l10001753
           add esp, 00000000Ch
           push eax
           mov edx, dword ptr [ebp-024h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Extensions gl"
;
           push offset g10039D5C
;
;* String: "ExtensionsGL"
;
           push offset g10039D6C
;
;* String: "GLInfo Tab"
;
           push offset g10039D7C
           call l10001753
           add esp, 00000000Ch
           push eax
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "Extensions wgl"
;
           push offset g10039D88
;
;* String: "ExtensionsWGL"
;
           push offset g10039D98
;
;* String: "GLInfo Tab"
;
           push offset g10039DA8
           call l10001753
           add esp, 00000000Ch
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Control "OpenGL information only available if dialog box called", Dialog 007C
;
           push 00000041Ah
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-02Ch], eax
;
;* Control "from the game", Dialog 007C
;
           push 00000041Bh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-028h], eax
;
;* Control "Static", Dialog 007C
;
           push 00000041Ch
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-03Ch], eax
;
;* Control "", Dialog 007C
;
           push 00000041Dh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-01Ch], eax
;
;* Control "", Dialog 007C
;
;* Control "Opaque Background", Dialog 0075
;
           push 00000041Fh
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_GetDlgItem]; [USER32.GetDlgItem].
           mov dword ptr [ebp-040h], eax
           push 000001F00h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           mov dword ptr [ebp-030h], eax
           cmp dword ptr [ebp-030h], 000000000h
           jne l1000B981
;
;* String: "OpenGL information only available if dialog box "
;
           push offset g10039DB4
           mov ecx, dword ptr [ebp-02Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* String: "called while the game is running."
;
           push offset g10039DE8
           mov edx, dword ptr [ebp-028h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push offset g10050FD4
           mov eax, dword ptr [ebp-03Ch]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push offset g10050FD8
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push offset g10050FDC
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push offset g10050FE0
           mov eax, dword ptr [ebp-024h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp l1000B9BB
;
;* Jump:
; 1000B923(C) 
;
l1000B981: mov ecx, dword ptr [ebp-030h]
           push ecx
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 000001F01h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           push eax
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           push 000001F02h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           push eax
           mov ecx, dword ptr [ebp-03Ch]
           push ecx
           call [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
;
;* Jump:
; 1000B97F(U) 
;
;* String: " ,"
;
l1000B9BB: mov dx, word ptr [g10039E0C]
           mov word ptr [ebp-014h], dx
           mov al, byte ptr [g10039E0E]
           mov byte ptr [ebp-012h], al
           push 000001F03h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           mov dword ptr [ebp-038h], eax
           cmp dword ptr [ebp-038h], 000000000h
           jne l1000B9E7
           jmp near ptr l1000BB6D
;
;* Jump:
; 1000B9E0(C) 
;
l1000B9E7: mov edi, dword ptr [ebp-038h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-034h], ecx
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           push ecx
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l1000BA17
           jmp near ptr l1000BB6D
;
;* Jump:
; 1000BA10(C) 
;
l1000BA17: mov edi, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-00Ch]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea ecx, [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000BA7B(U) 
;
l1000BA4E: cmp dword ptr [ebp-008h], 000000000h
           je l1000BA7D
           mov eax, dword ptr [ebp-008h]
           push eax
           push 000000000h
           push 000000180h
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           lea edx, [ebp-014h]
           push edx
           push 000000000h
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           jmp l1000BA4E
;
;* Jump:
; 1000BA52(C) 
;
l1000BA7D: mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
;
;* String: "wglGetExtensionsStringEXT"
;
           push offset g10039E10
           call [__imp_wglGetProcAddress]; [OPENGL32.wglGetProcAddress].
           mov dword ptr [g10050FD0], eax
           cmp dword ptr [g10050FD0], 000000000h
           jne l1000BAA8
           jmp near ptr l1000BB6D
;
;* Jump:
; 1000BAA1(C) 
;
l1000BAA8: call [__imp_wglGetCurrentDC]; [OPENGL32.wglGetCurrentDC].
           push eax
           call [g10050FD0]
           mov dword ptr [ebp-038h], eax
           cmp dword ptr [ebp-038h], 000000000h
           jne l1000BAC3
           jmp near ptr l1000BB6D
;
;* Jump:
; 1000BABC(C) 
;
l1000BAC3: mov edi, dword ptr [ebp-038h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-034h], ecx
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           push ecx
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           jne l1000BAF0
           jmp l1000BB6D
;
;* Jump:
; 1000BAEC(C) 
;
l1000BAF0: mov edi, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-00Ch]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea ecx, [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1000BB54(U) 
;
l1000BB27: cmp dword ptr [ebp-008h], 000000000h
           je l1000BB56
           mov eax, dword ptr [ebp-008h]
           push eax
           push 000000000h
           push 000000180h
           mov ecx, dword ptr [ebp-040h]
           push ecx
           call [__imp_SendMessageA]; [USER32.SendMessageA].
           lea edx, [ebp-014h]
           push edx
           push 000000000h
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-008h], eax
           jmp l1000BB27
;
;* Jump:
; 1000BB2B(C) 
;
l1000BB56: mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
           jmp l1000BB6D
;
;* Jump:
; 1000B79F(C) 
;
l1000BB65: jmp l1000BB6D
;
;* Jump:
; 1000B795(C) 
;
l1000BB67: jmp l1000BB6D
;
;* Jump:
; 1000B7AE(U) 
;
l1000BB69: xor eax, eax
           jmp l1000BB72
;
;* Jump:
; 1000B9E2(U), 1000BA12(U), 1000BAA3(U), 1000BABE(U), 1000BAEE(U), 
; 1000BB63(U), 1000BB65(U), 1000BB67(U) 
;
;* Control "OK", Dialog 006E
;
l1000BB6D: mov eax, 000000001h
;
;* Jump:
; 1000BB6B(U) 
;
l1000BB72: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l1000B783 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000141A(U) 
;
l1000C650 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], offset g100371C8
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00008h
l1000C650 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011A9(U) 
;
l1000C6A0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l1000C6A0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001492(U) 
;
l1000C6B0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l1000C6B0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100016F4(U) 
;
l1000C6C0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l1000C6C0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001820(U) 
;
l1000C6D0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000000Ch
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov esp, ebp
           pop ebp
           ret
l1000C6D0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014A1(U) 
;
l1000C700 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g100371C4
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1000C7A6
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1000C733
           jmp l1000C7A6
;
;* Jump:
; 1000C72F(C) 
;
l1000C733: cmp dword ptr [ebp-010h], 000000000h
           je l1000C773
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000C74B
;
;* Jump:
; 1000C771(U) 
;
l1000C742: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000C740(U) 
;
l1000C74B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000C773
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1000C742
;
;* Jump:
; 1000C737(C), 1000C754(C) 
;
l1000C773: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1000C719(C), 1000C731(U) 
;
l1000C7A6: mov esp, ebp
           pop ebp
           ret
l1000C700 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001690(U), 1000186B(U) 
;
l1000C7E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g100371C4
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1000C886
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1000C813
           jmp l1000C886
;
;* Jump:
; 1000C80F(C) 
;
l1000C813: cmp dword ptr [ebp-010h], 000000000h
           je l1000C853
           mov dword ptr [ebp-004h], 000000000h
           jmp l1000C82B
;
;* Jump:
; 1000C851(U) 
;
l1000C822: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000C820(U) 
;
l1000C82B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1000C853
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1000C822
;
;* Jump:
; 1000C817(C), 1000C834(C) 
;
l1000C853: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1000C7F9(C), 1000C811(U) 
;
l1000C886: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1000C89C
           mov edx, dword ptr [ebp-014h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1000C88E(C) 
;
l1000C89C: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000C7E0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001771(U) 
;
l1000C8E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000424h
           mov dword ptr [ebp-000000424h], ecx
           mov eax, dword ptr [ebp-000000424h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-000000424h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000108h], eax
           mov ecx, dword ptr [ebp-000000104h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000100h]
           push edx
;
;* String: "20"
;
           push offset g1003A038
;
;* String: "GammaCorrection"
;
           push offset g1003A03C
           mov eax, dword ptr [ebp-000000108h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000100h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000424h]
           fstp dword ptr [edx+014h]
           mov eax, dword ptr [ebp-000000424h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000020Ch], ecx
           mov edx, dword ptr [ebp-000000424h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000210h], eax
           mov ecx, dword ptr [ebp-00000020Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000208h]
           push edx
;
;* String: "25"
;
           push offset g1003A04C
;
;* String: "Brightness"
;
           push offset g1003A050
           mov eax, dword ptr [ebp-000000210h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000208h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000424h]
           fstp dword ptr [edx+018h]
           mov eax, dword ptr [ebp-000000424h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000314h], ecx
           mov edx, dword ptr [ebp-000000424h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000318h], eax
           mov ecx, dword ptr [ebp-000000314h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000310h]
           push edx
;
;* String: "10"
;
           push offset g1003A05C
;
;* String: "Contrast"
;
           push offset g1003A060
           mov eax, dword ptr [ebp-000000318h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000310h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000424h]
           fstp dword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-000000424h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000041Ch], ecx
           mov edx, dword ptr [ebp-000000424h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000420h], eax
           mov ecx, dword ptr [ebp-00000041Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000418h]
           push edx
           push offset g1003A06C
;
;* String: "UseHWGamma"
;
           push offset g1003A070
           mov eax, dword ptr [ebp-000000420h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000418h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000424h]
           mov dword ptr [edx+020h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000C8E0 ENDP
;
;* Jump:
; 10001118(U) 
;
l1000CA7C PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [eax], 000000000h
           je l1000CABE
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+018h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+024h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1000CAC0
;
;* Jump:
; 1000CA8B(C) 
;
l1000CABE: xor eax, eax
;
;* Jump:
; 1000CABC(U) 
;
l1000CAC0: mov esp, ebp
           pop ebp
           ret
l1000CA7C ENDP
;
;* Jump:
; 1000137F(U) 
;
l1000CAC4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "GammaCorrection"
;
           push offset g1003A07C
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           fld dword ptr [ebp-018h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "Brightness"
;
           push offset g1003A08C
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           fld dword ptr [ebp-024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "Contrast"
;
           push offset g1003A098
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "UseHWGamma"
;
           push offset g1003A0A4
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000CAC4 ENDP
;
;* Jump:
; 1000183E(U) 
;
l1000CBE9 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000224h
           mov dword ptr [ebp-000000224h], ecx
           mov eax, dword ptr [ebp-000000224h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000010Ch], ecx
           mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000110h], eax
           mov ecx, dword ptr [ebp-00000010Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000108h]
           push edx
           push offset g1003A0B0
;
;* String: "LineWidth"
;
           push offset g1003A0B4
           mov eax, dword ptr [ebp-000000110h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000108h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000224h]
           mov dword ptr [edx+014h], eax
           mov eax, dword ptr [ebp-000000224h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000114h], ecx
           mov edx, dword ptr [ebp-000000224h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-000000114h]
           push ecx
           push 000000100h
           push offset g10051920
;
;* String: "Normal"
;
           push offset g1003A0C0
;
;* String: "ShadeMode"
;
           push offset g1003A0C8
           mov edx, dword ptr [ebp-000000118h]
           push edx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           push offset g10051920
           lea ecx, [ebp-008h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-000000224h]
           add ecx, 000000018h
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           lea ecx, [ebp-008h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, dword ptr [ebp-000000224h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00000021Ch], edx
           mov eax, dword ptr [ebp-000000224h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-000000220h], ecx
           mov edx, dword ptr [ebp-00000021Ch]
           push edx
           push 000000100h
           lea eax, [ebp-000000218h]
           push eax
           push offset g1003A0D4
;
;* String: "ToonColor"
;
           push offset g1003A0D8
           mov ecx, dword ptr [ebp-000000220h]
           push ecx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea edx, [ebp-000000218h]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000224h]
           mov dword ptr [ecx+020h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000CBE9 ENDP
;
;* Jump:
; 100016CC(U) 
;
l1000CD33 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [eax], 000000000h
           je l1000CDDF
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
;
;* String: "ToonShade"
;
           push offset g1003A0E4
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A0F0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ToonLineWidth"
;
           push offset g1003A0F4
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+0000001F8h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+020h]
           push edx
;
;* String: "%d"
;
           push offset g1003A104
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ToonColor"
;
           push offset g1003A108
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1000CDE1
;
;* Jump:
; 1000CD44(C) 
;
l1000CDDF: xor eax, eax
;
;* Jump:
; 1000CDDD(U) 
;
l1000CDE1: mov esp, ebp
           pop ebp
           ret
l1000CD33 ENDP
;
;* Jump:
; 10001163(U) 
;
l1000CDE5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "LineWidth"
;
           push offset g1003A114
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
;
;* String: "ShadeMode"
;
           push offset g1003A120
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ToonColor"
;
           push offset g1003A12C
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000CDE5 ENDP
;
;* Jump:
; 100014EC(U) 
;
l1000CEAB PROC
           push ebp
           mov ebp, esp
           sub esp, 000000634h
           mov dword ptr [ebp-000000634h], ecx
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000108h], eax
           mov ecx, dword ptr [ebp-000000104h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000100h]
           push edx
           push offset g1003A138
;
;* String: "Window"
;
           push offset g1003A13C
           mov eax, dword ptr [ebp-000000108h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000100h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+014h], eax
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000020Ch], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000210h], eax
           mov ecx, dword ptr [ebp-00000020Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000208h]
           push edx
;
;* String: "640"
;
           push offset g1003A144
;
;* String: "Width"
;
           push offset g1003A148
           mov eax, dword ptr [ebp-000000210h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000208h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+01Ch], eax
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000314h], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000318h], eax
           mov ecx, dword ptr [ebp-000000314h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000310h]
           push edx
;
;* String: "480"
;
           push offset g1003A150
;
;* String: "Height"
;
           push offset g1003A154
           mov eax, dword ptr [ebp-000000318h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000310h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+020h], eax
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000041Ch], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000420h], eax
           mov ecx, dword ptr [ebp-00000041Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000418h]
           push edx
;
;* String: "32"
;
           push offset g1003A15C
;
;* String: "Bpp"
;
           push offset g1003A160
           mov eax, dword ptr [ebp-000000420h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000418h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+018h], eax
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000524h], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000528h], eax
           mov ecx, dword ptr [ebp-000000524h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000520h]
           push edx
           push offset g1003A164
;
;* String: "Flags"
;
           push offset g1003A168
           mov eax, dword ptr [ebp-000000528h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000520h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+024h], eax
           mov eax, dword ptr [ebp-000000634h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000062Ch], ecx
           mov edx, dword ptr [ebp-000000634h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000630h], eax
           mov ecx, dword ptr [ebp-00000062Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000628h]
           push edx
;
;* String: "72"
;
           push offset g1003A170
;
;* String: "Frequency"
;
           push offset g1003A174
           mov eax, dword ptr [ebp-000000630h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000628h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000634h]
           mov dword ptr [edx+028h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000CEAB ENDP
;
;* Jump:
; 1000185C(U) 
;
l1000D109 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l1000D109 ENDP
;
;* Jump:
; 100014AB(U) 
;
l1000D116 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov dword ptr [ebp-04Ch], ecx
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Window"
;
           push offset g1003A180
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Width"
;
           push offset g1003A188
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Height"
;
           push offset g1003A190
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Bpp"
;
           push offset g1003A198
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp-03Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Flags"
;
           push offset g1003A19C
           mov edx, dword ptr [ebp-038h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp-040h]
           push eax
           mov ecx, dword ptr [ebp-048h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "Frequency"
;
           push offset g1003A1A4
           mov edx, dword ptr [ebp-044h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000D116 ENDP
;
;* Jump:
; 10001032(U) 
;
l1000D2AE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000844h
           mov dword ptr [ebp-000000844h], ecx
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000108h], eax
           mov ecx, dword ptr [ebp-000000104h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000100h]
           push edx
           push offset g1003A1B0
;
;* String: "ShowInfo"
;
           push offset g1003A1B4
           mov eax, dword ptr [ebp-000000108h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000100h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+014h], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000020Ch], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000210h], eax
           mov ecx, dword ptr [ebp-00000020Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000208h]
           push edx
           push offset g1003A1C0
;
;* String: "ShowObjTris"
;
           push offset g1003A1C4
           mov eax, dword ptr [ebp-000000210h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000208h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+018h], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000314h], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000318h], eax
           mov ecx, dword ptr [ebp-000000314h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000310h]
           push edx
           push offset g1003A1D0
;
;* String: "ShowMapOutline"
;
           push offset g1003A1D4
           mov eax, dword ptr [ebp-000000318h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000310h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+01Ch], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000041Ch], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000420h], eax
           mov ecx, dword ptr [ebp-00000041Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000418h]
           push edx
           push offset g1003A1E4
;
;* String: "ShowMapTris"
;
           push offset g1003A1E8
           mov eax, dword ptr [ebp-000000420h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000418h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+020h], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000524h], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000528h], eax
           mov ecx, dword ptr [ebp-000000524h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000520h]
           push edx
           push offset g1003A1F4
;
;* String: "SwapInterval"
;
           push offset g1003A1F8
           mov eax, dword ptr [ebp-000000528h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000520h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+024h], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000062Ch], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000630h], eax
           mov ecx, dword ptr [ebp-00000062Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000628h]
           push edx
           push offset g1003A208
;
;* String: "UseTextureFont"
;
           push offset g1003A20C
           mov eax, dword ptr [ebp-000000630h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000628h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+028h], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000734h], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000738h], eax
           mov ecx, dword ptr [ebp-000000734h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000730h]
           push edx
           push offset g1003A21C
;
;* String: "TFontOpaque"
;
           push offset g1003A220
           mov eax, dword ptr [ebp-000000738h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000730h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           mov dword ptr [edx+02Ch], eax
           mov eax, dword ptr [ebp-000000844h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000083Ch], ecx
           mov edx, dword ptr [ebp-000000844h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000840h], eax
           mov ecx, dword ptr [ebp-00000083Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000838h]
           push edx
;
;* String: "0.5"
;
           push offset g1003A22C
;
;* String: "TFontScale"
;
           push offset g1003A230
           mov eax, dword ptr [ebp-000000840h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000838h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000844h]
           fstp dword ptr [edx+030h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000D2AE ENDP
;
;* Jump:
; 10001069(U) 
;
l1000D5CE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [eax], 000000000h
           je l1000D77F
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+014h]
           push edx
;
;* String: "%d"
;
           push offset g1003A23C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ShowStats"
;
           push offset g1003A240
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+02Ch]
           mov dword ptr [ebp-004h], eax
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+01Ch], 000000000h
           je l1000D642
           mov ecx, dword ptr [ebp-004h]
           or ecx, 000000004h
           mov dword ptr [ebp-004h], ecx
           jmp l1000D64B
;
;* Jump:
; 1000D635(C) 
;
l1000D642: mov edx, dword ptr [ebp-004h]
           and edx, 0FFFFFFFBh
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000D640(U) 
;
l1000D64B: mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+018h], 000000000h
           je l1000D662
           mov ecx, dword ptr [ebp-004h]
           or ecx, 000008000h
           mov dword ptr [ebp-004h], ecx
           jmp l1000D66E
;
;* Jump:
; 1000D652(C) 
;
l1000D662: mov edx, dword ptr [ebp-004h]
           and edx, 0FFFF7FFFh
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000D660(U) 
;
l1000D66E: mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+020h], 000000000h
           je l1000D685
           mov ecx, dword ptr [ebp-004h]
           or ecx, 000010000h
           mov dword ptr [ebp-004h], ecx
           jmp l1000D691
;
;* Jump:
; 1000D675(C) 
;
l1000D685: mov edx, dword ptr [ebp-004h]
           and edx, 0FFFEFFFFh
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1000D683(U) 
;
l1000D691: mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+028h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+024h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A24C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "SwapInterval"
;
           push offset g1003A250
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+0000001F8h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+028h]
           push edx
;
;* String: "%d"
;
           push offset g1003A260
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "UseTextureFont"
;
           push offset g1003A264
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+030h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A274
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "TFontScale"
;
           push offset g1003A278
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+02Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A284
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "TFontOpaque"
;
           push offset g1003A288
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+0000001F8h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1000D781
;
;* Jump:
; 1000D5DF(C) 
;
l1000D77F: xor eax, eax
;
;* Jump:
; 1000D77D(U) 
;
l1000D781: mov esp, ebp
           pop ebp
           ret
l1000D5CE ENDP
;
;* Jump:
; 100010C8(U) 
;
l1000D785 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000064h
           mov dword ptr [ebp-064h], ecx
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ShowInfo"
;
           push offset g1003A294
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ShowObjTris"
;
           push offset g1003A2A0
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ShowMapOutlne"
;
           push offset g1003A2AC
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "ShowMapTris"
;
           push offset g1003A2BC
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+024h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp-03Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "SwapInterval"
;
           push offset g1003A2C8
           mov edx, dword ptr [ebp-038h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp-040h]
           push eax
           mov ecx, dword ptr [ebp-048h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "UseTextureFont"
;
           push offset g1003A2D8
           mov edx, dword ptr [ebp-044h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ebp-04Ch]
           push eax
           mov ecx, dword ptr [ebp-054h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "TFontOpaque"
;
           push offset g1003A2E8
           mov edx, dword ptr [ebp-050h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-064h]
           mov ecx, dword ptr [eax+030h]
           mov dword ptr [ebp-060h], ecx
           mov edx, dword ptr [ebp-064h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-058h], eax
           mov ecx, dword ptr [ebp-064h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-05Ch], edx
           mov eax, dword ptr [ebp-058h]
           push eax
           fld dword ptr [ebp-060h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "TFontScale"
;
           push offset g1003A2F4
           mov ecx, dword ptr [ebp-05Ch]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000D785 ENDP
;
;* Jump:
; 10001168(U) 
;
l1000D9A4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000434h
           mov dword ptr [ebp-000000434h], ecx
           mov eax, dword ptr [ebp-000000434h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-000000434h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           push 000000100h
           push offset g10051920
;
;* String: "GL_LINEAR"
;
           push offset g1003A300
;
;* String: "FilterMode"
;
           push offset g1003A30C
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           push offset g10051920
           lea ecx, [ebp-008h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-000000434h]
           add ecx, 000000014h
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           lea ecx, [ebp-008h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, dword ptr [ebp-000000434h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-000000114h], edx
           mov eax, dword ptr [ebp-000000434h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-000000118h], ecx
           mov edx, dword ptr [ebp-000000114h]
           push edx
           push 000000100h
           lea eax, [ebp-000000110h]
           push eax
           push offset g1003A318
;
;* String: "AnisotropicValue"
;
           push offset g1003A31C
           mov ecx, dword ptr [ebp-000000118h]
           push ecx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea edx, [ebp-000000110h]
           push edx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000434h]
           fstp dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-000000434h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00000021Ch], edx
           mov eax, dword ptr [ebp-000000434h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-000000220h], ecx
           mov edx, dword ptr [ebp-00000021Ch]
           push edx
           push 000000100h
           lea eax, [ebp-000000218h]
           push eax
           push offset g1003A330
;
;* String: "NotPalettes"
;
           push offset g1003A334
           mov ecx, dword ptr [ebp-000000220h]
           push ecx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea edx, [ebp-000000218h]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000434h]
           mov dword ptr [ecx+01Ch], eax
           mov edx, dword ptr [ebp-000000434h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-000000324h], eax
           mov ecx, dword ptr [ebp-000000434h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-000000328h], edx
           mov eax, dword ptr [ebp-000000324h]
           push eax
           push 000000100h
           lea ecx, [ebp-000000320h]
           push ecx
           push offset g1003A340
;
;* String: "NotCompressedTextures"
;
           push offset g1003A344
           mov edx, dword ptr [ebp-000000328h]
           push edx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea eax, [ebp-000000320h]
           push eax
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000434h]
           mov dword ptr [ecx+020h], eax
           mov edx, dword ptr [ebp-000000434h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00000042Ch], eax
           mov ecx, dword ptr [ebp-000000434h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-000000430h], edx
           mov eax, dword ptr [ebp-00000042Ch]
           push eax
           push 000000100h
           lea ecx, [ebp-000000428h]
           push ecx
           push offset g1003A35C
;
;* String: "LODBias"
;
           push offset g1003A360
           mov edx, dword ptr [ebp-000000430h]
           push edx
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea eax, [ebp-000000428h]
           push eax
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000434h]
           fstp dword ptr [ecx+028h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000D9A4 ENDP
;
;* Jump:
; 10001339(U) 
;
l1000DBA4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [eax], 000000000h
           je l1000DCC0
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
;
;* String: "FilterMode"
;
           push offset g1003A368
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A374
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "AnisotropicLevel"
;
           push offset g1003A378
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A38C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "TextureLODBias"
;
           push offset g1003A390
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+01Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003A3A0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "NotUsePalettes"
;
           push offset g1003A3A4
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+0000001F8h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+020h]
           push edx
;
;* String: "%d"
;
           push offset g1003A3B4
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "NotUseCompressedTextures"
;
           push offset g1003A3B8
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1000DCC2
;
;* Jump:
; 1000DBB5(C) 
;
l1000DCC0: xor eax, eax
;
;* Jump:
; 1000DCBE(U) 
;
l1000DCC2: mov esp, ebp
           pop ebp
           ret
l1000DBA4 ENDP
;
;* Jump:
; 100012DF(U) 
;
l1000DCC6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov dword ptr [ebp-040h], ecx
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000014h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           mov dword ptr [ebp-00Ch], eax
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
;
;* String: "FilterMode"
;
           push offset g1003A3D4
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+024h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-010h]
           push ecx
           fld dword ptr [ebp-018h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "AnisotropicValue"
;
           push offset g1003A3E0
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "NotCompressedTextures"
;
           push offset g1003A3F4
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "NotPalettes"
;
           push offset g1003A40C
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+028h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-034h]
           push eax
           fld dword ptr [ebp-03Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "LODBias"
;
           push offset g1003A418
           mov ecx, dword ptr [ebp-038h]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000DCC6 ENDP
;
;* Jump:
; 100016FE(U) 
;
l1000DE1E PROC
           push ebp
           mov ebp, esp
           sub esp, 00000031Ch
           mov dword ptr [ebp-00000031Ch], ecx
           mov eax, dword ptr [ebp-00000031Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-00000031Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000108h], eax
           mov ecx, dword ptr [ebp-000000104h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000100h]
           push edx
;
;* String: "0.02"
;
           push offset g1003A420
;
;* String: "FogFactor"
;
           push offset g1003A428
           mov eax, dword ptr [ebp-000000108h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000100h]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-00000031Ch]
           fstp dword ptr [edx+014h]
           mov eax, dword ptr [ebp-00000031Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00000020Ch], ecx
           mov edx, dword ptr [ebp-00000031Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000210h], eax
           mov ecx, dword ptr [ebp-00000020Ch]
           push ecx
           push 000000100h
           lea edx, [ebp-000000208h]
           push edx
           push offset g1003A434
;
;* String: "UseOGLFog"
;
           push offset g1003A438
           mov eax, dword ptr [ebp-000000210h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000208h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-00000031Ch]
           mov dword ptr [edx+018h], eax
           mov eax, dword ptr [ebp-00000031Ch]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-000000314h], ecx
           mov edx, dword ptr [ebp-00000031Ch]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ebp-000000318h], eax
           mov ecx, dword ptr [ebp-000000314h]
           push ecx
           push 000000100h
           lea edx, [ebp-000000310h]
           push edx
           push offset g1003A444
;
;* String: "FogSubdivide"
;
           push offset g1003A448
           mov eax, dword ptr [ebp-000000318h]
           push eax
           call [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           lea ecx, [ebp-000000310h]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-00000031Ch]
           mov dword ptr [edx+01Ch], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000DE1E ENDP
;
;* Jump:
; 10001113(U) 
;
l1000DF59 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           cmp dword ptr [eax], 000000000h
           je l1000E011
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+01Ch]
           push edx
;
;* String: "%d"
;
           push offset g1003A458
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "FogSubdivide"
;
           push offset g1003A45C
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A46C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "FogFactor"
;
           push offset g1003A470
           mov ecx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [ecx]
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+0000001F8h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+018h]
           push ecx
;
;* String: "%d"
;
           push offset g1003A47C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "UseOGLFog"
;
           push offset g1003A480
           mov edx, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [__imp_?B_3D_raster_device@@3PAVB_3DRasterDevice@@A]; [Raster.?B_3D_raster_device@@3PAVB_3DRasterDevice@@A].
           mov edx, dword ptr [eax]
           mov eax, dword ptr [edx]
           call [eax+0000001F8h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1000E013
;
;* Jump:
; 1000DF68(C) 
;
l1000E011: xor eax, eax
;
;* Jump:
; 1000E00F(U) 
;
l1000E013: mov esp, ebp
           pop ebp
           ret
l1000DF59 ENDP
;
;* Jump:
; 10001311(U) 
;
l1000E017 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           push eax
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003A59C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           push eax
;
;* String: "FogFactor"
;
           push offset g1003A48C
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "UseOGLFog"
;
           push offset g1003A498
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-024h]
           push eax
;
;* String: "%d"
;
           push offset g1003A598
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
;
;* String: "FogSubdivide"
;
           push offset g1003A4A4
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret
l1000E017 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000119A(U) 
;
l1000E700 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push edi
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00008483Ch], 000000000h
           je l1000E915
           xor ecx, ecx
           mov cl, byte ptr [ebp+01Ch]
           push ecx
           xor edx, edx
           mov dl, byte ptr [ebp+018h]
           push edx
           xor eax, eax
           mov al, byte ptr [ebp+014h]
           push eax
           call [__imp_glColor3ub]; [OPENGL32.glColor3ub].
           push 000002100h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+000084840h], 000000000h
           je l1000E75F
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glBlendFunc]; [OPENGL32.glBlendFunc].
           jmp l1000E76C
;
;* Jump:
; 1000E751(C) 
;
;* Control "OK", Dialog 006E
;
l1000E75F: push 000000001h
           push 000000302h
           call [__imp_glBlendFunc]; [OPENGL32.glBlendFunc].
;
;* Jump:
; 1000E75D(U) 
;
l1000E76C: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000140h]
           push 000000DE1h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000834h
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000000207h
           call [__imp_glDepthFunc]; [OPENGL32.glDepthFunc].
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+000084848h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 001h
           je l1000E866
           push 000000000h
           push 000000000h
           mov edx, dword ptr [ebp-004h]
           fild dword ptr [edx+058h]
           mov eax, dword ptr [ebp+00Ch]
           shl eax, 001h
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+000084848h]
           fchs
           fmulp st(01h), st(00h)
           mov edx, dword ptr [ebp-004h]
           fimul dword ptr [edx+058h]
           fdiv qword ptr [g100371E8]
           fsubp st(01h), st(00h)
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 0FFFFFFFEh
           mov dword ptr [ebp-00Ch], eax
           fild dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           fmul dword ptr [ecx+000084848h]
           mov edx, dword ptr [ebp-004h]
           fimul dword ptr [edx+054h]
           fdiv qword ptr [g100371D8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTranslated]; [OPENGL32.glTranslated].
           push 03F800000h
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+000084848h]
           fchs
           mov ecx, dword ptr [ebp-004h]
           fimul dword ptr [ecx+058h]
           fdiv qword ptr [g100371E8]
           fst dword ptr [ebp-010h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+000084848h]
           fchs
           mov eax, dword ptr [ebp-004h]
           fimul dword ptr [eax+054h]
           fdiv qword ptr [g100371D8]
           fst dword ptr [ebp-014h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glScalef]; [OPENGL32.glScalef].
           jmp l1000E8CB
;
;* Jump:
; 1000E7B4(C) 
;
l1000E866: push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-004h]
           fild dword ptr [ecx+058h]
           mov edx, dword ptr [ebp+00Ch]
           shl edx, 001h
           mov dword ptr [ebp-018h], edx
           fild dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-004h]
           fmul dword ptr [eax+000084848h]
           fsubp st(01h), st(00h)
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp+008h]
           shl ecx, 001h
           mov dword ptr [ebp-01Ch], ecx
           fild dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-004h]
           fmul dword ptr [edx+000084848h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTranslated]; [OPENGL32.glTranslated].
           push 03F800000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000084848h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+000084848h]
           push eax
           call [__imp_glScalef]; [OPENGL32.glScalef].
;
;* Jump:
; 1000E864(U) 
;
;* Control "Tab1", Dialog 006E
;
l1000E8CB: push 0000003E8h
           call [__imp_glListBase]; [OPENGL32.glListBase].
           mov ecx, dword ptr [ebp+010h]
           push ecx
           push 000001400h
           mov edi, dword ptr [ebp+010h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           push ecx
           call [__imp_glCallLists]; [OPENGL32.glCallLists].
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000144h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000860A8h], 0FFFFFFFFh
           jmp near ptr l1000E9BE
;
;* Jump:
; 1000E714(C) 
;
l1000E915: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000140h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+058h]
           sub edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           push 000000DE1h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000BE2h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000207h
           call [__imp_glDepthFunc]; [OPENGL32.glDepthFunc].
           push 000001D00h
           call [__imp_glShadeModel]; [OPENGL32.glShadeModel].
           xor ecx, ecx
           mov cl, byte ptr [ebp+01Ch]
           push ecx
           xor edx, edx
           mov dl, byte ptr [ebp+018h]
           push edx
           xor eax, eax
           mov al, byte ptr [ebp+014h]
           push eax
           call [__imp_glColor3ub]; [OPENGL32.glColor3ub].
           push 0000005DCh
           call [__imp_glListBase]; [OPENGL32.glListBase].
           mov ecx, dword ptr [ebp+010h]
           push ecx
           push 000001401h
           mov edi, dword ptr [ebp+010h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           push ecx
           call [__imp_glCallLists]; [OPENGL32.glCallLists].
           push 000001D01h
           call [__imp_glShadeModel]; [OPENGL32.glShadeModel].
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000144h]
;
;* Jump:
; 1000E910(U) 
;
l1000E9BE: pop edi
           mov esp, ebp
           pop ebp
           ret 00018h
l1000E700 ENDP
;
;* Jump:
; 1000120D(U) 
;
l1000E9C5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp+014h]
           shr eax, 018h
           and eax, 0000000FFh
           mov byte ptr [ebp-008h], al
           mov ecx, dword ptr [ebp+014h]
           shr ecx, 010h
           and ecx, 0000000FFh
           mov byte ptr [ebp-00Ch], cl
           mov edx, dword ptr [ebp+014h]
           shr edx, 008h
           and edx, 0000000FFh
           mov byte ptr [ebp-004h], dl
           xor eax, eax
           mov al, byte ptr [ebp-004h]
           push eax
           xor ecx, ecx
           mov cl, byte ptr [ebp-00Ch]
           push ecx
           xor edx, edx
           mov dl, byte ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-010h]
           call [edx+00000010Ch]
           mov esp, ebp
           pop ebp
           ret 00010h
l1000E9C5 ENDP
;
;* Jump:
; 100015E1(U) 
;
l1000EA2C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           push esi
           push edi
           mov dword ptr [ebp-050h], ecx
           push 000000010h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 000000000h
           je l1000EBD0
           mov eax, dword ptr [ebp-050h]
           mov ecx, dword ptr [eax+058h]
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [edx+054h]
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [__imp_??_7B_BitMap24@@6B@]; [BBLibc.??_7B_BitMap24@@6B@].
           mov dword ptr [ecx], edx
           mov eax, dword ptr [__imp_?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A]; [BBLibc.?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A].
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l1000EAA7
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+008h], edx
           jmp near ptr l1000EB70
;
;* Jump:
; 1000EA7F(C) 
;
l1000EAA7: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-044h]
           add edx, dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+010h], edx
           mov edx, dword ptr [ebp-044h]
           cmp dword ptr [edx+008h], 000000000h
           je l1000EB31
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], eax
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ebp-030h], edx
           mov dword ptr [ebp-034h], 000000000h
           jmp l1000EAEF
;
;* Jump:
; 1000EB0F(U) 
;
l1000EAE6: mov eax, dword ptr [ebp-034h]
           add eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 1000EAE4(U) 
;
l1000EAEF: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-034h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1000EB11
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-030h]
           mov esi, dword ptr [ebp-034h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l1000EAE6
;
;* Jump:
; 1000EAF8(C) 
;
l1000EB11: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [edx+004h], eax
           jmp l1000EB4F
;
;* Jump:
; 1000EAC0(C) 
;
l1000EB31: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-040h], eax
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 1000EB2F(U) 
;
l1000EB4F: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 1000EAA2(U) 
;
l1000EB70: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+008h], edx
           cmp dword ptr [ebp-048h], 000000000h
           je l1000EBB5
           cmp dword ptr [ebp-04Ch], 000000000h
           je l1000EBB5
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+004h]
           imul edx, dword ptr [ecx+008h]
           imul edx, edx, 000000003h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+00Ch], ecx
           jmp l1000EBBF
;
;* Jump:
; 1000EB86(C), 1000EB8C(C) 
;
l1000EBB5: mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+00Ch], 000000000h
;
;* Jump:
; 1000EBB3(U) 
;
l1000EBBF: mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax], offset g100371F4
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-054h], ecx
           jmp l1000EBD7
;
;* Jump:
; 1000EA48(C) 
;
l1000EBD0: mov dword ptr [ebp-054h], 000000000h
;
;* Jump:
; 1000EBCE(U) 
;
l1000EBD7: mov edx, dword ptr [ebp-054h]
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-01Ch], 000000000h
           jne l1000EBFE
;
;* String: "B_OpenGLRasterDevice::GetBitMap24() -> Error al crear bm24.
;          "
;
           push offset g1003A5A0
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1000ED15
;
;* Jump:
; 1000EBE1(C) 
;
l1000EBFE: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           push 000001401h
           push 000001907h
           mov eax, dword ptr [ebp-050h]
           mov ecx, dword ptr [eax+058h]
           push ecx
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [edx+054h]
           push eax
           push 000000000h
           push 000000000h
           call [__imp_glReadPixels]; [OPENGL32.glReadPixels].
           mov ecx, dword ptr [ebp-050h]
           mov edx, dword ptr [ecx+054h]
           imul edx, edx, 000000003h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-018h], eax
           cmp dword ptr [ebp-018h], 000000000h
           jne l1000EC50
           mov eax, dword ptr [ebp-01Ch]
           jmp near ptr l1000ED15
;
;* Jump:
; 1000EC46(C) 
;
l1000EC50: mov ecx, dword ptr [ebp-050h]
           mov eax, dword ptr [ecx+058h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [edx+054h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-050h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           imul edx, ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           add ecx, edx
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1000EC9F
;
;* Jump:
; 1000ECFE(U) 
;
l1000EC96: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1000EC94(U) 
;
l1000EC9F: mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [ebp-014h]
           jnl l1000ED00
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-010h]
           mov edi, dword ptr [ebp-018h]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-004h]
           mov edi, dword ptr [ebp-010h]
           mov eax, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-018h]
           mov edi, dword ptr [ebp-004h]
           mov edx, ecx
           shr ecx, 002h
           rep movsd
           mov ecx, edx
           and ecx, 000000003h
           rep movsb
           mov eax, dword ptr [ebp-010h]
           add eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-004h]
           sub ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           jmp l1000EC96
;
;* Jump:
; 1000ECA5(C) 
;
l1000ED00: mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-01Ch]
;
;* Jump:
; 1000EBF9(U), 1000EC4B(U) 
;
l1000ED15: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1000EA2C ENDP
;
;* Jump:
; 10001861(U) 
;
l1000ED1B PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-004h], ecx
           push 000000000h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-004h]
           add eax, 0000860ACh
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           push 000001B01h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+058h]
           sub edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], edx
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-00Ch], ecx
           fild dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret 00010h
l1000ED1B ENDP
;
;* Jump:
; 1000182A(U) 
;
l1000EDA2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000140h]
           push 000000000h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-004h]
           add eax, 0000860ACh
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+000086490h], 000000000h
           je l1000EDFC
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000086490h], 000000000h
;
;* Jump:
; 1000EDE2(C) 
;
l1000EDFC: push 000000DE1h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000BE2h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000BC0h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+058h]
           sub eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-00Ch], eax
           fild dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+058h]
           sub edx, dword ptr [ebp+014h]
           mov dword ptr [ebp-010h], edx
           fild dword ptr [ebp-010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000144h]
           mov esp, ebp
           pop ebp
           ret 00010h
l1000EDA2 ENDP
;
;* Jump:
; 10001875(U) 
;
l1000EECF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+058h]
           sub eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000140h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 0000860BCh
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+000086490h], 000000000h
           je l1000EF41
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+000086490h], 000000000h
;
;* Jump:
; 1000EF27(C) 
;
l1000EF41: push 000000DE1h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000BC0h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+000000144h]
           mov esp, ebp
           pop ebp
           ret 00010h
l1000EECF ENDP
;
;* Jump:
; 10001203(U) 
;
l1000EFD9 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+058h]
           sub eax, dword ptr [ebp+014h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000140h]
           push 000000003h
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000114h]
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov eax, dword ptr [ebp+01Ch]
           push eax
           mov ecx, dword ptr [ebp+018h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 0000860BCh
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov eax, dword ptr [ebp+01Ch]
           push eax
           mov ecx, dword ptr [ebp+020h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 0000860BCh
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov eax, dword ptr [ebp+024h]
           push eax
           mov ecx, dword ptr [ebp+020h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 0000860BCh
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           mov eax, dword ptr [ebp+024h]
           push eax
           mov ecx, dword ptr [ebp+018h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 0000860BCh
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000144h]
           mov esp, ebp
           pop ebp
           ret 00020h
l1000EFD9 ENDP
;
;* Jump:
; 1000153C(U) 
;
l1000F112 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860ACh]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [ebp-00Ch], ecx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860B0h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860B4h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F112 ENDP
;
;* Jump:
; 10001375(U) 
;
l1000F178 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 0000000FFh
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+0000860ACh]
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           mov dword ptr [ebp-00Ch], edx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+0000860B0h]
           mov ecx, dword ptr [ebp+010h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860B4h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1000F178 ENDP
;
;* Jump:
; 10001127(U) 
;
l1000F1E0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860BCh]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [ebp-00Ch], ecx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860C0h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860C4h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F1E0 ENDP
;
;* Jump:
; 1000129E(U) 
;
l1000F246 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 0000000FFh
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+0000860BCh]
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           mov dword ptr [ebp-00Ch], edx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+0000860C0h]
           mov ecx, dword ptr [ebp+010h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860C4h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1000F246 ENDP
;
;* Jump:
; 100014A6(U) 
;
l1000F2AE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+0000860C8h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+0000860B8h], eax
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F2AE ENDP
;
;* Jump:
; 10001244(U) 
;
l1000F2D3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+0000860B4h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-00Ch], al
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ecx+0000860B0h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-008h], al
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+0000860ACh]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [__imp_??_7B_Color@@6B@]; [BBLibc.??_7B_Color@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?MakeCons@B_Color@@UAEXXZ]; [BBLibc.?MakeCons@B_Color@@UAEXXZ].
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F2D3 ENDP
;
;* Jump:
; 1000184D(U) 
;
l1000F359 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+0000860C4h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-00Ch], al
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ecx+0000860C0h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-008h], al
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+0000860BCh]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [__imp_??_7B_Color@@6B@]; [BBLibc.??_7B_Color@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?MakeCons@B_Color@@UAEXXZ]; [BBLibc.?MakeCons@B_Color@@UAEXXZ].
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F359 ENDP
;
;* Jump:
; 100013C5(U) 
;
l1000F3DF PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+0000860C8h]
           mov esp, ebp
           pop ebp
           ret
l1000F3DF ENDP
;
;* Jump:
; 100011B3(U) 
;
l1000F3F3 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ecx+004h]
           mov byte ptr [eax+0000860CCh], dl
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ecx+005h]
           mov byte ptr [eax+0000860CDh], dl
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ecx+006h]
           mov byte ptr [eax+0000860CEh], dl
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F3F3 ENDP
;
;* Jump:
; 10001703(U) 
;
l1000F42D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov cl, byte ptr [ebp+008h]
           mov byte ptr [eax+0000860CCh], cl
           mov edx, dword ptr [ebp-004h]
           mov al, byte ptr [ebp+00Ch]
           mov byte ptr [edx+0000860CDh], al
           mov ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp+010h]
           mov byte ptr [ecx+0000860CEh], dl
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1000F42D ENDP
;
;* Jump:
; 10001451(U) 
;
l1000F45E PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           fld dword ptr [ebp+008h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+0000860CFh], al
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F45E ENDP
;
;* Jump:
; 10001258(U) 
;
l1000F482 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860D0h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+005h]
           mov dword ptr [ebp-00Ch], ecx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860D4h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+006h]
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860D8h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F482 ENDP
;
;* Jump:
; 10001663(U) 
;
l1000F4E8 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 0000000FFh
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+0000860D0h]
           mov edx, dword ptr [ebp+00Ch]
           and edx, 0000000FFh
           mov dword ptr [ebp-00Ch], edx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+0000860D4h]
           mov ecx, dword ptr [ebp+010h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+0000860D8h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1000F4E8 ENDP
;
;* Jump:
; 1000143D(U) 
;
l1000F550 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+0000860DCh], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F550 ENDP
;
;* Jump:
; 1000100F(U) 
;
l1000F569 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax+0000860CEh]
           mov byte ptr [ebp-00Ch], cl
           mov edx, dword ptr [ebp-010h]
           mov al, byte ptr [edx+0000860CDh]
           mov byte ptr [ebp-008h], al
           mov ecx, dword ptr [ebp-010h]
           mov dl, byte ptr [ecx+0000860CCh]
           mov byte ptr [ebp-004h], dl
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [__imp_??_7B_Color@@6B@]; [BBLibc.??_7B_Color@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?MakeCons@B_Color@@UAEXXZ]; [BBLibc.?MakeCons@B_Color@@UAEXXZ].
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F569 ENDP
;
;* Jump:
; 1000155F(U) 
;
l1000F5CE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+0000860D8h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-00Ch], al
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ecx+0000860D4h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-008h], al
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+0000860D0h]
           fmul dword ptr [g10037204]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-004h], al
           mov eax, dword ptr [ebp+008h]
           mov cl, byte ptr [ebp-004h]
           mov byte ptr [eax+004h], cl
           mov edx, dword ptr [ebp+008h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx+005h], al
           mov ecx, dword ptr [ebp+008h]
           mov dl, byte ptr [ebp-00Ch]
           mov byte ptr [ecx+006h], dl
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [__imp_??_7B_Color@@6B@]; [BBLibc.??_7B_Color@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp+008h]
           call [__imp_?MakeCons@B_Color@@UAEXXZ]; [BBLibc.?MakeCons@B_Color@@UAEXXZ].
           mov eax, dword ptr [ebp+008h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1000F5CE ENDP
;
;* Jump:
; 100010BE(U) 
;
l1000F654 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000860CFh]
           mov dword ptr [ebp-008h], ecx
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           fst dword ptr [ebp-00Ch]
           mov esp, ebp
           pop ebp
           ret
l1000F654 ENDP
;
;* Jump:
; 1000106E(U) 
;
l1000F67B PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+0000860DCh]
           mov esp, ebp
           pop ebp
           ret
l1000F67B ENDP
;
;* Jump:
; 10001357(U) 
;
l1000F68F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1000F6B9
           push 0000001AEh
;
;* String: "C:\Code\Raster\rOpenGL3\GL2D.cpp"
;
           push offset g1003A5E0
;
;* String: "CurrentFont"
;
           push offset g1003A604
           call [__imp__assert]; [MSVCRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 1000F69F(C) 
;
l1000F6B9: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-028h], edx
           cmp dword ptr [ebp-028h], 000000001h
           je l1000F6F4
           cmp dword ptr [ebp-028h], 000000003h
           je l1000F70B
           jmp l1000F720
;
;* Jump:
; 1000F6EA(C) 
;
l1000F6F4: fild dword ptr [ebp-010h]
           fmul dword ptr [ebp+010h]
           fmul dword ptr [ebp+018h]
           mov eax, dword ptr [ebp-024h]
           fsubr dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-024h]
           fstp dword ptr [ecx+008h]
           jmp l1000F720
;
;* Jump:
; 1000F6F0(C) 
;
l1000F70B: fild dword ptr [ebp-010h]
           fmul dword ptr [ebp+014h]
           fmul dword ptr [ebp+01Ch]
           mov edx, dword ptr [ebp-024h]
           fsubr dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-024h]
           fstp dword ptr [eax+00Ch]
;
;* Jump:
; 1000F6F2(U), 1000F709(U) 
;
l1000F720: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-01Ch], ecx
           fild dword ptr [ebp-010h]
           fmul dword ptr [ebp+010h]
           fmul dword ptr [ebp+018h]
           mov edx, dword ptr [ebp-024h]
           fadd dword ptr [edx+008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-02Ch], eax
           fild dword ptr [ebp-02Ch]
           fstp dword ptr [ebp-018h]
           fild dword ptr [ebp-004h]
           fmul dword ptr [ebp+014h]
           fmul dword ptr [ebp+01Ch]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-030h], eax
           fild dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-024h]
           fsubr dword ptr [eax+00Ch]
           fstp dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+020h]
           and ecx, 000000010h
           test ecx, ecx
           je l1000F975
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-024h]
           add edx, 0000860D0h
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+034h]
           fadd dword ptr [ebp-01Ch]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-024h]
           fild dword ptr [ecx+030h]
           fadd dword ptr [ebp-014h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov edx, dword ptr [ebp-024h]
           fild dword ptr [edx+034h]
           fadd dword ptr [ebp-01Ch]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+038h]
           fadd dword ptr [ebp-018h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov ecx, dword ptr [ebp-024h]
           fild dword ptr [ecx+03Ch]
           fadd dword ptr [ebp-020h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-024h]
           fild dword ptr [edx+038h]
           fadd dword ptr [ebp-018h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+03Ch]
           fadd dword ptr [ebp-020h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-024h]
           fild dword ptr [ecx+030h]
           fadd dword ptr [ebp-014h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov edx, dword ptr [ebp-024h]
           fild dword ptr [edx+034h]
           fsubr dword ptr [ebp-01Ch]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+030h]
           fsubr dword ptr [ebp-014h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov ecx, dword ptr [ebp-024h]
           fild dword ptr [ecx+034h]
           fsubr dword ptr [ebp-01Ch]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-024h]
           fild dword ptr [edx+038h]
           fsubr dword ptr [ebp-018h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+03Ch]
           fsubr dword ptr [ebp-020h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-024h]
           fild dword ptr [ecx+038h]
           fsubr dword ptr [ebp-018h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov edx, dword ptr [ebp-024h]
           fild dword ptr [edx+03Ch]
           fsubr dword ptr [ebp-020h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-024h]
           fild dword ptr [eax+030h]
           fsubr dword ptr [ebp-014h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l1000FA37
;
;* Jump:
; 1000F774(C) 
;
l1000F975: push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov ecx, dword ptr [ebp-024h]
           add ecx, 0000860CCh
           push ecx
           call [__imp_glColor4ubv]; [OPENGL32.glColor4ubv].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov edx, dword ptr [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           fadd dword ptr [ebp+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov eax, dword ptr [ebp-020h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [ebp+014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           mov edx, dword ptr [ebp-020h]
           push edx
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           call [__imp_glEnd]; [OPENGL32.glEnd].
;
;* Jump:
; 1000F970(U) 
;
l1000FA37: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-034h], edx
           cmp dword ptr [ebp-034h], 000000000h
           je l1000FA4E
           cmp dword ptr [ebp-034h], 000000002h
           je l1000FA65
           jmp l1000FA7A
;
;* Jump:
; 1000FA44(C) 
;
l1000FA4E: fild dword ptr [ebp-010h]
           fmul dword ptr [ebp+010h]
           fmul dword ptr [ebp+018h]
           mov eax, dword ptr [ebp-024h]
           fadd dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-024h]
           fstp dword ptr [ecx+008h]
           jmp l1000FA7A
;
;* Jump:
; 1000FA4A(C) 
;
l1000FA65: fild dword ptr [ebp-010h]
           fmul dword ptr [ebp+014h]
           fmul dword ptr [ebp+01Ch]
           mov edx, dword ptr [ebp-024h]
           fadd dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-024h]
           fstp dword ptr [eax+00Ch]
;
;* Jump:
; 1000FA4C(U), 1000FA63(U) 
;
l1000FA7A: mov esp, ebp
           pop ebp
           ret 0001Ch
l1000F68F ENDP
;
;* Jump:
; 10001352(U) 
;
l1000FA80 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jl l1000FAB1
           mov eax, dword ptr [ebp+008h]
           add eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-004h]
           cmp eax, dword ptr [ecx+054h]
           jg l1000FAB1
           cmp dword ptr [ebp+00Ch], 000000000h
           jl l1000FAB1
           mov edx, dword ptr [ebp+00Ch]
           add edx, dword ptr [ebp+014h]
           mov eax, dword ptr [ebp-004h]
           cmp edx, dword ptr [eax+058h]
           jle l1000FAB8
;
;* Jump:
; 1000FA8D(C), 1000FA9B(C), 1000FAA1(C) 
;
l1000FAB1: xor eax, eax
           jmp near ptr l1000FB5A
;
;* Jump:
; 1000FAAF(C) 
;
;* String: "RGB"
;
l1000FAB8: mov edi, offset g1003A610
           mov esi, dword ptr [ebp+018h]
           mov ecx, 000000004h
           xor edx, edx
           rep cmpsb
           je l1000FAE3
;
;* String: "B_OpenGLRasterDevice::GetImage() -> Error: unsupported format.
;          "
;
           push offset g1003A614
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp l1000FB5A
;
;* Jump:
; 1000FAC9(C) 
;
l1000FAE3: mov ecx, dword ptr [ebp+010h]
           imul ecx, dword ptr [ebp+014h]
           imul ecx, ecx, 000000003h
           cmp dword ptr [ebp+020h], ecx
           jnl l1000FB0B
;
;* String: "B_OpenGLRasterDevice::GetImage() -> buffer too small.
;          "
;
           push offset g1003A654
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp l1000FB5A
;
;* Jump:
; 1000FAF0(C) 
;
;* Control "Show &Info", Dialog 0075
;
l1000FB0B: push 000000405h
           call [__imp_glReadBuffer]; [OPENGL32.glReadBuffer].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov eax, dword ptr [ebp+024h]
           push eax
           push 000001401h
           push 000001907h
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, dword ptr [ebp+00Ch]
           sub ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           call [__imp_glReadPixels]; [OPENGL32.glReadPixels].
           mov eax, dword ptr [ebp+010h]
           imul eax, dword ptr [ebp+014h]
           imul eax, eax, 000000003h
;
;* Jump:
; 1000FAB3(U), 1000FAE1(U), 1000FB09(U) 
;
l1000FB5A: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00020h
l1000FA80 ENDP
;
;* Jump:
; 100010D2(U) 
;
l1000FB62 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           push edi
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           je l1000FB7F
           cmp dword ptr [ebp+00Ch], 000000000h
           je l1000FB7F
           cmp dword ptr [ebp+018h], 000000000h
           jne l1000FB84
;
;* Jump:
; 1000FB71(C), 1000FB77(C) 
;
l1000FB7F: jmp near ptr l10010271
;
;* Jump:
; 1000FB7D(C) 
;
;* String: "RGB"
;
l1000FB84: mov edi, offset g1003A68C
           mov esi, dword ptr [ebp+010h]
           mov ecx, 000000004h
           xor eax, eax
           rep cmpsb
           jne l1000FBA0
           mov dword ptr [ebp-004h], 000001907h
           jmp l1000FBC1
;
;* Jump:
; 1000FB95(C) 
;
;* String: "BGR"
;
l1000FBA0: mov edi, offset g1003A690
           mov esi, dword ptr [ebp+010h]
           mov ecx, 000000004h
           xor edx, edx
           rep cmpsb
           jne l1000FBBC
           mov dword ptr [ebp-004h], 0000080E0h
           jmp l1000FBC1
;
;* Jump:
; 1000FBB1(C) 
;
l1000FBBC: jmp near ptr l10010271
;
;* Jump:
; 1000FB9E(U), 1000FBBA(U) 
;
l1000FBC1: mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000140h]
;
;* Control "Show &Info", Dialog 0075
;
           push 000000405h
           call [__imp_glDrawBuffer]; [OPENGL32.glDrawBuffer].
;
;* String: "Normal"
;
           mov edi, offset g1003A694
           mov esi, dword ptr [ebp+014h]
           mov ecx, 000000007h
           xor eax, eax
           rep cmpsb
           jne l1000FCBD
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           push 000000000h
           mov ecx, dword ptr [ebp-028h]
           fld dword ptr [ecx+00Ch]
           fsub dword ptr [g1003706C]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+008h]
           fsub dword ptr [g1003706C]
           push ecx
           fstp dword ptr [esp]
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glBitmap]; [OPENGL32.glBitmap].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-008h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000114h]
           push 03F800000h
           push 03F800000h
           push 03F800000h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 0BF800000h
           push 03F800000h
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           push 000002101h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           mov ecx, dword ptr [ebp+018h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000114h]
           jmp near ptr l10010263
;
;* Jump:
; 1000FBEB(C) 
;
;* String: "UpsideDown"
;
l1000FCBD: mov edi, offset g1003A69C
           mov esi, dword ptr [ebp+014h]
           mov ecx, 00000000Bh
           xor eax, eax
           rep cmpsb
           jne l1000FD72
           fild dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-028h]
           fsubr dword ptr [ecx+00Ch]
           call l10035E80; [MSVCRT._ftol].
           push eax
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+008h]
           call l10035E80; [MSVCRT._ftol].
           push eax
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-00Ch], ecx
           push 000000000h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000114h]
           push 03F800000h
           push 03F800000h
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           push 000002101h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           mov ecx, dword ptr [ebp+018h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000114h]
           jmp near ptr l10010263
;
;* Jump:
; 1000FCCE(C) 
;
;* String: "Native"
;
l1000FD72: mov edi, offset g1003A6A8
           mov esi, dword ptr [ebp+014h]
           mov ecx, 000000007h
           xor eax, eax
           rep cmpsb
           jne l1000FE3C
           fild dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-028h]
           fsubr dword ptr [ecx+00Ch]
           call l10035E80; [MSVCRT._ftol].
           push eax
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+008h]
           call l10035E80; [MSVCRT._ftol].
           push eax
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-010h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000114h]
           push 000002101h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           push 03F800000h
           push 03F800000h
           push 03F800000h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 03F800000h
           push 03F800000h
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov ecx, dword ptr [ebp+018h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000114h]
           jmp near ptr l10010263
;
;* Jump:
; 1000FD83(C) 
;
;* String: "Centered"
;
l1000FE3C: mov edi, offset g1003A6B0
           mov esi, dword ptr [ebp+014h]
           mov ecx, 000000009h
           xor eax, eax
           rep cmpsb
           jne l1000FF51
           push 000000000h
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-028h]
           call [edx+00000009Ch]
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           push 000000000h
           mov eax, dword ptr [ebp-028h]
           mov eax, dword ptr [eax+058h]
           sub eax, dword ptr [ebp+00Ch]
           cdq
           sub eax, edx
           sar eax, 001h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+058h]
           sub edx, eax
           sub edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
           fild dword ptr [ebp-02Ch]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp-028h]
           mov eax, dword ptr [eax+054h]
           sub eax, dword ptr [ebp+008h]
           cdq
           sub eax, edx
           sar eax, 001h
           sub eax, 000000001h
           mov dword ptr [ebp-030h], eax
           fild dword ptr [ebp-030h]
           push ecx
           fstp dword ptr [esp]
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glBitmap]; [OPENGL32.glBitmap].
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [ebp-014h], edx
           push 000000000h
           mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000114h]
           push 03F800000h
           push 03F800000h
           push 03F800000h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 0BF800000h
           push 03F800000h
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           push 000002101h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           mov eax, dword ptr [ebp+018h]
           push eax
           push 000001401h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000114h]
           jmp near ptr l10010263
;
;* Jump:
; 1000FE4D(C) 
;
;* String: "Stretch"
;
l1000FF51: mov edi, offset g1003A6BC
           mov esi, dword ptr [ebp+014h]
           mov ecx, 000000008h
           xor edx, edx
           rep cmpsb
           jne l10010263
           mov dword ptr [ebp-018h], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-01Ch], 000000001h
           mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+00008486Ch], 000000000h
           je l1000FFD2
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [ecx+0000847BCh], 000000000h
           jne l1000FFD2
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000084870h]
           cmp eax, dword ptr [ebp+018h]
           jne l1000FFCB
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+058h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+054h]
           push ecx
           push 000000000h
           push 000000000h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000084874h]
           push eax
           call [g10051820]
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1000FFD2
;
;* Jump:
; 1000FF9A(C) 
;
;* Control "OK", Dialog 006E
;
l1000FFCB: mov dword ptr [ebp-018h], 000000001h
;
;* Jump:
; 1000FF80(C), 1000FF8C(C), 1000FFC9(U) 
;
l1000FFD2: cmp dword ptr [ebp-01Ch], 000000000h
           je l10010202
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           push 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+058h]
           sub edx, 000000001h
           mov dword ptr [ebp-034h], edx
           fild dword ptr [ebp-034h]
           push ecx
           fstp dword ptr [esp]
           push 0BF800000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glBitmap]; [OPENGL32.glBitmap].
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-020h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000114h]
           push 03F800000h
           push 03F800000h
           push 03F800000h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000BE2h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000BC0h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [ecx+000086490h], 000000000h
           je l10010076
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+000086490h], 000000000h
;
;* Jump:
; 1001005C(C) 
;
l10010076: push 000000DE1h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000B71h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov eax, dword ptr [ebp+008h]
           and eax, 080000003h
           jns l1001009B
           dec eax
           or eax, 0FFFFFFFCh
           inc eax
;
;* Jump:
; 10010094(C) 
;
l1001009B: test eax, eax
           jne l100100AE
           push 000000004h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           jmp l100100BB
;
;* Jump:
; 1001009D(C) 
;
;* Control "OK", Dialog 006E
;
l100100AE: push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
;
;* Jump:
; 100100AC(U) 
;
l100100BB: push 000002101h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           cmp dword ptr [g10051050], 000000000h
           jne l1001011B
           mov ecx, dword ptr [ebp-028h]
           fild dword ptr [ecx+058h]
           fchs
           fidiv dword ptr [ebp+00Ch]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-028h]
           fild dword ptr [edx+054h]
           fidiv dword ptr [ebp+008h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
           mov eax, dword ptr [ebp+018h]
           push eax
           push 000001401h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           jmp near ptr l100101F0
;
;* Jump:
; 100100D7(C) 
;
l1001011B: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ecx+054h]
           imul eax, dword ptr [edx+058h]
           shl eax, 002h
           push eax
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           cmp dword ptr [ebp-024h], 000000000h
           jne l1001017B
           mov ecx, dword ptr [ebp-028h]
           fild dword ptr [ecx+058h]
           fchs
           fidiv dword ptr [ebp+00Ch]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-028h]
           fild dword ptr [edx+054h]
           fidiv dword ptr [ebp+008h]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
           mov eax, dword ptr [ebp+018h]
           push eax
           push 000001401h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
;
;* Jump:
; 1001013C(C) 
;
l1001017B: mov ecx, dword ptr [ebp-024h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+058h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+054h]
           push edx
           mov eax, dword ptr [ebp+018h]
           push eax
           push 000001401h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           call l10035DC8; [GLU32.gluScaleImage].
           push 0BF800000h
           push 03F800000h
           call [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
           mov ecx, dword ptr [ebp-024h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+058h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+054h]
           push eax
           call [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           cmp dword ptr [ebp-024h], 000000000h
           je l100101F0
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
;
;* Jump:
; 10010116(U), 100101E1(C) 
;
l100101F0: mov edx, dword ptr [ebp-020h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000114h]
;
;* Jump:
; 1000FFD6(C) 
;
l10010202: cmp dword ptr [ebp-018h], 000000000h
           je l10010263
           mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+000084874h], 0FFFFFFFFh
           je l10010224
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+000084874h]
           push edx
           call [g10051818]
;
;* Jump:
; 10010212(C) 
;
;* Control "OK", Dialog 006E
;
l10010224: push 000000001h
           call [g10051814]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+000084874h], eax
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+058h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+054h]
           push edx
           push 000000000h
           push 000000000h
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+000084874h]
           push ecx
           call [g1005181C]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+000084870h], eax
;
;* Jump:
; 1000FCB8(U), 1000FD6D(U), 1000FE37(U), 1000FF4C(U), 1000FF62(C), 
; 10010206(C) 
;
l10010263: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-028h]
           call [edx+000000144h]
;
;* Jump:
; 1000FB7F(U), 1000FBBC(U) 
;
l10010271: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00014h
l1000FB62 ENDP
;
;* Jump:
; 10001654(U) 
;
l10010279 PROC
           push ebp
           mov ebp, esp
           push ecx
           push esi
           push edi
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           je l10010294
           cmp dword ptr [ebp+00Ch], 000000000h
           je l10010294
           cmp dword ptr [ebp+01Ch], 000000000h
           jne l10010299
;
;* Jump:
; 10010286(C), 1001028C(C) 
;
l10010294: jmp near ptr l1001035E
;
;* Jump:
; 10010292(C) 
;
;* String: "Stretch"
;
l10010299: mov edi, offset g1003A6C4
           mov esi, dword ptr [ebp+018h]
           mov ecx, 000000008h
           xor eax, eax
           rep cmpsb
           je l100102D8
;
;* String: "Centered"
;
           mov edi, offset g1003A6CC
           mov esi, dword ptr [ebp+018h]
           mov ecx, 000000009h
           xor edx, edx
           rep cmpsb
           je l100102D8
;
;* String: "B_OpenGLRasterDevice::SetBackgroundImage() -> Error: Unsupported mode.
;          "
;
           push offset g1003A6D8
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           jmp near ptr l1001035E
;
;* Jump:
; 100102AA(C), 100102BD(C) 
;
l100102D8: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-004h]
           call [edx+0000001F4h]
           cmp dword ptr [g10051814], 000000000h
           jne l100102F1
           jmp l1001035E
;
;* Jump:
; 100102ED(C) 
;
l100102F1: mov eax, dword ptr [ebp+01Ch]
           push eax
           mov ecx, dword ptr [ebp+018h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+0000001E8h]
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [g10051814]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000847B8h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+058h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+054h]
           push edx
           push 000000000h
           push 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+0000847B8h]
           push ecx
           call [g1005181C]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+0000847C0h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+0000847C4h], edx
;
;* Jump:
; 10010294(U), 100102D3(U), 100102EF(U) 
;
l1001035E: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00018h
l10010279 ENDP
;
;* Jump:
; 1000100A(U) 
;
l10010366 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [g10051818], 000000000h
           jne l10010378
           jmp l100103BB
;
;* Jump:
; 10010374(C) 
;
l10010378: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+0000847B8h], 0FFFFFFFFh
           je l10010394
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+0000847B8h]
           push edx
           call [g10051818]
;
;* Jump:
; 10010382(C) 
;
l10010394: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000847B8h], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000847C4h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000847C0h], 000000000h
;
;* Jump:
; 10010376(U) 
;
l100103BB: mov esp, ebp
           pop ebp
           ret
l10010366 ENDP
;
;* Jump:
; 100013E8(U) 
;
l100103BF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000140h]
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+0000000ACh]
           fild dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fadd dword ptr [eax+008h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-004h], eax
           fild dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-00Ch]
           fsubr dword ptr [ecx+00Ch]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-008h], eax
           push 000000003h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+000000114h]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 0000860ACh
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           push 000000000h
           push 000000000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [edx+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [eax+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 000000000h
           push 03F800000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 03F800000h
           push 03F800000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 03F800000h
           push 000000000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fild dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [edx+008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           fild dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+000000144h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100103BF ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001438(U), 10001780(U) 
;
l10010C80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           push esi
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [__imp_??_7B_BitMap24@@6B@]; [BBLibc.??_7B_BitMap24@@6B@].
           mov dword ptr [eax], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l10010CA7
;
;* Jump:
; 10010CD0(U) 
;
l10010C9E: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 10010C9C(U) 
;
l10010CA7: mov eax, dword ptr [__imp_?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A]; [BBLibc.?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A].
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10010CD2
           mov edx, dword ptr [__imp_?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A]; [BBLibc.?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A].
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+ecx*04h]
           cmp edx, dword ptr [ebp-034h]
           jne l10010CD0
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], eax
           jmp l10010CD9
;
;* Jump:
; 10010CC6(C) 
;
l10010CD0: jmp l10010C9E
;
;* Jump:
; 10010CB2(C) 
;
l10010CD2: mov dword ptr [ebp-00Ch], 0FFFFFFFFh
;
;* Jump:
; 10010CCE(U) 
;
l10010CD9: mov ecx, dword ptr [__imp_?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A]; [BBLibc.?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A].
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+008h]
           jb l10010CF2
           jmp near ptr l10010E86
;
;* Jump:
; 10010CEB(C) 
;
l10010CF2: xor ecx, ecx
           test ecx, ecx
           je l10010D2B
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10010D24
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-01Ch]
           call [edx]
           mov dword ptr [ebp-038h], eax
           jmp l10010D2B
;
;* Jump:
; 10010D11(C) 
;
l10010D24: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 10010CF6(C), 10010D22(U) 
;
l10010D2B: mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+008h], 000000001h
           jne l10010D6C
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+010h], 000000000h
           jmp near ptr l10010E86
;
;* Jump:
; 10010D32(C) 
;
l10010D6C: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00Ch]
           lea edx, [edx+ecx-001h]
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+010h], edx
           jb l10010E3D
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ecx+010h]
           sub eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10010DC7
;
;* Jump:
; 10010DE4(U) 
;
l10010DBE: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10010DBC(U) 
;
l10010DC7: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-00Ch]
           jnb l10010DE6
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10010DBE
;
;* Jump:
; 10010DCD(C) 
;
l10010DE6: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           jmp l10010DFA
;
;* Jump:
; 10010E1B(U) 
;
l10010DF1: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10010DEF(U) 
;
l10010DFA: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+008h]
           jnb l10010E1D
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l10010DF1
;
;* Jump:
; 10010E03(C) 
;
l10010E1D: mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], ecx
           jmp l10010E77
;
;* Jump:
; 10010D82(C) 
;
l10010E3D: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           jmp l10010E51
;
;* Jump:
; 10010E75(U) 
;
l10010E48: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10010E46(U) 
;
l10010E51: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10010E77
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h-004h], ecx
           jmp l10010E48
;
;* Jump:
; 10010E3B(U), 10010E5A(C) 
;
l10010E77: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+008h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10010CED(U), 10010D67(U) 
;
l10010E86: mov edx, dword ptr [ebp-034h]
           cmp dword ptr [edx+00Ch], 000000000h
           je l10010EA4
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10010E8D(C) 
;
l10010EA4: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10010EBA
           mov ecx, dword ptr [ebp-034h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10010EAC(C) 
;
l10010EBA: mov eax, dword ptr [ebp-034h]
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10010C80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001523(U) 
;
l10010F60 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000ACh
           push esi
           push edi
           mov dword ptr [ebp-068h], ecx
           mov eax, dword ptr [ebp-068h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l100113E3
           mov dword ptr [ebp-014h], 000000000h
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000000B0h]
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+edx*04h+0000000B4h], ecx
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+0000000B0h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-068h]
           mov dword ptr [ecx+0000000B0h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp+008h]
           call [eax]
           mov dword ptr [ebp-06Ch], eax
           cmp dword ptr [ebp-06Ch], 00000044Ch
           je l10010FE5
           cmp dword ptr [ebp-06Ch], 00000044Dh
           je l1001107C
           cmp dword ptr [ebp-06Ch], 00000044Eh
           je l1001119E
           jmp near ptr l100113E1
;
;* Jump:
; 10010FC4(C) 
;
l10010FE5: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-014h], edx
           fld dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-070h], ecx
           fild dword ptr [ebp-070h]
           fmul dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-068h]
           fadd dword ptr [edx+00008484Ch]
           mov eax, dword ptr [ebp-068h]
           fstp dword ptr [eax+00008484Ch]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-074h], edx
           fild dword ptr [ebp-074h]
           fmul dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-068h]
           fadd dword ptr [eax+000084850h]
           mov ecx, dword ptr [ebp-068h]
           fstp dword ptr [ecx+000084850h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-078h], eax
           fild dword ptr [ebp-078h]
           fmul dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-068h]
           fadd dword ptr [ecx+000084854h]
           mov edx, dword ptr [ebp-068h]
           fstp dword ptr [edx+000084854h]
           mov eax, dword ptr [ebp-068h]
           add eax, 00008484Ch
           push eax
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp near ptr l100113E1
;
;* Jump:
; 10010FCD(C) 
;
l1001107C: mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-080h]
           mov edx, dword ptr [ebp-068h]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-080h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l100110E3
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax+01Ch]
           fstp qword ptr [ebp-000000088h]
           mov ecx, dword ptr [ebp-068h]
           add ecx, 000000088h
           push ecx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-000000088h]
           fstp qword ptr [ebp-000000090h]
           jmp l100110F7
;
;* Jump:
; 100110AD(C) 
;
l100110E3: mov dword ptr [ebp-000000090h], 000000000h
           mov dword ptr [ebp-00000008Ch], 000000000h
;
;* Jump:
; 100110E1(U) 
;
l100110F7: fld qword ptr [ebp-000000090h]
           fst dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-000000094h], eax
           fild dword ptr [ebp-000000094h]
           fmul dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-068h]
           fadd dword ptr [ecx+00008484Ch]
           mov edx, dword ptr [ebp-068h]
           fstp dword ptr [edx+00008484Ch]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-000000098h], ecx
           fild dword ptr [ebp-000000098h]
           fmul dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-068h]
           fadd dword ptr [edx+000084850h]
           mov eax, dword ptr [ebp-068h]
           fstp dword ptr [eax+000084850h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-00000009Ch], edx
           fild dword ptr [ebp-00000009Ch]
           fmul dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-068h]
           fadd dword ptr [eax+000084854h]
           mov ecx, dword ptr [ebp-068h]
           fstp dword ptr [ecx+000084854h]
           mov edx, dword ptr [ebp-068h]
           add edx, 00008484Ch
           push edx
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp near ptr l100113E1
;
;* Jump:
; 10010FDA(C) 
;
l1001119E: mov eax, dword ptr [ebp+008h]
           add eax, 00000004Ch
           mov dword ptr [ebp-064h], eax
           mov ecx, dword ptr [ebp-068h]
           add ecx, 000000084h
           mov dword ptr [ebp-060h], ecx
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-064h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fst dword ptr [ebp-0000000A0h]
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+0000001B4h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-068h]
           fstp dword ptr [ecx+eax+0000001D4h]
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+0000001B4h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-068h]
           fld dword ptr [ecx+eax+0000001D4h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-044h]
           push edx
           mov ecx, dword ptr [ebp-068h]
           add ecx, 000000088h
           call l10001677
           push eax
           lea eax, [ebp-05Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000004Ch
           call l1000123A
           mov esi, eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000001B4h]
           shl edx, 005h
           mov eax, dword ptr [ebp-068h]
           lea edi, [eax+edx+0000001BCh]
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000001B4h]
           shl edx, 005h
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+edx+0000001B8h], ecx
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+0000001B4h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-068h]
           mov dword ptr [ecx+0000001B4h], eax
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000001B4h]
           add edx, 000004000h
           push edx
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-0000000A4h], ecx
           fild dword ptr [ebp-0000000A4h]
           fmul dword ptr [ebp-014h]
           fstp dword ptr [ebp-010h]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+019h]
           mov dword ptr [ebp-0000000A8h], eax
           fild dword ptr [ebp-0000000A8h]
           fmul dword ptr [ebp-014h]
           fstp dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-0000000ACh], edx
           fild dword ptr [ebp-0000000ACh]
           fmul dword ptr [ebp-014h]
           fstp dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], 03F800000h
           lea eax, [ebp-010h]
           push eax
           push 000001201h
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000001B4h]
           add edx, 000004000h
           push edx
           call [__imp_glLightfv]; [OPENGL32.glLightfv].
           push 03F800000h
           push 000001205h
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+0000001B4h]
           add ecx, 000004000h
           push ecx
           call [__imp_glLightf]; [OPENGL32.glLightf].
           push 040800000h
           push 000001207h
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+0000001B4h]
           add eax, 000004000h
           push eax
           call [__imp_glLightf]; [OPENGL32.glLightf].
           push 03DCCCCCDh
           push 000001208h
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+0000001B4h]
           add edx, 000004000h
           push edx
           call [__imp_glLightf]; [OPENGL32.glLightf].
           push 03983126Fh
           push 000001209h
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+0000001B4h]
           add ecx, 000004000h
           push ecx
           call [__imp_glLightf]; [OPENGL32.glLightf].
           mov esi, dword ptr [ebp+008h]
           add esi, 00000004Ch
           mov ecx, 000000006h
           lea edi, [ebp-02Ch]
           rep movsd
           fld qword ptr [ebp-02Ch]
           fstp dword ptr [ebp-010h]
           fld qword ptr [ebp-024h]
           fstp dword ptr [ebp-00Ch]
           fld qword ptr [ebp-01Ch]
           fstp dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], 03F800000h
           lea edx, [ebp-010h]
           push edx
           push 000001203h
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+0000001B4h]
           add ecx, 000004000h
           push ecx
           call [__imp_glLightfv]; [OPENGL32.glLightfv].
;
;* Jump:
; 10010FE0(U), 10011077(U), 10011199(U) 
;
l100113E1: jmp l100113EF
;
;* Jump:
; 10010F78(C) 
;
l100113E3: mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-068h]
           call l100013DE
;
;* Jump:
; 100113E1(U) 
;
l100113EF: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10010F60 ENDP
;
;* Jump:
; 1000177B(U) 
;
l100113F7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l10011636
           mov dword ptr [ebp-008h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+0000000B0h]
           sub edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+0000000B0h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+0000000B0h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+edx*04h+0000000B4h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 00000044Ch
           je l10011477
           cmp dword ptr [ebp-010h], 00000044Dh
           je l1001150E
           cmp dword ptr [ebp-010h], 00000044Eh
           je l10011609
           jmp near ptr l10011634
;
;* Jump:
; 10011456(C) 
;
l10011477: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-008h], edx
           fld dword ptr [ebp-008h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           fmul dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fsubr dword ptr [edx+00008484Ch]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+00008484Ch]
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-018h], edx
           fild dword ptr [ebp-018h]
           fmul dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fsubr dword ptr [eax+000084850h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+000084850h]
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-01Ch], eax
           fild dword ptr [ebp-01Ch]
           fmul dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fsubr dword ptr [ecx+000084854h]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+000084854h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 00008484Ch
           push eax
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp near ptr l10011634
;
;* Jump:
; 1001145F(C) 
;
l1001150E: mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-024h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-024h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1001156C
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+01Ch]
           fstp qword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000088h
           push ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-02Ch]
           fstp qword ptr [ebp-034h]
           jmp l1001157A
;
;* Jump:
; 1001153F(C) 
;
l1001156C: mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 1001156A(U) 
;
l1001157A: fld qword ptr [ebp-034h]
           fst dword ptr [ebp-008h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-038h], eax
           fild dword ptr [ebp-038h]
           fmul dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fsubr dword ptr [ecx+00008484Ch]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+00008484Ch]
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-03Ch], ecx
           fild dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fsubr dword ptr [edx+000084850h]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+000084850h]
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-040h], edx
           fild dword ptr [ebp-040h]
           fmul dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fsubr dword ptr [eax+000084854h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+000084854h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 00008484Ch
           push edx
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp l10011634
;
;* Jump:
; 1001146C(C) 
;
l10011609: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+0000001B4h]
           add ecx, 000004000h
           push ecx
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+0000001B4h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+0000001B4h], eax
;
;* Jump:
; 10011472(U), 10011509(U), 10011607(U) 
;
l10011634: jmp l1001163E
;
;* Jump:
; 1001140A(C) 
;
l10011636: mov ecx, dword ptr [ebp-00Ch]
           call l100012C6
;
;* Jump:
; 10011634(U) 
;
l1001163E: mov esp, ebp
           pop ebp
           ret
l100113F7 ENDP
;
;* Jump:
; 100011D1(U) 
;
l10011642 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l100116DB
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+044h]
           mov dword ptr [ecx+0000000A8h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           and edx, 000000010h
           test edx, edx
           jne l10011699
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+0000000ACh]
           push 000000019h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
;
;* Jump:
; 10011672(C) 
;
l10011699: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           and ecx, 000000020h
           test ecx, ecx
           je l100116D9
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000009B8h], 0437F0000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000009BCh], 0437F0000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000009C0h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000009C4h], 043000000h
;
;* Jump:
; 100116A3(C) 
;
l100116D9: jmp l100116E7
;
;* Jump:
; 10011653(C) 
;
l100116DB: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l100013C0
;
;* Jump:
; 100116D9(U) 
;
l100116E7: mov esp, ebp
           pop ebp
           ret 00004h
l10011642 ENDP
;
;* Jump:
; 10001767(U) 
;
l100116ED PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           call l10001465
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+00008485Ch], 000000000h
           je l10011769
           mov esi, dword ptr [ebp-01Ch]
           add esi, 000000088h
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea ecx, [ebp-018h]
           call l10001249
           lea edx, [ebp-018h]
           push edx
           call [__imp_glNormal3dv]; [OPENGL32.glNormal3dv].
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+00008484Ch], 000000000h
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+000084850h], 000000000h
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+000084854h], 000000000h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+000084858h], 03F800000h
;
;* Jump:
; 1001170E(C) 
;
l10011769: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100116ED ENDP
;
;* Jump:
; 1000170D(U) 
;
l10011771 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000060h
           push esi
           push edi
           mov dword ptr [ebp-05Ch], ecx
           mov eax, dword ptr [ebp-05Ch]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l1001193E
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           lea ecx, [ebp-010h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-05Ch]
           add eax, 00004E174h
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l100117D7
;
;* Jump:
; 10011845(U) 
;
l100117CE: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 100117CC(U) 
;
l100117D7: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+00004E170h]
           jnb l10011847
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-05Ch]
           lea ecx, [eax+edx+000002170h]
           push ecx
           lea edx, [ebp-040h]
           push edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-05Ch]
           lea ecx, [edx+ecx+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea eax, [ebp-018h]
           push eax
           lea ecx, [ebp-018h]
           call l100013CF
           mov ecx, dword ptr [ebp-024h]
           fstp dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-024h]
           add eax, 000000014h
           mov dword ptr [ebp-024h], eax
           jmp l100117CE
;
;* Jump:
; 100117E3(C) 
;
l10011847: mov dword ptr [ebp-020h], 000000000h
           jmp l10011859
;
;* Jump:
; 10011937(U) 
;
l10011850: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1001184E(U) 
;
l10011859: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp-020h]
           cmp eax, dword ptr [edx+0000001B4h]
           jnb l1001193C
           mov ecx, dword ptr [ebp-020h]
           shl ecx, 005h
           mov edx, dword ptr [ebp-05Ch]
           lea eax, [edx+ecx+0000001B8h]
           mov ecx, dword ptr [ebp-05Ch]
           mov dword ptr [ecx+00007A178h], eax
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+00007A178h]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [eax]
           cmp edx, dword ptr [ecx+0000000ACh]
           je l10011937
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l100118B7
;
;* Jump:
; 1001191F(U) 
;
l100118AE: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 100118AC(U) 
;
l100118B7: mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+00000216Ch]
           jnb l10011921
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [eax+00007A178h]
           add ecx, 000000004h
           push ecx
           lea edx, [ebp-058h]
           push edx
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-05Ch]
           lea ecx, [ecx+eax+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea edx, [ebp-018h]
           push edx
           lea ecx, [ebp-018h]
           call l100013CF
           fst dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-05Ch]
           fstp dword ptr [ecx+eax+0000021B4h]
           mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
           jmp l100118AE
;
;* Jump:
; 100118C3(C), 10011935(U) 
;
l10011921: mov ecx, dword ptr [ebp-05Ch]
           call l100017B7
           test eax, eax
           je l10011937
           mov ecx, dword ptr [ebp-05Ch]
           call l10001424
           jmp l10011921
;
;* Jump:
; 10011898(C), 1001192B(C) 
;
l10011937: jmp near ptr l10011850
;
;* Jump:
; 10011865(C) 
;
l1001193C: jmp l10011946
;
;* Jump:
; 10011786(C) 
;
l1001193E: mov ecx, dword ptr [ebp-05Ch]
           call l10001087
;
;* Jump:
; 1001193C(U) 
;
l10011946: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l10011771 ENDP
;
;* Jump:
; 10001235(U) 
;
l1001194C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           push esi
           push edi
           mov dword ptr [ebp-030h], ecx
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l10011BC6
           xor ecx, ecx
           mov cl, byte ptr [g10051070]
           and ecx, 000000001h
           test ecx, ecx
           jne l100119CA
           mov dl, byte ptr [g10051070]
           or dl, 001h
           mov byte ptr [g10051070], dl
           mov dword ptr [g10051058], 000000000h
           mov dword ptr [g1005105C], 000000000h
           mov eax, offset g10051060
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, offset g10051068
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           push offset l10011BDA
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 10011974(C) 
;
l100119CA: mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+00000216Ch]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00000216Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+00000216Ch], edx
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-030h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-030h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-030h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [eax]
           fadd qword ptr [ecx]
           fmul qword ptr [g10037100]
           mov edx, dword ptr [ebp-014h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [eax+008h]
           fadd qword ptr [ecx+008h]
           fmul qword ptr [g10037100]
           mov edx, dword ptr [ebp-014h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [eax+010h]
           fadd qword ptr [ecx+010h]
           fmul qword ptr [g10037100]
           mov edx, dword ptr [ebp-014h]
           fstp qword ptr [edx+010h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [eax+018h]
           fadd dword ptr [ecx+018h]
           fmul dword ptr [g10037210]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [eax+01Ch]
           fadd dword ptr [ecx+01Ch]
           fmul dword ptr [g10037210]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+078h], 000000000h
           je l10011B02
           mov ecx, dword ptr [ebp-014h]
           fld qword ptr [g10037080]
           fdiv qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+03Ch]
           mov dword ptr [eax+040h], edx
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+03Ch]
           mov ecx, dword ptr [ebp-014h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-030h]
           fmul dword ptr [edx+06Ch]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+034h]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+03Ch]
           fmul qword ptr [ecx+008h]
           mov eax, dword ptr [ebp-030h]
           fmul dword ptr [eax+070h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+038h]
;
;* Jump:
; 10011AB3(C) 
;
l10011B02: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+00007A178h]
           add eax, 000000004h
           push eax
           lea ecx, [ebp-02Ch]
           push ecx
           mov ecx, dword ptr [ebp-014h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           mov edi, offset g10051058
           rep movsd
           push offset g10051058
           mov ecx, offset g10051058
           call l100013CF
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+044h]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-030h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+00Ch]
           fmul dword ptr [g1003720C]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+00Ch], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], ecx
           jmp l10011BD2
;
;* Jump:
; 10011961(C) 
;
l10011BC6: mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-030h]
           call l100017B2
;
;* Jump:
; 10011BC4(U) 
;
l10011BD2: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1001194C ENDP
;
l10011BDA PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10011BDA ENDP
;
;* Jump:
; 100011C7(U) 
;
l10011BDF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           push esi
           push edi
           mov dword ptr [ebp-03Ch], ecx
           mov eax, dword ptr [ebp-03Ch]
           cmp dword ptr [eax+00007A210h], 000000000h
           je l10011BFB
           jmp near ptr l10012034
;
;* Jump:
; 10011BF4(C) 
;
l10011BFB: mov ecx, dword ptr [ebp-03Ch]
           cmp dword ptr [ecx+00008485Ch], 000000000h
           je l1001201C
           mov edx, dword ptr [ebp-03Ch]
           cmp dword ptr [edx+078h], 000000000h
           je l10011E3F
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+00000216Ch], ecx
           mov edx, dword ptr [ebp+014h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx+000062174h], edx
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000002170h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10011C62
;
;* Jump:
; 10011D19(U) 
;
l10011C59: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10011C57(U) 
;
l10011C62: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l10011D1E
           mov esi, dword ptr [ebp-018h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-020h]
           rep movsd
           mov ecx, dword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fdiv qword ptr [ecx+010h]
           fstp qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-03Ch]
           fld dword ptr [edx+06Ch]
           mov eax, dword ptr [ebp-020h]
           fmul qword ptr [eax]
           fmul qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+034h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-03Ch]
           fld dword ptr [eax+070h]
           fmul qword ptr [edx+008h]
           fmul qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+038h]
           fld qword ptr [ebp-010h]
           mov edx, dword ptr [ebp-020h]
           fstp dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           push ecx
           mov ecx, dword ptr [ebp-020h]
           call l100013CF
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+0000000A8h]
           fadd dword ptr [eax+030h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-020h]
           call l100013CF
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+0000000A8h]
           fadd dword ptr [edx+034h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+01Ch]
           mov ecx, dword ptr [ebp-020h]
           add ecx, 00000004Ch
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000018h
           mov dword ptr [ebp-018h], edx
           jmp near ptr l10011C59
;
;* Jump:
; 10011C68(C) 
;
l10011D1E: mov eax, dword ptr [ebp-03Ch]
           add eax, 00004E174h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-03Ch]
           add ecx, 000062178h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10011D4D
;
;* Jump:
; 10011E1F(U) 
;
l10011D44: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10011D42(U) 
;
l10011D4D: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp+014h]
           jnb l10011E24
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000014h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000014h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000014h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 00000000Ch
           mov dword ptr [ebp-008h], eax
           jmp near ptr l10011D44
;
;* Jump:
; 10011D53(C) 
;
l10011E24: mov ecx, dword ptr [ebp-03Ch]
           call l1000170D
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-03Ch]
           call [edx+000000234h]
           jmp near ptr l1001201A
;
;* Jump:
; 10011C12(C) 
;
l10011E3F: mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+00000216Ch], ecx
           mov edx, dword ptr [ebp+014h]
           imul edx, edx, 000000003h
           mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx+000062174h], edx
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000002170h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-030h], ecx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10011E89
;
;* Jump:
; 10011EFB(U) 
;
l10011E80: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 10011E7E(U) 
;
l10011E89: mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l10011EFD
           mov esi, dword ptr [ebp-030h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-038h]
           rep movsd
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+0000000A8h]
           push edx
           mov ecx, dword ptr [ebp-038h]
           call l100013CF
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           fadd dword ptr [ecx+030h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+018h]
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           add ecx, 000000018h
           push ecx
           mov ecx, dword ptr [ebp-038h]
           call l100013CF
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+0000000A8h]
           fadd dword ptr [eax+034h]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-038h]
           add edx, 00000004Ch
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000018h
           mov dword ptr [ebp-030h], eax
           jmp l10011E80
;
;* Jump:
; 10011E8F(C) 
;
l10011EFD: mov ecx, dword ptr [ebp-03Ch]
           add ecx, 00004E174h
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-03Ch]
           add edx, 000062178h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [ebp-028h], eax
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10011F2D
;
;* Jump:
; 10011FFF(U) 
;
l10011F24: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
;
;* Jump:
; 10011F22(U) 
;
l10011F2D: mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ebp+014h]
           jnb l10012004
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000014h
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+008h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000014h
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, 000000014h
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000018h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 00000000Ch
           mov dword ptr [ebp-028h], ecx
           jmp near ptr l10011F24
;
;* Jump:
; 10011F33(C) 
;
l10012004: mov ecx, dword ptr [ebp-03Ch]
           call l1000170D
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-03Ch]
           call [eax+000000234h]
;
;* Jump:
; 10011E3A(U) 
;
l1001201A: jmp l10012034
;
;* Jump:
; 10011C05(C) 
;
l1001201C: mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-03Ch]
           call l10001816
;
;* Jump:
; 10011BF6(U), 1001201A(U) 
;
l10012034: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l10011BDF ENDP
;
;* Jump:
; 100010B4(U) 
;
l1001203C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l10012119
           mov dword ptr [ebp-014h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx]
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 00000044Ch
           je l10012089
           cmp dword ptr [ebp-020h], 00000044Dh
           je l100120B6
           cmp dword ptr [ebp-020h], 00000044Eh
           je l100120C3
           jmp near ptr l10012117
;
;* Jump:
; 10012070(C) 
;
l10012089: mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 03F800000h
           lea eax, [ebp-010h]
           push eax
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp l10012117
;
;* Jump:
; 10012079(C) 
;
l100120B6: push 000004000h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           jmp l10012117
;
;* Jump:
; 10012082(C) 
;
l100120C3: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+0000000ACh], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l100120E1
;
;* Jump:
; 10012115(U) 
;
l100120D8: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 100120D6(U) 
;
l100120E1: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+0000001B4h]
           jnb l10012117
           mov eax, dword ptr [ebp-018h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+eax+0000001B8h]
           jne l10012115
           mov eax, dword ptr [ebp-018h]
           add eax, 000004001h
           push eax
           call [__imp_glDisable]; [OPENGL32.glDisable].
           jmp l10012117
;
;* Jump:
; 10012102(C) 
;
l10012115: jmp l100120D8
;
;* Jump:
; 10012084(U), 100120B4(U), 100120C1(U), 100120ED(C), 10012113(U) 
;
l10012117: jmp l10012125
;
;* Jump:
; 1001204F(C) 
;
l10012119: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-01Ch]
           call l100016DB
;
;* Jump:
; 10012117(U) 
;
l10012125: mov esp, ebp
           pop ebp
           ret 00004h
l1001203C ENDP
;
;* Jump:
; 100010AF(U) 
;
l1001212B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000050h
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l10012312
           mov dword ptr [ebp-014h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx]
           mov dword ptr [ebp-038h], eax
           cmp dword ptr [ebp-038h], 00000044Ch
           je l10012180
           cmp dword ptr [ebp-038h], 00000044Dh
           je l100121F2
           cmp dword ptr [ebp-038h], 00000044Eh
           je l100122BA
           jmp near ptr l10012310
;
;* Jump:
; 1001215F(C) 
;
l10012180: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-03Ch], eax
           fild dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-040h], edx
           fild dword ptr [ebp-040h]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+01Ah]
           mov dword ptr [ebp-044h], ecx
           fild dword ptr [ebp-044h]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], 03F800000h
           lea edx, [ebp-010h]
           push edx
           push 000000B53h
           call [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp near ptr l10012310
;
;* Jump:
; 10012168(C) 
;
l100121F2: push 000004000h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-048h], eax
           fild dword ptr [ebp-048h]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-04Ch], edx
           fild dword ptr [ebp-04Ch]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+01Ah]
           mov dword ptr [ebp-050h], ecx
           fild dword ptr [ebp-050h]
           fmul dword ptr [ebp-014h]
           fmul dword ptr [g10037208]
           fstp dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], 03F800000h
           lea edx, [ebp-010h]
           push edx
           push 000001201h
           push 000004000h
           call [__imp_glLightfv]; [OPENGL32.glLightfv].
           mov eax, dword ptr [ebp-034h]
           add eax, 0000860E0h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000074h
           push ecx
           lea edx, [ebp-02Ch]
           push edx
           call l100011AE
           add esp, 00000000Ch
           fld qword ptr [ebp-02Ch]
           fstp dword ptr [ebp-010h]
           fld qword ptr [ebp-024h]
           fstp dword ptr [ebp-00Ch]
           fld qword ptr [ebp-01Ch]
           fstp dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], 000000000h
           lea eax, [ebp-010h]
           push eax
           push 000001203h
           push 000004000h
           call [__imp_glLightfv]; [OPENGL32.glLightfv].
           jmp l10012310
;
;* Jump:
; 10012175(C) 
;
l100122BA: mov dword ptr [ebp-030h], 000000000h
           jmp l100122CC
;
;* Jump:
; 1001230E(U) 
;
l100122C3: mov ecx, dword ptr [ebp-030h]
           add ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 100122C1(U) 
;
l100122CC: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [edx+0000001B4h]
           jnb l10012310
           mov ecx, dword ptr [ebp-030h]
           shl ecx, 005h
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+008h]
           cmp eax, dword ptr [edx+ecx+0000001B8h]
           jne l1001230E
           mov ecx, dword ptr [ebp-030h]
           add ecx, 000004001h
           push ecx
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+0000000ACh], 000000000h
           jmp l10012310
;
;* Jump:
; 100122ED(C) 
;
l1001230E: jmp l100122C3
;
;* Jump:
; 1001217B(U), 100121ED(U), 100122B8(U), 100122D8(C), 1001230C(U) 
;
l10012310: jmp l1001231E
;
;* Jump:
; 1001213E(C) 
;
l10012312: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-034h]
           call l100016D6
;
;* Jump:
; 10012310(U) 
;
l1001231E: mov esp, ebp
           pop ebp
           ret 00004h
l1001212B ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010FF(U) 
;
l10012820 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000B4h
           mov dword ptr [ebp-078h], ecx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000140h]
           mov eax, dword ptr [ebp-078h]
           add eax, 0000864A4h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, 0000964A4h
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-078h]
           add edx, 0000AE4A4h
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-02Ch], eax
           mov dword ptr [ebp-03Ch], 000000000h
           mov dword ptr [ebp-030h], 000000000h
           jmp l1001287C
;
;* Jump:
; 10012A40(U) 
;
l10012873: mov ecx, dword ptr [ebp-030h]
           add ecx, 000000001h
           mov dword ptr [ebp-030h], ecx
;
;* Jump:
; 10012871(U) 
;
l1001287C: mov edx, dword ptr [ebp-030h]
           cmp edx, dword ptr [ebp+00Ch]
           jnb l10012A45
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx+034h], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           fld qword ptr [g10037080]
           fdiv qword ptr [ecx+010h]
           fstp qword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [ecx+06Ch]
           fmul qword ptr [eax]
           fmul qword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-078h]
           fiadd dword ptr [edx+05Ch]
           mov eax, dword ptr [ebp-048h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           fild dword ptr [ecx+058h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [ecx+070h]
           fmul qword ptr [eax+008h]
           fmul qword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-078h]
           fiadd dword ptr [edx+060h]
           fsubp st(01h), st(00h)
           mov eax, dword ptr [ebp-048h]
           fstp dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx]
           fld qword ptr [edx+010h]
           mov eax, dword ptr [ebp-048h]
           fstp dword ptr [eax+008h]
           fld qword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-048h]
           fstp dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+018h]
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx]
           fld dword ptr [edx+01Ch]
           fcompp
           fnstsw ax
           test ah, 001h
           je l10012921
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           fld dword ptr [ecx+018h]
           fstp dword ptr [ebp-07Ch]
           jmp l1001292C
;
;* Jump:
; 10012912(C) 
;
l10012921: mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+01Ch]
           fstp dword ptr [ebp-07Ch]
;
;* Jump:
; 1001291F(U) 
;
l1001292C: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx]
           fld dword ptr [edx+020h]
           fcomp dword ptr [ebp-07Ch]
           fnstsw ax
           test ah, 001h
           je l1001297A
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           fld dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+01Ch]
           fcompp
           fnstsw ax
           test ah, 001h
           je l10012964
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx]
           fld dword ptr [edx+018h]
           fstp dword ptr [ebp-080h]
           jmp l1001296F
;
;* Jump:
; 10012955(C) 
;
l10012964: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           fld dword ptr [ecx+01Ch]
           fstp dword ptr [ebp-080h]
;
;* Jump:
; 10012962(U) 
;
l1001296F: mov edx, dword ptr [ebp-080h]
           mov dword ptr [ebp-000000084h], edx
           jmp l10012988
;
;* Jump:
; 1001293C(C) 
;
l1001297A: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           fld dword ptr [ecx+020h]
           fstp dword ptr [ebp-000000084h]
;
;* Jump:
; 10012978(U) 
;
l10012988: fld dword ptr [ebp-000000084h]
           fstp qword ptr [ebp-028h]
           fld qword ptr [ebp-028h]
           fcomp qword ptr [g10037080]
           fnstsw ax
           test ah, 041h
           jne l100129EA
           fld qword ptr [g10037080]
           fdiv qword ptr [ebp-028h]
           fstp qword ptr [ebp-028h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+018h]
           fmul qword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-044h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+01Ch]
           fmul qword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-044h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           fld dword ptr [eax+020h]
           fmul qword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-044h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+00Ch], eax
           jmp l10012A1C
;
;* Jump:
; 1001299F(C) 
;
l100129EA: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+018h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [eax+01Ch]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ecx+020h]
           mov dword ptr [edx+008h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp+018h]
           mov dword ptr [ecx+00Ch], edx
;
;* Jump:
; 100129E8(U) 
;
l10012A1C: mov eax, dword ptr [ebp-048h]
           add eax, 000000010h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-044h]
           add ecx, 000000010h
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-02Ch]
           add edx, 000000004h
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-03Ch]
           add eax, 000000001h
           mov dword ptr [ebp-03Ch], eax
           jmp near ptr l10012873
;
;* Jump:
; 10012882(C) 
;
l10012A45: mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+00007A210h], 000000000h
           je l10012D68
           mov dword ptr [ebp-030h], 000000000h
           jmp l10012A67
;
;* Jump:
; 10012D63(U) 
;
l10012A5E: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 10012A5C(U) 
;
l10012A67: mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l10012D68
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-074h], eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, 00007A188h
           mov dword ptr [ebp-070h], ecx
           mov edx, dword ptr [ebp-070h]
           mov eax, dword ptr [ebp-070h]
           mov ecx, dword ptr [ebp-074h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp-070h]
           mov ecx, dword ptr [ebp-074h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-070h]
           mov ecx, dword ptr [ebp-074h]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l10012D63
           mov edx, dword ptr [ebp-030h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [eax+edx+0000864A4h]
           fmul dword ptr [ecx+00007A17Ch]
           mov edx, dword ptr [ebp-030h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           fld dword ptr [eax+edx+0000864A8h]
           mov ecx, dword ptr [ebp-078h]
           fmul dword ptr [ecx+00007A180h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-05Ch]
           mov edx, dword ptr [ebp-058h]
           push edx
           mov eax, dword ptr [ebp-05Ch]
           push eax
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-04Ch], eax
           fild dword ptr [ebp-04Ch]
           fsubr qword ptr [ebp-05Ch]
           fstp qword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000000064h
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+ecx+00007A218h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-05Ch]
           fmulp st(01h), st(00h)
           mov eax, dword ptr [ebp-04Ch]
           add eax, 000000065h
           imul eax, eax, 0000000CCh
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [ecx+eax+00007A218h]
           fmul qword ptr [ebp-05Ch]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-064h]
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000064h
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-078h]
           fld dword ptr [eax+edx+00007A214h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-05Ch]
           fmulp st(01h), st(00h)
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000000065h
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+ecx+00007A214h]
           fmul qword ptr [ebp-05Ch]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-054h]
           fcomp qword ptr [g10037258]
           fnstsw ax
           test ah, 001h
           je l10012BC3
           mov eax, dword ptr [ebp-054h]
           mov dword ptr [ebp-00000008Ch], eax
           mov ecx, dword ptr [ebp-050h]
           mov dword ptr [ebp-000000088h], ecx
           jmp l10012BD7
;
;* Jump:
; 10012BAD(C) 
;
l10012BC3: mov dword ptr [ebp-00000008Ch], 0D2F1A9FCh
           mov dword ptr [ebp-000000088h], 03F40624Dh
;
;* Jump:
; 10012BC1(U) 
;
l10012BD7: fld qword ptr [ebp-00000008Ch]
           fcomp qword ptr [g10037248]
           fnstsw ax
           test ah, 041h
           jne l10012C3C
           fld qword ptr [ebp-054h]
           fcomp qword ptr [g10037258]
           fnstsw ax
           test ah, 001h
           je l10012C0E
           mov edx, dword ptr [ebp-054h]
           mov dword ptr [ebp-000000094h], edx
           mov eax, dword ptr [ebp-050h]
           mov dword ptr [ebp-000000090h], eax
           jmp l10012C22
;
;* Jump:
; 10012BF8(C) 
;
l10012C0E: mov dword ptr [ebp-000000094h], 0D2F1A9FCh
           mov dword ptr [ebp-000000090h], 03F40624Dh
;
;* Jump:
; 10012C0C(U) 
;
l10012C22: mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-00000009Ch], ecx
           mov edx, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-000000098h], edx
           jmp l10012C50
;
;* Jump:
; 10012BE8(C) 
;
l10012C3C: mov dword ptr [ebp-00000009Ch], 0D2F1A9FCh
           mov dword ptr [ebp-000000098h], 0BF40624Dh
;
;* Jump:
; 10012C3A(U) 
;
l10012C50: mov eax, dword ptr [ebp-00000009Ch]
           mov dword ptr [ebp-054h], eax
           mov ecx, dword ptr [ebp-000000098h]
           mov dword ptr [ebp-050h], ecx
           mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-064h]
           fmul qword ptr [ebp-054h]
           fcomp qword ptr [g10037228]
           fnstsw ax
           test ah, 001h
           je l10012C9B
           mov eax, dword ptr [ebp-078h]
           fld dword ptr [eax+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-064h]
           fmul qword ptr [ebp-054h]
           fstp qword ptr [ebp-0000000A4h]
           jmp l10012CAF
;
;* Jump:
; 10012C7F(C) 
;
l10012C9B: mov dword ptr [ebp-0000000A4h], 000000000h
           mov dword ptr [ebp-0000000A0h], 040500000h
;
;* Jump:
; 10012C99(U) 
;
l10012CAF: fld qword ptr [ebp-0000000A4h]
           fcomp qword ptr [g10037218]
           fnstsw ax
           test ah, 041h
           jne l10012D29
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [ecx+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-064h]
           fmul qword ptr [ebp-054h]
           fcomp qword ptr [g10037228]
           fnstsw ax
           test ah, 001h
           je l10012CFB
           mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-064h]
           fmul qword ptr [ebp-054h]
           fstp qword ptr [ebp-0000000ACh]
           jmp l10012D0F
;
;* Jump:
; 10012CDF(C) 
;
l10012CFB: mov dword ptr [ebp-0000000ACh], 000000000h
           mov dword ptr [ebp-0000000A8h], 040500000h
;
;* Jump:
; 10012CF9(U) 
;
l10012D0F: mov eax, dword ptr [ebp-0000000ACh]
           mov dword ptr [ebp-0000000B4h], eax
           mov ecx, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-0000000B0h], ecx
           jmp l10012D3D
;
;* Jump:
; 10012CC0(C) 
;
l10012D29: mov dword ptr [ebp-0000000B4h], 000000000h
           mov dword ptr [ebp-0000000B0h], 0C0500000h
;
;* Jump:
; 10012D27(U) 
;
l10012D3D: mov edx, dword ptr [ebp-030h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           fld dword ptr [eax+edx+0000864A4h]
           fadd qword ptr [ebp-0000000B4h]
           mov ecx, dword ptr [ebp-030h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           fstp dword ptr [edx+ecx+0000864A4h]
;
;* Jump:
; 10012AC5(C) 
;
l10012D63: jmp near ptr l10012A5E
;
;* Jump:
; 10012A4F(C), 10012A6D(C) 
;
l10012D68: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+01Ch]
           or eax, 000000009h
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l10012DBE
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-078h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 10012DA4(C) 
;
l10012DBE: cmp dword ptr [ebp+018h], 03F800000h
           jne l10012FD3
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-068h], 000000000h
           jmp l10012DE5
;
;* Jump:
; 10012FC3(U) 
;
l10012DDC: mov edx, dword ptr [ebp-068h]
           add edx, 000000001h
           mov dword ptr [ebp-068h], edx
;
;* Jump:
; 10012DDA(U) 
;
l10012DE5: mov eax, dword ptr [ebp-068h]
           cmp eax, dword ptr [ebp+014h]
           jnb l10012FC8
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-034h]
           cmp edx, dword ptr [ecx+014h]
           je l10012E31
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 10012E06(C) 
;
l10012E31: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+010h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-038h]
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [edx+014h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [edx+008h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+018h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10012DDC
;
;* Jump:
; 10012DEB(C) 
;
l10012FC8: call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l100131D6
;
;* Jump:
; 10012DC5(C) 
;
l10012FD3: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-06Ch], 000000000h
           jmp l10012FED
;
;* Jump:
; 100131CB(U) 
;
l10012FE4: mov eax, dword ptr [ebp-06Ch]
           add eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
;
;* Jump:
; 10012FE2(U) 
;
l10012FED: mov ecx, dword ptr [ebp-06Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnb l100131D0
           mov edx, dword ptr [ebp-06Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-034h]
           cmp eax, dword ptr [edx+014h]
           je l10013039
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1001300E(C) 
;
l10013039: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+010h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+004h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-038h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [edx+014h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [edx+008h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           push 000000000h
           push 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+018h]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-014h]
           fld dword ptr [edx+00Ch]
           fmul dword ptr [eax+00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10012FE4
;
;* Jump:
; 10012FF3(C) 
;
l100131D0: call [__imp_glEnd]; [OPENGL32.glEnd].
;
;* Jump:
; 10012FCE(U) 
;
l100131D6: mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000000h
           je l100131FA
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-078h]
           mov dword ptr [ecx+000086490h], 000000000h
;
;* Jump:
; 100131E0(C) 
;
l100131FA: mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-078h]
           call [eax+000000144h]
           mov esp, ebp
           pop ebp
           ret 00018h
l10012820 ENDP
;
;* Jump:
; 1000180C(U) 
;
l1001320E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000140h]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000860A0h]
           test ecx, ecx
           je l10013263
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+000086490h], 000000001h
           je l10013263
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov eax, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+000086490h], 000000001h
;
;* Jump:
; 1001323D(C), 10013249(C) 
;
l10013263: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-014h], 000000000h
           jmp l1001327D
;
;* Jump:
; 10013466(U) 
;
l10013274: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10013272(U) 
;
l1001327D: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+000062174h]
           jnb l1001346B
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx], 000000000h
           je l100132CA
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
           jmp l100132FB
;
;* Jump:
; 10013295(C) 
;
l100132CA: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-018h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100132C8(U) 
;
l100132FB: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+004h], 000000000h
           je l1001331E
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
           jmp l10013337
;
;* Jump:
; 10013302(C) 
;
l1001331E: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001331C(U) 
;
l10013337: mov eax, dword ptr [ebp-008h]
           add eax, 000000020h
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [edx+010h]
           fmul qword ptr [g10037080]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+058h]
           sub edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-01Ch], edx
           fild dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           fsub dword ptr [eax+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-018h]
           fild dword ptr [ecx+05Ch]
           mov edx, dword ptr [ebp-008h]
           fadd dword ptr [edx+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000020h
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+010h]
           fmul qword ptr [g10037080]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+058h]
           sub edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-020h], edx
           fild dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-00Ch]
           fsub dword ptr [eax+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-018h]
           fild dword ptr [ecx+05Ch]
           mov edx, dword ptr [ebp-00Ch]
           fadd dword ptr [edx+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp-010h]
           add eax, 000000020h
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [g10037080]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+058h]
           sub edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-024h], edx
           fild dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-010h]
           fsub dword ptr [eax+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-018h]
           fild dword ptr [ecx+05Ch]
           mov edx, dword ptr [ebp-010h]
           fadd dword ptr [edx+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp-004h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10013274
;
;* Jump:
; 10013289(C) 
;
l1001346B: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000144h]
           mov esp, ebp
           pop ebp
           ret
l1001320E ENDP
;
;* Jump:
; 1000148D(U) 
;
l10013483 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000140h]
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000860A0h]
           test ecx, ecx
           je l100134D8
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+000086490h], 000000000h
           je l100134D8
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+000086490h], 000000000h
;
;* Jump:
; 100134B2(C), 100134BE(C) 
;
l100134D8: mov ecx, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+0000862F0h], 000000001h
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+000086494h]
           mov ecx, dword ptr [ebp-018h]
           add eax, dword ptr [ecx+000062174h]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+000086494h], eax
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000847EAh]
           push ecx
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx+0000847E9h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000847E8h]
           push edx
           call [__imp_glColor3ub]; [OPENGL32.glColor3ub].
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+000086494h]
           mov edx, dword ptr [ebp-018h]
           add ecx, dword ptr [edx+000062174h]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+000086494h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l1001355F
;
;* Jump:
; 10013721(U) 
;
l10013556: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10013554(U) 
;
l1001355F: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+000062174h]
           jnb l10013726
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx], 000000000h
           je l100135AC
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
           jmp l100135DD
;
;* Jump:
; 10013577(C) 
;
l100135AC: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-018h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100135AA(U) 
;
l100135DD: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10013600
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
           jmp l10013619
;
;* Jump:
; 100135E4(C) 
;
l10013600: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 100135FE(U) 
;
l10013619: mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [g10037268]
           fmul qword ptr [ecx+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [edx+058h]
           sub ecx, dword ptr [eax+060h]
           mov dword ptr [ebp-01Ch], ecx
           fild dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           fsub dword ptr [edx+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-018h]
           fild dword ptr [eax+05Ch]
           mov ecx, dword ptr [ebp-008h]
           fadd dword ptr [ecx+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [g10037268]
           fmul qword ptr [eax+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+058h]
           sub eax, dword ptr [edx+060h]
           mov dword ptr [ebp-020h], eax
           fild dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-00Ch]
           fsub dword ptr [ecx+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-018h]
           fild dword ptr [edx+05Ch]
           mov eax, dword ptr [ebp-00Ch]
           fadd dword ptr [eax+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-010h]
           fld qword ptr [g10037268]
           fmul qword ptr [edx+010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+058h]
           sub edx, dword ptr [ecx+060h]
           mov dword ptr [ebp-024h], edx
           fild dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-010h]
           fsub dword ptr [eax+038h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-018h]
           fild dword ptr [ecx+05Ch]
           mov edx, dword ptr [ebp-010h]
           fadd dword ptr [edx+034h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp-004h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10013556
;
;* Jump:
; 1001356B(C) 
;
l10013726: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000860A0h]
           test edx, edx
           je l1001375F
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l1001375F
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 10013739(C), 10013745(C) 
;
l1001375F: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-018h]
           call [eax+000000144h]
           mov esp, ebp
           pop ebp
           ret
l10013483 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l10013B50 PROC
           push ebp
           mov ebp, esp
           call l10013B5F
           call l10013BA0
           pop ebp
           ret
l10013B50 ENDP
;
;* Call:
; 10013B53 
;
l10013B5F PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g1005137C], 000000000h
           mov dword ptr [g10051380], 000000000h
           mov dword ptr [g10051384], 000000010h
           mov dword ptr [g10051388], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [g1005138C], 000000001h
           mov dword ptr [g10051378], offset g10037274
           pop ebp
           ret
l10013B5F ENDP
;
;* Call:
; 10013B58 
;
l10013BA0 PROC
           push ebp
           mov ebp, esp
           push offset l10013BB2
           call l10035EB2
           add esp, 000000004h
           pop ebp
           ret
l10013BA0 ENDP
;
l10013BB2 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           xor eax, eax
           mov al, byte ptr [g10051690]
           and eax, 000000001h
           test eax, eax
           jne l10013C76
           mov cl, byte ptr [g10051690]
           or cl, 001h
           mov byte ptr [g10051690], cl
           mov dword ptr [g10051378], offset g10037274
           cmp dword ptr [g10051388], 000000000h
           je l10013C76
           mov edx, dword ptr [g1005138C]
           mov dword ptr [ebp-010h], edx
           cmp dword ptr [g10051388], 000000000h
           jne l10013C04
           jmp l10013C76
;
;* Jump:
; 10013C00(C) 
;
l10013C04: cmp dword ptr [ebp-010h], 000000000h
           je l10013C44
           mov dword ptr [ebp-004h], 000000000h
           jmp l10013C1C
;
;* Jump:
; 10013C42(U) 
;
l10013C13: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10013C11(U) 
;
l10013C1C: mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [g10051380]
           jnb l10013C44
           mov edx, dword ptr [g1005137C]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10013C13
;
;* Jump:
; 10013C08(C), 10013C25(C) 
;
l10013C44: mov eax, dword ptr [g1005137C]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1005137C], 000000000h
           mov dword ptr [g10051380], 000000000h
           mov dword ptr [g10051388], 000000000h
;
;* Jump:
; 10013BC4(C), 10013BEA(C), 10013C02(U) 
;
l10013C76: mov esp, ebp
           pop ebp
           ret
l10013BB2 ENDP
;
;* Jump:
; 10001186(U) 
;
l10013C7A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           push esi
           push edi
           mov dword ptr [ebp-044h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-044h]
           call [__imp_??0B_NamedObj@@QAE@ABVB_Name@@@Z]; [BBLibc.??0B_NamedObj@@QAE@ABVB_Name@@@Z].
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx], offset g10037278
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+018h], edx
           cmp dword ptr [ebp+014h], 000000000h
           je l10013F92
           cmp dword ptr [g10051380], 000000000h
           je l10013E5A
           mov eax, dword ptr [g1005137C]
           mov ecx, dword ptr [g10051380]
           mov edx, dword ptr [eax+ecx*04h-004h]
           mov dword ptr [ebp-010h], edx
           mov ecx, 000000300h
           mov edi, dword ptr [ebp+014h]
           mov esi, dword ptr [ebp-010h]
           xor eax, eax
           mov dword ptr [ebp-048h], eax
           rep cmpsb
           je l10013CF2
           sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-048h], ecx
;
;* Jump:
; 10013CE8(C) 
;
l10013CF2: mov edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-04Ch], edx
           xor eax, eax
           cmp dword ptr [ebp-04Ch], 000000000h
           sete  al
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10013D1E
           mov ecx, dword ptr [g10051380]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+014h], ecx
           jmp near ptr l10013E55
;
;* Jump:
; 10013D08(C) 
;
l10013D1E: push 000000300h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l10013D49
           mov ecx, 0000000C0h
           mov esi, dword ptr [ebp+014h]
           mov edi, dword ptr [ebp-008h]
           rep movsd
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-028h], eax
           jmp l10013D50
;
;* Jump:
; 10013D32(C) 
;
l10013D49: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 10013D47(U) 
;
l10013D50: mov ecx, dword ptr [g10051388]
           cmp ecx, dword ptr [g10051380]
           jbe l10013D83
           mov edx, dword ptr [g10051380]
           mov eax, dword ptr [g1005137C]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g10051380]
           add edx, 000000001h
           mov dword ptr [g10051380], edx
           jmp near ptr l10013E47
;
;* Jump:
; 10013D5C(C) 
;
l10013D83: mov eax, dword ptr [g10051388]
           add eax, dword ptr [g10051384]
           mov dword ptr [g10051388], eax
           cmp dword ptr [g10051380], 000000000h
           je l10013E0A
           mov ecx, dword ptr [g10051388]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-014h], edx
           mov dword ptr [ebp-018h], 000000000h
           jmp l10013DC9
;
;* Jump:
; 10013DE9(U) 
;
l10013DC0: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10013DBE(U) 
;
l10013DC9: mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [g10051380]
           jnb l10013DEB
           mov edx, dword ptr [g1005137C]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-018h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10013DC0
;
;* Jump:
; 10013DD2(C) 
;
l10013DEB: mov eax, dword ptr [g1005137C]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [g1005137C], edx
           jmp l10013E27
;
;* Jump:
; 10013D9A(C) 
;
l10013E0A: mov eax, dword ptr [g10051388]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [g1005137C], ecx
;
;* Jump:
; 10013E08(U) 
;
l10013E27: mov edx, dword ptr [g10051380]
           mov eax, dword ptr [g1005137C]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [g10051380]
           add edx, 000000001h
           mov dword ptr [g10051380], edx
;
;* Jump:
; 10013D7E(U) 
;
l10013E47: mov eax, dword ptr [g10051380]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+014h], eax
;
;* Jump:
; 10013D19(U) 
;
l10013E55: jmp near ptr l10013F90
;
;* Jump:
; 10013CBE(C) 
;
l10013E5A: push 000000300h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10013E85
           mov ecx, 0000000C0h
           mov esi, dword ptr [ebp+014h]
           mov edi, dword ptr [ebp-00Ch]
           rep movsd
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-040h], edx
           jmp l10013E8C
;
;* Jump:
; 10013E6E(C) 
;
l10013E85: mov dword ptr [ebp-040h], 000000000h
;
;* Jump:
; 10013E83(U) 
;
l10013E8C: mov eax, dword ptr [g10051388]
           cmp eax, dword ptr [g10051380]
           jbe l10013EBF
           mov ecx, dword ptr [g10051380]
           mov edx, dword ptr [g1005137C]
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [g10051380]
           add ecx, 000000001h
           mov dword ptr [g10051380], ecx
           jmp near ptr l10013F86
;
;* Jump:
; 10013E97(C) 
;
l10013EBF: mov edx, dword ptr [g10051388]
           add edx, dword ptr [g10051384]
           mov dword ptr [g10051388], edx
           cmp dword ptr [g10051380], 000000000h
           je l10013F48
           mov eax, dword ptr [g10051388]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-02Ch], ecx
           mov dword ptr [ebp-030h], 000000000h
           jmp l10013F06
;
;* Jump:
; 10013F26(U) 
;
l10013EFD: mov edx, dword ptr [ebp-030h]
           add edx, 000000001h
           mov dword ptr [ebp-030h], edx
;
;* Jump:
; 10013EFB(U) 
;
l10013F06: mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [g10051380]
           jnb l10013F28
           mov ecx, dword ptr [g1005137C]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-02Ch]
           mov esi, dword ptr [ebp-030h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10013EFD
;
;* Jump:
; 10013F0F(C) 
;
l10013F28: mov edx, dword ptr [g1005137C]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-038h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [g1005137C], ecx
           jmp l10013F65
;
;* Jump:
; 10013ED8(C) 
;
l10013F48: mov edx, dword ptr [g10051388]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-03Ch], eax
           mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [g1005137C], eax
;
;* Jump:
; 10013F46(U) 
;
l10013F65: mov ecx, dword ptr [g10051380]
           mov edx, dword ptr [g1005137C]
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [edx+ecx*04h], eax
           mov ecx, dword ptr [g10051380]
           add ecx, 000000001h
           mov dword ptr [g10051380], ecx
;
;* Jump:
; 10013EBA(U) 
;
l10013F86: mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+014h], 000000000h
;
;* Jump:
; 10013E55(U) 
;
l10013F90: jmp l10013F9C
;
;* Jump:
; 10013CB1(C) 
;
l10013F92: mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+014h], 0FFFFFFFFh
;
;* Jump:
; 10013F90(U) 
;
l10013F9C: mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00Ch], 000000000h
           mov eax, dword ptr [ebp-044h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l10013C7A ENDP
;
;* Jump:
; 100015F5(U) 
;
l10013FB1 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call [__imp_??0B_NamedObj@@QAE@ABVB_Name@@@Z]; [BBLibc.??0B_NamedObj@@QAE@ABVB_Name@@@Z].
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], offset g10037278
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+00Ch], 000000001h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00010h
l10013FB1 ENDP
;
;* Jump:
; 100014B5(U) 
;
l10013FFD PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           cmp dword ptr [g10051388], 000000000h
           jne l10014011
           jmp l10014086
;
;* Jump:
; 1001400D(C) 
;
;* Control "OK", Dialog 006E
;
l10014011: mov eax, 000000001h
           test eax, eax
           je l10014053
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001402C
;
;* Jump:
; 10014051(U) 
;
l10014023: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10014021(U) 
;
l1001402C: mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [g10051380]
           jnb l10014053
           mov eax, dword ptr [g1005137C]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10014023
;
;* Jump:
; 10014018(C), 10014035(C) 
;
l10014053: mov ecx, dword ptr [g1005137C]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [g1005137C], 000000000h
           mov dword ptr [g10051380], 000000000h
           mov dword ptr [g10051388], 000000000h
;
;* Jump:
; 1001400F(U) 
;
l10014086: mov esp, ebp
           pop ebp
           ret
l10013FFD ENDP
;
;* Jump:
; 10001389(U) 
;
l1001408A PROC
           push ebp
           mov ebp, esp
           sub esp, 000000068h
           push esi
           mov dword ptr [ebp-068h], ecx
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+00008645Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-068h]
           call l1000179E
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10014550
           mov ecx, dword ptr [ebp-068h]
           cmp dword ptr [ecx+000084830h], 000000000h
           je l100140D3
           mov edx, dword ptr [ebp-068h]
           cmp dword ptr [edx+000084844h], 000000000h
           jne l100140F1
;
;* Jump:
; 100140C5(C) 
;
l100140D3: cmp dword ptr [g100517E0], 000000000h
           je l100140F1
           mov eax, dword ptr [ebp-068h]
           cmp dword ptr [eax+0000847ECh], 000000000h
           jne l100140F1
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+004h], 000000001h
           je l100140FE
;
;* Jump:
; 100140D1(C), 100140DA(C), 100140E6(C) 
;
l100140F1: mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+004h], 000000003h
           jne l1001424F
;
;* Jump:
; 100140EF(C) 
;
l100140FE: push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1001413A
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+00008645Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10001186
           mov dword ptr [ebp-02Ch], eax
           jmp l10014141
;
;* Jump:
; 1001410F(C) 
;
l1001413A: mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 10014138(U) 
;
l10014141: mov ecx, dword ptr [ebp-068h]
           add ecx, 000086444h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l10014181
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l1001424A
;
;* Jump:
; 10014159(C) 
;
l10014181: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-028h]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+008h], 000000000h
           je l1001420B
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-018h], 000000000h
           jmp l100141C9
;
;* Jump:
; 100141E9(U) 
;
l100141C0: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100141BE(U) 
;
l100141C9: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+008h]
           jnb l100141EB
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-014h]
           mov esi, dword ptr [ebp-018h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l100141C0
;
;* Jump:
; 100141D2(C) 
;
l100141EB: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], ecx
           jmp l10014229
;
;* Jump:
; 1001419A(C) 
;
l1001420B: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 10014209(U) 
;
l10014229: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 1001417C(U) 
;
l1001424A: jmp near ptr l10014502
;
;* Jump:
; 100140F8(C) 
;
l1001424F: mov eax, dword ptr [ebp-068h]
           cmp dword ptr [eax+000084830h], 000000000h
           je l100143BB
           mov ecx, dword ptr [ebp-068h]
           cmp dword ptr [ecx+000084844h], 000000000h
           je l100143BB
           push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100142A6
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+00008645Ch]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call l100015F5
           mov dword ptr [ebp-048h], eax
           jmp l100142AD
;
;* Jump:
; 10014280(C) 
;
l100142A6: mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 100142A4(U) 
;
l100142AD: mov ecx, dword ptr [ebp-068h]
           add ecx, 000086444h
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+010h]
           cmp ecx, dword ptr [eax+008h]
           jbe l100142ED
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+008h], eax
           jmp near ptr l100143B6
;
;* Jump:
; 100142C5(C) 
;
l100142ED: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-044h]
           add eax, dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+010h], eax
           mov eax, dword ptr [ebp-044h]
           cmp dword ptr [eax+008h], 000000000h
           je l10014377
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], eax
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-030h], eax
           mov dword ptr [ebp-034h], 000000000h
           jmp l10014335
;
;* Jump:
; 10014355(U) 
;
l1001432C: mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 1001432A(U) 
;
l10014335: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-034h]
           cmp eax, dword ptr [edx+008h]
           jnb l10014357
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-030h]
           mov esi, dword ptr [ebp-034h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1001432C
;
;* Jump:
; 1001433E(C) 
;
l10014357: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [eax+004h], ecx
           jmp l10014395
;
;* Jump:
; 10014306(C) 
;
l10014377: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 10014375(U) 
;
l10014395: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+008h], ecx
;
;* Jump:
; 100142E8(U) 
;
l100143B6: jmp near ptr l10014502
;
;* Jump:
; 10014259(C), 10014269(C) 
;
l100143BB: push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           je l100143F2
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+00008645Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov ecx, dword ptr [ebp-010h]
           call l10001186
           mov dword ptr [ebp-064h], eax
           jmp l100143F9
;
;* Jump:
; 100143CC(C) 
;
l100143F2: mov dword ptr [ebp-064h], 000000000h
;
;* Jump:
; 100143F0(U) 
;
l100143F9: mov edx, dword ptr [ebp-068h]
           add edx, 000086444h
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l10014439
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-064h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-060h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10014502
;
;* Jump:
; 10014411(C) 
;
l10014439: mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-060h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-060h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-060h]
           cmp dword ptr [ecx+008h], 000000000h
           je l100144C3
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-054h], eax
           mov ecx, dword ptr [ebp-054h]
           mov dword ptr [ebp-04Ch], ecx
           mov dword ptr [ebp-050h], 000000000h
           jmp l10014481
;
;* Jump:
; 100144A1(U) 
;
l10014478: mov edx, dword ptr [ebp-050h]
           add edx, 000000001h
           mov dword ptr [ebp-050h], edx
;
;* Jump:
; 10014476(U) 
;
l10014481: mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-050h]
           cmp ecx, dword ptr [eax+008h]
           jnb l100144A3
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-050h]
           mov edx, dword ptr [ebp-04Ch]
           mov esi, dword ptr [ebp-050h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10014478
;
;* Jump:
; 1001448A(C) 
;
l100144A3: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-058h], edx
           mov eax, dword ptr [ebp-058h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+004h], edx
           jmp l100144E1
;
;* Jump:
; 10014452(C) 
;
l100144C3: mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-05Ch], eax
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [ebp-05Ch]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 100144C1(U) 
;
l100144E1: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-064h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-060h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1001424A(U), 100143B6(U), 10014434(U) 
;
l10014502: mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+00008645Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-068h]
           mov dword ptr [eax+00008645Ch], edx
           mov ecx, dword ptr [ebp-068h]
           cmp dword ptr [ecx+000084800h], 000000000h
           je l10014542
           mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+000084800h]
           push eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+00008644Ch]
           sub edx, 000000001h
           push edx
           mov ecx, dword ptr [ebp-068h]
           call l1000118B
;
;* Jump:
; 10014521(C) 
;
l10014542: mov eax, dword ptr [ebp-068h]
           mov eax, dword ptr [eax+00008644Ch]
           sub eax, 000000001h
           jmp l10014553
;
;* Jump:
; 100140B5(C) 
;
l10014550: or eax, 0FFFFFFFFh
;
;* Jump:
; 1001454E(U) 
;
l10014553: pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l1001408A ENDP
;
;* Jump:
; 1000179E(U) 
;
l1001455A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           sub edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           cmp dword ptr [ebp-00Ch], 000000004h
           ja l1001460D
           mov eax, dword ptr [ebp-00Ch]
           jmp [offset g1001462B+eax*04h]
l10014590: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l1000149C
           mov dword ptr [ebp-004h], eax
           jmp l10014622
l100145A9: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10001519
           mov dword ptr [ebp-004h], eax
           jmp l10014622
l100145C2: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10001532
           mov dword ptr [ebp-004h], eax
           jmp l10014622
l100145DB: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l100014B0
           mov dword ptr [ebp-004h], eax
           jmp l10014622
l100145F4: mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l1000167C
           mov dword ptr [ebp-004h], eax
           jmp l10014622
;
;* Jump:
; 10014580(C) 
;
;* String: "Error B_OpenGLRasterDevice::Load() -> Unknown bitmap type.
;          "
;
l1001460D: push offset g1003A770
           mov ecx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push ecx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
;
;* Jump:
; 100145A7(U), 100145C0(U), 100145D9(U), 100145F2(U), 1001460B(U) 
;
l10014622: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
;
g1001462B  dd l10014590
           dd l100145A9
           dd l100145C2
           dd l100145DB
           dd l100145F4
l1001455A ENDP
;
;* Jump:
; 10001230(U) 
;
l1001463F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+0000847ECh], 000000000h
           je l100146BF
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+000084838h], 000000000h
           je l1001469A
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000008191h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000001401h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           push 000000000h
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
           jmp l100146BD
;
;* Jump:
; 1001465C(C) 
;
l1001469A: mov ecx, dword ptr [ebp+018h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           push 000000DE1h
           call l10035DCE; [GLU32.gluBuild2DMipmaps].
;
;* Jump:
; 10014698(U) 
;
l100146BD: jmp l100146E7
;
;* Jump:
; 10014650(C) 
;
l100146BF: mov eax, dword ptr [ebp+018h]
           push eax
           push 000001401h
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
;
;* Jump:
; 100146BD(U) 
;
l100146E7: mov esp, ebp
           pop ebp
           ret 00014h
l1001463F ENDP
;
;* Jump:
; 1000149C(U) 
;
l100146ED PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           push esi
           push edi
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000002901h
           push 000002802h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 000002901h
           push 000002803h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+000084814h]
           push edx
           push 000002800h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+000084810h]
           push ecx
           push 000002801h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+0000847F4h], 000000000h
           je l1001478B
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+000084818h]
           push ecx
           push 0000084FEh
           push 000000DE1h
           call [__imp_glTexParameterf]; [OPENGL32.glTexParameterf].
;
;* Jump:
; 1001476F(C) 
;
l1001478B: mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+000084830h], 000000000h
           jne l100148CE
           mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+000084844h], 000000000h
           jne l100148CE
           cmp dword ptr [g100517E0], 000000000h
           je l100148CE
           mov ecx, dword ptr [ebp-02Ch]
           cmp dword ptr [ecx+0000847ECh], 000000000h
           jne l100148CE
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+000084860h], 000000000h
           jne l100148CE
           mov byte ptr [ebp-004h], 000h
           mov ecx, 0000000C0h
           mov eax, dword ptr [ebp+008h]
           mov edi, dword ptr [eax+014h]
           mov esi, offset g10051078
           xor edx, edx
           rep cmpsd
           jne l100147FB
           cmp dword ptr [g10051694], 000000000h
           jne l1001481E
;
;* Jump:
; 100147F0(C) 
;
l100147FB: mov eax, dword ptr [g10051694]
           add eax, 000000001h
           mov dword ptr [g10051694], eax
           mov ecx, dword ptr [ebp+008h]
           mov esi, dword ptr [ecx+014h]
           mov ecx, 0000000C0h
           mov edi, offset g10051078
           rep movsd
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-004h], 001h
;
;* Jump:
; 100147F9(C) 
;
l1001481E: mov edx, dword ptr [ebp-004h]
           and edx, 0000000FFh
           test edx, edx
           je l10014872
           mov ecx, dword ptr [ebp-02Ch]
           call l10001267
           test eax, eax
           jne l10014872
           mov dword ptr [ebp-008h], 000000000h
           jmp l10014849
;
;* Jump:
; 10014870(U) 
;
l10014840: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001483E(U) 
;
l10014849: cmp dword ptr [ebp-008h], 000000300h
           jnb l10014872
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx+offset g10051078]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-02Ch]
           mov dl, byte ptr [ecx+edx*04h+000086344h]
           mov byte ptr [eax+offset g10051390], dl
           jmp l10014840
;
;* Jump:
; 10014829(C), 10014835(C), 10014850(C) 
;
l10014872: push offset g10051390
           push 000001401h
           push 000001907h
           push 000000100h
           push 000001907h
           push 000000DE1h
           call [g100517E0]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000001401h
           push 000001900h
           push 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           push 0000080E5h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
           jmp near ptr l10014B55
;
;* Jump:
; 10014795(C), 100147A5(C), 100147B2(C), 100147C2(C), 100147D2(C) 
;
l100148CE: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           imul edx, edx, 000000003h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-02Ch]
           call l10001267
           test eax, eax
           je l100149CB
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10014921
;
;* Jump:
; 100149C1(U) 
;
l10014918: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 10014916(U) 
;
l10014921: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           cmp dword ptr [ebp-01Ch], ecx
           jnb l100149C6
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+014h]
           call [__imp_?GetRed@B_Pal@@QBEEI@Z]; [BBLibc.?GetRed@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           shl eax, 001h
           mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           call [__imp_?GetGreen@B_Pal@@QBEEI@Z]; [BBLibc.?GetGreen@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           shl eax, 001h
           mov ecx, dword ptr [ebp-00Ch]
           mov byte ptr [ecx], al
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-010h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-030h]
           push edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+014h]
           call [__imp_?GetBlue@B_Pal@@QBEEI@Z]; [BBLibc.?GetBlue@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           shl eax, 001h
           mov edx, dword ptr [ebp-00Ch]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
           jmp near ptr l10014918
;
;* Jump:
; 10014931(C) 
;
l100149C6: jmp near ptr l10014A9A
;
;* Jump:
; 10014909(C) 
;
l100149CB: mov dword ptr [ebp-020h], 000000000h
           jmp l100149DD
;
;* Jump:
; 10014A95(U) 
;
l100149D4: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 100149D2(U) 
;
l100149DD: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           cmp dword ptr [ebp-020h], ecx
           jnb l10014A9A
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+014h]
           call [__imp_?GetRed@B_Pal@@QBEEI@Z]; [BBLibc.?GetRed@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov al, byte ptr [ecx+eax*02h+000086344h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+014h]
           call [__imp_?GetGreen@B_Pal@@QBEEI@Z]; [BBLibc.?GetGreen@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov edx, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-02Ch]
           mov al, byte ptr [ecx+eax*02h+000086344h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-034h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           call [__imp_?GetBlue@B_Pal@@QBEEI@Z]; [BBLibc.?GetBlue@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov al, byte ptr [edx+eax*02h+000086344h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           jmp near ptr l100149D4
;
;* Jump:
; 100149C6(U), 100149ED(C) 
;
l10014A9A: push 040000000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 040000000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 040000000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov dword ptr [ebp-014h], 000000003h
           mov edx, dword ptr [ebp-02Ch]
           cmp dword ptr [edx+000084830h], 000000000h
           je l10014AF0
           mov eax, dword ptr [ebp-02Ch]
           cmp dword ptr [eax+000084844h], 000000000h
           je l10014AF0
           mov dword ptr [ebp-014h], 0000084EDh
;
;* Jump:
; 10014ADB(C), 10014AE7(C) 
;
l10014AF0: mov ecx, dword ptr [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           push 000001907h
           mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           call l10001230
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100148C9(U) 
;
;* Control "OK", Dialog 006E
;
l10014B55: mov eax, 000000001h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l100146ED ENDP
;
;* Jump:
; 10001519(U) 
;
l10014B62 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000002901h
           push 000002802h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 000002901h
           push 000002803h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+000084814h]
           push edx
           push 000002800h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+000084810h]
           push ecx
           push 000002801h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10014C4B
;
;* Jump:
; 10014CA6(U) 
;
l10014C42: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10014C40(U) 
;
l10014C4B: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           cmp dword ptr [ebp-010h], eax
           jnb l10014CA8
           mov ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx], 0FFh
           mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           mov byte ptr [eax], 0FFh
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov byte ptr [edx], 0FFh
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov al, byte ptr [edx]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp l10014C42
;
;* Jump:
; 10014C5B(C) 
;
l10014CA8: mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           push 000001908h
           push 000008058h
           mov ecx, dword ptr [ebp-01Ch]
           call l10001230
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10014B62 ENDP
;
;* Jump:
; 10001532(U) 
;
l10014CE9 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
;
;* String: "B_OpenGLRasterDevice::LoadBitmap8P8A() -> Bitmap type Not implemented.
;          "
;
           push offset g1003A7AC
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10014CE9 ENDP
;
;* Jump:
; 100014B0(U) 
;
l10014D0C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000002901h
           push 000002802h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 000002901h
           push 000002803h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+000084814h]
           push edx
           push 000002800h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+000084810h]
           push ecx
           push 000002801h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           imul ecx, dword ptr [eax+00Ch]
           imul ecx, ecx, 000000003h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [ebp-008h], edx
           mov ecx, dword ptr [ebp-024h]
           call l10001267
           test eax, eax
           jne l10014E13
;
;* String: "SunFlare"
;
           push offset g1003A7F4
           mov ecx, dword ptr [ebp+00Ch]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           jne l10014E13
;
;* String: "Glow"
;
           push offset g1003A800
           mov ecx, dword ptr [ebp+00Ch]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10014E5A
;
;* Jump:
; 10014DED(C), 10014DFF(C) 
;
l10014E13: mov dword ptr [ebp-014h], 000000000h
           jmp l10014E25
;
;* Jump:
; 10014E56(U) 
;
l10014E1C: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10014E1A(U) 
;
l10014E25: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           cmp dword ptr [ebp-014h], eax
           jnb l10014E58
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov al, byte ptr [edx]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp l10014E1C
;
;* Jump:
; 10014E38(C) 
;
l10014E58: jmp l10014EAB
;
;* Jump:
; 10014E11(C) 
;
l10014E5A: mov dword ptr [ebp-018h], 000000000h
           jmp l10014E6C
;
;* Jump:
; 10014EA9(U) 
;
l10014E63: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10014E61(U) 
;
l10014E6C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           cmp dword ptr [ebp-018h], eax
           jnb l10014EAB
           mov ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-024h]
           mov dl, byte ptr [ecx+edx+000086344h]
           mov byte ptr [eax], dl
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp l10014E63
;
;* Jump:
; 10014E58(U), 10014E7F(C) 
;
l10014EAB: mov dword ptr [ebp-00Ch], 000000003h
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+000084830h], 000000000h
           je l10014ED1
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+000084844h], 000000000h
           je l10014ED1
           mov dword ptr [ebp-00Ch], 0000084EDh
;
;* Jump:
; 10014EBC(C), 10014EC8(C) 
;
l10014ED1: mov ecx, dword ptr [ebp-010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           push edx
           push 000001907h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-024h]
           call l10001230
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10014D0C ENDP
;
;* Jump:
; 1000167C(U) 
;
l10014F11 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000002901h
           push 000002802h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 000002901h
           push 000002803h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+000084814h]
           push edx
           push 000002800h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+000084810h]
           push ecx
           push 000002801h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov dword ptr [ebp-004h], 000000004h
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+000084830h], 000000000h
           je l10014FDD
           mov eax, dword ptr [ebp-008h]
           cmp dword ptr [eax+000084844h], 000000000h
           je l10014FDD
           mov dword ptr [ebp-004h], 0000084EEh
;
;* Jump:
; 10014FC8(C), 10014FD4(C) 
;
l10014FDD: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           push eax
           push 000001908h
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l10001230
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10014F11 ENDP
;
;* Jump:
; 100011FE(U) 
;
l1001500E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000084810h]
           cmp ecx, dword ptr [ebp+008h]
           jne l1001502C
           xor eax, eax
           jmp near ptr l1001519A
;
;* Jump:
; 10015023(C) 
;
l1001502C: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000002701h
           jg l10015068
           cmp dword ptr [ebp-008h], 000002701h
           je l10015108
           cmp dword ptr [ebp-008h], 000002600h
           je l10015087
           cmp dword ptr [ebp-008h], 000002601h
           je l100150B3
           cmp dword ptr [ebp-008h], 000002700h
           je l100150DF
           jmp near ptr l10015183
;
;* Jump:
; 10015039(C) 
;
l10015068: cmp dword ptr [ebp-008h], 000002702h
           je l10015131
           cmp dword ptr [ebp-008h], 000002703h
           je l1001515A
           jmp near ptr l10015183
;
;* Jump:
; 1001504F(C) 
;
l10015087: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000847ECh], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002600h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002600h
           jmp near ptr l10015187
;
;* Jump:
; 10015058(C) 
;
l100150B3: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000847ECh], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002601h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002601h
           jmp near ptr l10015187
;
;* Jump:
; 10015061(C) 
;
l100150DF: mov eax, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+0000847ECh], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002700h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002601h
           jmp l10015187
;
;* Jump:
; 10015042(C) 
;
l10015108: mov eax, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+0000847ECh], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002701h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002601h
           jmp l10015187
;
;* Jump:
; 1001506F(C) 
;
l10015131: mov eax, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+0000847ECh], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002702h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002601h
           jmp l10015187
;
;* Jump:
; 1001507C(C) 
;
l1001515A: mov eax, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+0000847ECh], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000084810h], 000002703h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+000084814h], 000002601h
           jmp l10015187
;
;* Jump:
; 10015063(U), 10015082(U) 
;
l10015183: xor eax, eax
           jmp l1001519A
;
;* Jump:
; 100150AE(U), 100150DA(U), 10015106(U), 1001512F(U), 10015158(U), 
; 10015181(U) 
;
l10015187: mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000088h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
;
;* Jump:
; 10015027(U), 10015185(U) 
;
l1001519A: mov esp, ebp
           pop ebp
           ret 00004h
l1001500E ENDP
;
;* Jump:
; 10001316(U) 
;
l100151A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp+008h], 0FFFFFFFFh
           jne l100151B1
           jmp l10015229
;
;* Jump:
; 100151AD(C) 
;
l100151B1: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+0000860A8h]
           jne l100151C1
           jmp l10015229
;
;* Jump:
; 100151BD(C) 
;
l100151C1: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           cmp eax, dword ptr [edx+00008644Ch]
           jb l100151D1
           jmp l10015229
;
;* Jump:
; 100151CD(C) 
;
l100151D1: mov ecx, dword ptr [ebp+008h]
           push ecx
           call [g100517DC]
           add esp, 000000004h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+0000860A8h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+0000864A0h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+0000864A0h], eax
;
;* Jump:
; 100151AF(U), 100151BF(U), 100151CF(U) 
;
l10015229: mov esp, ebp
           pop ebp
           ret 00004h
l100151A0 ENDP
;
;* Jump:
; 10001749(U) 
;
l1001522F PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+00008644Ch]
           mov esp, ebp
           pop ebp
           ret
l1001522F ENDP
;
;* Jump:
; 100010DC(U) 
;
l10015243 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jb l10015261
           xor eax, eax
           jmp near ptr l100152E3
;
;* Jump:
; 10015258(C) 
;
l10015261: mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           and eax, 0000000FFh
           cmp eax, 000000001h
           je l1001528E
           xor eax, eax
           jmp l100152E3
;
;* Jump:
; 10015288(C) 
;
l1001528E: mov edx, dword ptr [ebp-010h]
           cmp dword ptr [edx+000084830h], 000000000h
           je l100152E1
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           push edx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           lea eax, [ebp-004h]
           push eax
           push 0000086A1h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           cmp dword ptr [ebp-004h], 000000001h
           jne l100152E1
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l100152E3
;
;* Jump:
; 10015298(C), 100152D8(C) 
;
l100152E1: xor eax, eax
;
;* Jump:
; 1001525C(U), 1001528C(U), 100152DF(U) 
;
l100152E3: mov esp, ebp
           pop ebp
           ret 00004h
l10015243 ENDP
;
;* Jump:
; 100012B2(U) 
;
l100152E9 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jb l10015307
           xor eax, eax
           jmp near ptr l1001544B
;
;* Jump:
; 100152FE(C) 
;
l10015307: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           and eax, 0000000FFh
           cmp eax, 000000001h
           je l10015337
           xor eax, eax
           jmp near ptr l1001544B
;
;* Jump:
; 1001532E(C) 
;
l10015337: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov edx, dword ptr [ebp+00Ch]
           push edx
           push 000001000h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           mov eax, dword ptr [ebp+010h]
           push eax
           push 000001001h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-020h]
           call l100010DC
           test eax, eax
           je l10015401
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           cmp dword ptr [eax+018h], 000000004h
           je l100153D4
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           cmp dword ptr [edx+018h], 000000001h
           jne l100153DD
;
;* Jump:
; 100153B7(C) 
;
l100153D4: mov dword ptr [ebp-004h], 000000003h
           jmp l100153FF
;
;* Jump:
; 100153D2(C) 
;
l100153DD: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+018h], 000000005h
           jne l100153FF
           mov dword ptr [ebp-004h], 000000004h
;
;* Jump:
; 100153DB(U), 100153F6(C) 
;
l100153FF: jmp l1001543B
;
;* Jump:
; 1001539C(C) 
;
l10015401: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax+014h], 0FFFFFFFFh
           je l10015425
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-004h], 000000001h
           jmp l1001543B
;
;* Jump:
; 1001541A(C) 
;
l10015425: lea ecx, [ebp-004h]
           push ecx
           push 000001003h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
;
;* Jump:
; 100153FF(U), 10015423(U) 
;
l1001543B: mov edx, dword ptr [ebp-004h]
           shl edx, 003h
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [eax], edx
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
;
;* Jump:
; 10015302(U), 10015332(U) 
;
l1001544B: mov esp, ebp
           pop ebp
           ret 00010h
l100152E9 ENDP
;
;* Jump:
; 10001550(U) 
;
l10015451 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jb l1001546F
           xor eax, eax
           jmp near ptr l100155AE
;
;* Jump:
; 10015466(C) 
;
l1001546F: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           and eax, 0000000FFh
           cmp eax, 000000001h
           je l1001549F
           xor eax, eax
           jmp near ptr l100155AE
;
;* Jump:
; 10015496(C) 
;
l1001549F: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           lea edx, [ebp-004h]
           push edx
           push 000001000h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           lea eax, [ebp-00Ch]
           push eax
           push 000001001h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           mov dword ptr [ebp-008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-028h]
           call l100010DC
           test eax, eax
           je l10015569
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+018h], 000000004h
           je l1001553C
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           cmp dword ptr [edx+018h], 000000001h
           jne l10015545
;
;* Jump:
; 1001551F(C) 
;
l1001553C: mov dword ptr [ebp-008h], 000000003h
           jmp l10015567
;
;* Jump:
; 1001553A(C) 
;
l10015545: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+018h], 000000005h
           jne l10015567
           mov dword ptr [ebp-008h], 000000004h
;
;* Jump:
; 10015543(U), 1001555E(C) 
;
l10015567: jmp l100155A3
;
;* Jump:
; 10015504(C) 
;
l10015569: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+014h], 0FFFFFFFFh
           je l1001558D
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           jmp l100155A3
;
;* Jump:
; 10015582(C) 
;
l1001558D: lea ecx, [ebp-008h]
           push ecx
           push 000001003h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
;
;* Jump:
; 10015567(U), 1001558B(U) 
;
l100155A3: mov eax, dword ptr [ebp-004h]
           imul eax, dword ptr [ebp-00Ch]
           imul eax, dword ptr [ebp-008h]
;
;* Jump:
; 1001546A(U), 1001549A(U) 
;
l100155AE: mov esp, ebp
           pop ebp
           ret 00004h
l10015451 ENDP
;
;* Jump:
; 100012EE(U) 
;
l100155B4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jb l100155D2
           xor eax, eax
           jmp near ptr l100157EA
;
;* Jump:
; 100155C9(C) 
;
l100155D2: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           and eax, 0000000FFh
           cmp eax, 000000001h
           je l10015602
           xor eax, eax
           jmp near ptr l100157EA
;
;* Jump:
; 100155F9(C) 
;
l10015602: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000D05h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+014h], 0FFFFFFFFh
           je l10015673
           mov ecx, dword ptr [ebp+010h]
           push ecx
           push 000001401h
           push 000001900h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l100157EA
;
;* Jump:
; 1001564C(C) 
;
l10015673: mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+000084830h], 000000000h
           je l10015745
           lea eax, [ebp-008h]
           push eax
           push 0000086A1h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           cmp dword ptr [ebp-008h], 000000001h
           jne l10015745
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+018h], 000000004h
           je l100156D9
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           cmp dword ptr [ecx+018h], 000000001h
           jne l100156FE
;
;* Jump:
; 100156BC(C) 
;
l100156D9: mov edx, dword ptr [ebp+010h]
           push edx
           push 000001401h
           push 000001907h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l100157EA
;
;* Jump:
; 100156D7(C) 
;
l100156FE: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+018h], 000000005h
           jne l1001573E
           mov edx, dword ptr [ebp+010h]
           push edx
           push 000001401h
           push 000001908h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l100157EA
;
;* Jump:
; 10015717(C) 
;
l1001573E: xor eax, eax
           jmp near ptr l100157EA
;
;* Jump:
; 1001567D(C), 1001569D(C) 
;
l10015745: lea eax, [ebp-004h]
           push eax
           push 000001003h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-028h], ecx
           cmp dword ptr [ebp-028h], 000000001h
           je l10015775
           cmp dword ptr [ebp-028h], 000000003h
           je l10015792
           cmp dword ptr [ebp-028h], 000000004h
           je l100157AF
           jmp l100157CC
;
;* Jump:
; 10015765(C) 
;
l10015775: mov edx, dword ptr [ebp+010h]
           push edx
           push 000001401h
           push 000001906h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
           jmp l100157E5
;
;* Jump:
; 1001576B(C) 
;
l10015792: mov eax, dword ptr [ebp+010h]
           push eax
           push 000001401h
           push 000001907h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
           jmp l100157E5
;
;* Jump:
; 10015771(C) 
;
l100157AF: mov ecx, dword ptr [ebp+010h]
           push ecx
           push 000001401h
           push 000001908h
           push 000000000h
           push 000000DE1h
           call [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
           jmp l100157E5
;
;* Jump:
; 10015773(U) 
;
;* String: "B_OpenGLRasterDevice::GetTextureBits() -> Error: unsupported number 
;          of components.
;          "
;
l100157CC: push offset g1003A808
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp l100157EA
;
;* Jump:
; 10015790(U), 100157AD(U), 100157CA(U) 
;
;* Control "OK", Dialog 006E
;
l100157E5: mov eax, 000000001h
;
;* Jump:
; 100155CD(U), 100155FD(U), 1001566E(U), 100156F9(U), 10015739(U), 
; 10015740(U), 100157E3(U) 
;
l100157EA: mov esp, ebp
           pop ebp
           ret 0000Ch
l100155B4 ENDP
;
;* Jump:
; 10001843(U) 
;
l100157F0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov dword ptr [ebp-038h], ecx
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jb l1001580E
           xor eax, eax
           jmp near ptr l10015B2C
;
;* Jump:
; 10015805(C) 
;
l1001580E: mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           call [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           and eax, 0000000FFh
           cmp eax, 000000001h
           je l1001583E
           xor eax, eax
           jmp near ptr l10015B2C
;
;* Jump:
; 10015835(C) 
;
l1001583E: mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [g1003A76C]
           jne l10015970
           mov eax, dword ptr [ebp-038h]
           cmp dword ptr [eax+000084844h], 000000000h
           je l10015970
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-038h]
           call l100010DC
           test eax, eax
           je l10015970
           mov edx, dword ptr [ebp+008h]
           push edx
;
;* String: "Changing procedural compresed texture %d.
;          "
;
           push offset g1003A85C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-008h], eax
           lea ecx, [ebp-008h]
           push ecx
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-01Ch], edx
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           je l10015970
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+000084844h], 000000000h
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           lea ecx, [ebp-010h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           lea edx, [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-038h]
           call l1000179E
           lea ecx, [ebp-010h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, dword ptr [ebp-038h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000084844h], 000000001h
           mov edx, dword ptr [ebp-004h]
           push edx
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 10015847(C), 10015857(C), 1001586B(C), 100158E9(C) 
;
l10015970: mov eax, dword ptr [ebp+008h]
           mov dword ptr [g1003A76C], eax
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ebp-03Ch], ecx
           cmp dword ptr [ebp-03Ch], 000000008h
           je l1001599D
           cmp dword ptr [ebp-03Ch], 000000018h
           je l10015A5A
           cmp dword ptr [ebp-03Ch], 000000020h
           je l10015AB4
           jmp near ptr l10015B0E
;
;* Jump:
; 10015982(C) 
;
l1001599D: cmp dword ptr [ebp+008h], 0FFFFFFFFh
           je l100159FD
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000CF5h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000001401h
           push 000001900h
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexSubImage2D]; [OPENGL32.glTexSubImage2D].
           jmp l10015A55
;
;* Jump:
; 100159A1(C) 
;
l100159FD: mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000CF5h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000001401h
           push 000001907h
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexSubImage2D]; [OPENGL32.glTexSubImage2D].
;
;* Jump:
; 100159FB(U) 
;
l10015A55: jmp near ptr l10015B27
;
;* Jump:
; 10015988(C) 
;
l10015A5A: mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000CF5h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000001401h
           push 000001907h
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexSubImage2D]; [OPENGL32.glTexSubImage2D].
           jmp l10015B27
;
;* Jump:
; 10015992(C) 
;
l10015AB4: mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000CF5h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           mov edx, dword ptr [ebp+018h]
           push edx
           push 000001401h
           push 000001908h
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexSubImage2D]; [OPENGL32.glTexSubImage2D].
           jmp l10015B27
;
;* Jump:
; 10015998(U) 
;
;* String: "B_OpenGLRasterDevice::SetTextureBits() -> Error: unsupported number 
;          of components.
;          "
;
l10015B0E: push offset g1003A888
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp l10015B2C
;
;* Jump:
; 10015A55(U), 10015AB2(U), 10015B0C(U) 
;
;* Control "OK", Dialog 006E
;
l10015B27: mov eax, 000000001h
;
;* Jump:
; 10015809(U), 10015839(U), 10015B25(U) 
;
l10015B2C: mov esp, ebp
           pop ebp
           ret 00014h
l100157F0 ENDP
;
;* Jump:
; 1000173F(U) 
;
l10015B32 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000038h
           push esi
           mov dword ptr [ebp-034h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10015B4E
;
;* Jump:
; 10015D45(U) 
;
l10015B45: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10015B43(U) 
;
l10015B4E: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+00008644Ch]
           jnb l10015D4A
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ecx+010h]
           jne l10015D45
           mov eax, dword ptr [ebp-034h]
           add eax, 000086444h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jb l10015B9C
           jmp near ptr l10015D33
;
;* Jump:
; 10015B95(C) 
;
;* Control "OK", Dialog 006E
;
l10015B9C: mov eax, 000000001h
           test eax, eax
           je l10015BD8
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-01Ch], edx
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10015BD1
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov eax, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-01Ch]
           call [edx]
           mov dword ptr [ebp-038h], eax
           jmp l10015BD8
;
;* Jump:
; 10015BBE(C) 
;
l10015BD1: mov dword ptr [ebp-038h], 000000000h
;
;* Jump:
; 10015BA3(C), 10015BCF(U) 
;
l10015BD8: mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+008h], 000000001h
           jne l10015C19
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+010h], 000000000h
           jmp near ptr l10015D33
;
;* Jump:
; 10015BDF(C) 
;
l10015C19: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00Ch]
           lea edx, [edx+ecx-001h]
           mov eax, dword ptr [ebp-030h]
           cmp dword ptr [eax+010h], edx
           jb l10015CEA
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ecx+010h]
           sub eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10015C74
;
;* Jump:
; 10015C91(U) 
;
l10015C6B: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10015C69(U) 
;
l10015C74: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp-004h]
           jnb l10015C93
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l10015C6B
;
;* Jump:
; 10015C7A(C) 
;
l10015C93: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
           jmp l10015CA7
;
;* Jump:
; 10015CC8(U) 
;
l10015C9E: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10015C9C(U) 
;
l10015CA7: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+008h]
           jnb l10015CCA
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-010h]
           mov esi, dword ptr [ebp-014h]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h-004h], edx
           jmp l10015C9E
;
;* Jump:
; 10015CB0(C) 
;
l10015CCA: mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [eax+004h], ecx
           jmp l10015D24
;
;* Jump:
; 10015C2F(C) 
;
l10015CEA: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
           jmp l10015CFE
;
;* Jump:
; 10015D22(U) 
;
l10015CF5: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10015CF3(U) 
;
l10015CFE: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10015D24
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-018h]
           mov esi, dword ptr [ebp-018h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h-004h], ecx
           jmp l10015CF5
;
;* Jump:
; 10015CE8(U), 10015D07(C) 
;
l10015D24: mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+008h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10015B97(U), 10015C14(U) 
;
l10015D33: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], edx
           lea eax, [ebp-008h]
           push eax
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
;
;* Jump:
; 10015B7B(C) 
;
l10015D45: jmp near ptr l10015B45
;
;* Jump:
; 10015B5A(C) 
;
l10015D4A: push offset g1003A8DC
           mov ecx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push ecx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+010h], 000000000h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10015B32 ENDP
;
;* Jump:
; 100017DF(U) 
;
l10015D70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+00008644Ch]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           jne l10015DB5
           push 000000341h
;
;* String: "C:\Code\Raster\rOpenGL3\GLTexManager.cpp"
;
           push offset g1003A920
;
;* String: "array"
;
           push offset g1003A94C
           call [__imp__assert]; [MSVCRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 10015D9B(C) 
;
l10015DB5: mov dword ptr [ebp-004h], 000000000h
           jmp l10015DC7
;
;* Jump:
; 10015DF6(U) 
;
l10015DBE: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10015DBC(U) 
;
l10015DC7: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00008644Ch]
           jnb l10015DF8
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-024h]
           mov ecx, dword ptr [ecx+010h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10015DBE
;
;* Jump:
; 10015DD3(C) 
;
l10015DF8: mov edx, dword ptr [ebp-008h]
           push edx
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+00008644Ch]
           push ecx
           call [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
           mov dword ptr [ebp-004h], 000000000h
           jmp l10015E1E
;
;* Jump:
; 10015EA0(U) 
;
l10015E15: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10015E13(U) 
;
l10015E1E: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jnb l10015EA5
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-010h], edx
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l10015EA0
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           lea ecx, [ebp-01Ch]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           lea edx, [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-028h]
           call l1000179E
           lea ecx, [ebp-01Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 10015E5B(C) 
;
l10015EA0: jmp near ptr l10015E15
;
;* Jump:
; 10015E2A(C) 
;
l10015EA5: mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-020h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov esp, ebp
           pop ebp
           ret
l10015D70 ENDP
;
;* Jump:
; 10001645(U) 
;
l10015EBB PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 000000001h
           je l10015EE9
           cmp dword ptr [ebp-020h], 000000002h
           je l10015F79
           cmp dword ptr [ebp-020h], 000000003h
           je l10015FC8
           jmp near ptr l10016029
;
;* Jump:
; 10015ECE(C) 
;
l10015EE9: mov ecx, dword ptr [ebp+00Ch]
           xor edx, edx
           mov dl, byte ptr [ecx]
           mov eax, dword ptr [ebp+010h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov eax, dword ptr [ebp+014h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           add edx, ecx
           mov dword ptr [ebp-024h], edx
           fild dword ptr [ebp-024h]
           fdiv dword ptr [g10037288]
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-004h]
           fcomp dword ptr [g10037284]
           fnstsw ax
           test ah, 041h
           jne l10015F27
           mov byte ptr [ebp-008h], 0E6h
           jmp l10015F57
;
;* Jump:
; 10015F1F(C) 
;
l10015F27: fld dword ptr [ebp-004h]
           fcomp dword ptr [g10037280]
           fnstsw ax
           test ah, 041h
           jne l10015F3D
           mov byte ptr [ebp-008h], 0E6h
           jmp l10015F57
;
;* Jump:
; 10015F35(C) 
;
l10015F3D: fld dword ptr [ebp-004h]
           fcomp dword ptr [g10037070]
           fnstsw ax
           test ah, 041h
           jne l10015F53
           mov byte ptr [ebp-008h], 064h
           jmp l10015F57
;
;* Jump:
; 10015F4B(C) 
;
l10015F53: mov byte ptr [ebp-008h], 000h
;
;* Jump:
; 10015F25(U), 10015F3B(U), 10015F51(U) 
;
l10015F57: mov edx, dword ptr [ebp+014h]
           mov al, byte ptr [ebp-008h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp+010h]
           mov dl, byte ptr [ebp-008h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp+00Ch]
           mov cl, byte ptr [ebp-008h]
           mov byte ptr [eax], cl
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l1001602B
;
;* Jump:
; 10015ED4(C) 
;
l10015F79: mov edx, dword ptr [ebp+00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov ecx, dword ptr [ebp+010h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov ecx, dword ptr [ebp+014h]
           xor edx, edx
           mov dl, byte ptr [ecx]
           add eax, edx
           mov dword ptr [ebp-028h], eax
           fild dword ptr [ebp-028h]
           fdiv dword ptr [g10037288]
           fst dword ptr [ebp-00Ch]
           call l10035E80; [MSVCRT._ftol].
           mov byte ptr [ebp-010h], al
           mov eax, dword ptr [ebp+014h]
           mov cl, byte ptr [ebp-010h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp+010h]
           mov al, byte ptr [ebp-010h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp+00Ch]
           mov dl, byte ptr [ebp-010h]
           mov byte ptr [ecx], dl
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1001602B
;
;* Jump:
; 10015EDE(C) 
;
l10015FC8: mov eax, dword ptr [ebp+00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp+010h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov edx, dword ptr [ebp+014h]
           xor eax, eax
           mov al, byte ptr [edx]
           add ecx, eax
           mov dword ptr [ebp-02Ch], ecx
           fild dword ptr [ebp-02Ch]
           fdiv dword ptr [g10037288]
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-014h]
           fcomp dword ptr [g1003727C]
           fnstsw ax
           test ah, 041h
           jne l10016006
           mov byte ptr [ebp-018h], 0E6h
           jmp l1001600A
;
;* Jump:
; 10015FFE(C) 
;
l10016006: mov byte ptr [ebp-018h], 000h
;
;* Jump:
; 10016004(U) 
;
l1001600A: mov ecx, dword ptr [ebp+014h]
           mov dl, byte ptr [ebp-018h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp+010h]
           mov cl, byte ptr [ebp-018h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp+00Ch]
           mov al, byte ptr [ebp-018h]
           mov byte ptr [edx], al
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l1001602B
;
;* Jump:
; 10015EE4(U) 
;
l10016029: xor eax, eax
;
;* Jump:
; 10015F74(U), 10015FC6(U), 10016027(U) 
;
l1001602B: mov esp, ebp
           pop ebp
           ret 00010h
l10015EBB ENDP
;
;* Jump:
; 1000118B(U) 
;
l10016031 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000001h
           je l1001604E
           cmp dword ptr [ebp-008h], 000000002h
           je l1001605C
           jmp l1001606A
;
;* Jump:
; 10016044(C) 
;
l1001604E: mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-004h]
           call l100010E1
           jmp l1001606C
;
;* Jump:
; 1001604A(C) 
;
l1001605C: mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-004h]
           call l1000109B
           jmp l1001606C
;
;* Jump:
; 1001604C(U) 
;
l1001606A: xor eax, eax
;
;* Jump:
; 1001605A(U), 10016068(U) 
;
l1001606C: mov esp, ebp
           pop ebp
           ret 00008h
l10016031 ENDP
;
;* Jump:
; 100010E1(U) 
;
l10016072 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000035Ch
           mov dword ptr [ebp-000000358h], ecx
           mov eax, dword ptr [ebp-000000358h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+014h], 0FFFFFFFFh
           je l100161DA
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 1001619B(U) 
;
l100160AA: cmp dword ptr [ebp-008h], 000000300h
           jnb l100161A0
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [g1005137C]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-000000318h], edx
           mov eax, dword ptr [ebp-000000318h]
           add eax, dword ptr [ebp-008h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-000000358h]
           mov al, byte ptr [edx+ecx*04h+000086344h]
           mov byte ptr [ebp-000000310h], al
           mov ecx, dword ptr [ebp-000000318h]
           add ecx, dword ptr [ebp-008h]
           xor edx, edx
           mov dl, byte ptr [ecx+001h]
           mov eax, dword ptr [ebp-000000358h]
           mov cl, byte ptr [eax+edx*04h+000086344h]
           mov byte ptr [ebp-000000314h], cl
           mov edx, dword ptr [ebp-000000318h]
           add edx, dword ptr [ebp-008h]
           xor eax, eax
           mov al, byte ptr [edx+002h]
           mov ecx, dword ptr [ebp-000000358h]
           mov dl, byte ptr [ecx+eax*04h+000086344h]
           mov byte ptr [ebp-00000030Ch], dl
           lea eax, [ebp-00000030Ch]
           push eax
           lea ecx, [ebp-000000314h]
           push ecx
           lea edx, [ebp-000000310h]
           push edx
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-000000358h]
           call l10001645
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [ebp-000000310h]
           mov byte ptr [ebp+eax-000000308h], cl
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [ebp-000000314h]
           mov byte ptr [ebp+eax-000000308h], cl
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov cl, byte ptr [ebp-00000030Ch]
           mov byte ptr [ebp+eax-000000308h], cl
           mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
           jmp near ptr l100160AA
;
;* Jump:
; 100160B1(C) 
;
l100161A0: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           lea edx, [ebp-000000308h]
           push edx
           push 000001401h
           push 000001907h
           push 000000100h
           push 000000000h
           push 000000DE1h
           call [g100517E4]
           jmp near ptr l10016514
;
;* Jump:
; 1001609D(C) 
;
l100161DA: lea eax, [ebp-000000320h]
           push eax
           lea ecx, [ebp-000000328h]
           push ecx
           lea edx, [ebp-000000324h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000358h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000358h]
           call [edx+054h]
           cmp dword ptr [ebp-000000320h], 000000008h
           je l10016216
           cmp dword ptr [ebp-000000320h], 000000020h
           jle l10016220
;
;* Jump:
; 1001620B(C) 
;
;* Control "OK", Dialog 006E
;
l10016216: mov eax, 000000001h
           jmp near ptr l10016519
;
;* Jump:
; 10016214(C) 
;
l10016220: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000358h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000358h]
           call [edx+058h]
           mov dword ptr [ebp-000000330h], eax
           mov eax, dword ptr [ebp-000000330h]
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000350h], eax
           mov ecx, dword ptr [ebp-000000350h]
           mov dword ptr [ebp-00000031Ch], ecx
           cmp dword ptr [ebp-00000031Ch], 000000000h
           jne l1001626C
           xor eax, eax
           jmp near ptr l10016519
;
;* Jump:
; 10016263(C) 
;
l1001626C: mov edx, dword ptr [ebp-00000031Ch]
           push edx
           mov eax, dword ptr [ebp-000000330h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-000000358h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000358h]
           call [eax+05Ch]
           mov ecx, dword ptr [ebp-000000320h]
           mov dword ptr [ebp-00000035Ch], ecx
           cmp dword ptr [ebp-00000035Ch], 000000018h
           je l100162B6
           cmp dword ptr [ebp-00000035Ch], 000000020h
           je l100163C9
           jmp near ptr l100164C4
;
;* Jump:
; 100162A2(C) 
;
l100162B6: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+018h], 000000001h
           jne l100162CB
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-000000334h], 000000001h
           jmp l100162D5
;
;* Jump:
; 100162BD(C) 
;
;* Control "Cancel", Dialog 006E
;
l100162CB: mov dword ptr [ebp-000000334h], 000000002h
;
;* Jump:
; 100162C9(U) 
;
l100162D5: mov dword ptr [ebp-00000032Ch], 000000000h
;
;* Jump:
; 100163BF(U) 
;
l100162DF: mov eax, dword ptr [ebp-00000032Ch]
           cmp eax, dword ptr [ebp-000000330h]
           jnb l100163C4
           mov ecx, dword ptr [ebp-00000031Ch]
           add ecx, dword ptr [ebp-00000032Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00000033Ch], dl
           mov eax, dword ptr [ebp-00000031Ch]
           add eax, dword ptr [ebp-00000032Ch]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000340h], cl
           mov edx, dword ptr [ebp-00000031Ch]
           add edx, dword ptr [ebp-00000032Ch]
           mov al, byte ptr [edx+002h]
           mov byte ptr [ebp-000000338h], al
           lea ecx, [ebp-000000338h]
           push ecx
           lea edx, [ebp-000000340h]
           push edx
           lea eax, [ebp-00000033Ch]
           push eax
           mov ecx, dword ptr [ebp-000000334h]
           push ecx
           mov ecx, dword ptr [ebp-000000358h]
           call l10001645
           mov edx, dword ptr [ebp-00000031Ch]
           add edx, dword ptr [ebp-00000032Ch]
           mov al, byte ptr [ebp-00000033Ch]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00000032Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000032Ch], ecx
           mov edx, dword ptr [ebp-00000031Ch]
           add edx, dword ptr [ebp-00000032Ch]
           mov al, byte ptr [ebp-000000340h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00000032Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000032Ch], ecx
           mov edx, dword ptr [ebp-00000031Ch]
           add edx, dword ptr [ebp-00000032Ch]
           mov al, byte ptr [ebp-000000338h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-00000032Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00000032Ch], ecx
           jmp near ptr l100162DF
;
;* Jump:
; 100162EB(C) 
;
l100163C4: jmp near ptr l100164C8
;
;* Jump:
; 100162AB(C) 
;
l100163C9: mov dword ptr [ebp-00000032Ch], 000000000h
;
;* Jump:
; 100164BD(U) 
;
l100163D3: mov edx, dword ptr [ebp-00000032Ch]
           cmp edx, dword ptr [ebp-000000330h]
           jnb l100164C2
           mov eax, dword ptr [ebp-00000031Ch]
           add eax, dword ptr [ebp-00000032Ch]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000348h], cl
           mov edx, dword ptr [ebp-00000031Ch]
           add edx, dword ptr [ebp-00000032Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000034Ch], al
           mov ecx, dword ptr [ebp-00000031Ch]
           add ecx, dword ptr [ebp-00000032Ch]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-000000344h], dl
           lea eax, [ebp-000000344h]
           push eax
           lea ecx, [ebp-00000034Ch]
           push ecx
           lea edx, [ebp-000000348h]
           push edx
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           mov ecx, dword ptr [ebp-000000358h]
           call l10001645
           mov eax, dword ptr [ebp-00000031Ch]
           add eax, dword ptr [ebp-00000032Ch]
           mov cl, byte ptr [ebp-000000348h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-00000032Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000032Ch], edx
           mov eax, dword ptr [ebp-00000031Ch]
           add eax, dword ptr [ebp-00000032Ch]
           mov cl, byte ptr [ebp-00000034Ch]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-00000032Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000032Ch], edx
           mov eax, dword ptr [ebp-00000031Ch]
           add eax, dword ptr [ebp-00000032Ch]
           mov cl, byte ptr [ebp-000000344h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-00000032Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000032Ch], edx
           mov eax, dword ptr [ebp-00000032Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000032Ch], eax
           jmp near ptr l100163D3
;
;* Jump:
; 100163DF(C) 
;
l100164C2: jmp l100164C8
;
;* Jump:
; 100162B1(U) 
;
l100164C4: xor eax, eax
           jmp l10016519
;
;* Jump:
; 100163C4(U), 100164C2(U) 
;
l100164C8: mov ecx, dword ptr [ebp-00000031Ch]
           push ecx
           mov edx, dword ptr [ebp-000000320h]
           push edx
           mov eax, dword ptr [ebp-000000328h]
           push eax
           mov ecx, dword ptr [ebp-000000324h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-000000358h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-000000358h]
           call [edx+060h]
           mov eax, dword ptr [ebp-00000031Ch]
           mov dword ptr [ebp-000000354h], eax
           mov ecx, dword ptr [ebp-000000354h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100161D5(U) 
;
;* Control "OK", Dialog 006E
;
l10016514: mov eax, 000000001h
;
;* Jump:
; 1001621B(U), 10016267(U), 100164C6(U) 
;
l10016519: mov esp, ebp
           pop ebp
           ret 00004h
l10016072 ENDP
;
;* Jump:
; 1000109B(U) 
;
l1001651F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000140h
           mov dword ptr [ebp-000000120h], ecx
           mov eax, dword ptr [ebp-000000120h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+014h], 0FFFFFFFFh
           je l10016AB1
           lea edx, [ebp-014h]
           push edx
           lea eax, [ebp-024h]
           push eax
           lea ecx, [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-000000120h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-000000120h]
           call [edx+054h]
           mov eax, dword ptr [ebp-018h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov dword ptr [ebp-034h], eax
           mov eax, dword ptr [ebp-024h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov dword ptr [ebp-03Ch], eax
           mov eax, dword ptr [ebp-018h]
           imul eax, dword ptr [ebp-024h]
           imul eax, eax, 000000003h
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 000000000h
           jne l100165C2
           xor eax, eax
           jmp near ptr l100171E0
;
;* Jump:
; 100165B9(C) 
;
l100165C2: mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+008h]
           imul eax, dword ptr [edx+00Ch]
           imul eax, eax, 000000003h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000F0h], eax
           mov ecx, dword ptr [ebp-0000000F0h]
           mov dword ptr [ebp-020h], ecx
           cmp dword ptr [ebp-020h], 000000000h
           jne l100165F7
           xor eax, eax
           jmp near ptr l100171E0
;
;* Jump:
; 100165EE(C) 
;
l100165F7: mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-028h], 000000000h
           jmp l10016618
;
;* Jump:
; 100166DF(U) 
;
l1001660F: mov edx, dword ptr [ebp-028h]
           add edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 1001660D(U) 
;
l10016618: mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [eax+008h]
           imul edx, dword ptr [ecx+00Ch]
           cmp dword ptr [ebp-028h], edx
           jnb l100166E4
           mov eax, dword ptr [ebp-00Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           push ecx
           mov edx, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+014h]
           call [__imp_?GetRed@B_Pal@@QBEEI@Z]; [BBLibc.?GetRed@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-000000120h]
           mov al, byte ptr [edx+eax*02h+000086344h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           push eax
           mov ecx, dword ptr [ebp-010h]
           mov ecx, dword ptr [ecx+014h]
           call [__imp_?GetGreen@B_Pal@@QBEEI@Z]; [BBLibc.?GetGreen@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov edx, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-000000120h]
           mov al, byte ptr [ecx+eax*02h+000086344h]
           mov byte ptr [edx], al
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           xor eax, eax
           mov al, byte ptr [edx]
           mov dword ptr [ebp-000000124h], eax
           mov ecx, dword ptr [ebp-000000124h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+014h]
           call [__imp_?GetBlue@B_Pal@@QBEEI@Z]; [BBLibc.?GetBlue@B_Pal@@QBEEI@Z].
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-000000120h]
           mov al, byte ptr [edx+eax*02h+000086344h]
           mov byte ptr [ecx], al
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
           jmp near ptr l1001660F
;
;* Jump:
; 10016628(C) 
;
l100166E4: mov edx, dword ptr [ebp-010h]
           push edx
           call [g100517D8]
           add esp, 000000004h
           mov eax, dword ptr [ebp-034h]
           imul eax, dword ptr [ebp-03Ch]
           imul eax, eax, 000000003h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000F4h], eax
           mov ecx, dword ptr [ebp-0000000F4h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-018h]
           imul edx, dword ptr [ebp-024h]
           imul edx, edx, 000000003h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000F8h], eax
           mov eax, dword ptr [ebp-0000000F8h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           push 000001907h
           call l10035DC8; [GLU32.gluScaleImage].
           mov ecx, dword ptr [ebp-030h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-03Ch]
           push edx
           mov eax, dword ptr [ebp-034h]
           push eax
           push 000001907h
           call l10035DC8; [GLU32.gluScaleImage].
           mov dword ptr [ebp-040h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-02Ch], ecx
           jmp l100167A5
;
;* Jump:
; 100169C6(U) 
;
l1001679C: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 1001679A(U) 
;
l100167A5: mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [ebp-024h]
           jnl l100169CB
           mov dword ptr [ebp-038h], 000000000h
           jmp l100167C3
;
;* Jump:
; 100169C1(U) 
;
l100167BA: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
;
;* Jump:
; 100167B8(U) 
;
l100167C3: mov edx, dword ptr [ebp-038h]
           cmp edx, dword ptr [ebp-018h]
           jnl l100169C6
           mov eax, dword ptr [ebp-020h]
           add eax, dword ptr [ebp-040h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-054h], cl
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-040h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-064h], al
           mov ecx, dword ptr [ebp-020h]
           add ecx, dword ptr [ebp-040h]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-050h], dl
           mov eax, dword ptr [ebp-030h]
           add eax, dword ptr [ebp-040h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-060h], cl
           mov edx, dword ptr [ebp-030h]
           add edx, dword ptr [ebp-040h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-068h], al
           mov ecx, dword ptr [ebp-030h]
           add ecx, dword ptr [ebp-040h]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-05Ch], dl
           lea eax, [ebp-050h]
           push eax
           lea ecx, [ebp-064h]
           push ecx
           lea edx, [ebp-054h]
           push edx
           push 000000003h
           mov ecx, dword ptr [ebp-000000120h]
           call l10001645
           mov eax, dword ptr [ebp-054h]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000128h], eax
           fild dword ptr [ebp-000000128h]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-04Ch], eax
           mov ecx, dword ptr [ebp-064h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-00000012Ch], ecx
           fild dword ptr [ebp-00000012Ch]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-058h], eax
           mov edx, dword ptr [ebp-050h]
           and edx, 0000000FFh
           mov dword ptr [ebp-000000130h], edx
           fild dword ptr [ebp-000000130h]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-048h], eax
           cmp dword ptr [ebp-04Ch], 0000000FFh
           jle l100168CE
           fild dword ptr [ebp-04Ch]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-06Ch]
           fild dword ptr [ebp-058h]
           fmul dword ptr [ebp-06Ch]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-058h], eax
           fild dword ptr [ebp-048h]
           fmul dword ptr [ebp-06Ch]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-048h], eax
           mov dword ptr [ebp-04Ch], 0000000FFh
;
;* Jump:
; 1001689D(C) 
;
l100168CE: cmp dword ptr [ebp-058h], 0000000FFh
           jle l10016906
           fild dword ptr [ebp-058h]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-070h]
           fild dword ptr [ebp-04Ch]
           fmul dword ptr [ebp-070h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-04Ch], eax
           fild dword ptr [ebp-048h]
           fmul dword ptr [ebp-070h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-048h], eax
           mov dword ptr [ebp-058h], 0000000FFh
;
;* Jump:
; 100168D5(C) 
;
l10016906: cmp dword ptr [ebp-048h], 0000000FFh
           jle l1001693E
           fild dword ptr [ebp-048h]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-074h]
           fild dword ptr [ebp-04Ch]
           fmul dword ptr [ebp-074h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-04Ch], eax
           fild dword ptr [ebp-058h]
           fmul dword ptr [ebp-074h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-058h], eax
           mov dword ptr [ebp-048h], 0000000FFh
;
;* Jump:
; 1001690D(C) 
;
l1001693E: mov eax, dword ptr [ebp-060h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-04Ch]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-040h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-068h]
           and ecx, 0000000FFh
           mov eax, dword ptr [ebp-058h]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-040h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-05Ch]
           and ecx, 0000000FFh
           mov eax, dword ptr [ebp-048h]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-020h]
           add edx, dword ptr [ebp-040h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-040h], eax
           jmp near ptr l100167BA
;
;* Jump:
; 100167C9(C) 
;
l100169C6: jmp near ptr l1001679C
;
;* Jump:
; 100167AB(C) 
;
l100169CB: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           push edx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov eax, dword ptr [ebp-020h]
           push eax
           push 000001401h
           push 000001907h
           push 000000000h
           mov ecx, dword ptr [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           push 000000003h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
           push 03F800000h
           push 000000D14h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D18h
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           push 03F800000h
           push 000000D1Ah
           call [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-0000000FCh], eax
           mov ecx, dword ptr [ebp-0000000FCh]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ebp-000000100h], edx
           mov eax, dword ptr [ebp-000000100h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-000000104h], ecx
           mov edx, dword ptr [ebp-000000104h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp near ptr l100171DB
;
;* Jump:
; 1001654A(C) 
;
l10016AB1: lea eax, [ebp-07Ch]
           push eax
           lea ecx, [ebp-000000084h]
           push ecx
           lea edx, [ebp-080h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000120h]
           call [edx+054h]
           cmp dword ptr [ebp-07Ch], 000000008h
           je l10016AE1
           cmp dword ptr [ebp-07Ch], 000000020h
           jle l10016AEB
;
;* Jump:
; 10016AD9(C) 
;
;* Control "OK", Dialog 006E
;
l10016AE1: mov eax, 000000001h
           jmp near ptr l100171E0
;
;* Jump:
; 10016ADF(C) 
;
l10016AEB: mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000120h]
           call [edx+058h]
           mov dword ptr [ebp-00000008Ch], eax
           mov eax, dword ptr [ebp-00000008Ch]
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000108h], eax
           mov ecx, dword ptr [ebp-000000108h]
           mov dword ptr [ebp-078h], ecx
           cmp dword ptr [ebp-078h], 000000000h
           jne l10016B31
           xor eax, eax
           jmp near ptr l100171E0
;
;* Jump:
; 10016B28(C) 
;
l10016B31: mov edx, dword ptr [ebp-078h]
           push edx
           mov eax, dword ptr [ebp-00000008Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-000000120h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000120h]
           call [eax+05Ch]
           mov ecx, dword ptr [ebp-07Ch]
           mov dword ptr [ebp-000000134h], ecx
           cmp dword ptr [ebp-000000134h], 000000018h
           je l10016B75
           cmp dword ptr [ebp-000000134h], 000000020h
           je l100170AE
           jmp near ptr l10017197
;
;* Jump:
; 10016B61(C) 
;
l10016B75: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+018h], 000000001h
           jne l10016FD1
           mov eax, dword ptr [ebp-080h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov dword ptr [ebp-00000009Ch], eax
           mov eax, dword ptr [ebp-000000084h]
           cdq
           and edx, 000000007h
           add eax, edx
           sar eax, 003h
           mov dword ptr [ebp-0000000A4h], eax
           mov eax, dword ptr [ebp-00000009Ch]
           imul eax, dword ptr [ebp-0000000A4h]
           imul eax, eax, 000000003h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000010Ch], eax
           mov ecx, dword ptr [ebp-00000010Ch]
           mov dword ptr [ebp-000000094h], ecx
           mov edx, dword ptr [ebp-00000008Ch]
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000110h], eax
           mov eax, dword ptr [ebp-000000110h]
           mov dword ptr [ebp-000000090h], eax
           mov ecx, dword ptr [ebp-000000094h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-0000000A4h]
           push edx
           mov eax, dword ptr [ebp-00000009Ch]
           push eax
           mov ecx, dword ptr [ebp-078h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-000000084h]
           push edx
           mov eax, dword ptr [ebp-080h]
           push eax
           push 000001907h
           call l10035DC8; [GLU32.gluScaleImage].
           mov ecx, dword ptr [ebp-000000090h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-000000084h]
           push edx
           mov eax, dword ptr [ebp-080h]
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           push ecx
           push 000001401h
           mov edx, dword ptr [ebp-0000000A4h]
           push edx
           mov eax, dword ptr [ebp-00000009Ch]
           push eax
           push 000001907h
           call l10035DC8; [GLU32.gluScaleImage].
           mov dword ptr [ebp-000000088h], 000000000h
           mov ecx, dword ptr [ebp-000000088h]
           mov dword ptr [ebp-000000098h], ecx
           jmp l10016C8F
;
;* Jump:
; 10016F91(U) 
;
l10016C80: mov edx, dword ptr [ebp-000000098h]
           add edx, 000000001h
           mov dword ptr [ebp-000000098h], edx
;
;* Jump:
; 10016C7E(U) 
;
l10016C8F: mov eax, dword ptr [ebp-000000098h]
           cmp eax, dword ptr [ebp-000000084h]
           jnl l10016F96
           mov dword ptr [ebp-0000000A0h], 000000000h
           jmp l10016CBC
;
;* Jump:
; 10016F8C(U) 
;
l10016CAD: mov ecx, dword ptr [ebp-0000000A0h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000A0h], ecx
;
;* Jump:
; 10016CAB(U) 
;
l10016CBC: mov edx, dword ptr [ebp-0000000A0h]
           cmp edx, dword ptr [ebp-080h]
           jnl l10016F91
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000000B4h], cl
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000C4h], al
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-0000000B0h], dl
           mov eax, dword ptr [ebp-000000090h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000000C0h], cl
           mov edx, dword ptr [ebp-000000090h]
           add edx, dword ptr [ebp-000000088h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000C8h], al
           mov ecx, dword ptr [ebp-000000090h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-0000000BCh], dl
           lea eax, [ebp-0000000B0h]
           push eax
           lea ecx, [ebp-0000000C4h]
           push ecx
           lea edx, [ebp-0000000B4h]
           push edx
           push 000000003h
           mov ecx, dword ptr [ebp-000000120h]
           call l10001645
           mov eax, dword ptr [ebp-0000000B4h]
           and eax, 0000000FFh
           mov dword ptr [ebp-000000138h], eax
           fild dword ptr [ebp-000000138h]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000ACh], eax
           mov ecx, dword ptr [ebp-0000000C4h]
           and ecx, 0000000FFh
           mov dword ptr [ebp-00000013Ch], ecx
           fild dword ptr [ebp-00000013Ch]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000B8h], eax
           mov edx, dword ptr [ebp-0000000B0h]
           and edx, 0000000FFh
           mov dword ptr [ebp-000000140h], edx
           fild dword ptr [ebp-000000140h]
           fmul qword ptr [g10037290]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000A8h], eax
           cmp dword ptr [ebp-0000000ACh], 0000000FFh
           jle l10016E30
           fild dword ptr [ebp-0000000ACh]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-0000000CCh]
           fild dword ptr [ebp-0000000B8h]
           fmul dword ptr [ebp-0000000CCh]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000B8h], eax
           fild dword ptr [ebp-0000000A8h]
           fmul dword ptr [ebp-0000000CCh]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000A8h], eax
           mov dword ptr [ebp-0000000ACh], 0000000FFh
;
;* Jump:
; 10016DE4(C) 
;
l10016E30: cmp dword ptr [ebp-0000000B8h], 0000000FFh
           jle l10016E86
           fild dword ptr [ebp-0000000B8h]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-0000000D0h]
           fild dword ptr [ebp-0000000ACh]
           fmul dword ptr [ebp-0000000D0h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000ACh], eax
           fild dword ptr [ebp-0000000A8h]
           fmul dword ptr [ebp-0000000D0h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000A8h], eax
           mov dword ptr [ebp-0000000B8h], 0000000FFh
;
;* Jump:
; 10016E3A(C) 
;
l10016E86: cmp dword ptr [ebp-0000000A8h], 0000000FFh
           jle l10016EDC
           fild dword ptr [ebp-0000000A8h]
           fdivr dword ptr [g10037204]
           fstp dword ptr [ebp-0000000D4h]
           fild dword ptr [ebp-0000000ACh]
           fmul dword ptr [ebp-0000000D4h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000ACh], eax
           fild dword ptr [ebp-0000000B8h]
           fmul dword ptr [ebp-0000000D4h]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-0000000B8h], eax
           mov dword ptr [ebp-0000000A8h], 0000000FFh
;
;* Jump:
; 10016E90(C) 
;
l10016EDC: mov eax, dword ptr [ebp-0000000C0h]
           and eax, 0000000FFh
           mov ecx, dword ptr [ebp-0000000ACh]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-0000000C8h]
           and ecx, 0000000FFh
           mov eax, dword ptr [ebp-0000000B8h]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-0000000BCh]
           and ecx, 0000000FFh
           mov eax, dword ptr [ebp-0000000A8h]
           imul eax, ecx
           cdq
           and edx, 0000000FFh
           add eax, edx
           sar eax, 008h
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov byte ptr [edx], al
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           jmp near ptr l10016CAD
;
;* Jump:
; 10016CC5(C) 
;
l10016F91: jmp near ptr l10016C80
;
;* Jump:
; 10016C9B(C) 
;
l10016F96: mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-000000114h], ecx
           mov edx, dword ptr [ebp-000000114h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-000000118h], eax
           mov ecx, dword ptr [ebp-000000118h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp near ptr l100170A9
;
;* Jump:
; 10016B7C(C) 
;
l10016FD1: mov dword ptr [ebp-000000088h], 000000000h
;
;* Jump:
; 100170A4(U) 
;
l10016FDB: mov edx, dword ptr [ebp-000000088h]
           cmp edx, dword ptr [ebp-00000008Ch]
           jnb l100170A9
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000000DCh], cl
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000E0h], al
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ecx+002h]
           mov byte ptr [ebp-0000000D8h], dl
           lea eax, [ebp-0000000D8h]
           push eax
           lea ecx, [ebp-0000000E0h]
           push ecx
           lea edx, [ebp-0000000DCh]
           push edx
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           mov ecx, dword ptr [ebp-000000120h]
           call l10001645
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [ebp-0000000DCh]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000000088h]
           add edx, 000000001h
           mov dword ptr [ebp-000000088h], edx
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [ebp-0000000E0h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000000088h]
           add edx, 000000001h
           mov dword ptr [ebp-000000088h], edx
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [ebp-0000000D8h]
           mov byte ptr [eax], cl
           mov edx, dword ptr [ebp-000000088h]
           add edx, 000000001h
           mov dword ptr [ebp-000000088h], edx
           jmp near ptr l10016FDB
;
;* Jump:
; 10016FCC(U), 10016FE7(C) 
;
l100170A9: jmp near ptr l1001719B
;
;* Jump:
; 10016B6A(C) 
;
l100170AE: mov dword ptr [ebp-000000088h], 000000000h
;
;* Jump:
; 10017190(U) 
;
l100170B8: mov eax, dword ptr [ebp-000000088h]
           cmp eax, dword ptr [ebp-00000008Ch]
           jnb l10017195
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000E8h], dl
           mov eax, dword ptr [ebp-078h]
           add eax, dword ptr [ebp-000000088h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000000ECh], cl
           mov edx, dword ptr [ebp-078h]
           add edx, dword ptr [ebp-000000088h]
           mov al, byte ptr [edx+002h]
           mov byte ptr [ebp-0000000E4h], al
           lea ecx, [ebp-0000000E4h]
           push ecx
           lea edx, [ebp-0000000ECh]
           push edx
           lea eax, [ebp-0000000E8h]
           push eax
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           mov ecx, dword ptr [ebp-000000120h]
           call l10001645
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ebp-0000000E8h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ebp-0000000ECh]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, dword ptr [ebp-000000088h]
           mov dl, byte ptr [ebp-0000000E4h]
           mov byte ptr [ecx], dl
           mov eax, dword ptr [ebp-000000088h]
           add eax, 000000001h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-000000088h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000088h], ecx
           jmp near ptr l100170B8
;
;* Jump:
; 100170C4(C) 
;
l10017195: jmp l1001719B
;
;* Jump:
; 10016B70(U) 
;
l10017197: xor eax, eax
           jmp l100171E0
;
;* Jump:
; 100170A9(U), 10017195(U) 
;
l1001719B: mov edx, dword ptr [ebp-078h]
           push edx
           mov eax, dword ptr [ebp-07Ch]
           push eax
           mov ecx, dword ptr [ebp-000000084h]
           push ecx
           mov edx, dword ptr [ebp-080h]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-000000120h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000120h]
           call [edx+060h]
           mov eax, dword ptr [ebp-078h]
           mov dword ptr [ebp-00000011Ch], eax
           mov ecx, dword ptr [ebp-00000011Ch]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10016AAC(U) 
;
;* Control "OK", Dialog 006E
;
l100171DB: mov eax, 000000001h
;
;* Jump:
; 100165BD(U), 100165F2(U), 10016AE6(U), 10016B2C(U), 10017199(U) 
;
l100171E0: mov esp, ebp
           pop ebp
           ret 00004h
l1001651F ENDP
;
;* Jump:
; 10001050(U) 
;
l100171E6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000324h
           mov dword ptr [ebp-000000324h], ecx
           mov eax, dword ptr [ebp-000000324h]
           cmp dword ptr [eax+00008644Ch], 000000000h
           jne l10017209
           jmp near ptr l100173CD
;
;* Jump:
; 10017202(C) 
;
l10017209: cmp dword ptr [ebp+008h], 000000000h
           jne l10017228
           mov ecx, dword ptr [ebp-000000324h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000324h]
           call [edx+000000088h]
           jmp near ptr l100173CD
;
;* Jump:
; 1001720D(C) 
;
l10017228: mov dword ptr [ebp-004h], 000000000h
           jmp l1001723A
;
;* Jump:
; 100173C8(U) 
;
l10017231: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1001722F(U) 
;
l1001723A: mov ecx, dword ptr [ebp-000000324h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+00008644Ch]
           jnb l100173CD
           cmp dword ptr [ebp+008h], 000000001h
           jne l100173AC
           mov eax, dword ptr [ebp-000000324h]
           mov ecx, dword ptr [eax+000086448h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+014h], 0FFFFFFFFh
           jne l10017303
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100172FE
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-010h], eax
           lea ecx, [ebp-010h]
           push ecx
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           lea ecx, [ebp-000000320h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           push eax
           lea ecx, [ebp-000000320h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-000000324h]
           call l1000179E
           lea ecx, [ebp-000000320h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 10017298(C) 
;
l100172FE: jmp near ptr l100173AA
;
;* Jump:
; 10017275(C) 
;
l10017303: cmp dword ptr [ebp+008h], 000000001h
           jne l100173AA
           mov dword ptr [ebp-000000314h], 000000000h
           jmp l10017328
;
;* Jump:
; 10017373(U) 
;
l10017319: mov ecx, dword ptr [ebp-000000314h]
           add ecx, 000000001h
           mov dword ptr [ebp-000000314h], ecx
;
;* Jump:
; 10017317(U) 
;
l10017328: cmp dword ptr [ebp-000000314h], 000000300h
           jnb l10017375
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [g1005137C]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-000000318h], edx
           mov eax, dword ptr [ebp-000000318h]
           add eax, dword ptr [ebp-000000314h]
           xor ecx, ecx
           mov cl, byte ptr [eax]
           mov edx, dword ptr [ebp-000000314h]
           mov eax, dword ptr [ebp-000000324h]
           mov cl, byte ptr [eax+ecx*04h+000086344h]
           mov byte ptr [ebp+edx-000000310h], cl
           jmp l10017319
;
;* Jump:
; 10017332(C) 
;
l10017375: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           push eax
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           lea ecx, [ebp-000000310h]
           push ecx
           push 000001401h
           push 000001907h
           push 000000100h
           push 000000000h
           push 000000DE1h
           call [g100517E4]
;
;* Jump:
; 100172FE(U), 10017307(C) 
;
l100173AA: jmp l100173C8
;
;* Jump:
; 10017253(C) 
;
l100173AC: mov edx, dword ptr [ebp-000000324h]
           mov eax, dword ptr [edx+000084800h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov ecx, dword ptr [ebp-000000324h]
           call l1000118B
;
;* Jump:
; 100173AA(U) 
;
l100173C8: jmp near ptr l10017231
;
;* Jump:
; 10017204(U), 10017223(U), 10017249(C) 
;
l100173CD: mov esp, ebp
           pop ebp
           ret 00004h
l100171E6 ENDP
;
;* Jump:
; 10001140(U) 
;
l100173D3 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+00008644Ch]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           jne l10017418
           push 000000527h
;
;* String: "C:\Code\Raster\rOpenGL3\GLTexManager.cpp"
;
           push offset g1003A954
;
;* String: "array"
;
           push offset g1003A980
           call [__imp__assert]; [MSVCRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 100173FE(C) 
;
l10017418: mov dword ptr [ebp-004h], 000000000h
           jmp l1001742A
;
;* Jump:
; 10017444(U) 
;
l10017421: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001741F(U) 
;
l1001742A: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00008644Ch]
           jnb l10017446
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l10017421
;
;* Jump:
; 10017436(C) 
;
l10017446: mov ecx, dword ptr [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+00008644Ch]
           push eax
           call [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
           mov ecx, dword ptr [ebp-024h]
           add ecx, 000086444h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-020h]
           cmp dword ptr [edx+010h], 000000000h
           jne l10017474
           jmp near ptr l10017502
;
;* Jump:
; 1001746D(C) 
;
;* Control "OK", Dialog 006E
;
l10017474: mov eax, 000000001h
           test eax, eax
           je l100174CF
           mov dword ptr [ebp-010h], 000000000h
           jmp l1001748F
;
;* Jump:
; 100174CD(U) 
;
l10017486: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10017484(U) 
;
l1001748F: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+008h]
           jnb l100174CF
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           je l100174C6
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov eax, dword ptr [ebp-014h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-014h]
           call [edx]
           mov dword ptr [ebp-028h], eax
           jmp l100174CD
;
;* Jump:
; 100174B3(C) 
;
l100174C6: mov dword ptr [ebp-028h], 000000000h
;
;* Jump:
; 100174C4(U) 
;
l100174CD: jmp l10017486
;
;* Jump:
; 1001747B(C), 10017498(C) 
;
l100174CF: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-01Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001746F(U) 
;
l10017502: mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+0000860A4h], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+0000860A8h], 0FFFFFFFFh
           mov edx, dword ptr [ebp-024h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+00008645Ch], 000000001h
           mov esp, ebp
           pop ebp
           ret
l100173D3 ENDP
;
;* Jump:
; 10001528(U) 
;
l1001752D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
;
;* String: "DomeUp"
;
           push offset g1003A988
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000009C8h], eax
;
;* String: "DomeDown"
;
           push offset g1003A990
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000000D30h], eax
;
;* String: "DomeLeft"
;
           push offset g1003A99C
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000001768h], eax
;
;* String: "DomeRight"
;
           push offset g1003A9A8
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000001AD0h], eax
;
;* String: "DomeFront"
;
           push offset g1003A9B4
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000001098h], eax
;
;* String: "DomeBack"
;
           push offset g1003A9C0
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+040h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000001400h], eax
           mov esp, ebp
           pop ebp
           ret
l1001752D ENDP
;
;* Jump:
; 100017D5(U) 
;
l100175CE PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-004h], 0FFFFFFFFh
           mov eax, dword ptr [ebp+008h]
           movsx ecx, byte ptr [eax]
           test ecx, ecx
           jne l100175F0
           or eax, 0FFFFFFFFh
           jmp near ptr l100176A9
;
;* Jump:
; 100175E6(C) 
;
l100175F0: mov dword ptr [ebp-008h], 000000000h
           jmp l10017602
;
;* Jump:
; 10017643(U) 
;
l100175F9: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 100175F7(U) 
;
l10017602: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jnb l10017645
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-01Ch]
           call [__imp_?Id@B_NamedObj@@QBEABVB_Name@@XZ]; [BBLibc.?Id@B_NamedObj@@QBEABVB_Name@@XZ].
           mov ecx, eax
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10017643
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], ecx
           jmp l10017645
;
;* Jump:
; 10017639(C) 
;
l10017643: jmp l100175F9
;
;* Jump:
; 1001760E(C), 10017641(U) 
;
l10017645: cmp dword ptr [ebp-004h], 0FFFFFFFFh
           jne l100176A6
           mov dword ptr [ebp-010h], 0FFFFFFFFh
           mov edx, dword ptr [ebp+008h]
           push edx
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 000000000h
           je l100176A1
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-018h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-018h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov eax, dword ptr [ebp-020h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-020h]
           call [edx+038h]
           mov dword ptr [ebp-010h], eax
           lea ecx, [ebp-018h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 10017666(C) 
;
l100176A1: mov eax, dword ptr [ebp-010h]
           jmp l100176A9
;
;* Jump:
; 10017649(C) 
;
l100176A6: mov eax, dword ptr [ebp-004h]
;
;* Jump:
; 100175EB(U), 100176A4(U) 
;
l100176A9: mov esp, ebp
           pop ebp
           ret 00004h
l100175CE ENDP
;
;* Jump:
; 10001825(U) 
;
l100176AF PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jb l100176EC
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jnb l100176EC
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           jmp l100176F1
;
;* Jump:
; 100176BC(C), 100176CA(C) 
;
l100176EC: mov eax, offset g10051698
;
;* Jump:
; 100176EA(U) 
;
l100176F1: mov esp, ebp
           pop ebp
           ret 00004h
l100176AF ENDP
;
;* Jump:
; 100011A4(U) 
;
l100176F7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov dword ptr [ebp-030h], ecx
           mov eax, dword ptr [ebp-030h]
           fld qword ptr [g10037020]
           fadd qword ptr [eax+000086334h]
           fstp dword ptr [ebp-00Ch]
           mov dword ptr [ebp-010h], 043000000h
           mov ecx, dword ptr [ebp-030h]
           fld qword ptr [g100372B0]
           fsub qword ptr [ecx+000086334h]
           fstp dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-030h]
           fld qword ptr [g10037020]
           fadd qword ptr [edx+00008633Ch]
           fstp dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-030h]
           fld qword ptr [g100372A0]
           fadd qword ptr [eax+00008632Ch]
           mov ecx, dword ptr [ebp-030h]
           fadd qword ptr [ecx+00008633Ch]
           fstp dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-030h]
           fld qword ptr [g100372B0]
           fadd qword ptr [edx+00008633Ch]
           fstp dword ptr [ebp-02Ch]
           fld dword ptr [ebp-00Ch]
           fsub dword ptr [ebp-010h]
           fld dword ptr [ebp-00Ch]
           fsub dword ptr [ebp-014h]
           fmulp st(01h), st(00h)
           fstp dword ptr [ebp-018h]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-00Ch]
           fld dword ptr [ebp-010h]
           fsub dword ptr [ebp-014h]
           fmulp st(01h), st(00h)
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-00Ch]
           fld dword ptr [ebp-014h]
           fsub dword ptr [ebp-010h]
           fmulp st(01h), st(00h)
           fstp dword ptr [ebp-024h]
           fld dword ptr [ebp-020h]
           fld dword ptr [ebp-010h]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fld dword ptr [ebp-014h]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fdiv dword ptr [ebp-018h]
           fld dword ptr [ebp-028h]
           fld dword ptr [ebp-00Ch]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fld dword ptr [ebp-014h]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fdiv dword ptr [ebp-01Ch]
           faddp st(01h), st(00h)
           fld dword ptr [ebp-02Ch]
           fld dword ptr [ebp-00Ch]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fld dword ptr [ebp-010h]
           fsubr qword ptr [ebp+008h]
           fmulp st(01h), st(00h)
           fdiv dword ptr [ebp-024h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 00010h
l100176F7 ENDP
;
;* Jump:
; 100012FD(U) 
;
l100177EC PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-028h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10017807
;
;* Jump:
; 100178C5(U) 
;
l100177FE: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 100177FC(U) 
;
l10017807: cmp dword ptr [ebp-004h], 000000100h
           jnl l100178CA
           push 000000000h
           push 000000000h
           fild dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-028h]
           call l100011A4
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           fstp dword ptr [ebp-008h]
           fld dword ptr [ebp-008h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10017859
           mov dword ptr [ebp-008h], 0437F0000h
           jmp l10017870
;
;* Jump:
; 1001784E(C) 
;
l10017859: fld dword ptr [ebp-008h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 001h
           je l10017870
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10017857(U), 10017867(C) 
;
l10017870: cmp dword ptr [ebp-004h], 000000005h
           jnl l100178B1
           fld dword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           and eax, 0000000FFh
           cmp eax, dword ptr [ebp-004h]
           jnl l1001789A
           fld dword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           and eax, 0000000FFh
           mov dword ptr [ebp-02Ch], eax
           jmp l100178A0
;
;* Jump:
; 10017886(C) 
;
l1001789A: mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10017898(U) 
;
l100178A0: mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-004h]
           mov dl, byte ptr [ebp-02Ch]
           mov byte ptr [ecx+000086344h], dl
           jmp l100178C5
;
;* Jump:
; 10017874(C) 
;
l100178B1: fld dword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-004h]
           mov byte ptr [ecx+000086344h], al
;
;* Jump:
; 100178AF(U) 
;
l100178C5: jmp near ptr l100177FE
;
;* Jump:
; 1001780E(C) 
;
l100178CA: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-028h]
           call [eax+000000224h]
           test eax, eax
           je l100179B8
           push 000000600h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10017908
;
;* Jump:
; 1001797B(U) 
;
l100178FF: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 100178FD(U) 
;
l10017908: cmp dword ptr [ebp-01Ch], 000000100h
           jnl l1001797D
           mov eax, dword ptr [ebp-028h]
           add eax, dword ptr [ebp-01Ch]
           movsx cx, byte ptr [eax+000086344h]
           and ecx, 00000FFFFh
           shl ecx, 008h
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-014h]
           mov word ptr [eax+edx*02h], cx
           mov ecx, dword ptr [ebp-028h]
           add ecx, dword ptr [ebp-01Ch]
           movsx dx, byte ptr [ecx+000086344h]
           and edx, 00000FFFFh
           shl edx, 008h
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-014h]
           mov word ptr [ecx+eax*02h+000000200h], dx
           mov edx, dword ptr [ebp-028h]
           add edx, dword ptr [ebp-01Ch]
           movsx ax, byte ptr [edx+000086344h]
           and eax, 00000FFFFh
           shl eax, 008h
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-014h]
           mov word ptr [edx+ecx*02h+000000400h], ax
           jmp l100178FF
;
;* Jump:
; 1001790F(C) 
;
l1001797D: mov eax, dword ptr [ebp-014h]
           push eax
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_SetDeviceGammaRamp]; [GDI32.SetDeviceGammaRamp].
           mov dword ptr [ebp-018h], eax
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           cmp dword ptr [ebp-018h], 000000000h
           jne l100179B6
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-028h]
           call l10001050
;
;* Jump:
; 100179AA(C) 
;
l100179B6: jmp l100179C2
;
;* Jump:
; 100178DA(C) 
;
;* Control "OK", Dialog 006E
;
l100179B8: push 000000001h
           mov ecx, dword ptr [ebp-028h]
           call l10001050
;
;* Jump:
; 100179B6(U) 
;
l100179C2: mov esp, ebp
           pop ebp
           ret
l100177EC ENDP
;
;* Jump:
; 1000166D(U) 
;
l100179C6 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [ebp+008h]
           fcomp qword ptr [eax+00008632Ch]
           fnstsw ax
           test ah, 040h
           je l10017A08
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ebp+00Ch]
           fcomp qword ptr [ecx+000086334h]
           fnstsw ax
           test ah, 040h
           je l10017A08
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ebp+010h]
           fcomp qword ptr [edx+00008633Ch]
           fnstsw ax
           test ah, 040h
           je l10017A08
           jmp l10017A34
;
;* Jump:
; 100179DE(C), 100179F1(C), 10017A04(C) 
;
l10017A08: fld dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+00008632Ch]
           fld dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+000086334h]
           fld dword ptr [ebp+010h]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx+00008633Ch]
           mov ecx, dword ptr [ebp-004h]
           call l100012FD
;
;* Jump:
; 10017A06(U) 
;
l10017A34: mov esp, ebp
           pop ebp
           ret 0000Ch
l100179C6 ENDP
;
;* Jump:
; 1000114F(U) 
;
l10017A3A PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [ebp+008h]
           fcomp qword ptr [eax+00008632Ch]
           fnstsw ax
           test ah, 040h
           je l10017A56
           jmp l10017A6A
;
;* Jump:
; 10017A52(C) 
;
l10017A56: fld dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+00008632Ch]
           mov ecx, dword ptr [ebp-004h]
           call l100012FD
;
;* Jump:
; 10017A54(U) 
;
l10017A6A: mov esp, ebp
           pop ebp
           ret 00004h
l10017A3A ENDP
;
;* Jump:
; 10001398(U) 
;
l10017A70 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+00008632Ch]
           fst dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10017A70 ENDP
;
;* Jump:
; 1000168B(U) 
;
l10017A89 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [ebp+008h]
           fcomp qword ptr [eax+000086334h]
           fnstsw ax
           test ah, 040h
           je l10017AA5
           jmp l10017AB9
;
;* Jump:
; 10017AA1(C) 
;
l10017AA5: fld dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+000086334h]
           mov ecx, dword ptr [ebp-004h]
           call l100012FD
;
;* Jump:
; 10017AA3(U) 
;
l10017AB9: mov esp, ebp
           pop ebp
           ret 00004h
l10017A89 ENDP
;
;* Jump:
; 10001721(U) 
;
l10017ABF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+000086334h]
           fst dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10017ABF ENDP
;
;* Jump:
; 1000155A(U) 
;
l10017AD8 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           fld dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           fcomp qword ptr [eax+00008633Ch]
           fnstsw ax
           test ah, 040h
           je l10017AF4
           jmp l10017B08
;
;* Jump:
; 10017AF0(C) 
;
l10017AF4: fld dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+00008633Ch]
           mov ecx, dword ptr [ebp-004h]
           call l100012FD
;
;* Jump:
; 10017AF2(U) 
;
l10017B08: mov esp, ebp
           pop ebp
           ret 00004h
l10017AD8 ENDP
;
;* Jump:
; 1000152D(U) 
;
l10017B0E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fld qword ptr [eax+00008633Ch]
           fst dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret
l10017B0E ENDP
;
;* Jump:
; 100014D3(U) 
;
l10017B27 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000060h
           mov dword ptr [ebp-060h], ecx
           push 000002000h
           push 000000000h
           push 000000000h
           push 000000000h
           mov eax, dword ptr [ebp+008h]
           and eax, 00000FFFFh
           push eax
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+0000841A8h]
           push edx
           call [__imp_LoadImageA]; [USER32.LoadImageA].
           mov dword ptr [ebp-058h], eax
           cmp dword ptr [ebp-058h], 000000000h
           jne l10017B64
           xor eax, eax
           jmp near ptr l10017C57
;
;* Jump:
; 10017B5B(C) 
;
l10017B64: lea eax, [ebp-054h]
           push eax
           push 000000054h
           mov ecx, dword ptr [ebp-058h]
           push ecx
           call [__imp_GetObjectA]; [GDI32.GetObjectA].
           mov dword ptr [ebp-05Ch], eax
           cmp dword ptr [ebp-05Ch], 000000000h
           jne l10017B84
           xor eax, eax
           jmp near ptr l10017C57
;
;* Jump:
; 10017B7B(C) 
;
l10017B84: mov edx, dword ptr [ebp+00Ch]
           push edx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000002901h
           push 000002802h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           push 000002901h
           push 000002803h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [eax+000084814h]
           push ecx
           push 000002800h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [edx+000084810h]
           push eax
           push 000002801h
           push 000000DE1h
           call [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           mov ecx, dword ptr [ebp-042h]
           and ecx, 00000FFFFh
           cmp ecx, 000000018h
           jne l10017C28
           mov edx, dword ptr [ebp-040h]
           push edx
           push 000001401h
           push 0000080E0h
           push 000000000h
           mov eax, dword ptr [ebp-04Ch]
           push eax
           mov ecx, dword ptr [ebp-050h]
           push ecx
           push 000000003h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
           jmp l10017C52
;
;* Jump:
; 10017BFD(C) 
;
l10017C28: mov edx, dword ptr [ebp-040h]
           push edx
           push 000001401h
           push 000001909h
           push 000000000h
           mov eax, dword ptr [ebp-04Ch]
           push eax
           mov ecx, dword ptr [ebp-050h]
           push ecx
           push 000001909h
           push 000000000h
           push 000000DE1h
           call [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
;
;* Jump:
; 10017C26(U) 
;
;* Control "OK", Dialog 006E
;
l10017C52: mov eax, 000000001h
;
;* Jump:
; 10017B5F(U), 10017B7F(U) 
;
l10017C57: mov esp, ebp
           pop ebp
           ret 00008h
l10017B27 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100012DA(U), 100015A5(U) 
;
l10018CA0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [__imp_??_7B_NamedObj@@6B@]; [BBLibc.??_7B_NamedObj@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l10018CD4
           mov eax, dword ptr [ebp-004h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10018CC6(C) 
;
l10018CD4: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10018CA0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100012A8(U), 100015B9(U) 
;
l10018CF0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax], offset g10037274
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           je l10018D96
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l10018D23
           jmp l10018D96
;
;* Jump:
; 10018D1F(C) 
;
l10018D23: cmp dword ptr [ebp-010h], 000000000h
           je l10018D63
           mov dword ptr [ebp-004h], 000000000h
           jmp l10018D3B
;
;* Jump:
; 10018D61(U) 
;
l10018D32: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 10018D30(U) 
;
l10018D3B: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l10018D63
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l10018D32
;
;* Jump:
; 10018D27(C), 10018D44(C) 
;
l10018D63: mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 10018D09(C), 10018D21(U) 
;
l10018D96: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l10018DAC
           mov edx, dword ptr [ebp-014h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10018D9E(C) 
;
l10018DAC: mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10018CF0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001104(U) 
;
l10018DF0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           push 000000000h
           mov eax, dword ptr [ebp-018h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000114h]
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+000084808h]
           push ecx
           call [__imp_glLineWidth]; [OPENGL32.glLineWidth].
           push 000000203h
           call [__imp_glDepthFunc]; [OPENGL32.glDepthFunc].
           push 000000B71h
           call [__imp_glEnable]; [OPENGL32.glEnable].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glDepthMask]; [OPENGL32.glDepthMask].
           push 000001B01h
;
;* Control "Toon Colour", Dialog 0073
;
           push 000000404h
           call [__imp_glPolygonMode]; [OPENGL32.glPolygonMode].
           push 000002A02h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 044020000h
           push 041700000h
           call [__imp_glPolygonOffset]; [OPENGL32.glPolygonOffset].
           mov dword ptr [ebp-014h], 000000000h
           jmp l10018E86
;
;* Jump:
; 10018F15(U) 
;
l10018E7D: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10018E7B(U) 
;
l10018E86: mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l10018F1A
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-018h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l10018E7D
;
;* Jump:
; 10018E8C(C) 
;
l10018F1A: push 000001B02h
;
;* Control "Toon Colour", Dialog 0073
;
           push 000000404h
           call [__imp_glPolygonMode]; [OPENGL32.glPolygonMode].
           push 000002A02h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 03F800000h
           call [__imp_glLineWidth]; [OPENGL32.glLineWidth].
           mov esp, ebp
           pop ebp
           ret 00008h
l10018DF0 ENDP
;
;* Jump:
; 10001636(U) 
;
l10018F46 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000002E0h
           mov dword ptr [ebp-0000002DCh], ecx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000002E0h], eax
           mov ecx, dword ptr [ebp-0000002E0h]
           sub ecx, 000000001h
           mov dword ptr [ebp-0000002E0h], ecx
           cmp dword ptr [ebp-0000002E0h], 00000000Bh
           ja l1001AFB4
           mov edx, dword ptr [ebp-0000002E0h]
           jmp [offset g1001AFBA+edx*04h]
l10018F92: mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+000000114h]
           push 000000DE0h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000DE1h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 0000007D1h
           push 000000DE0h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 03F4CCCCDh
           push 03F4CCCCDh
           push 03F4CCCCDh
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-024h], 000000000h
           jmp l10018FFF
;
;* Jump:
; 10019149(U) 
;
l10018FF6: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 10018FF4(U) 
;
l10018FFF: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp+010h]
           jnb l1001914E
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-020h]
           fld dword ptr [edx]
           fadd dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-020h]
           fadd dword ptr [ecx+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-028h]
           push edx
           call [__imp_glTexCoord1f]; [OPENGL32.glTexCoord1f].
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ecx]
           fadd dword ptr [edx+004h]
           mov eax, dword ptr [ebp-004h]
           fadd dword ptr [eax+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-028h]
           push ecx
           call [__imp_glTexCoord1f]; [OPENGL32.glTexCoord1f].
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           fld dword ptr [eax]
           fadd dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-018h]
           fadd dword ptr [edx+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_glTexCoord1f]; [OPENGL32.glTexCoord1f].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10018FF6
;
;* Jump:
; 10019005(C) 
;
l1001914E: call [__imp_glEnd]; [OPENGL32.glEnd].
           push 000000DE1h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000DE0h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           jmp near ptr l1001AFB4
l1001916F: mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+000000114h]
           push 0000084C1h
           call [g100517F4]
           push 03F4CCCCDh
           push 03F4CCCCDh
           push 03F4CCCCDh
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000DE0h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000002100h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           push 0000007D1h
           push 000000DE0h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 0000084C0h
           call [g100517F4]
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+014h]
           or eax, 000000009h
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+000000114h]
           push 000002100h
           push 000002200h
           push 000002300h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           push 000000DE1h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           push 03F4CCCCDh
           push 03F4CCCCDh
           push 03F4CCCCDh
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10019264
;
;* Jump:
; 100194C5(U) 
;
l1001925B: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10019259(U) 
;
l10019264: mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [ebp+010h]
           jnb l100194CA
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+014h]
           je l100192DC
           call [__imp_glEnd]; [OPENGL32.glEnd].
           push 0000084C1h
           call [g100517F4]
           push 0000007D1h
           push 000000DE0h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-01Ch], edx
           push 0000084C0h
           call [g100517F4]
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 10019285(C) 
;
l100192DC: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           fld dword ptr [eax]
           fadd dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-020h]
           fadd dword ptr [edx+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           push edx
           push 0000084C0h
           call [g100517FC]
           mov eax, dword ptr [ebp-030h]
           push eax
           push 0000084C1h
           call [g100517F8]
           mov ecx, dword ptr [ebp-0000002DCh]
           cmp dword ptr [ecx+0000847FCh], 000000000h
           je l100193E5
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
;
;* Jump:
; 100193D9(C) 
;
l100193E5: mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ecx]
           fadd dword ptr [edx+004h]
           mov eax, dword ptr [ebp-004h]
           fadd dword ptr [eax+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+008h]
           push eax
           push 0000084C0h
           call [g100517FC]
           mov ecx, dword ptr [ebp-030h]
           push ecx
           push 0000084C1h
           call [g100517F8]
           mov edx, dword ptr [ebp-0000002DCh]
           cmp dword ptr [edx+0000847FCh], 000000000h
           je l10019450
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
;
;* Jump:
; 10019444(C) 
;
l10019450: mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           fld dword ptr [edx]
           fadd dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-018h]
           fadd dword ptr [ecx+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           push 0000084C0h
           call [g100517FC]
           mov edx, dword ptr [ebp-030h]
           push edx
           push 0000084C1h
           call [g100517F8]
           mov eax, dword ptr [ebp-0000002DCh]
           cmp dword ptr [eax+0000847FCh], 000000000h
           je l100194BB
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
;
;* Jump:
; 100194AF(C) 
;
l100194BB: mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001925B
;
;* Jump:
; 1001926A(C) 
;
l100194CA: call [__imp_glEnd]; [OPENGL32.glEnd].
           push 0000084C1h
           call [g100517F4]
           push 000000DE0h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 0000084C0h
           call [g100517F4]
           jmp near ptr l1001AFB4
l100194F6: mov byte ptr [ebp-0000000B0h], 03Fh
           mov byte ptr [ebp-0000000AFh], 025h
           mov byte ptr [ebp-0000000AEh], 012h
           mov byte ptr [ebp-0000000ADh], 084h
           mov byte ptr [ebp-0000000ACh], 062h
           mov byte ptr [ebp-0000000ABh], 025h
           mov byte ptr [ebp-0000000AAh], 012h
           mov byte ptr [ebp-0000000A9h], 084h
           mov byte ptr [ebp-0000000A8h], 062h
           mov byte ptr [ebp-0000000A7h], 025h
           mov byte ptr [ebp-0000000A6h], 012h
           mov byte ptr [ebp-0000000A5h], 044h
           mov byte ptr [ebp-0000000A4h], 051h
           mov byte ptr [ebp-0000000A3h], 024h
           mov byte ptr [ebp-0000000A2h], 092h
           mov byte ptr [ebp-0000000A1h], 05Fh
           mov byte ptr [ebp-0000000A0h], 0FFh
           mov byte ptr [ebp-00000009Fh], 0FCh
           mov byte ptr [ebp-00000009Eh], 093h
           mov byte ptr [ebp-00000009Dh], 0E4h
           mov byte ptr [ebp-00000009Ch], 051h
           mov byte ptr [ebp-00000009Bh], 027h
           mov byte ptr [ebp-00000009Ah], 0FAh
           mov byte ptr [ebp-000000099h], 044h
           mov byte ptr [ebp-000000098h], 050h
           mov byte ptr [ebp-000000097h], 024h
           mov byte ptr [ebp-000000096h], 096h
           mov byte ptr [ebp-000000095h], 024h
           mov byte ptr [ebp-000000094h], 04Bh
           mov byte ptr [ebp-000000093h], 0F4h
           mov byte ptr [ebp-000000092h], 092h
           mov byte ptr [ebp-000000091h], 024h
           mov byte ptr [ebp-000000090h], 0FCh
           mov byte ptr [ebp-00000008Fh], 022h
           mov byte ptr [ebp-00000008Eh], 049h
           mov byte ptr [ebp-00000008Dh], 027h
           mov byte ptr [ebp-00000008Ch], 049h
           mov byte ptr [ebp-00000008Bh], 0E2h
           mov byte ptr [ebp-00000008Ah], 049h
           mov byte ptr [ebp-000000089h], 024h
           mov byte ptr [ebp-000000088h], 048h
           mov byte ptr [ebp-000000087h], 020h
           mov byte ptr [ebp-000000086h], 049h
           mov byte ptr [ebp-000000085h], 014h
           mov byte ptr [ebp-000000084h], 0FCh
           mov byte ptr [ebp-000000083h], 023h
           mov byte ptr [ebp-000000082h], 0FFh
           mov byte ptr [ebp-000000081h], 0FFh
           mov byte ptr [ebp-080h], 047h
           mov byte ptr [ebp-07Fh], 0FCh
           mov byte ptr [ebp-07Eh], 049h
           mov byte ptr [ebp-07Dh], 014h
           mov byte ptr [ebp-07Ch], 044h
           mov byte ptr [ebp-07Bh], 022h
           mov byte ptr [ebp-07Ah], 029h
           mov byte ptr [ebp-079h], 014h
           mov byte ptr [ebp-078h], 044h
           mov byte ptr [ebp-077h], 020h
           mov byte ptr [ebp-076h], 03Fh
           mov byte ptr [ebp-075h], 0FFh
           mov byte ptr [ebp-074h], 0FFh
           mov byte ptr [ebp-073h], 0A7h
           mov byte ptr [ebp-072h], 0A9h
           mov byte ptr [ebp-071h], 014h
           mov byte ptr [ebp-070h], 084h
           mov byte ptr [ebp-06Fh], 02Ch
           mov byte ptr [ebp-06Eh], 029h
           mov byte ptr [ebp-06Dh], 008h
           mov byte ptr [ebp-06Ch], 084h
           mov byte ptr [ebp-06Bh], 03Fh
           mov byte ptr [ebp-06Ah], 0FFh
           mov byte ptr [ebp-069h], 0E8h
           mov byte ptr [ebp-068h], 084h
           mov byte ptr [ebp-067h], 0E2h
           mov byte ptr [ebp-066h], 049h
           mov byte ptr [ebp-065h], 03Fh
           mov byte ptr [ebp-064h], 0FFh
           mov byte ptr [ebp-063h], 0A0h
           mov byte ptr [ebp-062h], 049h
           mov byte ptr [ebp-061h], 028h
           mov byte ptr [ebp-060h], 084h
           mov byte ptr [ebp-05Fh], 064h
           mov byte ptr [ebp-05Eh], 04Bh
           mov byte ptr [ebp-05Dh], 028h
           mov byte ptr [ebp-05Ch], 084h
           mov byte ptr [ebp-05Bh], 020h
           mov byte ptr [ebp-05Ah], 049h
           mov byte ptr [ebp-059h], 028h
           mov byte ptr [ebp-058h], 09Dh
           mov byte ptr [ebp-057h], 07Fh
           mov byte ptr [ebp-056h], 0FFh
           mov byte ptr [ebp-055h], 0ABh
           mov byte ptr [ebp-054h], 0D8h
           mov byte ptr [ebp-053h], 023h
           mov byte ptr [ebp-052h], 0A9h
           mov byte ptr [ebp-051h], 02Ch
           mov byte ptr [ebp-050h], 088h
           mov byte ptr [ebp-04Fh], 064h
           mov byte ptr [ebp-04Eh], 0A4h
           mov byte ptr [ebp-04Dh], 088h
           mov byte ptr [ebp-04Ch], 088h
           mov byte ptr [ebp-04Bh], 028h
           mov byte ptr [ebp-04Ah], 0A4h
           mov byte ptr [ebp-049h], 088h
           mov byte ptr [ebp-048h], 0FFh
           mov byte ptr [ebp-047h], 0F0h
           mov byte ptr [ebp-046h], 0A4h
           mov byte ptr [ebp-045h], 089h
           mov byte ptr [ebp-044h], 088h
           mov byte ptr [ebp-043h], 02Fh
           mov byte ptr [ebp-042h], 0FFh
           mov byte ptr [ebp-041h], 0FEh
           mov byte ptr [ebp-040h], 08Ah
           mov byte ptr [ebp-03Fh], 060h
           mov byte ptr [ebp-03Eh], 0A4h
           mov byte ptr [ebp-03Dh], 089h
           mov byte ptr [ebp-03Ch], 0FAh
           mov byte ptr [ebp-03Bh], 061h
           mov byte ptr [ebp-03Ah], 004h
           mov byte ptr [ebp-039h], 088h
           mov byte ptr [ebp-038h], 08Ah
           mov byte ptr [ebp-037h], 021h
           mov byte ptr [ebp-036h], 00Fh
           mov byte ptr [ebp-035h], 0C8h
           mov byte ptr [ebp-034h], 08Bh
           mov byte ptr [ebp-033h], 0FFh
           mov byte ptr [ebp-032h], 0FCh
           mov byte ptr [ebp-031h], 088h
           mov byte ptr [ebp-0000001B0h], 0AAh
           mov byte ptr [ebp-0000001AFh], 0AAh
           mov byte ptr [ebp-0000001AEh], 0AAh
           mov byte ptr [ebp-0000001ADh], 0AAh
           mov byte ptr [ebp-0000001ACh], 055h
           mov byte ptr [ebp-0000001ABh], 055h
           mov byte ptr [ebp-0000001AAh], 055h
           mov byte ptr [ebp-0000001A9h], 055h
           mov byte ptr [ebp-0000001A8h], 0AAh
           mov byte ptr [ebp-0000001A7h], 0AAh
           mov byte ptr [ebp-0000001A6h], 0AAh
           mov byte ptr [ebp-0000001A5h], 0AAh
           mov byte ptr [ebp-0000001A4h], 055h
           mov byte ptr [ebp-0000001A3h], 055h
           mov byte ptr [ebp-0000001A2h], 055h
           mov byte ptr [ebp-0000001A1h], 055h
           mov byte ptr [ebp-0000001A0h], 0AAh
           mov byte ptr [ebp-00000019Fh], 0AAh
           mov byte ptr [ebp-00000019Eh], 0AAh
           mov byte ptr [ebp-00000019Dh], 0AAh
           mov byte ptr [ebp-00000019Ch], 055h
           mov byte ptr [ebp-00000019Bh], 055h
           mov byte ptr [ebp-00000019Ah], 055h
           mov byte ptr [ebp-000000199h], 055h
           mov byte ptr [ebp-000000198h], 0AAh
           mov byte ptr [ebp-000000197h], 0AAh
           mov byte ptr [ebp-000000196h], 0AAh
           mov byte ptr [ebp-000000195h], 0AAh
           mov byte ptr [ebp-000000194h], 055h
           mov byte ptr [ebp-000000193h], 055h
           mov byte ptr [ebp-000000192h], 055h
           mov byte ptr [ebp-000000191h], 055h
           mov byte ptr [ebp-000000190h], 0AAh
           mov byte ptr [ebp-00000018Fh], 0AAh
           mov byte ptr [ebp-00000018Eh], 0AAh
           mov byte ptr [ebp-00000018Dh], 0AAh
           mov byte ptr [ebp-00000018Ch], 055h
           mov byte ptr [ebp-00000018Bh], 055h
           mov byte ptr [ebp-00000018Ah], 055h
           mov byte ptr [ebp-000000189h], 055h
           mov byte ptr [ebp-000000188h], 0AAh
           mov byte ptr [ebp-000000187h], 0AAh
           mov byte ptr [ebp-000000186h], 0AAh
           mov byte ptr [ebp-000000185h], 0AAh
           mov byte ptr [ebp-000000184h], 055h
           mov byte ptr [ebp-000000183h], 055h
           mov byte ptr [ebp-000000182h], 055h
           mov byte ptr [ebp-000000181h], 055h
           mov byte ptr [ebp-000000180h], 0AAh
           mov byte ptr [ebp-00000017Fh], 0AAh
           mov byte ptr [ebp-00000017Eh], 0AAh
           mov byte ptr [ebp-00000017Dh], 0AAh
           mov byte ptr [ebp-00000017Ch], 055h
           mov byte ptr [ebp-00000017Bh], 055h
           mov byte ptr [ebp-00000017Ah], 055h
           mov byte ptr [ebp-000000179h], 055h
           mov byte ptr [ebp-000000178h], 0AAh
           mov byte ptr [ebp-000000177h], 0AAh
           mov byte ptr [ebp-000000176h], 0AAh
           mov byte ptr [ebp-000000175h], 0AAh
           mov byte ptr [ebp-000000174h], 055h
           mov byte ptr [ebp-000000173h], 055h
           mov byte ptr [ebp-000000172h], 055h
           mov byte ptr [ebp-000000171h], 055h
           mov byte ptr [ebp-000000170h], 0AAh
           mov byte ptr [ebp-00000016Fh], 0AAh
           mov byte ptr [ebp-00000016Eh], 0AAh
           mov byte ptr [ebp-00000016Dh], 0AAh
           mov byte ptr [ebp-00000016Ch], 055h
           mov byte ptr [ebp-00000016Bh], 055h
           mov byte ptr [ebp-00000016Ah], 055h
           mov byte ptr [ebp-000000169h], 055h
           mov byte ptr [ebp-000000168h], 0AAh
           mov byte ptr [ebp-000000167h], 0AAh
           mov byte ptr [ebp-000000166h], 0AAh
           mov byte ptr [ebp-000000165h], 0AAh
           mov byte ptr [ebp-000000164h], 055h
           mov byte ptr [ebp-000000163h], 055h
           mov byte ptr [ebp-000000162h], 055h
           mov byte ptr [ebp-000000161h], 055h
           mov byte ptr [ebp-000000160h], 0AAh
           mov byte ptr [ebp-00000015Fh], 0AAh
           mov byte ptr [ebp-00000015Eh], 0AAh
           mov byte ptr [ebp-00000015Dh], 0AAh
           mov byte ptr [ebp-00000015Ch], 055h
           mov byte ptr [ebp-00000015Bh], 055h
           mov byte ptr [ebp-00000015Ah], 055h
           mov byte ptr [ebp-000000159h], 055h
           mov byte ptr [ebp-000000158h], 0AAh
           mov byte ptr [ebp-000000157h], 0AAh
           mov byte ptr [ebp-000000156h], 0AAh
           mov byte ptr [ebp-000000155h], 0AAh
           mov byte ptr [ebp-000000154h], 055h
           mov byte ptr [ebp-000000153h], 055h
           mov byte ptr [ebp-000000152h], 055h
           mov byte ptr [ebp-000000151h], 055h
           mov byte ptr [ebp-000000150h], 0AAh
           mov byte ptr [ebp-00000014Fh], 0AAh
           mov byte ptr [ebp-00000014Eh], 0AAh
           mov byte ptr [ebp-00000014Dh], 0AAh
           mov byte ptr [ebp-00000014Ch], 055h
           mov byte ptr [ebp-00000014Bh], 055h
           mov byte ptr [ebp-00000014Ah], 055h
           mov byte ptr [ebp-000000149h], 055h
           mov byte ptr [ebp-000000148h], 0AAh
           mov byte ptr [ebp-000000147h], 0AAh
           mov byte ptr [ebp-000000146h], 0AAh
           mov byte ptr [ebp-000000145h], 0AAh
           mov byte ptr [ebp-000000144h], 055h
           mov byte ptr [ebp-000000143h], 055h
           mov byte ptr [ebp-000000142h], 055h
           mov byte ptr [ebp-000000141h], 055h
           mov byte ptr [ebp-000000140h], 0AAh
           mov byte ptr [ebp-00000013Fh], 0AAh
           mov byte ptr [ebp-00000013Eh], 0AAh
           mov byte ptr [ebp-00000013Dh], 0AAh
           mov byte ptr [ebp-00000013Ch], 055h
           mov byte ptr [ebp-00000013Bh], 055h
           mov byte ptr [ebp-00000013Ah], 055h
           mov byte ptr [ebp-000000139h], 055h
           mov byte ptr [ebp-000000138h], 0AAh
           mov byte ptr [ebp-000000137h], 0AAh
           mov byte ptr [ebp-000000136h], 0AAh
           mov byte ptr [ebp-000000135h], 0AAh
           mov byte ptr [ebp-000000134h], 055h
           mov byte ptr [ebp-000000133h], 055h
           mov byte ptr [ebp-000000132h], 055h
           mov byte ptr [ebp-000000131h], 055h
           mov byte ptr [ebp-000000238h], 03Fh
           mov byte ptr [ebp-000000237h], 000h
           mov byte ptr [ebp-000000236h], 000h
           mov byte ptr [ebp-000000235h], 000h
           mov byte ptr [ebp-000000234h], 000h
           mov byte ptr [ebp-000000233h], 000h
           mov byte ptr [ebp-000000232h], 000h
           mov byte ptr [ebp-000000231h], 000h
           mov byte ptr [ebp-000000230h], 000h
           mov byte ptr [ebp-00000022Fh], 000h
           mov byte ptr [ebp-00000022Eh], 000h
           mov byte ptr [ebp-00000022Dh], 000h
           mov byte ptr [ebp-00000022Ch], 000h
           mov byte ptr [ebp-00000022Bh], 000h
           mov byte ptr [ebp-00000022Ah], 000h
           mov byte ptr [ebp-000000229h], 01Fh
           mov byte ptr [ebp-000000228h], 0FFh
           mov byte ptr [ebp-000000227h], 0FCh
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-000000226h], 001h
           mov byte ptr [ebp-000000225h], 0E0h
           mov byte ptr [ebp-000000224h], 000h
           mov byte ptr [ebp-000000223h], 003h
           mov byte ptr [ebp-000000222h], 0FAh
           mov byte ptr [ebp-000000221h], 000h
           mov byte ptr [ebp-000000220h], 000h
           mov byte ptr [ebp-00000021Fh], 000h
           mov byte ptr [ebp-00000021Eh], 004h
           mov byte ptr [ebp-00000021Dh], 000h
           mov byte ptr [ebp-00000021Ch], 003h
           mov byte ptr [ebp-00000021Bh], 0F0h
           mov byte ptr [ebp-00000021Ah], 000h
           mov byte ptr [ebp-000000219h], 000h
           mov byte ptr [ebp-000000218h], 0FCh
           mov byte ptr [ebp-000000217h], 000h
           mov byte ptr [ebp-000000216h], 000h
           mov byte ptr [ebp-000000215h], 007h
           mov byte ptr [ebp-000000214h], 000h
           mov byte ptr [ebp-000000213h], 000h
           mov byte ptr [ebp-000000212h], 000h
           mov byte ptr [ebp-000000211h], 000h
           mov byte ptr [ebp-000000210h], 000h
           mov byte ptr [ebp-00000020Fh], 000h
           mov byte ptr [ebp-00000020Eh], 000h
           mov byte ptr [ebp-00000020Dh], 000h
           mov byte ptr [ebp-00000020Ch], 0F8h
           mov byte ptr [ebp-00000020Bh], 003h
           mov byte ptr [ebp-00000020Ah], 0FFh
           mov byte ptr [ebp-000000209h], 0FFh
           mov byte ptr [ebp-000000208h], 007h
           mov byte ptr [ebp-000000207h], 0FCh
           mov byte ptr [ebp-000000206h], 000h
           mov byte ptr [ebp-000000205h], 000h
           mov byte ptr [ebp-000000204h], 000h
           mov byte ptr [ebp-000000203h], 000h
           mov byte ptr [ebp-000000202h], 000h
           mov byte ptr [ebp-000000201h], 000h
           mov byte ptr [ebp-000000200h], 000h
           mov byte ptr [ebp-0000001FFh], 000h
           mov byte ptr [ebp-0000001FEh], 01Fh
           mov byte ptr [ebp-0000001FDh], 0FFh
           mov byte ptr [ebp-0000001FCh], 0FFh
           mov byte ptr [ebp-0000001FBh], 080h
           mov byte ptr [ebp-0000001FAh], 000h
           mov byte ptr [ebp-0000001F9h], 000h
           mov byte ptr [ebp-0000001F8h], 000h
           mov byte ptr [ebp-0000001F7h], 000h
           mov byte ptr [ebp-0000001F6h], 000h
           mov byte ptr [ebp-0000001F5h], 000h
           mov byte ptr [ebp-0000001F4h], 000h
           mov byte ptr [ebp-0000001F3h], 01Fh
           mov byte ptr [ebp-0000001F2h], 0FFh
           mov byte ptr [ebp-0000001F1h], 0E0h
           mov byte ptr [ebp-0000001F0h], 080h
           mov byte ptr [ebp-0000001EFh], 0E0h
           mov byte ptr [ebp-0000001EEh], 000h
           mov byte ptr [ebp-0000001EDh], 03Fh
           mov byte ptr [ebp-0000001ECh], 07Fh
           mov byte ptr [ebp-0000001EBh], 080h
           mov byte ptr [ebp-0000001EAh], 000h
           mov byte ptr [ebp-0000001E9h], 000h
           mov byte ptr [ebp-0000001E8h], 000h
           mov byte ptr [ebp-0000001E7h], 000h
           mov byte ptr [ebp-0000001E6h], 000h
           mov byte ptr [ebp-0000001E5h], 000h
           mov byte ptr [ebp-0000001E4h], 000h
           mov byte ptr [ebp-0000001E3h], 000h
           mov byte ptr [ebp-0000001E2h], 000h
           mov byte ptr [ebp-0000001E1h], 000h
           mov byte ptr [ebp-0000001E0h], 015h
           mov byte ptr [ebp-0000001DFh], 01Fh
           mov byte ptr [ebp-0000001DEh], 0FEh
           mov byte ptr [ebp-0000001DDh], 080h
           mov byte ptr [ebp-0000001DCh], 080h
           mov byte ptr [ebp-0000001DBh], 000h
           mov byte ptr [ebp-0000001DAh], 000h
           mov byte ptr [ebp-0000001D9h], 028h
           mov byte ptr [ebp-0000001D8h], 000h
           mov byte ptr [ebp-0000001D7h], 000h
           mov byte ptr [ebp-0000001D6h], 000h
           mov byte ptr [ebp-0000001D5h], 000h
           mov byte ptr [ebp-0000001D4h], 000h
           mov byte ptr [ebp-0000001D3h], 000h
           mov byte ptr [ebp-0000001D2h], 000h
           mov byte ptr [ebp-0000001D1h], 000h
           mov byte ptr [ebp-0000001D0h], 0FFh
           mov byte ptr [ebp-0000001CFh], 0F0h
           mov byte ptr [ebp-0000001CEh], 000h
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-0000001CDh], 001h
           mov byte ptr [ebp-0000001CCh], 000h
           mov byte ptr [ebp-0000001CBh], 00Fh
           mov byte ptr [ebp-0000001CAh], 0FFh
           mov byte ptr [ebp-0000001C9h], 0FEh
           mov byte ptr [ebp-0000001C8h], 000h
           mov byte ptr [ebp-0000001C7h], 000h
           mov byte ptr [ebp-0000001C6h], 000h
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-0000001C5h], 001h
           mov byte ptr [ebp-0000001C4h], 0F0h
           mov byte ptr [ebp-0000001C3h], 000h
           mov byte ptr [ebp-0000001C2h], 000h
           mov byte ptr [ebp-0000001C1h], 000h
           mov byte ptr [ebp-0000001C0h], 000h
           mov byte ptr [ebp-0000001BFh], 000h
           mov byte ptr [ebp-0000001BEh], 000h
           mov byte ptr [ebp-0000001BDh], 000h
           mov byte ptr [ebp-0000001BCh], 003h
           mov byte ptr [ebp-0000001BBh], 0FFh
           mov byte ptr [ebp-0000001BAh], 080h
           mov byte ptr [ebp-0000001B9h], 000h
           mov byte ptr [ebp-0000002B8h], 022h
           mov byte ptr [ebp-0000002B7h], 022h
           mov byte ptr [ebp-0000002B6h], 022h
           mov byte ptr [ebp-0000002B5h], 022h
           mov byte ptr [ebp-0000002B4h], 011h
           mov byte ptr [ebp-0000002B3h], 011h
           mov byte ptr [ebp-0000002B2h], 011h
           mov byte ptr [ebp-0000002B1h], 011h
           mov byte ptr [ebp-0000002B0h], 088h
           mov byte ptr [ebp-0000002AFh], 088h
           mov byte ptr [ebp-0000002AEh], 088h
           mov byte ptr [ebp-0000002ADh], 088h
           mov byte ptr [ebp-0000002ACh], 044h
           mov byte ptr [ebp-0000002ABh], 044h
           mov byte ptr [ebp-0000002AAh], 044h
           mov byte ptr [ebp-0000002A9h], 044h
           mov byte ptr [ebp-0000002A8h], 022h
           mov byte ptr [ebp-0000002A7h], 022h
           mov byte ptr [ebp-0000002A6h], 022h
           mov byte ptr [ebp-0000002A5h], 022h
           mov byte ptr [ebp-0000002A4h], 011h
           mov byte ptr [ebp-0000002A3h], 011h
           mov byte ptr [ebp-0000002A2h], 011h
           mov byte ptr [ebp-0000002A1h], 011h
           mov byte ptr [ebp-0000002A0h], 088h
           mov byte ptr [ebp-00000029Fh], 088h
           mov byte ptr [ebp-00000029Eh], 088h
           mov byte ptr [ebp-00000029Dh], 088h
           mov byte ptr [ebp-00000029Ch], 044h
           mov byte ptr [ebp-00000029Bh], 044h
           mov byte ptr [ebp-00000029Ah], 044h
           mov byte ptr [ebp-000000299h], 044h
           mov byte ptr [ebp-000000298h], 022h
           mov byte ptr [ebp-000000297h], 022h
           mov byte ptr [ebp-000000296h], 022h
           mov byte ptr [ebp-000000295h], 022h
           mov byte ptr [ebp-000000294h], 011h
           mov byte ptr [ebp-000000293h], 011h
           mov byte ptr [ebp-000000292h], 011h
           mov byte ptr [ebp-000000291h], 011h
           mov byte ptr [ebp-000000290h], 088h
           mov byte ptr [ebp-00000028Fh], 088h
           mov byte ptr [ebp-00000028Eh], 088h
           mov byte ptr [ebp-00000028Dh], 088h
           mov byte ptr [ebp-00000028Ch], 044h
           mov byte ptr [ebp-00000028Bh], 044h
           mov byte ptr [ebp-00000028Ah], 044h
           mov byte ptr [ebp-000000289h], 044h
           mov byte ptr [ebp-000000288h], 022h
           mov byte ptr [ebp-000000287h], 022h
           mov byte ptr [ebp-000000286h], 022h
           mov byte ptr [ebp-000000285h], 022h
           mov byte ptr [ebp-000000284h], 011h
           mov byte ptr [ebp-000000283h], 011h
           mov byte ptr [ebp-000000282h], 011h
           mov byte ptr [ebp-000000281h], 011h
           mov byte ptr [ebp-000000280h], 088h
           mov byte ptr [ebp-00000027Fh], 088h
           mov byte ptr [ebp-00000027Eh], 088h
           mov byte ptr [ebp-00000027Dh], 088h
           mov byte ptr [ebp-00000027Ch], 044h
           mov byte ptr [ebp-00000027Bh], 044h
           mov byte ptr [ebp-00000027Ah], 044h
           mov byte ptr [ebp-000000279h], 044h
           mov byte ptr [ebp-000000278h], 022h
           mov byte ptr [ebp-000000277h], 022h
           mov byte ptr [ebp-000000276h], 022h
           mov byte ptr [ebp-000000275h], 022h
           mov byte ptr [ebp-000000274h], 011h
           mov byte ptr [ebp-000000273h], 011h
           mov byte ptr [ebp-000000272h], 011h
           mov byte ptr [ebp-000000271h], 011h
           mov byte ptr [ebp-000000270h], 088h
           mov byte ptr [ebp-00000026Fh], 088h
           mov byte ptr [ebp-00000026Eh], 088h
           mov byte ptr [ebp-00000026Dh], 088h
           mov byte ptr [ebp-00000026Ch], 044h
           mov byte ptr [ebp-00000026Bh], 044h
           mov byte ptr [ebp-00000026Ah], 044h
           mov byte ptr [ebp-000000269h], 044h
           mov byte ptr [ebp-000000268h], 022h
           mov byte ptr [ebp-000000267h], 022h
           mov byte ptr [ebp-000000266h], 022h
           mov byte ptr [ebp-000000265h], 022h
           mov byte ptr [ebp-000000264h], 011h
           mov byte ptr [ebp-000000263h], 011h
           mov byte ptr [ebp-000000262h], 011h
           mov byte ptr [ebp-000000261h], 011h
           mov byte ptr [ebp-000000260h], 088h
           mov byte ptr [ebp-00000025Fh], 088h
           mov byte ptr [ebp-00000025Eh], 088h
           mov byte ptr [ebp-00000025Dh], 088h
           mov byte ptr [ebp-00000025Ch], 044h
           mov byte ptr [ebp-00000025Bh], 044h
           mov byte ptr [ebp-00000025Ah], 044h
           mov byte ptr [ebp-000000259h], 044h
           mov byte ptr [ebp-000000258h], 022h
           mov byte ptr [ebp-000000257h], 022h
           mov byte ptr [ebp-000000256h], 022h
           mov byte ptr [ebp-000000255h], 022h
           mov byte ptr [ebp-000000254h], 011h
           mov byte ptr [ebp-000000253h], 011h
           mov byte ptr [ebp-000000252h], 011h
           mov byte ptr [ebp-000000251h], 011h
           mov byte ptr [ebp-000000250h], 088h
           mov byte ptr [ebp-00000024Fh], 088h
           mov byte ptr [ebp-00000024Eh], 088h
           mov byte ptr [ebp-00000024Dh], 088h
           mov byte ptr [ebp-00000024Ch], 044h
           mov byte ptr [ebp-00000024Bh], 044h
           mov byte ptr [ebp-00000024Ah], 044h
           mov byte ptr [ebp-000000249h], 044h
           mov byte ptr [ebp-000000248h], 022h
           mov byte ptr [ebp-000000247h], 022h
           mov byte ptr [ebp-000000246h], 022h
           mov byte ptr [ebp-000000245h], 022h
           mov byte ptr [ebp-000000244h], 011h
           mov byte ptr [ebp-000000243h], 011h
           mov byte ptr [ebp-000000242h], 011h
           mov byte ptr [ebp-000000241h], 011h
           mov byte ptr [ebp-000000240h], 088h
           mov byte ptr [ebp-00000023Fh], 088h
           mov byte ptr [ebp-00000023Eh], 088h
           mov byte ptr [ebp-00000023Dh], 088h
           mov byte ptr [ebp-00000023Ch], 044h
           mov byte ptr [ebp-00000023Bh], 044h
           mov byte ptr [ebp-00000023Ah], 044h
           mov byte ptr [ebp-000000239h], 044h
           mov byte ptr [ebp-000000130h], 000h
           mov byte ptr [ebp-00000012Fh], 000h
           mov byte ptr [ebp-00000012Eh], 000h
           mov byte ptr [ebp-00000012Dh], 000h
           mov byte ptr [ebp-00000012Ch], 000h
           mov byte ptr [ebp-00000012Bh], 000h
           mov byte ptr [ebp-00000012Ah], 000h
           mov byte ptr [ebp-000000129h], 000h
           mov byte ptr [ebp-000000128h], 000h
           mov byte ptr [ebp-000000127h], 000h
           mov byte ptr [ebp-000000126h], 000h
           mov byte ptr [ebp-000000125h], 000h
           mov byte ptr [ebp-000000124h], 000h
           mov byte ptr [ebp-000000123h], 000h
           mov byte ptr [ebp-000000122h], 000h
           mov byte ptr [ebp-000000121h], 01Fh
           mov byte ptr [ebp-000000120h], 0FFh
           mov byte ptr [ebp-00000011Fh], 0FCh
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-00000011Eh], 001h
           mov byte ptr [ebp-00000011Dh], 0E0h
           mov byte ptr [ebp-00000011Ch], 000h
           mov byte ptr [ebp-00000011Bh], 003h
           mov byte ptr [ebp-00000011Ah], 0FAh
           mov byte ptr [ebp-000000119h], 000h
           mov byte ptr [ebp-000000118h], 000h
           mov byte ptr [ebp-000000117h], 000h
           mov byte ptr [ebp-000000116h], 004h
           mov byte ptr [ebp-000000115h], 000h
           mov byte ptr [ebp-000000114h], 000h
           mov byte ptr [ebp-000000113h], 000h
           mov byte ptr [ebp-000000112h], 000h
           mov byte ptr [ebp-000000111h], 000h
           mov byte ptr [ebp-000000110h], 000h
           mov byte ptr [ebp-00000010Fh], 000h
           mov byte ptr [ebp-00000010Eh], 000h
           mov byte ptr [ebp-00000010Dh], 000h
           mov byte ptr [ebp-00000010Ch], 000h
           mov byte ptr [ebp-00000010Bh], 000h
           mov byte ptr [ebp-00000010Ah], 000h
           mov byte ptr [ebp-000000109h], 000h
           mov byte ptr [ebp-000000108h], 000h
           mov byte ptr [ebp-000000107h], 000h
           mov byte ptr [ebp-000000106h], 000h
           mov byte ptr [ebp-000000105h], 000h
           mov byte ptr [ebp-000000104h], 000h
           mov byte ptr [ebp-000000103h], 000h
           mov byte ptr [ebp-000000102h], 000h
           mov byte ptr [ebp-000000101h], 000h
           mov byte ptr [ebp-000000100h], 000h
           mov byte ptr [ebp-0000000FFh], 000h
           mov byte ptr [ebp-0000000FEh], 000h
           mov byte ptr [ebp-0000000FDh], 000h
           mov byte ptr [ebp-0000000FCh], 000h
           mov byte ptr [ebp-0000000FBh], 000h
           mov byte ptr [ebp-0000000FAh], 000h
           mov byte ptr [ebp-0000000F9h], 000h
           mov byte ptr [ebp-0000000F8h], 000h
           mov byte ptr [ebp-0000000F7h], 000h
           mov byte ptr [ebp-0000000F6h], 000h
           mov byte ptr [ebp-0000000F5h], 000h
           mov byte ptr [ebp-0000000F4h], 000h
           mov byte ptr [ebp-0000000F3h], 000h
           mov byte ptr [ebp-0000000F2h], 000h
           mov byte ptr [ebp-0000000F1h], 000h
           mov byte ptr [ebp-0000000F0h], 000h
           mov byte ptr [ebp-0000000EFh], 000h
           mov byte ptr [ebp-0000000EEh], 000h
           mov byte ptr [ebp-0000000EDh], 000h
           mov byte ptr [ebp-0000000ECh], 000h
           mov byte ptr [ebp-0000000EBh], 01Fh
           mov byte ptr [ebp-0000000EAh], 0FFh
           mov byte ptr [ebp-0000000E9h], 0E0h
           mov byte ptr [ebp-0000000E8h], 080h
           mov byte ptr [ebp-0000000E7h], 0E0h
           mov byte ptr [ebp-0000000E6h], 000h
           mov byte ptr [ebp-0000000E5h], 03Fh
           mov byte ptr [ebp-0000000E4h], 07Fh
           mov byte ptr [ebp-0000000E3h], 080h
           mov byte ptr [ebp-0000000E2h], 000h
           mov byte ptr [ebp-0000000E1h], 000h
           mov byte ptr [ebp-0000000E0h], 000h
           mov byte ptr [ebp-0000000DFh], 000h
           mov byte ptr [ebp-0000000DEh], 000h
           mov byte ptr [ebp-0000000DDh], 000h
           mov byte ptr [ebp-0000000DCh], 000h
           mov byte ptr [ebp-0000000DBh], 000h
           mov byte ptr [ebp-0000000DAh], 000h
           mov byte ptr [ebp-0000000D9h], 000h
           mov byte ptr [ebp-0000000D8h], 000h
           mov byte ptr [ebp-0000000D7h], 000h
           mov byte ptr [ebp-0000000D6h], 000h
           mov byte ptr [ebp-0000000D5h], 000h
           mov byte ptr [ebp-0000000D4h], 000h
           mov byte ptr [ebp-0000000D3h], 000h
           mov byte ptr [ebp-0000000D2h], 000h
           mov byte ptr [ebp-0000000D1h], 000h
           mov byte ptr [ebp-0000000D0h], 000h
           mov byte ptr [ebp-0000000CFh], 000h
           mov byte ptr [ebp-0000000CEh], 000h
           mov byte ptr [ebp-0000000CDh], 000h
           mov byte ptr [ebp-0000000CCh], 000h
           mov byte ptr [ebp-0000000CBh], 000h
           mov byte ptr [ebp-0000000CAh], 000h
           mov byte ptr [ebp-0000000C9h], 000h
           mov byte ptr [ebp-0000000C8h], 0FFh
           mov byte ptr [ebp-0000000C7h], 0F0h
           mov byte ptr [ebp-0000000C6h], 000h
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ebp-0000000C5h], 001h
           mov byte ptr [ebp-0000000C4h], 000h
           mov byte ptr [ebp-0000000C3h], 00Fh
           mov byte ptr [ebp-0000000C2h], 0FFh
           mov byte ptr [ebp-0000000C1h], 0FEh
           mov byte ptr [ebp-0000000C0h], 000h
           mov byte ptr [ebp-0000000BFh], 000h
           mov byte ptr [ebp-0000000BEh], 000h
           mov byte ptr [ebp-0000000BDh], 000h
           mov byte ptr [ebp-0000000BCh], 000h
           mov byte ptr [ebp-0000000BBh], 000h
           mov byte ptr [ebp-0000000BAh], 000h
           mov byte ptr [ebp-0000000B9h], 000h
           mov byte ptr [ebp-0000000B8h], 000h
           mov byte ptr [ebp-0000000B7h], 000h
           mov byte ptr [ebp-0000000B6h], 000h
           mov byte ptr [ebp-0000000B5h], 000h
           mov byte ptr [ebp-0000000B4h], 000h
           mov byte ptr [ebp-0000000B3h], 000h
           mov byte ptr [ebp-0000000B2h], 000h
           mov byte ptr [ebp-0000000B1h], 000h
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+014h]
           or eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+000000114h]
           push 03F333333h
           push 03F333333h
           push 03F333333h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-0000001B8h], 000000000h
           jmp l1001A5F1
;
;* Jump:
; 1001A681(U) 
;
l1001A5E2: mov eax, dword ptr [ebp-0000001B8h]
           add eax, 000000001h
           mov dword ptr [ebp-0000001B8h], eax
;
;* Jump:
; 1001A5E0(U) 
;
l1001A5F1: mov ecx, dword ptr [ebp-0000001B8h]
           cmp ecx, dword ptr [ebp+010h]
           jnb l1001A686
           mov edx, dword ptr [ebp-0000001B8h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001A5E2
;
;* Jump:
; 1001A5FA(C) 
;
l1001A686: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov dword ptr [ebp-0000001B4h], 0FFFFFFFFh
           push 000000B42h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-0000001B8h], 000000000h
           jmp l1001A6C4
;
;* Jump:
; 1001A963(U) 
;
l1001A6B5: mov edx, dword ptr [ebp-0000001B8h]
           add edx, 000000001h
           mov dword ptr [ebp-0000001B8h], edx
;
;* Jump:
; 1001A6B3(U) 
;
l1001A6C4: mov eax, dword ptr [ebp-0000001B8h]
           cmp eax, dword ptr [ebp+010h]
           jnb l1001A968
           mov ecx, dword ptr [ebp-0000001B8h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [ecx]
           fadd dword ptr [edx+004h]
           mov eax, dword ptr [ebp-020h]
           fadd dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-004h]
           fadd dword ptr [ecx]
           mov edx, dword ptr [ebp-004h]
           fadd dword ptr [edx+004h]
           mov eax, dword ptr [ebp-004h]
           fadd dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-018h]
           fadd dword ptr [ecx]
           mov edx, dword ptr [ebp-018h]
           fadd dword ptr [edx+004h]
           mov eax, dword ptr [ebp-018h]
           fadd dword ptr [eax+008h]
           fmul dword ptr [g1003734C]
           fstp dword ptr [ebp-0000002BCh]
           fld dword ptr [ebp-0000002BCh]
           fcomp qword ptr [g10037340]
           fnstsw ax
           test ah, 001h
           je l1001A848
           cmp dword ptr [ebp-0000001B4h], 000000000h
           je l1001A825
           call [__imp_glEnd]; [OPENGL32.glEnd].
           lea ecx, [ebp-0000000B0h]
           push ecx
           call [__imp_glPolygonStipple]; [OPENGL32.glPolygonStipple].
           mov dword ptr [ebp-0000001B4h], 000000000h
           mov edx, dword ptr [ebp-0000002BCh]
           push edx
           mov eax, dword ptr [ebp-0000002BCh]
           push eax
           mov ecx, dword ptr [ebp-0000002BCh]
           push ecx
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1001A7E3(C) 
;
l1001A825: mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001A963
;
;* Jump:
; 1001A7DA(C) 
;
l1001A848: fld dword ptr [ebp-0000002BCh]
           fcomp qword ptr [g10037100]
           fnstsw ax
           test ah, 001h
           je l1001A8C1
           cmp dword ptr [ebp-0000001B4h], 000000001h
           je l1001A89E
           call [__imp_glEnd]; [OPENGL32.glEnd].
           lea edx, [ebp-000000238h]
           push edx
           call [__imp_glPolygonStipple]; [OPENGL32.glPolygonStipple].
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-0000001B4h], 000000001h
           push 03E99999Ah
           push 03E99999Ah
           push 03E99999Ah
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1001A862(C) 
;
l1001A89E: mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001A963
;
;* Jump:
; 1001A859(C) 
;
l1001A8C1: fld dword ptr [ebp-0000002BCh]
           fcomp qword ptr [g10037330]
           fnstsw ax
           test ah, 001h
           je l1001A963
           cmp dword ptr [ebp-0000001B4h], 000000002h
           je l1001A945
           call [__imp_glEnd]; [OPENGL32.glEnd].
           lea eax, [ebp-000000130h]
           push eax
           call [__imp_glPolygonStipple]; [OPENGL32.glPolygonStipple].
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ebp-0000001B4h], 000000002h
           fld dword ptr [ebp-0000002BCh]
           fcomp qword ptr [g10037320]
           fnstsw ax
           test ah, 001h
           je l1001A928
           push 03ECCCCCDh
           push 03ECCCCCDh
           push 03ECCCCCDh
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           jmp l1001A93D
;
;* Jump:
; 1001A90F(C) 
;
l1001A928: push 03F0CCCCDh
           push 03F0CCCCDh
           push 03F0CCCCDh
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
;
;* Jump:
; 1001A926(U) 
;
l1001A93D: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1001A8DF(C) 
;
l1001A945: mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
;
;* Jump:
; 1001A843(U), 1001A8BC(U), 1001A8D2(C) 
;
l1001A963: jmp near ptr l1001A6B5
;
;* Jump:
; 1001A6CD(C) 
;
l1001A968: call [__imp_glEnd]; [OPENGL32.glEnd].
           push 000000B42h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           jmp near ptr l1001AFB4
l1001A97E: mov ecx, dword ptr [ebp+014h]
           or ecx, 000000009h
           push ecx
           mov edx, dword ptr [ebp-0000002DCh]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [eax+000000114h]
           push 000002401h
           push 000002500h
           push 000002000h
           call [__imp_glTexGeni]; [OPENGL32.glTexGeni].
           push offset g1003AA54
           push 000002501h
           push 000002000h
           call [__imp_glTexGenfv]; [OPENGL32.glTexGenfv].
           push 000002401h
           push 000002500h
           push 000002001h
           call [__imp_glTexGeni]; [OPENGL32.glTexGeni].
           push offset g1003AA64
           push 000002501h
           push 000002001h
           call [__imp_glTexGenfv]; [OPENGL32.glTexGenfv].
           push 000000C60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000C61h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 03F333333h
           push 03F333333h
           push 03F333333h
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-0000002C4h], 0FFFFFFFFh
           mov dword ptr [ebp-0000002C0h], 000000000h
           jmp l1001AA45
;
;* Jump:
; 1001AC50(U) 
;
l1001AA36: mov ecx, dword ptr [ebp-0000002C0h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000002C0h], ecx
;
;* Jump:
; 1001AA34(U) 
;
l1001AA45: mov edx, dword ptr [ebp-0000002C0h]
           cmp edx, dword ptr [ebp+010h]
           jnb l1001AC55
           mov eax, dword ptr [ebp-0000002C0h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-020h]
           fld dword ptr [eax]
           fadd dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-020h]
           fadd dword ptr [edx+008h]
           mov eax, dword ptr [ebp-004h]
           fadd dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           fadd dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-004h]
           fadd dword ptr [edx+008h]
           mov eax, dword ptr [ebp-018h]
           fadd dword ptr [eax]
           mov ecx, dword ptr [ebp-018h]
           fadd dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-018h]
           fadd dword ptr [edx+008h]
           fmul dword ptr [g1003734C]
           fstp dword ptr [ebp-0000002CCh]
           fld dword ptr [ebp-0000002CCh]
           fcomp qword ptr [g10037340]
           fnstsw ax
           test ah, 001h
           je l1001AB91
           fld dword ptr [ebp-0000002CCh]
           fcomp qword ptr [g10037310]
           fnstsw ax
           test ah, 001h
           je l1001AB85
           push 03E99999Ah
           push 03E99999Ah
           push 03E99999Ah
           call [__imp_glColor3f]; [OPENGL32.glColor3f].
;
;* Jump:
; 1001AB6E(C) 
;
l1001AB85: mov dword ptr [ebp-0000002C8h], 0000007D2h
           jmp l1001ABF8
;
;* Jump:
; 1001AB5B(C) 
;
l1001AB91: fld dword ptr [ebp-0000002CCh]
           fcomp qword ptr [g10037300]
           fnstsw ax
           test ah, 001h
           je l1001ABB0
           mov dword ptr [ebp-0000002C8h], 0000007D4h
           jmp l1001ABF8
;
;* Jump:
; 1001ABA2(C) 
;
l1001ABB0: fld dword ptr [ebp-0000002CCh]
           fcomp qword ptr [g100372F0]
           fnstsw ax
           test ah, 001h
           je l1001ABCF
           mov dword ptr [ebp-0000002C8h], 0000007D3h
           jmp l1001ABF8
;
;* Jump:
; 1001ABC1(C) 
;
l1001ABCF: fld dword ptr [ebp-0000002CCh]
           fcomp qword ptr [g100372E0]
           fnstsw ax
           test ah, 001h
           je l1001ABEE
           mov dword ptr [ebp-0000002C8h], 0000007D5h
           jmp l1001ABF8
;
;* Jump:
; 1001ABE0(C) 
;
l1001ABEE: mov dword ptr [ebp-0000002C8h], 0000007D6h
;
;* Jump:
; 1001AB8F(U), 1001ABAE(U), 1001ABCD(U), 1001ABEC(U) 
;
l1001ABF8: mov eax, dword ptr [ebp-0000002C4h]
           cmp eax, dword ptr [ebp-0000002C8h]
           je l1001AC32
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-0000002C8h]
           push ecx
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-0000002C8h]
           mov dword ptr [ebp-0000002C4h], edx
;
;* Jump:
; 1001AC04(C) 
;
l1001AC32: mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001AA36
;
;* Jump:
; 1001AA4E(C) 
;
l1001AC55: call [__imp_glEnd]; [OPENGL32.glEnd].
           push 000000C60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000C61h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           jmp near ptr l1001AFB4
l1001AC76: mov eax, dword ptr [ebp+014h]
           or eax, 000000009h
           push eax
           mov ecx, dword ptr [ebp-0000002DCh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000002DCh]
           call [edx+000000114h]
           push 000002401h
           push 000002500h
           push 000002000h
           call [__imp_glTexGeni]; [OPENGL32.glTexGeni].
           push offset g1003AA94
           push 000002501h
           push 000002000h
           call [__imp_glTexGenfv]; [OPENGL32.glTexGenfv].
           push 000002401h
           push 000002500h
           push 000002001h
           call [__imp_glTexGeni]; [OPENGL32.glTexGeni].
           push offset g1003AAA4
           push 000002501h
           push 000002001h
           call [__imp_glTexGenfv]; [OPENGL32.glTexGenfv].
           push 000000C60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           push 000000C61h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov dword ptr [ebp-0000002D4h], 0FFFFFFFFh
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-0000002D0h], 000000000h
           jmp l1001AD28
;
;* Jump:
; 1001AF93(U) 
;
l1001AD19: mov eax, dword ptr [ebp-0000002D0h]
           add eax, 000000001h
           mov dword ptr [ebp-0000002D0h], eax
;
;* Jump:
; 1001AD17(U) 
;
l1001AD28: mov ecx, dword ptr [ebp-0000002D0h]
           cmp ecx, dword ptr [ebp+010h]
           jnb l1001AF98
           mov edx, dword ptr [ebp-0000002D0h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-0000002DCh]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-0000002DCh]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-0000002DCh]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-020h]
           fld dword ptr [edx]
           fadd dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-020h]
           fadd dword ptr [ecx+008h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-0000002D8h]
           fld dword ptr [ebp-0000002D8h]
           fcomp qword ptr [g100372D0]
           fnstsw ax
           test ah, 001h
           je l1001AE60
           cmp dword ptr [ebp-0000002D4h], 0000007D2h
           je l1001AE60
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-01Ch], eax
           push 0000007D2h
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov dword ptr [ebp-0000002D4h], 0000007D2h
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           jmp near ptr l1001AF57
;
;* Jump:
; 1001AE1C(C), 1001AE28(C) 
;
l1001AE60: fld dword ptr [ebp-0000002D8h]
           fcomp qword ptr [g100372C0]
           fnstsw ax
           test ah, 001h
           je l1001AEB5
           cmp dword ptr [ebp-0000002D4h], 0000007D4h
           je l1001AEB5
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-01Ch], edx
           push 0000007D4h
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov dword ptr [ebp-0000002D4h], 0000007D4h
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           jmp near ptr l1001AF57
;
;* Jump:
; 1001AE71(C), 1001AE7D(C) 
;
l1001AEB5: fld dword ptr [ebp-0000002D8h]
           fcomp qword ptr [g100372F0]
           fnstsw ax
           test ah, 001h
           je l1001AF07
           cmp dword ptr [ebp-0000002D4h], 0000007D3h
           je l1001AF07
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-01Ch], ecx
           push 0000007D3h
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov dword ptr [ebp-0000002D4h], 0000007D3h
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           jmp l1001AF57
;
;* Jump:
; 1001AEC6(C), 1001AED2(C) 
;
l1001AF07: fld dword ptr [ebp-0000002D8h]
           fcomp qword ptr [g100372F0]
           fnstsw ax
           test ah, 001h
           jne l1001AF57
           cmp dword ptr [ebp-0000002D4h], 0000007D5h
           je l1001AF57
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-01Ch], eax
           push 0000007D5h
           push 000000DE1h
           call [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           mov dword ptr [ebp-0000002D4h], 0000007D5h
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1001AE5B(U), 1001AEB0(U), 1001AF05(U), 1001AF18(C), 1001AF24(C) 
;
l1001AF57: mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-004h]
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-014h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l1001AD19
;
;* Jump:
; 1001AD31(C) 
;
l1001AF98: call [__imp_glEnd]; [OPENGL32.glEnd].
           push 000000C60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           push 000000C61h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Jump:
; 10018F7F(C), 1001916A(U), 100194F1(U), 1001A979(U), 1001AC71(U) 
;
l1001AFB4: mov esp, ebp
           pop ebp
           ret 00010h
;
g1001AFBA  dd l10018F92
           dd l1001916F
           dd l100194F6
           dd l1001A97E
           dd l1001AC76
           dd l1001AFB4
           dd l1001AFB4
           dd l1001AFB4
           dd l1001AFB4
           dd l1001AFB4
           dd l1001AFB4
           dd l1001916F
l10018F46 ENDP
;
;* Jump:
; 10001582(U) 
;
l1001AFEA PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+00008482Ch], 000000000h
           je l1001B2B5
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+000084868h], 000000000h
           jne l1001B2B5
           mov dword ptr [ebp-014h], 000000000h
           jmp l1001B038
;
;* Jump:
; 1001B2AB(U) 
;
l1001B02F: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1001B02D(U) 
;
l1001B038: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l1001B2B0
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           je l1001B085
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1001B0B6
;
;* Jump:
; 1001B050(C) 
;
l1001B085: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001B083(U) 
;
l1001B0B6: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l1001B0D9
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l1001B0F2
;
;* Jump:
; 1001B0BD(C) 
;
l1001B0D9: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1001B0D7(U) 
;
l1001B0F2: mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+0000847FCh], 000000000h
           je l1001B19A
           mov eax, dword ptr [ebp-008h]
           add eax, 000000020h
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+030h]
           push eax
           call [g10051804]
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000020h
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+030h]
           push edx
           call [g10051804]
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+030h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           jmp near ptr l1001B2A2
;
;* Jump:
; 1001B0FC(C) 
;
l1001B19A: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [eax+020h]
           fadd dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-008h]
           fadd dword ptr [edx+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+02Ch]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov edx, dword ptr [ebp-008h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+030h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [eax+020h]
           fadd dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-00Ch]
           fadd dword ptr [edx+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+02Ch]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+030h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [eax+020h]
           fadd dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-010h]
           fadd dword ptr [edx+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+02Ch]
           push ecx
           mov edx, dword ptr [ebp-018h]
           push edx
           mov eax, dword ptr [ebp-018h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+030h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-010h]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
;
;* Jump:
; 1001B195(U) 
;
l1001B2A2: mov eax, dword ptr [ebp-004h]
           add eax, 000000018h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l1001B02F
;
;* Jump:
; 1001B044(C) 
;
l1001B2B0: jmp near ptr l1001B4ED
;
;* Jump:
; 1001B010(C), 1001B020(C) 
;
l1001B2B5: mov dword ptr [ebp-01Ch], 000000000h
           jmp l1001B2C7
;
;* Jump:
; 1001B4E8(U) 
;
l1001B2BE: mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-01Ch], ecx
;
;* Jump:
; 1001B2BC(U) 
;
l1001B2C7: mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+000062174h]
           jnb l1001B4ED
           mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx], 000000000h
           je l1001B314
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
           jmp l1001B345
;
;* Jump:
; 1001B2DF(C) 
;
l1001B314: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 1001B312(U) 
;
l1001B345: mov ecx, dword ptr [ebp-004h]
           cmp dword ptr [ecx+004h], 000000000h
           je l1001B368
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
           jmp l1001B381
;
;* Jump:
; 1001B34C(C) 
;
l1001B368: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1001B366(U) 
;
l1001B381: mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+0000847FCh], 000000000h
           je l1001B3FE
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-008h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           jmp near ptr l1001B4DF
;
;* Jump:
; 1001B38B(C) 
;
l1001B3FE: mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [ecx+020h]
           fadd dword ptr [edx+024h]
           mov eax, dword ptr [ebp-008h]
           fadd dword ptr [eax+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+02Ch]
           push edx
           mov eax, dword ptr [ebp-020h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [edx+020h]
           fadd dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-00Ch]
           fadd dword ptr [ecx+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+02Ch]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           mov eax, dword ptr [ebp-020h]
           push eax
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [eax+020h]
           fadd dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-010h]
           fadd dword ptr [edx+028h]
           fmul dword ptr [g10037350]
           fstp dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+02Ch]
           push ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           mov eax, dword ptr [ebp-020h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
;
;* Jump:
; 1001B3F9(U) 
;
l1001B4DF: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000018h
           mov dword ptr [ebp-004h], ecx
           jmp near ptr l1001B2BE
;
;* Jump:
; 1001B2B0(U), 1001B2D3(C) 
;
l1001B4ED: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret
l1001AFEA ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014FB(U) 
;
           call l1001BEC0; Implemented in c++ code
;
;* Jump:
; 10001190(U) 
;
           call l1001BEDC; Implemented in c++ code
;
;* Jump:
; 100013A7(U) 
;
           call l1001C0BC; Implemented in c++ code
;
;* Jump:
; 10001096(U) 
;
           call l1001C0D8; Implemented in c++ code
;
;* Jump:
; 100012E9(U) 
;
l1001C197 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000204h
           push esi
           push edi
           mov dword ptr [ebp-0000001FCh], ecx
           cmp dword ptr [ebp+008h], 000000000h
           jb l1001C1BF
           mov eax, dword ptr [ebp-0000001FCh]
           mov ecx, dword ptr [ebp+008h]
           cmp ecx, dword ptr [eax+000086300h]
           jb l1001C1C6
;
;* Jump:
; 1001C1AC(C) 
;
l1001C1BF: xor eax, eax
           jmp near ptr l1001CC6F
;
;* Jump:
; 1001C1BD(C) 
;
l1001C1C6: mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-0000001FCh]
           call [eax+000000224h]
           test eax, eax
           je l1001C214
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000178h], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+000086310h]
           cmp eax, dword ptr [ebp-000000178h]
           jne l1001C214
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l1001CC6F
;
;* Jump:
; 1001C1DC(C), 1001C208(C) 
;
l1001C214: mov dword ptr [ebp-00000014Ch], 000000094h
           mov dword ptr [ebp-0000000B0h], 000000000h
           lea ecx, [ebp-00000014Ch]
           push ecx
           call [__imp_GetVersionExA]; [KERNEL32.GetVersionExA].
           test eax, eax
           je l1001C295
           cmp dword ptr [ebp-000000148h], 000000004h
           jbe l1001C24E
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-0000000B0h], 000000001h
           jmp l1001C293
;
;* Jump:
; 1001C240(C) 
;
l1001C24E: cmp dword ptr [ebp-000000148h], 000000004h
           jne l1001C293
           cmp dword ptr [ebp-00000013Ch], 000000002h
           jne l1001C26C
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-0000000B0h], 000000001h
           jmp l1001C293
;
;* Jump:
; 1001C25E(C) 
;
l1001C26C: cmp dword ptr [ebp-00000013Ch], 000000001h
           jne l1001C293
           mov edx, dword ptr [ebp-000000140h]
           and edx, 00000FFFFh
           cmp edx, 000000457h
           jl l1001C293
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-0000000B0h], 000000001h
;
;* Jump:
; 1001C24C(U), 1001C255(C), 1001C26A(U), 1001C273(C), 1001C287(C) 
;
l1001C293: jmp l1001C2B0
;
;* Jump:
; 1001C237(C) 
;
;* String: "B_OpenGLRasterDevice::SetVideoMode() - Fallo en GetVersionEx() 
;          "
;
l1001C295: push offset g1003AAE0
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1001CC6F
;
;* Jump:
; 1001C293(U) 
;
l1001C2B0: cmp dword ptr [ebp-0000000B0h], 000000000h
           jne l1001C304
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00000017Ch], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+000086310h]
           mov ecx, dword ptr [ebp-00000017Ch]
           mov edx, dword ptr [ecx]
           cmp edx, dword ptr [eax]
           je l1001C304
           push offset g1003AB24
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1001CC6F
;
;* Jump:
; 1001C2B7(C), 1001C2E7(C) 
;
l1001C304: mov ecx, 000000025h
           xor eax, eax
           lea edi, [ebp-000000094h]
           rep stosd
           mov word ptr [ebp-070h], 00094h
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000180h], ecx
           mov edx, dword ptr [ebp-000000180h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000184h], ecx
           mov edx, dword ptr [ebp-000000184h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-06Ch], 000180000h
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000188h], ecx
           mov edx, dword ptr [ebp-000000188h]
           mov eax, dword ptr [edx]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-06Ch]
           or ecx, 000040000h
           mov dword ptr [ebp-06Ch], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+0000862FCh]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00000018Ch], edx
           mov eax, dword ptr [ebp-0000001FCh]
           mov ecx, dword ptr [eax+0000862FCh]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-000000190h], eax
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000194h], ecx
           mov edx, dword ptr [ebp-00000018Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp-000000190h]
           mov edx, dword ptr [ecx+008h]
           push edx
           mov eax, dword ptr [ebp-000000194h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
;
;* String: "Setting video mode %d: %dx%dx%d
;          "
;
           push offset g1003AB68
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000014h
           push eax
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov dword ptr [ebp-0000000A8h], 000000000h
           mov dword ptr [ebp-0000000A4h], 000000000h
           mov dword ptr [ebp-0000000A0h], 000000010h
           mov dword ptr [ebp-00000009Ch], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-000000098h], 000000001h
           mov dword ptr [ebp-0000000ACh], offset g1003735C
           mov dword ptr [ebp-0000000ACh], offset g10037358
           mov dword ptr [ebp-0000000ACh], offset g10037354
           mov dword ptr [ebp-0000000B8h], 000000000h
           jmp l1001C489
;
;* Jump:
; 1001C646(U) 
;
l1001C47A: mov ecx, dword ptr [ebp-0000000B8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000B8h], ecx
;
;* Jump:
; 1001C478(U) 
;
l1001C489: mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [ebp-0000000B8h]
           cmp eax, dword ptr [edx+00008644Ch]
           jnb l1001C64B
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp-0000000B8h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-000000150h], ecx
           push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000160h], eax
           cmp dword ptr [ebp-000000160h], 000000000h
           je l1001C508
           push 000000000h
           mov edx, dword ptr [ebp-000000150h]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-000000150h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-000000150h]
           add eax, 000000004h
           push eax
           mov ecx, dword ptr [ebp-000000160h]
           call l10001186
           mov dword ptr [ebp-0000001ACh], eax
           jmp l1001C512
;
;* Jump:
; 1001C4D3(C) 
;
l1001C508: mov dword ptr [ebp-0000001ACh], 000000000h
;
;* Jump:
; 1001C506(U) 
;
l1001C512: mov ecx, dword ptr [ebp-00000009Ch]
           cmp ecx, dword ptr [ebp-0000000A4h]
           jbe l1001C549
           mov edx, dword ptr [ebp-0000000A4h]
           mov eax, dword ptr [ebp-0000000A8h]
           mov ecx, dword ptr [ebp-0000001ACh]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-0000000A4h]
           add edx, 000000001h
           mov dword ptr [ebp-0000000A4h], edx
           jmp near ptr l1001C646
;
;* Jump:
; 1001C51E(C) 
;
l1001C549: mov eax, dword ptr [ebp-00000009Ch]
           add eax, dword ptr [ebp-0000000A0h]
           mov dword ptr [ebp-00000009Ch], eax
           cmp dword ptr [ebp-0000000A4h], 000000000h
           je l1001C5FE
           mov ecx, dword ptr [ebp-00000009Ch]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001A0h], eax
           mov edx, dword ptr [ebp-0000001A0h]
           mov dword ptr [ebp-000000198h], edx
           mov dword ptr [ebp-00000019Ch], 000000000h
           jmp l1001C5A7
;
;* Jump:
; 1001C5D3(U) 
;
l1001C598: mov eax, dword ptr [ebp-00000019Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00000019Ch], eax
;
;* Jump:
; 1001C596(U) 
;
l1001C5A7: mov ecx, dword ptr [ebp-00000019Ch]
           cmp ecx, dword ptr [ebp-0000000A4h]
           jnb l1001C5D5
           mov edx, dword ptr [ebp-0000000A8h]
           mov eax, dword ptr [ebp-00000019Ch]
           mov ecx, dword ptr [ebp-000000198h]
           mov esi, dword ptr [ebp-00000019Ch]
           mov edx, dword ptr [edx+esi*04h]
           mov dword ptr [ecx+eax*04h], edx
           jmp l1001C598
;
;* Jump:
; 1001C5B3(C) 
;
l1001C5D5: mov eax, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-0000001A4h], eax
           mov ecx, dword ptr [ebp-0000001A4h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-000000198h]
           mov dword ptr [ebp-0000000A8h], edx
           jmp l1001C622
;
;* Jump:
; 1001C562(C) 
;
l1001C5FE: mov eax, dword ptr [ebp-00000009Ch]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001A8h], eax
           mov ecx, dword ptr [ebp-0000001A8h]
           mov dword ptr [ebp-0000000A8h], ecx
;
;* Jump:
; 1001C5FC(U) 
;
l1001C622: mov edx, dword ptr [ebp-0000000A4h]
           mov eax, dword ptr [ebp-0000000A8h]
           mov ecx, dword ptr [ebp-0000001ACh]
           mov dword ptr [eax+edx*04h], ecx
           mov edx, dword ptr [ebp-0000000A4h]
           add edx, 000000001h
           mov dword ptr [ebp-0000000A4h], edx
;
;* Jump:
; 1001C544(U) 
;
l1001C646: jmp near ptr l1001C47A
;
;* Jump:
; 1001C49B(C) 
;
l1001C64B: call [__imp_wglGetCurrentContext]; [OPENGL32.wglGetCurrentContext].
           test eax, eax
           je l1001C660
           mov ecx, dword ptr [ebp-0000001FCh]
           call l10001848
;
;* Jump:
; 1001C653(C) 
;
;* Control "OK", Dialog 006E
;
l1001C660: push 000000001h
           lea eax, [ebp-000000094h]
           push eax
           call [__imp_ChangeDisplaySettingsA]; [USER32.ChangeDisplaySettingsA].
           test eax, eax
           je l1001C6D2
;
;* String: "SetVideoMode() - ChangeDisplaySettings() failed.
;          "
;
           push offset g1003AB8C
           mov ecx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push ecx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov edx, dword ptr [ebp-0000001FCh]
           mov dword ptr [edx+000086310h], 000000000h
           mov dword ptr [ebp-000000164h], 000000000h
           mov dword ptr [ebp-0000000ACh], offset g1003735C
           cmp dword ptr [ebp-00000009Ch], 000000000h
           je l1001C6C7
           mov eax, dword ptr [ebp-000000098h]
           push eax
           lea ecx, [ebp-0000000ACh]
           call l100011C2
;
;* Jump:
; 1001C6B3(C) 
;
l1001C6C7: mov eax, dword ptr [ebp-000000164h]
           jmp near ptr l1001CC6F
;
;* Jump:
; 1001C671(C) 
;
l1001C6D2: push 086000000h
           push 0FFFFFFF0h
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov dword ptr [ebp-0000000B4h], eax
           cmp dword ptr [ebp-0000000B4h], 000000000h
           jne l1001C709
;
;* String: "Error in SetWindowLong().
;          "
;
           push offset g1003ABC0
           call [__imp_?OutputWin32Error@@YAXPBD@Z]; [BBLibc.?OutputWin32Error@@YAXPBD@Z].
           add esp, 000000004h
;
;* Jump:
; 1001C6F9(C) 
;
l1001C709: mov eax, dword ptr [ebp-0000001FCh]
           mov ecx, dword ptr [eax+0000862FCh]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-0000001B0h], eax
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-0000001B4h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-0000001B0h]
           mov eax, dword ptr [edx+008h]
           push eax
           mov ecx, dword ptr [ebp-0000001B4h]
           mov edx, dword ptr [ecx+004h]
           push edx
           push 000000000h
           push 000000000h
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp-0000001FCh]
           mov ecx, dword ptr [eax+000084198h]
           push ecx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           push 000000003h
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [edx+000084198h]
           push eax
           call [__imp_ShowWindow]; [USER32.ShowWindow].
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+0000862FCh]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-0000001B8h], ecx
           mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [ebp-0000001B8h]
           mov dword ptr [edx+000086310h], eax
           mov ecx, dword ptr [ebp-0000001FCh]
           call l100012CB
           mov dword ptr [ebp-0000000B8h], 000000000h
           jmp l1001C7CD
;
;* Jump:
; 1001C9CF(U) 
;
l1001C7BE: mov ecx, dword ptr [ebp-0000000B8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000B8h], ecx
;
;* Jump:
; 1001C7BC(U) 
;
l1001C7CD: mov edx, dword ptr [ebp-0000000B8h]
           cmp edx, dword ptr [ebp-0000000A4h]
           jnb l1001C9D4
           mov eax, dword ptr [ebp-0000000A8h]
           mov ecx, dword ptr [ebp-0000000B8h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-000000154h], edx
           push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000168h], eax
           cmp dword ptr [ebp-000000168h], 000000000h
           je l1001C840
           push 000000000h
           mov eax, dword ptr [ebp-000000154h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-000000154h]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp-000000154h]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp-000000168h]
           call l10001186
           mov dword ptr [ebp-0000001D4h], eax
           jmp l1001C84A
;
;* Jump:
; 1001C80B(C) 
;
l1001C840: mov dword ptr [ebp-0000001D4h], 000000000h
;
;* Jump:
; 1001C83E(U) 
;
l1001C84A: mov edx, dword ptr [ebp-0000001FCh]
           add edx, 000086444h
           mov dword ptr [ebp-0000001D0h], edx
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1001C8A5
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-0000001D4h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-0000001D0h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l1001C9CF
;
;* Jump:
; 1001C86E(C) 
;
l1001C8A5: mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-0000001D0h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-0000001D0h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-0000001D0h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1001C975
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001C4h], eax
           mov ecx, dword ptr [ebp-0000001C4h]
           mov dword ptr [ebp-0000001BCh], ecx
           mov dword ptr [ebp-0000001C0h], 000000000h
           jmp l1001C912
;
;* Jump:
; 1001C944(U) 
;
l1001C903: mov edx, dword ptr [ebp-0000001C0h]
           add edx, 000000001h
           mov dword ptr [ebp-0000001C0h], edx
;
;* Jump:
; 1001C901(U) 
;
l1001C912: mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [ebp-0000001C0h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1001C946
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-0000001C0h]
           mov edx, dword ptr [ebp-0000001BCh]
           mov esi, dword ptr [ebp-0000001C0h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1001C903
;
;* Jump:
; 1001C921(C) 
;
l1001C946: mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-0000001C8h], edx
           mov eax, dword ptr [ebp-0000001C8h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ebp-0000001BCh]
           mov dword ptr [ecx+004h], edx
           jmp l1001C99F
;
;* Jump:
; 1001C8CA(C) 
;
l1001C975: mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000001CCh], eax
           mov edx, dword ptr [ebp-0000001D0h]
           mov eax, dword ptr [ebp-0000001CCh]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1001C973(U) 
;
l1001C99F: mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-0000001D0h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-0000001D4h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-0000001D0h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-0000001D0h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1001C8A0(U) 
;
l1001C9CF: jmp near ptr l1001C7BE
;
;* Jump:
; 1001C7D9(C) 
;
l1001C9D4: mov dword ptr [ebp-0000000B8h], 000000000h
           jmp l1001C9EF
;
;* Jump:
; 1001CAA5(U) 
;
l1001C9E0: mov ecx, dword ptr [ebp-0000000B8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000B8h], ecx
;
;* Jump:
; 1001C9DE(U) 
;
l1001C9EF: mov edx, dword ptr [ebp-0000001FCh]
           mov eax, dword ptr [ebp-0000000B8h]
           cmp eax, dword ptr [edx+00008644Ch]
           jnb l1001CAAA
           mov ecx, dword ptr [ebp-0000001FCh]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp-0000000B8h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00000015Ch], ecx
           mov ecx, dword ptr [ebp-00000015Ch]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-000000158h], eax
           cmp dword ptr [ebp-000000158h], 000000000h
           je l1001CAA5
           mov ecx, dword ptr [ebp-00000015Ch]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           lea ecx, [ebp-000000170h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov edx, dword ptr [ebp-00000015Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           lea ecx, [ebp-000000170h]
           push ecx
           mov edx, dword ptr [ebp-000000158h]
           push edx
           mov ecx, dword ptr [ebp-0000001FCh]
           call l1000179E
           lea ecx, [ebp-000000170h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov eax, dword ptr [ebp-000000158h]
           push eax
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 1001CA48(C) 
;
l1001CAA5: jmp near ptr l1001C9E0
;
;* Jump:
; 1001CA01(C) 
;
l1001CAAA: cmp dword ptr [ebp-00000009Ch], 000000000h
           jne l1001CAB8
           jmp near ptr l1001CB73
;
;* Jump:
; 1001CAB1(C) 
;
;* Control "OK", Dialog 006E
;
l1001CAB8: mov ecx, 000000001h
           test ecx, ecx
           je l1001CB3A
           mov dword ptr [ebp-0000001D8h], 000000000h
           jmp l1001CADC
;
;* Jump:
; 1001CB38(U) 
;
l1001CACD: mov edx, dword ptr [ebp-0000001D8h]
           add edx, 000000001h
           mov dword ptr [ebp-0000001D8h], edx
;
;* Jump:
; 1001CACB(U) 
;
l1001CADC: mov eax, dword ptr [ebp-0000001D8h]
           cmp eax, dword ptr [ebp-0000000A4h]
           jnb l1001CB3A
           mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ebp-0000001D8h]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-0000001E0h], eax
           mov ecx, dword ptr [ebp-0000001E0h]
           mov dword ptr [ebp-0000001DCh], ecx
           cmp dword ptr [ebp-0000001DCh], 000000000h
           je l1001CB2E
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov edx, dword ptr [ebp-0000001DCh]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-0000001DCh]
           call [eax]
           mov dword ptr [ebp-000000200h], eax
           jmp l1001CB38
;
;* Jump:
; 1001CB12(C) 
;
l1001CB2E: mov dword ptr [ebp-000000200h], 000000000h
;
;* Jump:
; 1001CB2C(U) 
;
l1001CB38: jmp l1001CACD
;
;* Jump:
; 1001CABF(C), 1001CAE8(C) 
;
l1001CB3A: mov ecx, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-0000001E4h], ecx
           mov edx, dword ptr [ebp-0000001E4h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000A8h], 000000000h
           mov dword ptr [ebp-0000000A4h], 000000000h
           mov dword ptr [ebp-00000009Ch], 000000000h
;
;* Jump:
; 1001CAB3(U) 
;
;* Control "OK", Dialog 006E
;
l1001CB73: mov dword ptr [ebp-000000174h], 000000001h
           mov dword ptr [ebp-0000000ACh], offset g1003735C
           cmp dword ptr [ebp-00000009Ch], 000000000h
           je l1001CC69
           mov eax, dword ptr [ebp-000000098h]
           mov dword ptr [ebp-0000001F8h], eax
           cmp dword ptr [ebp-00000009Ch], 000000000h
           jne l1001CBAE
           jmp near ptr l1001CC69
;
;* Jump:
; 1001CBA7(C) 
;
l1001CBAE: cmp dword ptr [ebp-0000001F8h], 000000000h
           je l1001CC30
           mov dword ptr [ebp-0000001E8h], 000000000h
           jmp l1001CBD2
;
;* Jump:
; 1001CC2E(U) 
;
l1001CBC3: mov ecx, dword ptr [ebp-0000001E8h]
           add ecx, 000000001h
           mov dword ptr [ebp-0000001E8h], ecx
;
;* Jump:
; 1001CBC1(U) 
;
l1001CBD2: mov edx, dword ptr [ebp-0000001E8h]
           cmp edx, dword ptr [ebp-0000000A4h]
           jnb l1001CC30
           mov eax, dword ptr [ebp-0000000A8h]
           mov ecx, dword ptr [ebp-0000001E8h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-0000001F0h], edx
           mov eax, dword ptr [ebp-0000001F0h]
           mov dword ptr [ebp-0000001ECh], eax
           cmp dword ptr [ebp-0000001ECh], 000000000h
           je l1001CC24
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-0000001ECh]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000001ECh]
           call [edx]
           mov dword ptr [ebp-000000204h], eax
           jmp l1001CC2E
;
;* Jump:
; 1001CC08(C) 
;
l1001CC24: mov dword ptr [ebp-000000204h], 000000000h
;
;* Jump:
; 1001CC22(U) 
;
l1001CC2E: jmp l1001CBC3
;
;* Jump:
; 1001CBB5(C), 1001CBDE(C) 
;
l1001CC30: mov eax, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-0000001F4h], eax
           mov ecx, dword ptr [ebp-0000001F4h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000000A8h], 000000000h
           mov dword ptr [ebp-0000000A4h], 000000000h
           mov dword ptr [ebp-00000009Ch], 000000000h
;
;* Jump:
; 1001CB8E(C), 1001CBA9(U) 
;
l1001CC69: mov eax, dword ptr [ebp-000000174h]
;
;* Jump:
; 1001C1C1(U), 1001C20F(U), 1001C2AB(U), 1001C2FF(U), 1001C6CD(U) 
;
l1001CC6F: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1001C197 ENDP
;
;* Jump:
; 10001005(U) 
;
l1001CC77 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000098h
           push edi
           mov dword ptr [ebp-000000098h], ecx
           mov ecx, 000000025h
           xor eax, eax
           lea edi, [ebp-000000094h]
           rep stosd
           mov word ptr [ebp-070h], 00094h
           mov eax, dword ptr [ebp-000000098h]
           mov ecx, dword ptr [eax+0000847D0h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-000000098h]
           mov eax, dword ptr [edx+0000847D4h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-000000098h]
           mov edx, dword ptr [ecx+0000847D8h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-000000098h]
           mov ecx, dword ptr [eax+0000847DCh]
           mov dword ptr [ebp-01Ch], ecx
           mov dword ptr [ebp-06Ch], 0005C0000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           lea edx, [ebp-000000094h]
           push edx
           call [__imp_ChangeDisplaySettingsA]; [USER32.ChangeDisplaySettingsA].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           pop edi
           mov esp, ebp
           pop ebp
           ret
l1001CC77 ENDP
;
;* Jump:
; 1000135C(U) 
;
           call l1001CCF8; Implemented in c++ code
;
;* Jump:
; 10001131(U) 
;
           call l1001CD74; Implemented in c++ code
;
;* Jump:
; 1000150F(U) 
;
l1001CED6 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000C8h
           push esi
           mov dword ptr [ebp-0000000C0h], ecx
           push 000000000h
           call [__imp_GetDC]; [USER32.GetDC].
           mov dword ptr [ebp-024h], eax
           push 000000008h
           mov eax, dword ptr [ebp-024h]
           push eax
           call [__imp_GetDeviceCaps]; [GDI32.GetDeviceCaps].
           mov dword ptr [ebp-01Ch], eax
           push 00000000Ah
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call [__imp_GetDeviceCaps]; [GDI32.GetDeviceCaps].
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp+008h]
           cmp edx, dword ptr [ebp-01Ch]
           jle l1001CF1D
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp+008h], eax
;
;* Jump:
; 1001CF15(C) 
;
l1001CF1D: mov ecx, dword ptr [ebp+00Ch]
           cmp ecx, dword ptr [ebp-018h]
           jle l1001CF2B
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ebp+00Ch], edx
;
;* Jump:
; 1001CF23(C) 
;
l1001CF2B: mov eax, dword ptr [ebp-0000000C0h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-0000000C0h]
           call [edx+000000224h]
           test eax, eax
           je l1001D5AC
           cmp dword ptr [ebp+008h], 0FFFFFFFFh
           jne l1001CF61
           mov eax, dword ptr [ebp-0000000C0h]
           mov ecx, dword ptr [eax+000086310h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-014h], edx
           jmp l1001CF67
;
;* Jump:
; 1001CF4B(C) 
;
l1001CF61: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1001CF5F(U) 
;
l1001CF67: cmp dword ptr [ebp+00Ch], 0FFFFFFFFh
           jne l1001CF81
           mov ecx, dword ptr [ebp-0000000C0h]
           mov edx, dword ptr [ecx+000086310h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ebp-020h], eax
           jmp l1001CF87
;
;* Jump:
; 1001CF6B(C) 
;
l1001CF81: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1001CF7F(U) 
;
l1001CF87: mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-030h], 000000010h
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-028h], 000000001h
           mov dword ptr [ebp-03Ch], offset g1003735C
           mov dword ptr [ebp-03Ch], offset g10037358
           mov dword ptr [ebp-03Ch], offset g10037354
           mov dword ptr [ebp-044h], 000000000h
           jmp l1001CFD1
;
;* Jump:
; 1001D0F7(U) 
;
l1001CFC8: mov edx, dword ptr [ebp-044h]
           add edx, 000000001h
           mov dword ptr [ebp-044h], edx
;
;* Jump:
; 1001CFC6(U) 
;
l1001CFD1: mov eax, dword ptr [ebp-0000000C0h]
           mov ecx, dword ptr [ebp-044h]
           cmp ecx, dword ptr [eax+00008644Ch]
           jnb l1001D0FC
           mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [edx+000086448h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-048h], edx
           push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-058h], eax
           cmp dword ptr [ebp-058h], 000000000h
           je l1001D032
           push 000000000h
           mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-048h]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp-048h]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp-058h]
           call l10001186
           mov dword ptr [ebp-07Ch], eax
           jmp l1001D039
;
;* Jump:
; 1001D00C(C) 
;
l1001D032: mov dword ptr [ebp-07Ch], 000000000h
;
;* Jump:
; 1001D030(U) 
;
l1001D039: mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ebp-034h]
           jbe l1001D05B
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-07Ch]
           mov dword ptr [ecx+eax*04h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000001h
           mov dword ptr [ebp-034h], eax
           jmp near ptr l1001D0F7
;
;* Jump:
; 1001D03F(C) 
;
l1001D05B: mov ecx, dword ptr [ebp-02Ch]
           add ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-02Ch], ecx
           cmp dword ptr [ebp-034h], 000000000h
           je l1001D0CA
           mov edx, dword ptr [ebp-02Ch]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-070h], eax
           mov eax, dword ptr [ebp-070h]
           mov dword ptr [ebp-068h], eax
           mov dword ptr [ebp-06Ch], 000000000h
           jmp l1001D094
;
;* Jump:
; 1001D0AE(U) 
;
l1001D08B: mov ecx, dword ptr [ebp-06Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-06Ch], ecx
;
;* Jump:
; 1001D089(U) 
;
l1001D094: mov edx, dword ptr [ebp-06Ch]
           cmp edx, dword ptr [ebp-034h]
           jnb l1001D0B0
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-06Ch]
           mov edx, dword ptr [ebp-068h]
           mov esi, dword ptr [ebp-06Ch]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1001D08B
;
;* Jump:
; 1001D09A(C) 
;
l1001D0B0: mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-074h], ecx
           mov edx, dword ptr [ebp-074h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-068h]
           mov dword ptr [ebp-038h], eax
           jmp l1001D0E2
;
;* Jump:
; 1001D068(C) 
;
l1001D0CA: mov ecx, dword ptr [ebp-02Ch]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-078h], eax
           mov edx, dword ptr [ebp-078h]
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 1001D0C8(U) 
;
l1001D0E2: mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-07Ch]
           mov dword ptr [ecx+eax*04h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000001h
           mov dword ptr [ebp-034h], eax
;
;* Jump:
; 1001D056(U) 
;
l1001D0F7: jmp near ptr l1001CFC8
;
;* Jump:
; 1001CFE0(C) 
;
l1001D0FC: call [__imp_wglGetCurrentContext]; [OPENGL32.wglGetCurrentContext].
           test eax, eax
           je l1001D111
           mov ecx, dword ptr [ebp-0000000C0h]
           call l10001848
;
;* Jump:
; 1001D104(C) 
;
l1001D111: mov ecx, dword ptr [ebp-0000000C0h]
           call l10001005
           push 006CF0000h
           push 0FFFFFFF0h
           mov ecx, dword ptr [ebp-0000000C0h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           mov dword ptr [ebp-040h], eax
           cmp dword ptr [ebp-040h], 000000000h
           jne l1001D14D
;
;* String: "B_OpenGLRasterDevice::SetWindowSize() -> Error en SetWindowLong().
;          "
;
           push offset g1003ABDC
           call [__imp_?OutputWin32Error@@YAXPBD@Z]; [BBLibc.?OutputWin32Error@@YAXPBD@Z].
           add esp, 000000004h
;
;* Jump:
; 1001D13D(C) 
;
l1001D14D: push 000000000h
           mov eax, dword ptr [ebp-0000000C0h]
           mov ecx, dword ptr [eax+058h]
           push ecx
           mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [edx+054h]
           push eax
           push 000000000h
           push 000000000h
           push 0FFFFFFFEh
           mov ecx, dword ptr [ebp-0000000C0h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           mov eax, dword ptr [ebp-0000000C0h]
           mov dword ptr [eax+000086310h], 000000000h
           mov ecx, dword ptr [ebp-0000000C0h]
           call l100012CB
           mov dword ptr [ebp-044h], 000000000h
           jmp l1001D1A9
;
;* Jump:
; 1001D381(U) 
;
l1001D1A0: mov ecx, dword ptr [ebp-044h]
           add ecx, 000000001h
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 1001D19E(U) 
;
l1001D1A9: mov edx, dword ptr [ebp-044h]
           cmp edx, dword ptr [ebp-034h]
           jnb l1001D386
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-04Ch], edx
           push 00000001Ch
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-05Ch], eax
           cmp dword ptr [ebp-05Ch], 000000000h
           je l1001D1FB
           push 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000000004h
           push ecx
           mov ecx, dword ptr [ebp-05Ch]
           call l10001186
           mov dword ptr [ebp-000000098h], eax
           jmp l1001D205
;
;* Jump:
; 1001D1D2(C) 
;
l1001D1FB: mov dword ptr [ebp-000000098h], 000000000h
;
;* Jump:
; 1001D1F9(U) 
;
l1001D205: mov edx, dword ptr [ebp-0000000C0h]
           add edx, 000086444h
           mov dword ptr [ebp-000000094h], edx
           mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1001D260
           mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp-000000098h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-000000094h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l1001D381
;
;* Jump:
; 1001D229(C) 
;
l1001D260: mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-000000094h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-000000094h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-000000094h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1001D327
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-000000088h]
           mov dword ptr [ebp-080h], ecx
           mov dword ptr [ebp-000000084h], 000000000h
           jmp l1001D2CA
;
;* Jump:
; 1001D2F9(U) 
;
l1001D2BB: mov edx, dword ptr [ebp-000000084h]
           add edx, 000000001h
           mov dword ptr [ebp-000000084h], edx
;
;* Jump:
; 1001D2B9(U) 
;
l1001D2CA: mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [ebp-000000084h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1001D2FB
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-000000084h]
           mov edx, dword ptr [ebp-080h]
           mov esi, dword ptr [ebp-000000084h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1001D2BB
;
;* Jump:
; 1001D2D9(C) 
;
l1001D2FB: mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-00000008Ch], edx
           mov eax, dword ptr [ebp-00000008Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ebp-080h]
           mov dword ptr [ecx+004h], edx
           jmp l1001D351
;
;* Jump:
; 1001D285(C) 
;
l1001D327: mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000090h], eax
           mov edx, dword ptr [ebp-000000094h]
           mov eax, dword ptr [ebp-000000090h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1001D325(U) 
;
l1001D351: mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-000000098h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-000000094h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1001D25B(U) 
;
l1001D381: jmp near ptr l1001D1A0
;
;* Jump:
; 1001D1AF(C) 
;
l1001D386: mov dword ptr [ebp-044h], 000000000h
           jmp l1001D398
;
;* Jump:
; 1001D423(U) 
;
l1001D38F: mov ecx, dword ptr [ebp-044h]
           add ecx, 000000001h
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 1001D38D(U) 
;
l1001D398: mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [ebp-044h]
           cmp eax, dword ptr [edx+00008644Ch]
           jnb l1001D428
           mov ecx, dword ptr [ebp-0000000C0h]
           mov edx, dword ptr [ecx+000086448h]
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-054h], ecx
           mov ecx, dword ptr [ebp-054h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           call [g100517D4]
           add esp, 000000004h
           mov dword ptr [ebp-050h], eax
           cmp dword ptr [ebp-050h], 000000000h
           je l1001D423
           mov ecx, dword ptr [ebp-054h]
           add ecx, 000000004h
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
           lea ecx, [ebp-064h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov edx, dword ptr [ebp-054h]
           mov eax, dword ptr [edx+010h]
           push eax
           lea ecx, [ebp-064h]
           push ecx
           mov edx, dword ptr [ebp-050h]
           push edx
           mov ecx, dword ptr [ebp-0000000C0h]
           call l1000179E
           lea ecx, [ebp-064h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov eax, dword ptr [ebp-050h]
           push eax
           call [g100517D8]
           add esp, 000000004h
;
;* Jump:
; 1001D3DB(C) 
;
l1001D423: jmp near ptr l1001D38F
;
;* Jump:
; 1001D3A7(C) 
;
l1001D428: cmp dword ptr [ebp-02Ch], 000000000h
           jne l1001D433
           jmp near ptr l1001D4DC
;
;* Jump:
; 1001D42C(C) 
;
;* Control "OK", Dialog 006E
;
l1001D433: mov ecx, 000000001h
           test ecx, ecx
           je l1001D4AF
           mov dword ptr [ebp-00000009Ch], 000000000h
           jmp l1001D457
;
;* Jump:
; 1001D4AD(U) 
;
l1001D448: mov edx, dword ptr [ebp-00000009Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000009Ch], edx
;
;* Jump:
; 1001D446(U) 
;
l1001D457: mov eax, dword ptr [ebp-00000009Ch]
           cmp eax, dword ptr [ebp-034h]
           jnb l1001D4AF
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-00000009Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-0000000A4h], eax
           mov ecx, dword ptr [ebp-0000000A4h]
           mov dword ptr [ebp-0000000A0h], ecx
           cmp dword ptr [ebp-0000000A0h], 000000000h
           je l1001D4A3
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov edx, dword ptr [ebp-0000000A0h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-0000000A0h]
           call [eax]
           mov dword ptr [ebp-0000000C4h], eax
           jmp l1001D4AD
;
;* Jump:
; 1001D487(C) 
;
l1001D4A3: mov dword ptr [ebp-0000000C4h], 000000000h
;
;* Jump:
; 1001D4A1(U) 
;
l1001D4AD: jmp l1001D448
;
;* Jump:
; 1001D43A(C), 1001D460(C) 
;
l1001D4AF: mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ebp-0000000A8h], ecx
           mov edx, dword ptr [ebp-0000000A8h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1001D42E(U) 
;
l1001D4DC: mov dword ptr [ebp-03Ch], offset g1003735C
           cmp dword ptr [ebp-02Ch], 000000000h
           je l1001D5AA
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-0000000BCh], eax
           cmp dword ptr [ebp-02Ch], 000000000h
           jne l1001D501
           jmp near ptr l1001D5AA
;
;* Jump:
; 1001D4FA(C) 
;
l1001D501: cmp dword ptr [ebp-0000000BCh], 000000000h
           je l1001D57D
           mov dword ptr [ebp-0000000ACh], 000000000h
           jmp l1001D525
;
;* Jump:
; 1001D57B(U) 
;
l1001D516: mov ecx, dword ptr [ebp-0000000ACh]
           add ecx, 000000001h
           mov dword ptr [ebp-0000000ACh], ecx
;
;* Jump:
; 1001D514(U) 
;
l1001D525: mov edx, dword ptr [ebp-0000000ACh]
           cmp edx, dword ptr [ebp-034h]
           jnb l1001D57D
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-0000000ACh]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-0000000B4h], edx
           mov eax, dword ptr [ebp-0000000B4h]
           mov dword ptr [ebp-0000000B0h], eax
           cmp dword ptr [ebp-0000000B0h], 000000000h
           je l1001D571
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-0000000B0h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000000B0h]
           call [edx]
           mov dword ptr [ebp-0000000C8h], eax
           jmp l1001D57B
;
;* Jump:
; 1001D555(C) 
;
l1001D571: mov dword ptr [ebp-0000000C8h], 000000000h
;
;* Jump:
; 1001D56F(U) 
;
l1001D57B: jmp l1001D516
;
;* Jump:
; 1001D508(C), 1001D52E(C) 
;
l1001D57D: mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-0000000B8h], eax
           mov ecx, dword ptr [ebp-0000000B8h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1001D4E7(C), 1001D4FC(U) 
;
l1001D5AA: jmp l1001D5E0
;
;* Jump:
; 1001CF41(C) 
;
l1001D5AC: cmp dword ptr [ebp+008h], 0FFFFFFFFh
           jne l1001D5C0
           mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [edx+054h]
           mov dword ptr [ebp-014h], eax
           jmp l1001D5C6
;
;* Jump:
; 1001D5B0(C) 
;
l1001D5C0: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1001D5BE(U) 
;
l1001D5C6: cmp dword ptr [ebp+00Ch], 0FFFFFFFFh
           jne l1001D5DA
           mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [edx+058h]
           mov dword ptr [ebp-020h], eax
           jmp l1001D5E0
;
;* Jump:
; 1001D5CA(C) 
;
l1001D5DA: mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1001D5AA(U), 1001D5D8(U) 
;
l1001D5E0: mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-004h], eax
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000CF0000h
           lea ecx, [ebp-010h]
           push ecx
           call [__imp_AdjustWindowRectEx]; [USER32.AdjustWindowRectEx].
           test eax, eax
           je l1001D623
           mov edx, dword ptr [ebp-008h]
           sub edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 1001D60F(C) 
;
l1001D623: push 000000000h
           mov ecx, dword ptr [ebp-020h]
           push ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           push 000000000h
           push 000000000h
           push 0FFFFFFFEh
           mov eax, dword ptr [ebp-0000000C0h]
           mov ecx, dword ptr [eax+000084198h]
           push ecx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           push 000000005h
           mov edx, dword ptr [ebp-0000000C0h]
           mov eax, dword ptr [edx+000084198h]
           push eax
           call [__imp_ShowWindow]; [USER32.ShowWindow].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l1001CED6 ENDP
;
;* Jump:
; 100014D8(U) 
;
           call l1001D667; Implemented in c++ code
;
;* Jump:
; 10001267(U) 
;
l1001D6A5 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov eax, dword ptr [eax+0000847B0h]
           mov esp, ebp
           pop ebp
           ret
l1001D6A5 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011C2(U) 
;
l1001DCC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1001DCD7
           jmp near ptr l1001DD62
;
;* Jump:
; 1001DCD0(C) 
;
l1001DCD7: cmp dword ptr [ebp+008h], 000000000h
           je l1001DD2F
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001DCEF
;
;* Jump:
; 1001DD2D(U) 
;
l1001DCE6: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001DCE4(U) 
;
l1001DCEF: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1001DD2F
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1001DD26
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-018h], eax
           jmp l1001DD2D
;
;* Jump:
; 1001DD13(C) 
;
l1001DD26: mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 1001DD24(U) 
;
l1001DD2D: jmp l1001DCE6
;
;* Jump:
; 1001DCDB(C), 1001DCF8(C) 
;
l1001DD2F: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001DCD2(U) 
;
l1001DD62: mov esp, ebp
           pop ebp
           ret 00004h
l1001DCC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001181(U), 100013E3(U) 
;
l1001DDA0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g1003735C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1001DE61
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1001DDD6
           jmp near ptr l1001DE61
;
;* Jump:
; 1001DDCF(C) 
;
l1001DDD6: cmp dword ptr [ebp-014h], 000000000h
           je l1001DE2E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001DDEE
;
;* Jump:
; 1001DE2C(U) 
;
l1001DDE5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001DDE3(U) 
;
l1001DDEE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1001DE2E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1001DE25
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1001DE2C
;
;* Jump:
; 1001DE12(C) 
;
l1001DE25: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1001DE23(U) 
;
l1001DE2C: jmp l1001DDE5
;
;* Jump:
; 1001DDDA(C), 1001DDF7(C) 
;
l1001DE2E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001DDB9(C), 1001DDD1(U) 
;
l1001DE61: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1001DE77
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1001DE69(C) 
;
l1001DE77: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1001DDA0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100013AC(U), 100016E5(U) 
;
l1001DEC0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g1003735C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1001DF81
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1001DEF6
           jmp near ptr l1001DF81
;
;* Jump:
; 1001DEEF(C) 
;
l1001DEF6: cmp dword ptr [ebp-014h], 000000000h
           je l1001DF4E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001DF0E
;
;* Jump:
; 1001DF4C(U) 
;
l1001DF05: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001DF03(U) 
;
l1001DF0E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1001DF4E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1001DF45
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1001DF4C
;
;* Jump:
; 1001DF32(C) 
;
l1001DF45: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1001DF43(U) 
;
l1001DF4C: jmp l1001DF05
;
;* Jump:
; 1001DEFA(C), 1001DF17(C) 
;
l1001DF4E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001DED9(C), 1001DEF1(U) 
;
l1001DF81: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1001DF97
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1001DF89(C) 
;
l1001DF97: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1001DEC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010B9(U), 10001488(U) 
;
l1001DFE0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g1003735C
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1001E0A1
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1001E016
           jmp near ptr l1001E0A1
;
;* Jump:
; 1001E00F(C) 
;
l1001E016: cmp dword ptr [ebp-014h], 000000000h
           je l1001E06E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001E02E
;
;* Jump:
; 1001E06C(U) 
;
l1001E025: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1001E023(U) 
;
l1001E02E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1001E06E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1001E065
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1001E06C
;
;* Jump:
; 1001E052(C) 
;
l1001E065: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1001E063(U) 
;
l1001E06C: jmp l1001E025
;
;* Jump:
; 1001E01A(C), 1001E037(C) 
;
l1001E06E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001DFF9(C), 1001E011(U) 
;
l1001E0A1: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1001E0B7
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1001E0A9(C) 
;
l1001E0B7: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1001DFE0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010A0(U) 
;
           call l1001E100; Implemented in c++ code
;
;* Jump:
; 10001573(U) 
;
l1001F101 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001F4h
           push esi
           push edi
           mov dword ptr [ebp-0000001F4h], ecx
           call [__imp_?GetConfigDirectory@@YAPBDXZ]; [BBLibc.?GetConfigDirectory@@YAPBDXZ].
           mov edi, eax
           lea edx, [ebp-000000184h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea edi, [ebp-000000184h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           add edi, 0FFFFFFFFh
;
;* String: "/rOpenGL.ini"
;
           mov ecx, dword ptr [g1003AD8C]
           mov dword ptr [edi], ecx
;
;* String: "enGL.ini"
;
           mov edx, dword ptr [g1003AD90]
           mov dword ptr [edi+004h], edx
;
;* String: ".ini"
;
           mov eax, dword ptr [g1003AD94]
           mov dword ptr [edi+008h], eax
           mov cl, byte ptr [g1003AD98]
           mov byte ptr [edi+00Ch], cl
           cmp dword ptr [ebp+008h], 000000000h
           je l1001F18A
           mov edx, dword ptr [ebp+008h]
           movsx eax, byte ptr [edx]
           test eax, eax
           je l1001F18A
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001ACh], ecx
           jmp l1001F196
;
;* Jump:
; 1001F173(C), 1001F17D(C) 
;
l1001F18A: lea edx, [ebp-000000184h]
           mov dword ptr [ebp-0000001ACh], edx
;
;* Jump:
; 1001F188(U) 
;
;* String: "Misc"
;
l1001F196: push offset g1003A00C
           lea ecx, [ebp-0000001B8h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov eax, dword ptr [ebp-0000001ACh]
           push eax
           lea ecx, [ebp-0000001C0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000001C0h]
           push ecx
           lea ecx, [ebp-080h]
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           lea edx, [ebp-0000001B8h]
           push edx
           lea ecx, [ebp-078h]
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           mov dword ptr [ebp-000000084h], offset g100371C8
           lea ecx, [ebp-0000001C0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000001B8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-000000084h], offset g10037184
           lea ecx, [ebp-000000084h]
           call l10001032
           lea ecx, [ebp-000000084h]
           call l10001069
;
;* String: "Texture"
;
           push offset g1003A01C
           lea ecx, [ebp-0000001C8h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov eax, dword ptr [ebp-0000001ACh]
           push eax
           lea ecx, [ebp-0000001D0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000001D0h]
           push ecx
           lea ecx, [ebp-028h]
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           lea edx, [ebp-0000001C8h]
           push edx
           lea ecx, [ebp-020h]
           call [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           mov dword ptr [ebp-02Ch], offset g100371C8
           lea ecx, [ebp-0000001D0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000001C8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           push offset g1005104C
           lea ecx, [ebp-018h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov dword ptr [ebp-02Ch], offset g100371A4
           lea ecx, [ebp-02Ch]
           call l10001168
           lea ecx, [ebp-02Ch]
           call l10001339
;
;* String: "Color"
;
           push offset g1003A004
           lea ecx, [ebp-0000001D8h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov eax, dword ptr [ebp-0000001ACh]
           push eax
           lea ecx, [ebp-0000001E0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000001D8h]
           push ecx
           lea edx, [ebp-0000001E0h]
           push edx
           lea ecx, [ebp-0000001A8h]
           call l1000141A
           lea ecx, [ebp-0000001E0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000001D8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-0000001A8h], offset g10037174
           lea ecx, [ebp-0000001A8h]
           call l10001771
           lea ecx, [ebp-0000001A8h]
           call l10001118
;
;* String: "Toon"
;
           push offset g1003A014
           lea ecx, [ebp-0000001E8h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov eax, dword ptr [ebp-0000001ACh]
           push eax
           lea ecx, [ebp-0000001F0h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           lea ecx, [ebp-0000001E8h]
           push ecx
           lea edx, [ebp-0000001F0h]
           push edx
           lea ecx, [ebp-050h]
           call l1000141A
           lea ecx, [ebp-0000001F0h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000001E8h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           push offset g1005104C
           lea ecx, [ebp-038h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov dword ptr [ebp-050h], offset g10037194
           lea ecx, [ebp-050h]
           call l1000183E
           lea ecx, [ebp-050h]
           call l100016CC
           mov eax, dword ptr [ebp-0000001F4h]
           cmp dword ptr [eax+000084834h], 000000000h
           je l1001F52B
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 00000854Eh
           call [g1005185C]
           push 000001907h
           push 00000853Ch
           push 00000852Ch
           push 000008523h
           push 000001907h
           push 000008550h
           call [g10051860]
           push 000001907h
           push 00000853Ch
           push 0000084C0h
           push 000008524h
           push 000001907h
           push 000008550h
           call [g10051860]
           push 000000000h
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000000h
           push 000008540h
           push 000008530h
           push 000008530h
           push 0000084C0h
           push 000001907h
           push 000008550h
           call [g10051864]
           push 000001906h
           push 00000853Ch
           push 00000852Ch
           push 000008523h
           push 000001906h
           push 000008550h
           call [g10051860]
           push 000001906h
           push 00000853Ch
           push 0000084C0h
           push 000008524h
           push 000001906h
           push 000008550h
           call [g10051860]
           push 000000000h
           push 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000000h
           push 00000853Ch
           push 000008530h
           push 000008530h
           push 0000084C0h
           push 000001906h
           push 000008550h
           call [g10051864]
           push 000001907h
           push 000008536h
           push 000001906h
           push 000008523h
           call [g10051868]
           push 000001907h
           push 000008536h
           push 0000084C0h
           push 000008524h
           call [g10051868]
           push 000001907h
           push 000008536h
           push 000000B60h
           push 000008525h
           call [g10051868]
           push 000001907h
           push 000008536h
           push 000000000h
           push 000008526h
           call [g10051868]
           push 000001907h
           push 000008536h
           push 000000000h
           push 000008527h
           call [g10051868]
           push 000001907h
           push 000008536h
           push 000000000h
           push 000008528h
           call [g10051868]
;
;* Jump:
; 1001F39D(C) 
;
;* Control "OK", Dialog 006E
;
l1001F52B: mov dword ptr [ebp-0000001B0h], 000000001h
           lea ecx, [ebp-038h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-044h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-04Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-00000019Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-0000001A4h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-018h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-02Ch]
           call l10001820
           lea ecx, [ebp-078h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-080h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov eax, dword ptr [ebp-0000001B0h]
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1001F101 ENDP
;
;* Jump:
; 10001366(U) 
;
l1001F599 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000050h
           mov dword ptr [ebp-048h], ecx
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax], offset g10037360
           mov ecx, dword ptr [ebp-048h]
           call l10001848
           mov ecx, dword ptr [ebp-048h]
           add ecx, 000086460h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx], offset g10037624
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+010h], 000000000h
           je l1001F677
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1001F5EC
           jmp near ptr l1001F677
;
;* Jump:
; 1001F5E5(C) 
;
l1001F5EC: cmp dword ptr [ebp-014h], 000000000h
           je l1001F644
           mov dword ptr [ebp-004h], 000000000h
           jmp l1001F604
;
;* Jump:
; 1001F642(U) 
;
l1001F5FB: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1001F5F9(U) 
;
l1001F604: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1001F644
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], edx
           cmp dword ptr [ebp-008h], 000000000h
           je l1001F63B
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov eax, dword ptr [ebp-008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-04Ch], eax
           jmp l1001F642
;
;* Jump:
; 1001F628(C) 
;
l1001F63B: mov dword ptr [ebp-04Ch], 000000000h
;
;* Jump:
; 1001F639(U) 
;
l1001F642: jmp l1001F5FB
;
;* Jump:
; 1001F5F0(C), 1001F60D(C) 
;
l1001F644: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001F5CF(C), 1001F5E7(U) 
;
l1001F677: mov eax, dword ptr [ebp-048h]
           add eax, 000086444h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx], offset g1003735C
           mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+010h], 000000000h
           je l1001F73A
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1001F6AF
           jmp near ptr l1001F73A
;
;* Jump:
; 1001F6A8(C) 
;
l1001F6AF: cmp dword ptr [ebp-02Ch], 000000000h
           je l1001F707
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1001F6C7
;
;* Jump:
; 1001F705(U) 
;
l1001F6BE: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1001F6BC(U) 
;
l1001F6C7: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l1001F707
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+edx*04h]
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ebp-020h], ecx
           cmp dword ptr [ebp-020h], 000000000h
           je l1001F6FE
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-020h]
           call [eax]
           mov dword ptr [ebp-050h], eax
           jmp l1001F705
;
;* Jump:
; 1001F6EB(C) 
;
l1001F6FE: mov dword ptr [ebp-050h], 000000000h
;
;* Jump:
; 1001F6FC(U) 
;
l1001F705: jmp l1001F6BE
;
;* Jump:
; 1001F6B3(C), 1001F6D0(C) 
;
l1001F707: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1001F692(C), 1001F6AA(U) 
;
l1001F73A: mov ecx, dword ptr [ebp-048h]
           add ecx, 0000862F8h
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx], offset g100371C4
           mov eax, dword ptr [ebp-044h]
           cmp dword ptr [eax+010h], 000000000h
           je l1001F7E3
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-044h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1001F770
           jmp l1001F7E3
;
;* Jump:
; 1001F76C(C) 
;
l1001F770: cmp dword ptr [ebp-040h], 000000000h
           je l1001F7B0
           mov dword ptr [ebp-034h], 000000000h
           jmp l1001F788
;
;* Jump:
; 1001F7AE(U) 
;
l1001F77F: mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 1001F77D(U) 
;
l1001F788: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-034h]
           cmp eax, dword ptr [edx+008h]
           jnb l1001F7B0
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-038h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1001F77F
;
;* Jump:
; 1001F774(C), 1001F791(C) 
;
l1001F7B0: mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1001F756(C), 1001F76E(U) 
;
l1001F7E3: mov ecx, dword ptr [ebp-048h]
           call l10001618
           mov esp, ebp
           pop ebp
           ret
l1001F599 ENDP
;
;* Jump:
; 10001262(U) 
;
l1001F7EF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-014h], ecx
           push 000000834h
           push 00000007Bh
           mov ecx, dword ptr [ebp-014h]
           call l100014D3
           mov dword ptr [ebp-008h], 000000000h
           jmp l1001F819
;
;* Jump:
; 1001F949(U) 
;
l1001F810: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-008h], eax
;
;* Jump:
; 1001F80E(U) 
;
l1001F819: cmp dword ptr [ebp-008h], 000000100h
           jnb l1001F94E
           mov eax, dword ptr [ebp-008h]
           sub eax, 000000020h
           xor edx, edx
           mov ecx, 000000010h
           div ecx
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-018h], 000000000h
           fild qword ptr [ebp-01Ch]
           fdiv dword ptr [g1003762C]
           fstp dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           sub edx, 000000020h
           shr edx, 004h
           mov dword ptr [ebp-024h], edx
           mov dword ptr [ebp-020h], 000000000h
           fild qword ptr [ebp-024h]
           fdiv dword ptr [g1003762C]
           fstp dword ptr [ebp-010h]
           push 000001300h
           mov eax, dword ptr [ebp-008h]
           add eax, 0000003E8h
           push eax
           call [__imp_glNewList]; [OPENGL32.glNewList].
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-010h]
           fsub dword ptr [g10037628]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           push 000000000h
           push 000000000h
           call [__imp_glVertex2i]; [OPENGL32.glVertex2i].
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-010h]
           fsub dword ptr [g10037628]
           push ecx
           fstp dword ptr [esp]
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [g10037628]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           push 000000000h
           push 000000010h
           call [__imp_glVertex2i]; [OPENGL32.glVertex2i].
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-010h]
           push ecx
           fstp dword ptr [esp]
           fld dword ptr [ebp-00Ch]
           fadd dword ptr [g10037628]
           push ecx
           fstp dword ptr [esp]
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           push 000000010h
           push 000000010h
           call [__imp_glVertex2i]; [OPENGL32.glVertex2i].
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-010h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           push 000000010h
           push 000000000h
           call [__imp_glVertex2i]; [OPENGL32.glVertex2i].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 040300000h
           push 000000000h
           call [__imp_glTranslated]; [OPENGL32.glTranslated].
           call [__imp_glEndList]; [OPENGL32.glEndList].
           jmp near ptr l1001F810
;
;* Jump:
; 1001F820(C) 
;
;* String: "Arial"
;
l1001F94E: push offset g1003AD9C
           push 000000036h
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           push 000000000h
           push 000000004h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000190h
           push 000000000h
           push 000000000h
           push 000000000h
           push 0FFFFFFF6h
           call [__imp_CreateFontA]; [GDI32.CreateFontA].
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+000084884h], eax
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+000084884h]
           push eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_SelectObject]; [GDI32.SelectObject].
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+000084888h], eax
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+00008608Ch], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+000086090h], 0000000FFh
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+000086090h]
           sub eax, dword ptr [edx+00008608Ch]
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+000086094h], eax
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+000086098h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00008609Ch], 000000000h
           push 0000005DCh
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+000086094h]
           push edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00008608Ch]
           push ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+00008419Ch]
           push eax
           call [__imp_wglUseFontBitmapsA]; [OPENGL32.wglUseFontBitmapsA].
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l1001FA35
;
;* String: "Error in wglUseFontBitmaps().
;          "
;
           push offset g1003ADA4
           call [__imp_?OutputWin32Error@@YAXPBD@Z]; [BBLibc.?OutputWin32Error@@YAXPBD@Z].
           add esp, 000000004h
           xor eax, eax
           jmp l1001FA3A
;
;* Jump:
; 1001FA21(C) 
;
;* Control "OK", Dialog 006E
;
l1001FA35: mov eax, 000000001h
;
;* Jump:
; 1001FA33(U) 
;
l1001FA3A: mov esp, ebp
           pop ebp
           ret
l1001F7EF ENDP
;
;* Jump:
; 100012CB(U) 
;
l1001FA3E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+000084198h]
           push ecx
           call [__imp_GetDC]; [USER32.GetDC].
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+00008419Ch], eax
           mov eax, dword ptr [ebp-018h]
           add eax, 0000841ACh
           push eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_GetDeviceGammaRamp]; [GDI32.GetDeviceGammaRamp].
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+0000847ACh], eax
           mov ecx, dword ptr [ebp-018h]
           call l1000146F
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+00008419Ch]
           push eax
           call [__imp_wglCreateContext]; [OPENGL32.wglCreateContext].
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+0000841A0h], eax
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+0000841A0h], 000000000h
           jne l1001FACA
;
;* String: "B_OpenGLRasterDevice::B_OpenGLRasterDevice() -> wglCreateContext 
;          failed.
;          "
;
           push offset g1003ADC4
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1001FBE8
;
;* Jump:
; 1001FAAD(C) 
;
l1001FACA: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000841A0h]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [__imp_wglMakeCurrent]; [OPENGL32.wglMakeCurrent].
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jne l1001FB09
;
;* String: "B_OpenGLRasterDevice::B_OpenGLRasterDevice() -> wglMakeCurrent failed.
;          "
;
           push offset g1003AE10
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           xor eax, eax
           jmp near ptr l1001FBE8
;
;* Jump:
; 1001FAEB(C) 
;
;* String: "wglGetExtensionsStringEXT"
;
l1001FB09: push offset g1003AE58
           call [__imp_wglGetProcAddress]; [OPENGL32.wglGetProcAddress].
           mov dword ptr [g10051828], eax
           mov ecx, dword ptr [ebp-018h]
           call l10001262
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           push 000000CF5h
           call [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           push 000000B50h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov eax, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+00008645Ch], 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+0000860A4h], 0FFFFFFFFh
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+0000860A8h], 0FFFFFFFFh
           lea eax, [ebp-010h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_GetClientRect]; [USER32.GetClientRect].
           mov eax, dword ptr [ebp-010h]
           sub eax, dword ptr [ebp-008h]
           cdq
           xor eax, edx
           sub eax, edx
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+054h], eax
           mov eax, dword ptr [ebp-004h]
           sub eax, dword ptr [ebp-00Ch]
           cdq
           xor eax, edx
           sub eax, edx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+058h], eax
           mov eax, dword ptr [ebp-018h]
           mov eax, dword ptr [eax+054h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+05Ch], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+058h]
           cdq
           sub eax, edx
           sar eax, 001h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+060h], eax
           lea edx, [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+000084198h]
           push ecx
           call [__imp_GetWindowRect]; [USER32.GetWindowRect].
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+0000862F4h], 000000000h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+078h], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
;
;* Jump:
; 1001FAC5(U), 1001FB04(U) 
;
l1001FBE8: mov esp, ebp
           pop ebp
           ret
l1001FA3E ENDP
;
;* Jump:
; 10001848(U) 
;
l1001FBEC PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
;
;* String: "B_OpenGLRasterDevice::CloseRaster()
;          "
;
           push offset g1003AE74
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           push 000000003h
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           push 0FFFFFFFEh
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           mov eax, dword ptr [ebp-018h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000080h]
           push 000000000h
           push 000000000h
           call [__imp_wglMakeCurrent]; [OPENGL32.wglMakeCurrent].
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+0000841A0h], 000000000h
           je l1001FC66
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000841A0h]
           push edx
           call [__imp_wglDeleteContext]; [OPENGL32.wglDeleteContext].
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+0000841A0h], 000000000h
;
;* Jump:
; 1001FC47(C) 
;
l1001FC66: push 000000600h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l1001FC8E
;
;* Jump:
; 1001FCDE(U) 
;
l1001FC85: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 1001FC83(U) 
;
l1001FC8E: cmp dword ptr [ebp-00Ch], 000000100h
           jnl l1001FCE0
           mov eax, dword ptr [ebp-00Ch]
           and eax, 00000FFFFh
           shl eax, 008h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov word ptr [edx+ecx*02h], ax
           mov eax, dword ptr [ebp-00Ch]
           and eax, 00000FFFFh
           shl eax, 008h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov word ptr [edx+ecx*02h+000000200h], ax
           mov eax, dword ptr [ebp-00Ch]
           and eax, 00000FFFFh
           shl eax, 008h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov word ptr [edx+ecx*02h+000000400h], ax
           jmp l1001FC85
;
;* Jump:
; 1001FC95(C) 
;
l1001FCE0: mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_SetDeviceGammaRamp]; [GDI32.SetDeviceGammaRamp].
           mov dword ptr [ebp-008h], eax
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           push 000000100h
;
;* Control "Tab1", Dialog 006E
;
           push 0000003E8h
           call [__imp_glDeleteLists]; [OPENGL32.glDeleteLists].
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+000084888h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_SelectObject]; [GDI32.SelectObject].
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+000084884h]
           push ecx
           call [__imp_DeleteObject]; [GDI32.DeleteObject].
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+00008419Ch]
           push eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_ReleaseDC]; [USER32.ReleaseDC].
           mov eax, dword ptr [ebp-018h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000224h]
           test eax, eax
           je l1001FD77
           mov ecx, dword ptr [ebp-018h]
           call l10001005
;
;* Jump:
; 1001FD6D(C) 
;
l1001FD77: mov esp, ebp
           pop ebp
           ret
l1001FBEC ENDP
;
;* Jump:
; 1000146F(U) 
;
l1001FD7B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           push offset g1003AC60
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [__imp_ChoosePixelFormat]; [GDI32.ChoosePixelFormat].
           mov dword ptr [ebp-004h], eax
           cmp dword ptr [ebp-004h], 000000000h
           jne l1001FDBA
           push 000000000h
;
;* String: "Error"
;
           push offset g1003AE9C
;
;* String: "ChoosePixelFormat failed"
;
           push offset g1003AEA4
           push 000000000h
           call [__imp_MessageBoxA]; [USER32.MessageBoxA].
           xor eax, eax
           jmp l1001FDF4
;
;* Jump:
; 1001FDA0(C) 
;
l1001FDBA: push offset g1003AC60
           mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [__imp_SetPixelFormat]; [GDI32.SetPixelFormat].
           test eax, eax
           jne l1001FDEF
           push 000000000h
;
;* String: "Error"
;
           push offset g1003AEC0
;
;* String: "SetPixelFormat failed"
;
           push offset g1003AEC8
           push 000000000h
           call [__imp_MessageBoxA]; [USER32.MessageBoxA].
           xor eax, eax
           jmp l1001FDF4
;
;* Jump:
; 1001FDD5(C) 
;
;* Control "OK", Dialog 006E
;
l1001FDEF: mov eax, 000000001h
;
;* Jump:
; 1001FDB8(U), 1001FDED(U) 
;
l1001FDF4: mov esp, ebp
           pop ebp
           ret
l1001FD7B ENDP
;
;* Jump:
; 10001758(U) 
;
           call l1001FDF8; Implemented in c++ code
;
;* Jump:
; 1000105F(U) 
;
           call l1001FE3A; Implemented in c++ code
;
;* Jump:
; 10001717(U) 
;
           call l1001FE50; Implemented in c++ code
;
;* Jump:
; 1000181B(U) 
;
           call l1002022E; Implemented in c++ code
;
;* Jump:
; 100011E5(U) 
;
           call l100202D7; Implemented in c++ code
;
;* Jump:
; 100017E4(U) 
;
l10020380 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-004h], ecx
           push 000000000h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp+010h]
           shr eax, 010h
           and eax, 0000000FFh
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp+010h]
           and ecx, 00000FFFFh
           sar ecx, 008h
           and ecx, 0000000FFh
           mov dword ptr [ebp-00Ch], ecx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp+010h]
           and edx, 0000000FFh
           mov dword ptr [ebp-010h], edx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [eax+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [eax+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [eax]
           push edx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [eax+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [eax+008h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [eax]
           push edx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10020380 ENDP
;
;* Jump:
; 1000136B(U) 
;
           call l1002045B; Implemented in c++ code
;
;* Jump:
; 100016C2(U) 
;
           call l10020755; Implemented in c++ code
;
;* Jump:
; 10001276(U) 
;
           call l100208FB; Implemented in c++ code
;
;* Jump:
; 10001802(U) 
;
l10020A1A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           push esi
           push edi
           mov dword ptr [ebp-018h], ecx
;
;* String: " ,"
;
           mov ax, word ptr [g1003AFD0]
           mov word ptr [ebp-00Ch], ax
           mov cl, byte ptr [g1003AFD2]
           mov byte ptr [ebp-00Ah], cl
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           jne l10020A4B
           xor eax, eax
           jmp near ptr l10020B55
;
;* Jump:
; 10020A42(C) 
;
l10020A4B: mov edi, dword ptr [ebp-014h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           push eax
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jne l10020A7D
           xor eax, eax
           jmp near ptr l10020B55
;
;* Jump:
; 10020A74(C) 
;
l10020A7D: mov edi, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea ecx, [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10020B41(U) 
;
l10020AB4: cmp dword ptr [ebp-004h], 000000000h
           je l10020B46
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 10020AFC(C) 
;
l10020ACA: mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-021h], al
           mov ecx, dword ptr [ebp-01Ch]
           cmp al, byte ptr [ecx]
           jne l10020B07
           cmp byte ptr [ebp-021h], 000h
           je l10020AFE
           mov edx, dword ptr [ebp-020h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-022h], al
           mov ecx, dword ptr [ebp-01Ch]
           cmp al, byte ptr [ecx+001h]
           jne l10020B07
           add dword ptr [ebp-020h], 000000002h
           add dword ptr [ebp-01Ch], 000000002h
           cmp byte ptr [ebp-022h], 000h
           jne l10020ACA
;
;* Jump:
; 10020ADD(C) 
;
l10020AFE: mov dword ptr [ebp-028h], 000000000h
           jmp l10020B0F
;
;* Jump:
; 10020AD7(C), 10020AEE(C) 
;
l10020B07: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 10020B05(U) 
;
l10020B0F: mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-02Ch], eax
           cmp dword ptr [ebp-02Ch], 000000000h
           jne l10020B2F
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l10020B55
;
;* Jump:
; 10020B19(C) 
;
l10020B2F: lea edx, [ebp-00Ch]
           push edx
           push 000000000h
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10020AB4
;
;* Jump:
; 10020AB8(C) 
;
l10020B46: mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
           xor eax, eax
;
;* Jump:
; 10020A46(U), 10020A78(U), 10020B2D(U) 
;
l10020B55: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10020A1A ENDP
;
;* Jump:
; 1000164F(U) 
;
l10020B5D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           cmp dword ptr [g10051828], 000000000h
           jne l10020B71
           xor eax, eax
           jmp l10020B8E
;
;* Jump:
; 10020B6B(C) 
;
l10020B71: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [g10051828]
           push eax
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-004h]
           call l10001802
;
;* Jump:
; 10020B6F(U) 
;
l10020B8E: mov esp, ebp
           pop ebp
           ret 00004h
l10020B5D ENDP
;
;* Jump:
; 1000156E(U) 
;
l10020B94 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           push 000001F03h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           push eax
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           call l10001802
           mov esp, ebp
           pop ebp
           ret 00004h
l10020B94 ENDP
;
;* Jump:
; 100012AD(U) 
;
l10020BB9 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000B4h
           push esi
           push edi
           mov dword ptr [ebp-00000009Ch], ecx
;
;* String: " ,"
;
           mov ax, word ptr [g1003AFD4]
           mov word ptr [ebp-00Ch], ax
           mov cl, byte ptr [g1003AFD6]
           mov byte ptr [ebp-00Ah], cl
           push 000001F03h
           call [__imp_glGetString]; [OPENGL32.glGetString].
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jne l10020BF6
           jmp near ptr l1002124E
;
;* Jump:
; 10020BEF(C) 
;
l10020BF6: mov edi, dword ptr [ebp-014h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           push edx
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jne l10020C26
           jmp near ptr l1002124E
;
;* Jump:
; 10020C1F(C) 
;
l10020C26: mov edi, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea ecx, [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10020F51(U) 
;
l10020C5D: cmp dword ptr [ebp-004h], 000000000h
           je l10020F56
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-01Ch]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l10020CAF
           lea ecx, [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           lea ecx, [edx+eax*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10020F36
;
;* Jump:
; 10020C80(C) 
;
l10020CAF: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp+008h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10020E7E
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-030h]
           lea edx, [000000004h+ecx*08h]
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-038h], eax
           cmp dword ptr [ebp-038h], 000000000h
           je l10020D47
           mov eax, dword ptr [__imp_??0B_Name@@QAE@XZ]; [BBLibc.??0B_Name@@QAE@XZ].
           mov dword ptr [ebp-054h], eax
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-050h], eax
           mov dword ptr [ebp-04Ch], 000000008h
           mov ecx, dword ptr [ebp-038h]
           add ecx, 000000004h
           mov dword ptr [ebp-048h], ecx
;
;* Jump:
; 10020D37(U) 
;
l10020D19: mov edx, dword ptr [ebp-050h]
           sub edx, 000000001h
           mov dword ptr [ebp-050h], edx
           cmp dword ptr [ebp-050h], 000000000h
           jl l10020D39
           mov ecx, dword ptr [ebp-048h]
           call [ebp-054h]
           mov eax, dword ptr [ebp-048h]
           add eax, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-048h], eax
           jmp l10020D19
;
;* Jump:
; 10020D26(C) 
;
l10020D39: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000004h
           mov dword ptr [ebp-0000000A0h], ecx
           jmp l10020D51
;
;* Jump:
; 10020CF1(C) 
;
l10020D47: mov dword ptr [ebp-0000000A0h], 000000000h
;
;* Jump:
; 10020D45(U) 
;
l10020D51: mov edx, dword ptr [ebp-0000000A0h]
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l10020D6C
;
;* Jump:
; 10020D93(U) 
;
l10020D63: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10020D61(U) 
;
l10020D6C: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-02Ch]
           cmp edx, dword ptr [ecx+008h]
           jnb l10020D95
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-02Ch]
           lea eax, [ecx+edx*08h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-028h]
           lea ecx, [edx+ecx*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           jmp l10020D63
;
;* Jump:
; 10020D75(C) 
;
l10020D95: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-03Ch], edx
           cmp dword ptr [ebp-03Ch], 000000000h
           je l10020E66
           mov eax, dword ptr [ebp-068h]
           mov dword ptr [ebp-0000000A4h], eax
           mov ecx, 000000003h
           and ecx, 000000002h
           test ecx, ecx
           je l10020E3A
           mov edx, dword ptr [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax-004h]
           mov dword ptr [ebp-060h], ecx
           mov dword ptr [ebp-05Ch], 000000008h
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-058h], edx
           mov eax, dword ptr [ebp-05Ch]
           imul eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-058h]
           add ecx, eax
           mov dword ptr [ebp-058h], ecx
;
;* Jump:
; 10020E0F(U) 
;
l10020DF1: mov edx, dword ptr [ebp-060h]
           sub edx, 000000001h
           mov dword ptr [ebp-060h], edx
           cmp dword ptr [ebp-060h], 000000000h
           jl l10020E11
           mov eax, dword ptr [ebp-058h]
           sub eax, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-058h], eax
           mov ecx, dword ptr [ebp-058h]
           call [ebp-064h]
           jmp l10020DF1
;
;* Jump:
; 10020DFE(C) 
;
l10020E11: mov ecx, 000000003h
           and ecx, 000000001h
           test ecx, ecx
           je l10020E2C
           mov edx, dword ptr [ebp-03Ch]
           sub edx, 000000004h
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10020E1B(C) 
;
l10020E2C: mov eax, dword ptr [ebp-03Ch]
           sub eax, 000000004h
           mov dword ptr [ebp-0000000A4h], eax
           jmp l10020E64
;
;* Jump:
; 10020DC1(C) 
;
l10020E3A: mov ecx, dword ptr [ebp-03Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, 000000003h
           and ecx, 000000001h
           test ecx, ecx
           je l10020E5B
           mov edx, dword ptr [ebp-03Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10020E4D(C) 
;
l10020E5B: mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-0000000A4h], eax
;
;* Jump:
; 10020E38(U) 
;
l10020E64: jmp l10020E70
;
;* Jump:
; 10020DA8(C) 
;
l10020E66: mov dword ptr [ebp-0000000A4h], 000000000h
;
;* Jump:
; 10020E64(U) 
;
l10020E70: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [ecx+004h], edx
           jmp near ptr l10020F0E
;
;* Jump:
; 10020CC8(C) 
;
l10020E7E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           lea eax, [000000004h+edx*08h]
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-044h], eax
           cmp dword ptr [ebp-044h], 000000000h
           je l10020EF8
           mov ecx, dword ptr [__imp_??0B_Name@@QAE@XZ]; [BBLibc.??0B_Name@@QAE@XZ].
           mov dword ptr [ebp-078h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-074h], ecx
           mov dword ptr [ebp-070h], 000000008h
           mov edx, dword ptr [ebp-044h]
           add edx, 000000004h
           mov dword ptr [ebp-06Ch], edx
;
;* Jump:
; 10020EE8(U) 
;
l10020ECA: mov eax, dword ptr [ebp-074h]
           sub eax, 000000001h
           mov dword ptr [ebp-074h], eax
           cmp dword ptr [ebp-074h], 000000000h
           jl l10020EEA
           mov ecx, dword ptr [ebp-06Ch]
           call [ebp-078h]
           mov ecx, dword ptr [ebp-06Ch]
           add ecx, dword ptr [ebp-070h]
           mov dword ptr [ebp-06Ch], ecx
           jmp l10020ECA
;
;* Jump:
; 10020ED7(C) 
;
l10020EEA: mov edx, dword ptr [ebp-044h]
           add edx, 000000004h
           mov dword ptr [ebp-0000000A8h], edx
           jmp l10020F02
;
;* Jump:
; 10020EA1(C) 
;
l10020EF8: mov dword ptr [ebp-0000000A8h], 000000000h
;
;* Jump:
; 10020EF6(U) 
;
l10020F02: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-0000000A8h]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 10020E79(U) 
;
l10020F0E: lea edx, [ebp-01Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           lea ecx, [eax+ecx*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 10020CAA(U) 
;
l10020F36: lea ecx, [ebp-01Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea ecx, [ebp-00Ch]
           push ecx
           push 000000000h
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10020C5D
;
;* Jump:
; 10020C61(C) 
;
l10020F56: mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
           cmp dword ptr [g10051828], 000000000h
           jne l10020F71
           jmp near ptr l1002124E
;
;* Jump:
; 10020F6A(C) 
;
l10020F71: mov eax, dword ptr [ebp-00000009Ch]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [g10051828]
           mov dword ptr [ebp-014h], eax
           cmp dword ptr [ebp-014h], 000000000h
           jne l10020F92
           jmp near ptr l1002124E
;
;* Jump:
; 10020F8B(C) 
;
l10020F92: mov edi, dword ptr [ebp-014h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           add ecx, 0FFFFFFFFh
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           push edx
           call [__imp_malloc]; [MSVCRT.malloc].
           add esp, 000000004h
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jne l10020FC2
           jmp near ptr l1002124E
;
;* Jump:
; 10020FBB(C) 
;
l10020FC2: mov edi, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-008h]
           or ecx, 0FFFFFFFFh
           xor eax, eax
           repnz scasb
           not ecx
           sub edi, ecx
           mov esi, edi
           mov eax, ecx
           mov edi, edx
           shr ecx, 002h
           rep movsd
           mov ecx, eax
           and ecx, 000000003h
           rep movsb
           lea ecx, [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002123C(U) 
;
l10020FF9: cmp dword ptr [ebp-004h], 000000000h
           je l10021241
           mov eax, dword ptr [ebp-004h]
           push eax
           lea ecx, [ebp-024h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l1002104B
           lea ecx, [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           lea ecx, [edx+eax*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l10021221
;
;* Jump:
; 1002101C(C) 
;
l1002104B: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp+00Ch]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp+00Ch]
           cmp dword ptr [ecx+008h], 000000000h
           je l10021174
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ebp-000000084h], eax
           mov ecx, dword ptr [ebp-000000084h]
           lea edx, [000000004h+ecx*08h]
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00000008Ch], eax
           cmp dword ptr [ebp-00000008Ch], 000000000h
           je l100210D8
           mov eax, dword ptr [__imp_??0B_Name@@QAE@XZ]; [BBLibc.??0B_Name@@QAE@XZ].
           push eax
           mov ecx, dword ptr [ebp-00000008Ch]
           mov edx, dword ptr [ebp-000000084h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-000000084h]
           push eax
           push 000000008h
           mov ecx, dword ptr [ebp-00000008Ch]
           add ecx, 000000004h
           push ecx
           call l1000172B
           mov edx, dword ptr [ebp-00000008Ch]
           add edx, 000000004h
           mov dword ptr [ebp-0000000ACh], edx
           jmp l100210E2
;
;* Jump:
; 10021099(C) 
;
l100210D8: mov dword ptr [ebp-0000000ACh], 000000000h
;
;* Jump:
; 100210D6(U) 
;
l100210E2: mov eax, dword ptr [ebp-0000000ACh]
           mov dword ptr [ebp-07Ch], eax
           mov dword ptr [ebp-080h], 000000000h
           jmp l100210FD
;
;* Jump:
; 10021124(U) 
;
l100210F4: mov ecx, dword ptr [ebp-080h]
           add ecx, 000000001h
           mov dword ptr [ebp-080h], ecx
;
;* Jump:
; 100210F2(U) 
;
l100210FD: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-080h]
           cmp eax, dword ptr [edx+008h]
           jnb l10021126
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-080h]
           lea ecx, [edx+eax*08h]
           push ecx
           mov edx, dword ptr [ebp-080h]
           mov eax, dword ptr [ebp-07Ch]
           lea ecx, [eax+edx*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           jmp l100210F4
;
;* Jump:
; 10021106(C) 
;
l10021126: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-000000094h], edx
           mov eax, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-000000090h], eax
           cmp dword ptr [ebp-000000090h], 000000000h
           je l1002115C
           push 000000003h
           mov ecx, dword ptr [ebp-000000090h]
           call l10001195
           mov dword ptr [ebp-0000000B0h], eax
           jmp l10021166
;
;* Jump:
; 10021145(C) 
;
l1002115C: mov dword ptr [ebp-0000000B0h], 000000000h
;
;* Jump:
; 1002115A(U) 
;
l10021166: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-07Ch]
           mov dword ptr [ecx+004h], edx
           jmp near ptr l100211F9
;
;* Jump:
; 10021064(C) 
;
l10021174: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [ebp-000000088h], ecx
           mov edx, dword ptr [ebp-000000088h]
           lea eax, [000000004h+edx*08h]
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-000000098h], eax
           cmp dword ptr [ebp-000000098h], 000000000h
           je l100211E3
           mov ecx, dword ptr [__imp_??0B_Name@@QAE@XZ]; [BBLibc.??0B_Name@@QAE@XZ].
           push ecx
           mov edx, dword ptr [ebp-000000098h]
           mov eax, dword ptr [ebp-000000088h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-000000088h]
           push ecx
           push 000000008h
           mov edx, dword ptr [ebp-000000098h]
           add edx, 000000004h
           push edx
           call l1000172B
           mov eax, dword ptr [ebp-000000098h]
           add eax, 000000004h
           mov dword ptr [ebp-0000000B4h], eax
           jmp l100211ED
;
;* Jump:
; 100211A3(C) 
;
l100211E3: mov dword ptr [ebp-0000000B4h], 000000000h
;
;* Jump:
; 100211E1(U) 
;
l100211ED: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-0000000B4h]
           mov dword ptr [ecx+004h], edx
;
;* Jump:
; 1002116F(U) 
;
l100211F9: lea eax, [ebp-024h]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [eax+004h]
           lea ecx, [ecx+edx*08h]
           call [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 10021046(U) 
;
l10021221: lea ecx, [ebp-024h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           lea edx, [ebp-00Ch]
           push edx
           push 000000000h
           call [__imp_strtok]; [MSVCRT.strtok].
           add esp, 000000008h
           mov dword ptr [ebp-004h], eax
           jmp near ptr l10020FF9
;
;* Jump:
; 10020FFD(C) 
;
l10021241: mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_free]; [MSVCRT.free].
           add esp, 000000004h
;
;* Jump:
; 10020BF1(U), 10020C21(U), 10020F6C(U), 10020F8D(U), 10020FBD(U) 
;
l1002124E: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10020BB9 ENDP
;
;* Jump:
; 10001735(U) 
;
l10021256 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           mov dword ptr [ebp-068h], ecx
           mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000001h
           mov dword ptr [ebp-004h], 000000000h
           mov dword ptr [ebp-014h], offset g10037634
           mov dword ptr [ebp-024h], 000000000h
           mov dword ptr [ebp-020h], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-01Ch], 000000001h
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-028h], offset g10037634
           lea eax, [ebp-028h]
           push eax
           lea ecx, [ebp-014h]
           push ecx
           mov ecx, dword ptr [ebp-068h]
           call l100012AD
;
;* String: "Extensions:
;          "
;
           push offset g1003AFD8
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l100212DC
;
;* Jump:
; 10021313(U) 
;
l100212D3: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 100212D1(U) 
;
l100212DC: mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [ebp-00Ch]
           jnb l10021315
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-02Ch]
           lea ecx, [edx+eax*08h]
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
;
;* String: "  %s
;          "
;
           push offset g1003AFE8
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push ecx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           jmp l100212D3
;
;* Jump:
; 100212E2(C) 
;
;* String: "
;          Extensions wgl:
;          "
;
l10021315: push offset g1003AFF0
           mov edx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push edx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov dword ptr [ebp-02Ch], 000000000h
           jmp l1002133C
;
;* Jump:
; 10021373(U) 
;
l10021333: mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
;
;* Jump:
; 10021331(U) 
;
l1002133C: mov ecx, dword ptr [ebp-02Ch]
           cmp ecx, dword ptr [ebp-020h]
           jnb l10021375
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-02Ch]
           lea ecx, [edx+eax*08h]
           call [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           push eax
;
;* String: "  %s
;          "
;
           push offset g1003B004
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           push eax
           mov ecx, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push ecx
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           jmp l10021333
;
;* Jump:
; 10021342(C) 
;
l10021375: mov dword ptr [ebp-028h], offset g10037634
           cmp dword ptr [ebp-018h], 000000000h
           je l10021471
           cmp dword ptr [ebp-018h], 000000000h
           jne l10021391
           jmp near ptr l10021471
;
;* Jump:
; 1002138A(C) 
;
l10021391: mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-030h], eax
           cmp dword ptr [ebp-030h], 000000000h
           je l10021455
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ebp-06Ch], ecx
           mov edx, 000000003h
           and edx, 000000002h
           test edx, edx
           je l1002142C
           mov eax, dword ptr [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-040h], edx
           mov dword ptr [ebp-03Ch], 000000008h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-03Ch]
           imul ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ebp-038h]
           add edx, ecx
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 10021404(U) 
;
l100213E6: mov eax, dword ptr [ebp-040h]
           sub eax, 000000001h
           mov dword ptr [ebp-040h], eax
           cmp dword ptr [ebp-040h], 000000000h
           jl l10021406
           mov ecx, dword ptr [ebp-038h]
           sub ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-038h], ecx
           mov ecx, dword ptr [ebp-038h]
           call [ebp-044h]
           jmp l100213E6
;
;* Jump:
; 100213F3(C) 
;
l10021406: mov edx, 000000003h
           and edx, 000000001h
           test edx, edx
           je l10021421
           mov eax, dword ptr [ebp-030h]
           sub eax, 000000004h
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10021410(C) 
;
l10021421: mov ecx, dword ptr [ebp-030h]
           sub ecx, 000000004h
           mov dword ptr [ebp-06Ch], ecx
           jmp l10021453
;
;* Jump:
; 100213B7(C) 
;
l1002142C: mov ecx, dword ptr [ebp-030h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov edx, 000000003h
           and edx, 000000001h
           test edx, edx
           je l1002144D
           mov eax, dword ptr [ebp-030h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002143F(C) 
;
l1002144D: mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-06Ch], ecx
;
;* Jump:
; 1002142A(U) 
;
l10021453: jmp l1002145C
;
;* Jump:
; 100213A1(C) 
;
l10021455: mov dword ptr [ebp-06Ch], 000000000h
;
;* Jump:
; 10021453(U) 
;
l1002145C: mov dword ptr [ebp-024h], 000000000h
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 10021380(C), 1002138C(U) 
;
l10021471: mov dword ptr [ebp-014h], offset g10037634
           cmp dword ptr [ebp-004h], 000000000h
           je l1002156D
           cmp dword ptr [ebp-004h], 000000000h
           jne l1002148D
           jmp near ptr l1002156D
;
;* Jump:
; 10021486(C) 
;
l1002148D: mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-050h], edx
           mov eax, dword ptr [ebp-050h]
           mov dword ptr [ebp-04Ch], eax
           cmp dword ptr [ebp-04Ch], 000000000h
           je l10021551
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ebp-070h], ecx
           mov edx, 000000003h
           and edx, 000000002h
           test edx, edx
           je l10021528
           mov eax, dword ptr [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx-004h]
           mov dword ptr [ebp-05Ch], edx
           mov dword ptr [ebp-058h], 000000008h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-054h], eax
           mov ecx, dword ptr [ebp-058h]
           imul ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ebp-054h]
           add edx, ecx
           mov dword ptr [ebp-054h], edx
;
;* Jump:
; 10021500(U) 
;
l100214E2: mov eax, dword ptr [ebp-05Ch]
           sub eax, 000000001h
           mov dword ptr [ebp-05Ch], eax
           cmp dword ptr [ebp-05Ch], 000000000h
           jl l10021502
           mov ecx, dword ptr [ebp-054h]
           sub ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-054h], ecx
           mov ecx, dword ptr [ebp-054h]
           call [ebp-060h]
           jmp l100214E2
;
;* Jump:
; 100214EF(C) 
;
l10021502: mov edx, 000000003h
           and edx, 000000001h
           test edx, edx
           je l1002151D
           mov eax, dword ptr [ebp-04Ch]
           sub eax, 000000004h
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002150C(C) 
;
l1002151D: mov ecx, dword ptr [ebp-04Ch]
           sub ecx, 000000004h
           mov dword ptr [ebp-070h], ecx
           jmp l1002154F
;
;* Jump:
; 100214B3(C) 
;
l10021528: mov ecx, dword ptr [ebp-04Ch]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov edx, 000000003h
           and edx, 000000001h
           test edx, edx
           je l10021549
           mov eax, dword ptr [ebp-04Ch]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002153B(C) 
;
l10021549: mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-070h], ecx
;
;* Jump:
; 10021526(U) 
;
l1002154F: jmp l10021558
;
;* Jump:
; 1002149D(C) 
;
l10021551: mov dword ptr [ebp-070h], 000000000h
;
;* Jump:
; 1002154F(U) 
;
l10021558: mov dword ptr [ebp-010h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-004h], 000000000h
;
;* Jump:
; 1002147C(C), 10021488(U) 
;
l1002156D: mov esp, ebp
           pop ebp
           ret
l10021256 ENDP
;
;* Jump:
; 10001415(U) 
;
           call l10021571; Implemented in c++ code
;
;* Jump:
; 10001361(U) 
;
           call l10021A5B; Implemented in c++ code
;
;* Jump:
; 10001686(U) 
;
l10021DD4 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           call l100017EE
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+004h]
           and edx, 000000004h
           test edx, edx
           je l10021EAF
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+02Ch]
           mov dword ptr [ebp-004h], ecx
           push 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+000000114h]
           push 03FE33333h
           push 033333333h
           push 03FE33333h
           push 033333333h
           push 000000000h
           push 000000000h
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-008h], 000000000h
           jmp l10021E4B
;
;* Jump:
; 10021E95(U) 
;
l10021E42: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 10021E40(U) 
;
l10021E4B: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-008h]
           cmp eax, dword ptr [edx+004h]
           jnb l10021E97
           mov ecx, dword ptr [ebp-008h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+ecx+01Ch]
           push eax
           mov ecx, dword ptr [edx+ecx+018h]
           push ecx
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+edx+014h]
           push ecx
           mov edx, dword ptr [eax+edx+010h]
           push edx
           mov eax, dword ptr [ebp-008h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+eax+00Ch]
           push edx
           mov eax, dword ptr [ecx+eax+008h]
           push eax
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           jmp l10021E42
;
;* Jump:
; 10021E54(C) 
;
l10021E97: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+000000114h]
;
;* Jump:
; 10021DF4(C) 
;
l10021EAF: mov esp, ebp
           pop ebp
           ret 00004h
l10021DD4 ENDP
;
;* Jump:
; 10001410(U) 
;
l10021EB5 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+000000080h], 000000000h
           je l10021EEC
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [ecx+000084868h], 000000000h
           jne l10021EEC
           mov edx, dword ptr [ebp-028h]
           cmp dword ptr [edx+078h], 000000000h
           jne l10021EEC
           mov ecx, dword ptr [ebp-028h]
           call l10001479
           jmp near ptr l10022068
;
;* Jump:
; 10021EC8(C), 10021ED4(C), 10021EDD(C) 
;
l10021EEC: mov eax, dword ptr [ebp-028h]
           cmp dword ptr [eax+000000080h], 000000000h
           je l10021F5D
           mov ecx, dword ptr [ebp-028h]
           cmp dword ptr [ecx+078h], 000000000h
           jne l10021F5D
           mov edx, dword ptr [ebp-028h]
           add edx, 00004E174h
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l10021F1F
;
;* Jump:
; 10021F40(U) 
;
l10021F16: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 10021F14(U) 
;
l10021F1F: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+00004E170h]
           jnb l10021F42
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+00Ch], 03F800000h
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000000014h
           mov dword ptr [ebp-008h], ecx
           jmp l10021F16
;
;* Jump:
; 10021F2B(C), 10021F56(U) 
;
l10021F42: mov ecx, dword ptr [ebp-028h]
           call l100015AF
           test eax, eax
           je l10021F58
           mov ecx, dword ptr [ebp-028h]
           call l10001424
           jmp l10021F42
;
;* Jump:
; 10021F4C(C) 
;
l10021F58: jmp near ptr l10022068
;
;* Jump:
; 10021EF6(C), 10021EFF(C) 
;
l10021F5D: mov edx, dword ptr [ebp-028h]
           add edx, 00004E174h
           mov dword ptr [ebp-010h], edx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10021F7B
;
;* Jump:
; 10021F9C(U) 
;
l10021F72: mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 10021F70(U) 
;
l10021F7B: mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-00Ch]
           cmp edx, dword ptr [ecx+00004E170h]
           jnb l10021F9E
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [eax+00Ch], 03F800000h
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000014h
           mov dword ptr [ebp-010h], ecx
           jmp l10021F72
;
;* Jump:
; 10021F87(C) 
;
l10021F9E: mov edx, dword ptr [ebp-028h]
           cmp dword ptr [edx+000084868h], 000000000h
           jne l10022068
           mov eax, dword ptr [ebp-028h]
           add eax, 000002170h
           mov dword ptr [ebp-014h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10021FCB
;
;* Jump:
; 10022063(U) 
;
l10021FC2: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 10021FC0(U) 
;
l10021FCB: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l10022068
           mov ecx, dword ptr [ebp-028h]
           fld dword ptr [ecx+000002168h]
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-014h]
           fld qword ptr [edx+000002150h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-014h]
           fld qword ptr [ecx+000002158h]
           fmul qword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-014h]
           fld qword ptr [eax+000002160h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp-014h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-024h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fld qword ptr [g10037080]
           fadd qword ptr [ebp-01Ch]
           fmulp st(01h), st(00h)
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+030h]
           mov eax, dword ptr [ebp-014h]
           add eax, 00000004Ch
           mov dword ptr [ebp-014h], eax
           jmp near ptr l10021FC2
;
;* Jump:
; 10021EE7(U), 10021F58(U), 10021FA8(C), 10021FD7(C) 
;
l10022068: mov esp, ebp
           pop ebp
           ret
l10021EB5 ENDP
;
;* Jump:
; 100016B3(U) 
;
l1002206C PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov dword ptr [ebp-04Ch], ecx
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-04Ch]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           call l10001073
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000002170h
           mov dword ptr [ebp-008h], ecx
           lea edx, [ebp+038h]
           push edx
           lea ecx, [ebp+020h]
           call l100013CF
           fstp qword ptr [ebp-010h]
           lea eax, [ebp+050h]
           push eax
           lea ecx, [ebp+020h]
           call l100013CF
           fstp qword ptr [ebp-018h]
           fld qword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           fstp qword ptr [ebp-010h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [g100371F8]
           fstp qword ptr [ebp-018h]
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002210E
;
;* Jump:
; 100221B5(U) 
;
l10022105: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 10022103(U) 
;
l1002210E: mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l100221BA
           fld dword ptr [ebp+01Ch]
           fmul dword ptr [g10037204]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+02Ch]
           fld dword ptr [ebp+010h]
           fmul dword ptr [g10037204]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+020h]
           fld dword ptr [ebp+014h]
           fmul dword ptr [g10037204]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+024h]
           fld dword ptr [ebp+018h]
           fmul dword ptr [g10037204]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+028h]
           push 03F70000Dh
           push 06BF94D5Eh
           lea edx, [ebp-030h]
           push edx
           lea ecx, [ebp+038h]
           call l10001677
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l100013CF
           fsub qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+018h]
           push 03F70000Dh
           push 06BF94D5Eh
           lea ecx, [ebp-048h]
           push ecx
           lea ecx, [ebp+050h]
           call l10001677
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l100013CF
           fsub qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-008h]
           add eax, 00000004Ch
           mov dword ptr [ebp-008h], eax
           jmp near ptr l10022105
;
;* Jump:
; 1002211A(C) 
;
l100221BA: mov ecx, dword ptr [ebp-04Ch]
           call l1000170D
           mov ecx, dword ptr [ebp-04Ch]
           cmp dword ptr [ecx+00007A210h], 000000000h
           je l100221D6
           mov ecx, dword ptr [ebp-04Ch]
           call l1000141F
;
;* Jump:
; 100221CC(C) 
;
l100221D6: mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-04Ch]
           call [eax+000000234h]
           mov esp, ebp
           pop ebp
           ret 00060h
l1002206C ENDP
;
;* Jump:
; 100015A0(U) 
;
           call l100221EA; Implemented in c++ code
;
;* Jump:
; 100013F7(U) 
;
l1002249D PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000A8h
           mov dword ptr [ebp-078h], ecx
           cmp dword ptr [ebp+014h], 000000000h
           jne l100224B4
           jmp near ptr l10022F97
;
;* Jump:
; 100224AD(C) 
;
l100224B4: mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           jne l100224CB
           push 000000B50h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Jump:
; 100224BE(C) 
;
l100224CB: mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+000086498h]
           add edx, dword ptr [ebp+014h]
           mov eax, dword ptr [ebp-078h]
           mov dword ptr [eax+000086498h], edx
           mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+00007A210h], 000000000h
           je l10022511
           mov edx, dword ptr [ebp+01Ch]
           push edx
           mov eax, dword ptr [ebp+018h]
           push eax
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-078h]
           call l100010FF
           jmp near ptr l10022F97
;
;* Jump:
; 100224EA(C) 
;
l10022511: cmp dword ptr [ebp+018h], 03F800000h
           jne l1002253B
           mov edx, dword ptr [ebp+01Ch]
           push edx
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           call l10001627
           jmp near ptr l10022F97
;
;* Jump:
; 10022518(C) 
;
l1002253B: mov ecx, dword ptr [ebp-078h]
           add ecx, 0000864A4h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-078h]
           add edx, 0000964A4h
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-078h]
           add eax, 0000AE4A4h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-02Ch], 000000000h
           mov edx, dword ptr [ebp-078h]
           cmp dword ptr [edx+00008482Ch], 000000000h
           je l10022854
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000084868h], 000000000h
           jne l10022854
           mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+078h], 000000000h
           jne l10022854
           mov dword ptr [ebp-024h], 000000000h
           jmp l100225AA
;
;* Jump:
; 1002284A(U) 
;
l100225A1: mov edx, dword ptr [ebp-024h]
           add edx, 000000001h
           mov dword ptr [ebp-024h], edx
;
;* Jump:
; 1002259F(U) 
;
l100225AA: mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [ebp+00Ch]
           jnb l1002284F
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [edx+034h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           fld qword ptr [edx]
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           fld qword ptr [edx+008h]
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax+004h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           fld qword ptr [edx+010h]
           mov eax, dword ptr [ebp-038h]
           fstp dword ptr [eax+008h]
           mov ecx, dword ptr [ebp-078h]
           fld dword ptr [ecx+000002168h]
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax]
           fld qword ptr [edx+000002150h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax]
           fld qword ptr [edx+000002158h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax]
           fld qword ptr [edx+000002160h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fst qword ptr [ebp-048h]
           fcomp qword ptr [g100370D0]
           fnstsw ax
           test ah, 041h
           jne l10022648
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-080h], edx
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [ebp-07Ch], eax
           jmp l10022656
;
;* Jump:
; 10022638(C) 
;
l10022648: mov dword ptr [ebp-080h], 000000000h
           mov dword ptr [ebp-07Ch], 0BFF00000h
;
;* Jump:
; 10022646(U) 
;
l10022656: fld qword ptr [ebp-080h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l100226B8
           fld qword ptr [ebp-048h]
           fcomp qword ptr [g100370D0]
           fnstsw ax
           test ah, 041h
           jne l1002268A
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ebp-000000088h], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-000000084h], edx
           jmp l1002269E
;
;* Jump:
; 10022674(C) 
;
l1002268A: mov dword ptr [ebp-000000088h], 000000000h
           mov dword ptr [ebp-000000084h], 0BFF00000h
;
;* Jump:
; 10022688(U) 
;
l1002269E: mov eax, dword ptr [ebp-000000088h]
           mov dword ptr [ebp-000000090h], eax
           mov ecx, dword ptr [ebp-000000084h]
           mov dword ptr [ebp-00000008Ch], ecx
           jmp l100226CC
;
;* Jump:
; 10022664(C) 
;
l100226B8: mov dword ptr [ebp-000000090h], 000000000h
           mov dword ptr [ebp-00000008Ch], 000000000h
;
;* Jump:
; 100226B6(U) 
;
l100226CC: mov edx, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-00000008Ch]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax]
           fld qword ptr [edx]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-050h]
           call l10035ECA; [MSVCRT._CIsqrt].
           mov ecx, dword ptr [ebp-030h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-040h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-054h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-03Ch], ecx
           fld dword ptr [ebp-040h]
           fcomp dword ptr [ebp-054h]
           fnstsw ax
           test ah, 041h
           jne l10022756
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ebp-000000094h], edx
           jmp l1002275F
;
;* Jump:
; 10022749(C) 
;
l10022756: mov eax, dword ptr [ebp-054h]
           mov dword ptr [ebp-000000094h], eax
;
;* Jump:
; 10022754(U) 
;
l1002275F: fld dword ptr [ebp-000000094h]
           fcomp dword ptr [ebp-03Ch]
           fnstsw ax
           test ah, 041h
           jne l1002279E
           fld dword ptr [ebp-040h]
           fcomp dword ptr [ebp-054h]
           fnstsw ax
           test ah, 041h
           jne l10022787
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-000000098h], ecx
           jmp l10022790
;
;* Jump:
; 1002277A(C) 
;
l10022787: mov edx, dword ptr [ebp-054h]
           mov dword ptr [ebp-000000098h], edx
;
;* Jump:
; 10022785(U) 
;
l10022790: mov eax, dword ptr [ebp-000000098h]
           mov dword ptr [ebp-00000009Ch], eax
           jmp l100227A7
;
;* Jump:
; 1002276D(C) 
;
l1002279E: mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-00000009Ch], ecx
;
;* Jump:
; 1002279C(U) 
;
l100227A7: mov edx, dword ptr [ebp-00000009Ch]
           mov dword ptr [ebp-01Ch], edx
           fld dword ptr [ebp-01Ch]
           fcomp dword ptr [g1003706C]
           fnstsw ax
           test ah, 041h
           jne l100227FA
           fld dword ptr [g1003706C]
           fdiv dword ptr [ebp-01Ch]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-040h]
           fmul dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-034h]
           fstp dword ptr [eax]
           fld dword ptr [ebp-054h]
           fmul dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-034h]
           fstp dword ptr [ecx+004h]
           fld dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [eax+00Ch], ecx
           jmp l1002281D
;
;* Jump:
; 100227BE(C) 
;
l100227FA: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-054h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 100227F8(U) 
;
l1002281D: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000010h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, 000000010h
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-030h]
           add eax, 000000004h
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000004h
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
           jmp near ptr l100225A1
;
;* Jump:
; 100225B0(C) 
;
l1002284F: jmp near ptr l100229CE
;
;* Jump:
; 10022575(C), 10022585(C), 10022592(C) 
;
l10022854: mov dword ptr [ebp-024h], 000000000h
           jmp l10022866
;
;* Jump:
; 100229C9(U) 
;
l1002285D: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1002285B(U) 
;
l10022866: mov ecx, dword ptr [ebp-024h]
           cmp ecx, dword ptr [ebp+00Ch]
           jnb l100229CE
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [eax+034h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           fld qword ptr [eax]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           fld qword ptr [eax+008h]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx+004h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           fld qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-038h]
           fstp dword ptr [ecx+008h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-05Ch], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-060h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [eax+020h]
           mov dword ptr [ebp-058h], ecx
           fld dword ptr [ebp-05Ch]
           fcomp dword ptr [ebp-060h]
           fnstsw ax
           test ah, 041h
           jne l100228DE
           mov edx, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-0000000A0h], edx
           jmp l100228E7
;
;* Jump:
; 100228D1(C) 
;
l100228DE: mov eax, dword ptr [ebp-060h]
           mov dword ptr [ebp-0000000A0h], eax
;
;* Jump:
; 100228DC(U) 
;
l100228E7: fld dword ptr [ebp-0000000A0h]
           fcomp dword ptr [ebp-058h]
           fnstsw ax
           test ah, 041h
           jne l10022926
           fld dword ptr [ebp-05Ch]
           fcomp dword ptr [ebp-060h]
           fnstsw ax
           test ah, 041h
           jne l1002290F
           mov ecx, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-0000000A4h], ecx
           jmp l10022918
;
;* Jump:
; 10022902(C) 
;
l1002290F: mov edx, dword ptr [ebp-060h]
           mov dword ptr [ebp-0000000A4h], edx
;
;* Jump:
; 1002290D(U) 
;
l10022918: mov eax, dword ptr [ebp-0000000A4h]
           mov dword ptr [ebp-0000000A8h], eax
           jmp l1002292F
;
;* Jump:
; 100228F5(C) 
;
l10022926: mov ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-0000000A8h], ecx
;
;* Jump:
; 10022924(U) 
;
l1002292F: mov edx, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-01Ch], edx
           fld dword ptr [ebp-01Ch]
           fcomp dword ptr [g1003706C]
           fnstsw ax
           test ah, 041h
           jne l10022982
           fld dword ptr [g1003706C]
           fdiv dword ptr [ebp-01Ch]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-05Ch]
           fmul dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-034h]
           fstp dword ptr [eax]
           fld dword ptr [ebp-060h]
           fmul dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-034h]
           fstp dword ptr [ecx+004h]
           fld dword ptr [ebp-058h]
           fmul dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp+018h]
           mov dword ptr [eax+00Ch], ecx
           jmp l100229A5
;
;* Jump:
; 10022946(C) 
;
l10022982: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-05Ch]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-060h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-058h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+018h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 10022980(U) 
;
l100229A5: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000010h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, 000000010h
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-020h]
           add eax, 000000004h
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           jmp near ptr l1002285D
;
;* Jump:
; 1002284F(U), 1002286C(C) 
;
l100229CE: mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+000084808h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 041h
           jne l10022A00
           mov eax, dword ptr [ebp+01Ch]
           and eax, 000010F82h
           test eax, eax
           jne l10022A00
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov ecx, dword ptr [ebp-078h]
           call l10001104
;
;* Jump:
; 100229E2(C), 100229EE(C) 
;
l10022A00: mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+0000847F8h], 000000000h
           jle l10022A2F
           mov ecx, dword ptr [ebp+01Ch]
           push ecx
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+0000847F8h]
           push edx
           mov ecx, dword ptr [ebp-078h]
           call l10001636
           jmp near ptr l10022E8F
;
;* Jump:
; 10022A0A(C) 
;
l10022A2F: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+01Ch]
           or eax, 000000009h
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l10022A85
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-078h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 10022A6B(C) 
;
l10022A85: mov edx, dword ptr [ebp-078h]
           cmp dword ptr [edx+00008482Ch], 000000000h
           je l10022CDA
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000084868h], 000000000h
           jne l10022CDA
           mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+078h], 000000000h
           jne l10022CDA
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+000086488h]
           push eax
           push 000000B62h
           call [__imp_glFogf]; [OPENGL32.glFogf].
           mov ecx, dword ptr [ebp-078h]
           add ecx, 000086478h
           push ecx
           push 000000B66h
           call [__imp_glFogfv]; [OPENGL32.glFogfv].
           push 000000800h
           push 000000B65h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           push 000008451h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-068h], 000000000h
           jmp l10022B16
;
;* Jump:
; 10022CD0(U) 
;
l10022B0D: mov edx, dword ptr [ebp-068h]
           add edx, 000000001h
           mov dword ptr [ebp-068h], edx
;
;* Jump:
; 10022B0B(U) 
;
l10022B16: mov eax, dword ptr [ebp-068h]
           cmp eax, dword ptr [ebp+014h]
           jnb l10022CD5
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-064h]
           cmp edx, dword ptr [ecx+014h]
           je l10022B62
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-064h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 10022B37(C) 
;
l10022B62: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+034h]
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+eax*04h+0000AE4A4h]
           push edx
           call [g10051804]
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+008h]
           push eax
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+ecx*04h+0000AE4A4h]
           push eax
           call [g10051804]
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           mov eax, dword ptr [ebp-078h]
           mov ecx, dword ptr [eax+edx*04h+0000AE4A4h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10022B0D
;
;* Jump:
; 10022B1C(C) 
;
l10022CD5: jmp near ptr l10022E65
;
;* Jump:
; 10022A8F(C), 10022A9F(C), 10022AAC(C) 
;
l10022CDA: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-06Ch], 000000000h
           jmp l10022CF4
;
;* Jump:
; 10022E60(U) 
;
l10022CEB: mov eax, dword ptr [ebp-06Ch]
           add eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
;
;* Jump:
; 10022CE9(U) 
;
l10022CF4: mov ecx, dword ptr [ebp-06Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnb l10022E65
           mov edx, dword ptr [ebp-06Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-064h]
           cmp eax, dword ptr [edx+014h]
           je l10022D40
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 10022D15(C) 
;
l10022D40: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10022CEB
;
;* Jump:
; 10022CD5(U), 10022CFA(C) 
;
l10022E65: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000000h
           je l10022E8F
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-078h]
           mov dword ptr [ecx+000086490h], 000000000h
;
;* Jump:
; 10022A2A(U), 10022E75(C) 
;
l10022E8F: mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+004h]
           and eax, 000008000h
           test eax, eax
           je l10022F97
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [ebp-074h], edx
           push 000000000h
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           push 03FB99999h
           push 09999999Ah
           push 03FB99999h
           push 09999999Ah
           push 03FE33333h
           push 033333333h
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           mov dword ptr [ebp-070h], 000000000h
           jmp l10022EF1
;
;* Jump:
; 10022F80(U) 
;
l10022EE8: mov eax, dword ptr [ebp-070h]
           add eax, 000000001h
           mov dword ptr [ebp-070h], eax
;
;* Jump:
; 10022EE6(U) 
;
l10022EF1: mov ecx, dword ptr [ebp-070h]
           cmp ecx, dword ptr [ebp+014h]
           jnb l10022F85
           mov edx, dword ptr [ebp-070h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-014h], ecx
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l10022EE8
;
;* Jump:
; 10022EF7(C) 
;
l10022F85: mov edx, dword ptr [ebp-074h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
;
;* Jump:
; 100224AF(U), 1002250C(U), 10022536(U), 10022E9C(C) 
;
l10022F97: mov esp, ebp
           pop ebp
           ret 00018h
l1002249D ENDP
;
;* Jump:
; 10001627(U) 
;
l10022F9D PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000A8h
           mov dword ptr [ebp-078h], ecx
           mov eax, dword ptr [ebp-078h]
           add eax, 0000864A4h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, 0000964A4h
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-078h]
           add edx, 0000AE4A4h
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-024h], eax
           mov dword ptr [ebp-02Ch], 000000000h
           mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+00008482Ch], 000000000h
           je l100232B0
           mov edx, dword ptr [ebp-078h]
           cmp dword ptr [edx+000084868h], 000000000h
           jne l100232B0
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+078h], 000000000h
           jne l100232B0
           mov dword ptr [ebp-020h], 000000000h
           jmp l10023018
;
;* Jump:
; 100232A6(U) 
;
l1002300F: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 1002300D(U) 
;
l10023018: mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ebp+00Ch]
           jnb l100232AB
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+034h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-078h]
           fld dword ptr [eax+000002168h]
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           fld qword ptr [ecx+000002150h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           fld qword ptr [ecx+000002158h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           fld qword ptr [ecx+000002160h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fst qword ptr [ebp-048h]
           fcomp qword ptr [g100370D0]
           fnstsw ax
           test ah, 041h
           jne l100230B6
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ebp-080h], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-07Ch], edx
           jmp l100230C4
;
;* Jump:
; 100230A6(C) 
;
l100230B6: mov dword ptr [ebp-080h], 000000000h
           mov dword ptr [ebp-07Ch], 0BFF00000h
;
;* Jump:
; 100230B4(U) 
;
l100230C4: fld qword ptr [ebp-080h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l10023126
           fld qword ptr [ebp-048h]
           fcomp qword ptr [g100370D0]
           fnstsw ax
           test ah, 041h
           jne l100230F8
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ebp-000000084h], ecx
           jmp l1002310C
;
;* Jump:
; 100230E2(C) 
;
l100230F8: mov dword ptr [ebp-000000088h], 000000000h
           mov dword ptr [ebp-000000084h], 0BFF00000h
;
;* Jump:
; 100230F6(U) 
;
l1002310C: mov edx, dword ptr [ebp-000000088h]
           mov dword ptr [ebp-000000090h], edx
           mov eax, dword ptr [ebp-000000084h]
           mov dword ptr [ebp-00000008Ch], eax
           jmp l1002313A
;
;* Jump:
; 100230D2(C) 
;
l10023126: mov dword ptr [ebp-000000090h], 000000000h
           mov dword ptr [ebp-00000008Ch], 000000000h
;
;* Jump:
; 10023124(U) 
;
l1002313A: mov ecx, dword ptr [ebp-000000090h]
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-00000008Ch]
           mov dword ptr [ebp-044h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           fld qword ptr [ecx]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [edx+008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-050h]
           call l10035ECA; [MSVCRT._CIsqrt].
           mov eax, dword ptr [ebp-030h]
           fstp dword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [edx+01Ch]
           mov dword ptr [ebp-054h], eax
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           mov eax, dword ptr [edx+020h]
           mov dword ptr [ebp-03Ch], eax
           fld dword ptr [ebp-040h]
           fcomp dword ptr [ebp-054h]
           fnstsw ax
           test ah, 041h
           jne l100231C4
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-000000094h], ecx
           jmp l100231CD
;
;* Jump:
; 100231B7(C) 
;
l100231C4: mov edx, dword ptr [ebp-054h]
           mov dword ptr [ebp-000000094h], edx
;
;* Jump:
; 100231C2(U) 
;
l100231CD: fld dword ptr [ebp-000000094h]
           fcomp dword ptr [ebp-03Ch]
           fnstsw ax
           test ah, 041h
           jne l1002320C
           fld dword ptr [ebp-040h]
           fcomp dword ptr [ebp-054h]
           fnstsw ax
           test ah, 041h
           jne l100231F5
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-000000098h], eax
           jmp l100231FE
;
;* Jump:
; 100231E8(C) 
;
l100231F5: mov ecx, dword ptr [ebp-054h]
           mov dword ptr [ebp-000000098h], ecx
;
;* Jump:
; 100231F3(U) 
;
l100231FE: mov edx, dword ptr [ebp-000000098h]
           mov dword ptr [ebp-00000009Ch], edx
           jmp l10023215
;
;* Jump:
; 100231DB(C) 
;
l1002320C: mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-00000009Ch], eax
;
;* Jump:
; 1002320A(U) 
;
l10023215: mov ecx, dword ptr [ebp-00000009Ch]
           mov dword ptr [ebp-01Ch], ecx
           fld dword ptr [ebp-01Ch]
           fcomp dword ptr [g1003706C]
           fnstsw ax
           test ah, 041h
           jne l1002325F
           fld dword ptr [g1003706C]
           fdiv dword ptr [ebp-01Ch]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-040h]
           fmul dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx]
           fld dword ptr [ebp-054h]
           fmul dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-034h]
           fstp dword ptr [eax+004h]
           fld dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-034h]
           fstp dword ptr [ecx+008h]
           jmp l10023279
;
;* Jump:
; 1002322C(C) 
;
l1002325F: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-054h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [eax+008h], ecx
;
;* Jump:
; 1002325D(U) 
;
l10023279: mov edx, dword ptr [ebp-038h]
           add edx, 000000010h
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 000000010h
           mov dword ptr [ebp-034h], eax
           mov ecx, dword ptr [ebp-030h]
           add ecx, 000000004h
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp-024h]
           add edx, 000000004h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           jmp near ptr l1002300F
;
;* Jump:
; 1002301E(C) 
;
l100232AB: jmp near ptr l10023418
;
;* Jump:
; 10022FE3(C), 10022FF3(C), 10023000(C) 
;
l100232B0: mov dword ptr [ebp-020h], 000000000h
           jmp l100232C2
;
;* Jump:
; 10023413(U) 
;
l100232B9: mov ecx, dword ptr [ebp-020h]
           add ecx, 000000001h
           mov dword ptr [ebp-020h], ecx
;
;* Jump:
; 100232B7(U) 
;
l100232C2: mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ebp+00Ch]
           jnb l10023418
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+034h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+004h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           fld qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-038h]
           fstp dword ptr [edx+008h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-05Ch], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+01Ch]
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+020h]
           mov dword ptr [ebp-058h], edx
           fld dword ptr [ebp-05Ch]
           fcomp dword ptr [ebp-060h]
           fnstsw ax
           test ah, 041h
           jne l1002333A
           mov eax, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-0000000A0h], eax
           jmp l10023343
;
;* Jump:
; 1002332D(C) 
;
l1002333A: mov ecx, dword ptr [ebp-060h]
           mov dword ptr [ebp-0000000A0h], ecx
;
;* Jump:
; 10023338(U) 
;
l10023343: fld dword ptr [ebp-0000000A0h]
           fcomp dword ptr [ebp-058h]
           fnstsw ax
           test ah, 041h
           jne l10023382
           fld dword ptr [ebp-05Ch]
           fcomp dword ptr [ebp-060h]
           fnstsw ax
           test ah, 041h
           jne l1002336B
           mov edx, dword ptr [ebp-05Ch]
           mov dword ptr [ebp-0000000A4h], edx
           jmp l10023374
;
;* Jump:
; 1002335E(C) 
;
l1002336B: mov eax, dword ptr [ebp-060h]
           mov dword ptr [ebp-0000000A4h], eax
;
;* Jump:
; 10023369(U) 
;
l10023374: mov ecx, dword ptr [ebp-0000000A4h]
           mov dword ptr [ebp-0000000A8h], ecx
           jmp l1002338B
;
;* Jump:
; 10023351(C) 
;
l10023382: mov edx, dword ptr [ebp-058h]
           mov dword ptr [ebp-0000000A8h], edx
;
;* Jump:
; 10023380(U) 
;
l1002338B: mov eax, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-01Ch], eax
           fld dword ptr [ebp-01Ch]
           fcomp dword ptr [g1003706C]
           fnstsw ax
           test ah, 041h
           jne l100233D5
           fld dword ptr [g1003706C]
           fdiv dword ptr [ebp-01Ch]
           fstp dword ptr [ebp-01Ch]
           fld dword ptr [ebp-05Ch]
           fmul dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-034h]
           fstp dword ptr [ecx]
           fld dword ptr [ebp-060h]
           fmul dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx+004h]
           fld dword ptr [ebp-058h]
           fmul dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-034h]
           fstp dword ptr [eax+008h]
           jmp l100233EF
;
;* Jump:
; 100233A2(C) 
;
l100233D5: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-05Ch]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-060h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-058h]
           mov dword ptr [edx+008h], eax
;
;* Jump:
; 100233D3(U) 
;
l100233EF: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000010h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-034h]
           add edx, 000000010h
           mov dword ptr [ebp-034h], edx
           mov eax, dword ptr [ebp-024h]
           add eax, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           jmp near ptr l100232B9
;
;* Jump:
; 100232AB(U), 100232C8(C) 
;
l10023418: mov edx, dword ptr [ebp-078h]
           fld dword ptr [edx+000084808h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 041h
           jne l1002344A
           mov eax, dword ptr [ebp+018h]
           and eax, 000010F82h
           test eax, eax
           jne l1002344A
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov ecx, dword ptr [ebp-078h]
           call l10001104
;
;* Jump:
; 1002342C(C), 10023438(C) 
;
l1002344A: mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+0000847F8h], 000000000h
           jle l10023479
           mov ecx, dword ptr [ebp+018h]
           push ecx
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+0000847F8h]
           push edx
           mov ecx, dword ptr [ebp-078h]
           call l10001636
           jmp near ptr l100238D9
;
;* Jump:
; 10023454(C) 
;
l10023479: mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp+018h]
           or eax, 000000009h
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l100234CF
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-078h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 100234B5(C) 
;
l100234CF: mov edx, dword ptr [ebp-078h]
           cmp dword ptr [edx+00008482Ch], 000000000h
           je l10023724
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000084868h], 000000000h
           jne l10023724
           mov ecx, dword ptr [ebp-078h]
           cmp dword ptr [ecx+078h], 000000000h
           jne l10023724
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+000086488h]
           push eax
           push 000000B62h
           call [__imp_glFogf]; [OPENGL32.glFogf].
           mov ecx, dword ptr [ebp-078h]
           add ecx, 000086478h
           push ecx
           push 000000B66h
           call [__imp_glFogfv]; [OPENGL32.glFogfv].
           push 000000800h
           push 000000B65h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           push 000008451h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-068h], 000000000h
           jmp l10023560
;
;* Jump:
; 1002371A(U) 
;
l10023557: mov edx, dword ptr [ebp-068h]
           add edx, 000000001h
           mov dword ptr [ebp-068h], edx
;
;* Jump:
; 10023555(U) 
;
l10023560: mov eax, dword ptr [ebp-068h]
           cmp eax, dword ptr [ebp+014h]
           jnb l1002371F
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+ecx*04h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-064h]
           cmp edx, dword ptr [ecx+014h]
           je l100235AC
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ebp-064h], ecx
           mov edx, dword ptr [ebp-064h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 10023581(C) 
;
l100235AC: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [edx+034h]
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+eax*04h+0000AE4A4h]
           push edx
           call [g10051804]
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+008h]
           push eax
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+ecx*04h+0000AE4A4h]
           push eax
           call [g10051804]
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-018h]
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           mov eax, dword ptr [ebp-078h]
           mov ecx, dword ptr [eax+edx*04h+0000AE4A4h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10023557
;
;* Jump:
; 10023566(C) 
;
l1002371F: jmp near ptr l100238AF
;
;* Jump:
; 100234D9(C), 100234E9(C), 100234F6(C) 
;
l10023724: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-06Ch], 000000000h
           jmp l1002373E
;
;* Jump:
; 100238AA(U) 
;
l10023735: mov eax, dword ptr [ebp-06Ch]
           add eax, 000000001h
           mov dword ptr [ebp-06Ch], eax
;
;* Jump:
; 10023733(U) 
;
l1002373E: mov ecx, dword ptr [ebp-06Ch]
           cmp ecx, dword ptr [ebp+014h]
           jnb l100238AF
           mov edx, dword ptr [ebp-06Ch]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-064h]
           cmp eax, dword ptr [edx+014h]
           je l1002378A
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-064h], edx
           mov eax, dword ptr [ebp-064h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
;
;* Jump:
; 1002375F(C) 
;
l1002378A: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000964A4h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000964A4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000964A4h]
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov eax, dword ptr [ebp-028h]
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-004h]
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-014h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp near ptr l10023735
;
;* Jump:
; 1002371F(U), 10023744(C) 
;
l100238AF: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+000086490h], 000000000h
           je l100238D9
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-078h]
           mov dword ptr [ecx+000086490h], 000000000h
;
;* Jump:
; 10023474(U), 100238BF(C) 
;
l100238D9: mov edx, dword ptr [ebp-078h]
           mov eax, dword ptr [edx+004h]
           and eax, 000008000h
           test eax, eax
           je l100239E1
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ecx+02Ch]
           mov dword ptr [ebp-074h], edx
           push 000000000h
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           push 03FB99999h
           push 09999999Ah
           push 03FB99999h
           push 09999999Ah
           push 03FE33333h
           push 033333333h
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           mov dword ptr [ebp-070h], 000000000h
           jmp l1002393B
;
;* Jump:
; 100239CA(U) 
;
l10023932: mov eax, dword ptr [ebp-070h]
           add eax, 000000001h
           mov dword ptr [ebp-070h], eax
;
;* Jump:
; 10023930(U) 
;
l1002393B: mov ecx, dword ptr [ebp-070h]
           cmp ecx, dword ptr [ebp+014h]
           jnb l100239CF
           mov edx, dword ptr [ebp-070h]
           mov eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [eax+edx*04h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [eax+034h]
           shl ecx, 004h
           mov edx, dword ptr [ebp-078h]
           lea eax, [edx+ecx+0000864A4h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+034h]
           shl eax, 004h
           mov ecx, dword ptr [ebp-078h]
           lea edx, [ecx+eax+0000864A4h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+034h]
           shl edx, 004h
           mov eax, dword ptr [ebp-078h]
           lea ecx, [eax+edx+0000864A4h]
           mov dword ptr [ebp-014h], ecx
;
;* Control "Cancel", Dialog 006E
;
           push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           mov ecx, dword ptr [ebp-014h]
           push ecx
           call [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l10023932
;
;* Jump:
; 10023941(C) 
;
l100239CF: mov edx, dword ptr [ebp-074h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
;
;* Jump:
; 100238E6(C) 
;
l100239E1: mov esp, ebp
           pop ebp
           ret 00014h
l10022F9D ENDP
;
;* Jump:
; 100014BA(U) 
;
l100239E7 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
;
;* String: "B_OpenGLRasterDevice::RasterFragments() -> Not implemented."
;
           push offset g1003B6C8
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           mov esp, ebp
           pop ebp
           ret 00014h
l100239E7 ENDP
;
;* Jump:
; 1000111D(U) 
;
l10023A08 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000000B0h
           push esi
           push edi
           mov dword ptr [ebp-0000000A8h], ecx
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+000000364h], 000000000h
           jne l10023A2A
           jmp near ptr l10023F0D
;
;* Jump:
; 10023A23(C) 
;
l10023A2A: mov ecx, dword ptr [ebp-0000000A8h]
           cmp dword ptr [ecx+00008485Ch], 000000000h
           je l10023A44
           push 000000B50h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Jump:
; 10023A37(C) 
;
l10023A44: mov edx, dword ptr [ebp-0000000A8h]
           add edx, 000084174h
           mov dword ptr [ebp-074h], edx
           mov eax, dword ptr [ebp-074h]
           cmp dword ptr [eax+018h], 000000000h
           jne l10023AA7
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-070h], eax
           cmp dword ptr [ebp-070h], 000000000h
           je l10023A82
           mov ecx, dword ptr [ebp-070h]
           call l1000107D
           mov dword ptr [ebp-0000000ACh], eax
           jmp l10023A8C
;
;* Jump:
; 10023A70(C) 
;
l10023A82: mov dword ptr [ebp-0000000ACh], 000000000h
;
;* Jump:
; 10023A80(U) 
;
l10023A8C: mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ebp-0000000ACh]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-074h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov ecx, dword ptr [ebp-074h]
           call l100015B4
;
;* Jump:
; 10023A5A(C) 
;
l10023AA7: mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-06Ch], eax
           mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-074h]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-0000000A8h]
           add eax, 000084174h
           mov dword ptr [ebp-080h], eax
           mov ecx, dword ptr [ebp-080h]
           cmp dword ptr [ecx+018h], 000000000h
           jne l10023B26
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-07Ch], eax
           cmp dword ptr [ebp-07Ch], 000000000h
           je l10023B01
           mov ecx, dword ptr [ebp-07Ch]
           call l1000107D
           mov dword ptr [ebp-0000000B0h], eax
           jmp l10023B0B
;
;* Jump:
; 10023AEF(C) 
;
l10023B01: mov dword ptr [ebp-0000000B0h], 000000000h
;
;* Jump:
; 10023AFF(U) 
;
l10023B0B: mov edx, dword ptr [ebp-080h]
           mov eax, dword ptr [ebp-0000000B0h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-080h]
           mov edx, dword ptr [ecx+018h]
           push edx
           mov ecx, dword ptr [ebp-080h]
           call l100015B4
;
;* Jump:
; 10023AD9(C) 
;
l10023B26: mov eax, dword ptr [ebp-080h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-078h], ecx
           mov edx, dword ptr [ebp-080h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-080h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-078h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov dword ptr [ebp-018h], 000000000h
           jmp l10023B67
;
;* Jump:
; 10023B93(U) 
;
l10023B5E: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 10023B5C(U) 
;
l10023B67: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-018h]
           cmp ecx, dword ptr [eax+004h]
           jnb l10023B95
           mov edx, dword ptr [ebp-018h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+008h]
           lea esi, [eax+edx+008h]
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-00Ch]
           lea edi, [edx+ecx+008h]
           mov ecx, 000000006h
           rep movsd
           jmp l10023B5E
;
;* Jump:
; 10023B70(C) 
;
l10023B95: mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           jmp l10023BAE
;
;* Jump:
; 10023CBC(U) 
;
l10023BA5: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10023BA3(U) 
;
l10023BAE: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+000000360h]
           jnb l10023CC1
           mov eax, dword ptr [ebp-014h]
           xor eax, 000000001h
           mov ecx, dword ptr [ebp+eax*04h-008h]
           mov dword ptr [ebp-000000088h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp+edx*04h-008h]
           mov dword ptr [ebp-000000084h], eax
           push 03EB0C6F7h
           push 0A0B5ED8Dh
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+00Ch]
           lea eax, [edx+ecx+060h]
           push eax
           mov ecx, dword ptr [ebp-000000088h]
           push ecx
           mov edx, dword ptr [ebp-000000084h]
           push edx
           call l10035323
           add esp, 000000014h
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 0FFFFFFFFh
           jne l10023CAD
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-000000090h], eax
           mov ecx, dword ptr [ebp-0000000A8h]
           add ecx, 000084174h
           mov dword ptr [ebp-00000008Ch], ecx
           mov edx, dword ptr [ebp-000000090h]
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [ebp-000000090h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000098h], ecx
           mov edx, dword ptr [ebp-0000000A8h]
           add edx, 000084174h
           mov dword ptr [ebp-000000094h], edx
           mov eax, dword ptr [ebp-000000098h]
           mov ecx, dword ptr [ebp-000000094h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-000000094h]
           mov ecx, dword ptr [ebp-000000098h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-0000000A8h]
           cmp dword ptr [edx+00008485Ch], 000000000h
           je l10023CA8
           push 000000B50h
           call [__imp_glEnable]; [OPENGL32.glEnable].
;
;* Jump:
; 10023C9B(C) 
;
l10023CA8: jmp near ptr l10023F0D
;
;* Jump:
; 10023C12(C) 
;
l10023CAD: cmp dword ptr [ebp-020h], 000000000h
           jne l10023CBC
           mov eax, dword ptr [ebp-014h]
           xor eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10023CB1(C) 
;
l10023CBC: jmp near ptr l10023BA5
;
;* Jump:
; 10023BBA(C) 
;
l10023CC1: mov ecx, dword ptr [ebp-014h]
           xor ecx, 000000001h
           mov edx, dword ptr [ebp+ecx*04h-008h]
           mov dword ptr [ebp-0000000A0h], edx
           mov eax, dword ptr [ebp-0000000A8h]
           add eax, 000084174h
           mov dword ptr [ebp-00000009Ch], eax
           mov ecx, dword ptr [ebp-0000000A0h]
           mov edx, dword ptr [ebp-00000009Ch]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-00000009Ch]
           mov edx, dword ptr [ebp-0000000A0h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+eax*04h-008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-0000000A8h]
           mov dword ptr [edx+00000216Ch], 000000000h
           mov eax, dword ptr [ebp-0000000A8h]
           mov dword ptr [eax+00004E170h], 000000000h
           mov ecx, dword ptr [ebp-0000000A8h]
           mov dword ptr [ecx+000062174h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           push edx
           mov ecx, dword ptr [ebp-0000000A8h]
           call l10001073
           mov eax, dword ptr [ebp-0000000A8h]
           add eax, 000084174h
           mov dword ptr [ebp-0000000A4h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-0000000A4h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-0000000A4h]
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+018h], edx
           mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           lea eax, [ebp-030h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-028h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-0000000A8h]
           add edx, 000002170h
           mov dword ptr [ebp-01Ch], edx
           mov dword ptr [ebp-010h], 000000000h
           jmp l10023DC5
;
;* Jump:
; 10023E99(U) 
;
l10023DBC: mov eax, dword ptr [ebp-010h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10023DBA(U) 
;
l10023DC5: mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+00000216Ch]
           jnb l10023E9E
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000040h
           push ecx
           mov ecx, dword ptr [ebp-01Ch]
           call l100013CF
           fdivr qword ptr [g10037648]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-050h]
           push edx
           call l100013CA
           add esp, 000000010h
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-038h]
           rep movsd
           push 040340000h
           push 000000000h
           lea eax, [ebp-068h]
           push eax
           lea ecx, [ebp-038h]
           call l10001677
           mov esi, eax
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-01Ch]
           rep movsd
           mov ecx, dword ptr [ebp-01Ch]
           fld qword ptr [g10037080]
           fdiv qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-01Ch]
           fstp dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+03Ch]
           mov dword ptr [eax+040h], edx
           mov eax, dword ptr [ebp+00Ch]
           add eax, 000000004h
           push eax
           lea ecx, [ebp-038h]
           call l100013CF
           mov ecx, dword ptr [ebp+00Ch]
           fadd dword ptr [ecx+034h]
           fmul qword ptr [g10037638]
           mov edx, dword ptr [ebp-01Ch]
           fstp dword ptr [edx+018h]
           mov eax, dword ptr [ebp+00Ch]
           add eax, 00000001Ch
           push eax
           lea ecx, [ebp-038h]
           call l100013CF
           mov ecx, dword ptr [ebp+00Ch]
           fadd dword ptr [ecx+038h]
           fmul qword ptr [g10037638]
           mov edx, dword ptr [ebp-01Ch]
           fstp dword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-01Ch]
           add eax, 00000004Ch
           mov dword ptr [ebp-01Ch], eax
           jmp near ptr l10023DBC
;
;* Jump:
; 10023DD4(C) 
;
l10023E9E: mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [ecx]
           push edx
           mov eax, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-0000000A8h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp-0000000A8h]
           cmp dword ptr [eax+00007A210h], 000000000h
           je l10023EDF
           mov ecx, dword ptr [ebp-0000000A8h]
           call l1000141F
           mov ecx, dword ptr [ebp-0000000A8h]
           call l1000148D
           jmp l10023EF3
;
;* Jump:
; 10023EC5(C) 
;
l10023EDF: mov ecx, dword ptr [ebp-0000000A8h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-0000000A8h]
           call [edx+000000238h]
;
;* Jump:
; 10023EDD(U) 
;
l10023EF3: mov eax, dword ptr [ebp-0000000A8h]
           cmp dword ptr [eax+00008485Ch], 000000000h
           je l10023F0D
           push 000000B50h
           call [__imp_glEnable]; [OPENGL32.glEnable].
;
;* Jump:
; 10023A25(U), 10023CA8(U), 10023F00(C) 
;
l10023F0D: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10023A08 ENDP
;
;* Jump:
; 1000163B(U) 
;
l10023F15 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           push 000000022h
           mov eax, dword ptr [ebp-02Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-02Ch]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           call l10001073
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000002170h
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-014h], 000000000h
           jmp l10023F7F
;
;* Jump:
; 10024069(U) 
;
l10023F76: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 10023F74(U) 
;
l10023F7F: mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+00000216Ch]
           jnb l1002406E
           mov edx, dword ptr [ebp-02Ch]
           fld dword ptr [edx+000002168h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-018h]
           fld qword ptr [eax+000002150h]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-018h]
           fld qword ptr [edx+000002158h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-018h]
           fld qword ptr [ecx+000002160h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           fld qword ptr [eax]
           fmul qword ptr [ecx]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           fld qword ptr [edx+008h]
           fmul qword ptr [eax+008h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-018h]
           fld qword ptr [ecx+010h]
           fmul qword ptr [edx+010h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-028h]
           mov eax, dword ptr [ebp-02Ch]
           fld dword ptr [eax+000086488h]
           fchs
           fld qword ptr [ebp-028h]
           call l10035ECA; [MSVCRT._CIsqrt].
           fmulp st(01h), st(00h)
           fld qword ptr [g10037080]
           fadd qword ptr [ebp-020h]
           fmulp st(01h), st(00h)
           call l10035EC4; [MSVCRT._CIexp].
           fsubr qword ptr [g10037080]
           mov ecx, dword ptr [ebp-018h]
           fstp dword ptr [ecx+02Ch]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+000002144h]
           mov dword ptr [edx+020h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+000002148h]
           mov dword ptr [edx+024h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00000214Ch]
           mov dword ptr [edx+028h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+030h], 000000000h
           mov eax, dword ptr [ebp-018h]
           add eax, 00000004Ch
           mov dword ptr [ebp-018h], eax
           jmp near ptr l10023F76
;
;* Jump:
; 10023F8B(C) 
;
l1002406E: mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000062178h
           mov dword ptr [ebp-004h], ecx
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+000086494h]
           mov ecx, dword ptr [ebp-02Ch]
           add eax, dword ptr [ecx+000062174h]
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+000086494h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l100240AF
;
;* Jump:
; 100241DE(U) 
;
l100240A6: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 100240A4(U) 
;
l100240AF: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l100241E3
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           je l100240FC
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-02Ch]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1002412D
;
;* Jump:
; 100240C7(C) 
;
l100240FC: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-02Ch]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100240FA(U) 
;
l1002412D: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l10024150
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-02Ch]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l10024169
;
;* Jump:
; 10024134(C) 
;
l10024150: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-02Ch]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1002414E(U) 
;
l10024169: mov edx, dword ptr [ebp-008h]
           add edx, 000000020h
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000020h
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000020h
           push edx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov eax, dword ptr [ebp-010h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l100240A6
;
;* Jump:
; 100240BB(C) 
;
l100241E3: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret 00004h
l10023F15 ENDP
;
;* Jump:
; 10001668(U) 
;
l100241EF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-024h], ecx
           mov eax, dword ptr [ebp-024h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-024h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000860A0h]
           test edx, edx
           je l10024236
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l10024236
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-024h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 10024210(C), 1002421C(C) 
;
l10024236: mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+078h], 000000000h
           jne l10024287
           mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+00008482Ch], 000000000h
           je l10024285
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+000084868h], 000000000h
           jne l10024285
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+000084868h], 000000000h
           jne l10024275
           push 000008451h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           jmp l10024285
;
;* Jump:
; 10024261(C) 
;
l10024275: push 000008452h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
;
;* Jump:
; 10024249(C), 10024255(C), 10024273(U) 
;
l10024285: jmp l100242A3
;
;* Jump:
; 1002423D(C) 
;
l10024287: mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+00008482Ch], 000000000h
           je l100242A3
           push 000008452h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
;
;* Jump:
; 10024285(U), 10024291(C) 
;
l100242A3: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+000086494h]
           mov eax, dword ptr [ebp-024h]
           add edx, dword ptr [eax+000062174h]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+000086494h], edx
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+0000847F8h], 000000000h
           je l100242D7
           mov ecx, dword ptr [ebp-024h]
           call l10001582
           jmp near ptr l100245E2
;
;* Jump:
; 100242C8(C) 
;
l100242D7: mov eax, dword ptr [ebp-024h]
           cmp dword ptr [eax+078h], 000000000h
           jne l100245DA
           mov ecx, dword ptr [ebp-024h]
           cmp dword ptr [ecx+00008482Ch], 000000000h
           je l10024484
           mov edx, dword ptr [ebp-024h]
           cmp dword ptr [edx+000084868h], 000000000h
           jne l10024484
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-014h], 000000000h
           jmp l1002431E
;
;* Jump:
; 10024474(U) 
;
l10024315: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10024313(U) 
;
l1002431E: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l10024479
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           je l1002436B
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1002439C
;
;* Jump:
; 10024336(C) 
;
l1002436B: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10024369(U) 
;
l1002439C: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l100243BF
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l100243D8
;
;* Jump:
; 100243A3(C) 
;
l100243BF: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100243BD(U) 
;
l100243D8: mov edx, dword ptr [ebp-008h]
           add edx, 000000020h
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+030h]
           push edx
           call [g10051804]
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+030h]
           push ecx
           call [g10051804]
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-010h]
           add eax, 000000020h
           push eax
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+030h]
           push eax
           call [g10051804]
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l10024315
;
;* Jump:
; 1002432A(C) 
;
l10024479: call [__imp_glEnd]; [OPENGL32.glEnd].
           jmp near ptr l100245D8
;
;* Jump:
; 100242EE(C), 100242FE(C) 
;
l10024484: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-018h], 000000000h
           jmp l1002449E
;
;* Jump:
; 100245CD(U) 
;
l10024495: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 10024493(U) 
;
l1002449E: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l100245D2
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           je l100244EB
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l1002451C
;
;* Jump:
; 100244B6(C) 
;
l100244EB: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 100244E9(U) 
;
l1002451C: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l1002453F
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l10024558
;
;* Jump:
; 10024523(C) 
;
l1002453F: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1002453D(U) 
;
l10024558: mov edx, dword ptr [ebp-008h]
           add edx, 000000020h
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-008h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000020h
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000020h
           push edx
           call [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           mov eax, dword ptr [ebp-010h]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l10024495
;
;* Jump:
; 100244AA(C) 
;
l100245D2: call [__imp_glEnd]; [OPENGL32.glEnd].
;
;* Jump:
; 1002447F(U) 
;
l100245D8: jmp l100245E2
;
;* Jump:
; 100242DE(C) 
;
l100245DA: mov ecx, dword ptr [ebp-024h]
           call l1000180C
;
;* Jump:
; 100242D2(U), 100245D8(U) 
;
l100245E2: mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax+004h]
           and ecx, 000010000h
           test ecx, ecx
           je l1002472C
           mov edx, dword ptr [ebp-024h]
           add edx, 000062178h
           mov dword ptr [ebp-01Ch], edx
           push 03FB99999h
           push 09999999Ah
           push 03FE33333h
           push 033333333h
           push 03FB99999h
           push 09999999Ah
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           mov dword ptr [ebp-020h], 000000000h
           jmp l10024638
;
;* Jump:
; 10024727(U) 
;
l1002462F: mov eax, dword ptr [ebp-020h]
           add eax, 000000001h
           mov dword ptr [ebp-020h], eax
;
;* Jump:
; 1002462D(U) 
;
l10024638: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-020h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l1002472C
           mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax], 000000000h
           je l10024685
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l100246B6
;
;* Jump:
; 10024650(C) 
;
l10024685: mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-024h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10024683(U) 
;
l100246B6: mov eax, dword ptr [ebp-01Ch]
           cmp dword ptr [eax+004h], 000000000h
           je l100246D9
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-024h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l100246F2
;
;* Jump:
; 100246BD(C) 
;
l100246D9: mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-024h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100246D7(U) 
;
;* Control "Cancel", Dialog 006E
;
l100246F2: push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-008h]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-010h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000018h
           mov dword ptr [ebp-01Ch], edx
           jmp near ptr l1002462F
;
;* Jump:
; 100245F0(C), 10024644(C) 
;
l1002472C: mov esp, ebp
           pop ebp
           ret
l100241EF ENDP
;
;* Jump:
; 10001064(U) 
;
l10024730 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-020h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000860A0h]
           test edx, edx
           je l10024777
           mov eax, dword ptr [ebp-020h]
           cmp dword ptr [eax+000086490h], 000000001h
           je l10024777
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov ecx, dword ptr [ebp-020h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000086490h], 000000001h
;
;* Jump:
; 10024751(C), 1002475D(C) 
;
l10024777: mov edx, dword ptr [ebp-020h]
           cmp dword ptr [edx+00008482Ch], 000000000h
           je l10024793
           push 000008452h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
;
;* Jump:
; 10024781(C) 
;
l10024793: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+000086494h]
           mov edx, dword ptr [ebp-020h]
           add ecx, dword ptr [edx+000062174h]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+000086494h], ecx
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+0000847F8h], 000000000h
           je l100247C7
           mov ecx, dword ptr [ebp-020h]
           call l10001582
           jmp near ptr l1002491B
;
;* Jump:
; 100247B8(C) 
;
l100247C7: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-014h], 000000000h
           jmp l100247E1
;
;* Jump:
; 10024910(U) 
;
l100247D8: mov edx, dword ptr [ebp-014h]
           add edx, 000000001h
           mov dword ptr [ebp-014h], edx
;
;* Jump:
; 100247D6(U) 
;
l100247E1: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [eax+000062174h]
           jnb l10024915
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx], 000000000h
           je l1002482E
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-00Ch], eax
           jmp l1002485F
;
;* Jump:
; 100247F9(C) 
;
l1002482E: mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-020h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1002482C(U) 
;
l1002485F: mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+004h], 000000000h
           je l10024882
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
           jmp l1002489B
;
;* Jump:
; 10024866(C) 
;
l10024882: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10024880(U) 
;
l1002489B: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-008h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-008h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-00Ch]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000020h
           push ecx
           call [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           mov edx, dword ptr [ebp-010h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000018h
           mov dword ptr [ebp-004h], ecx
           jmp near ptr l100247D8
;
;* Jump:
; 100247ED(C) 
;
l10024915: call [__imp_glEnd]; [OPENGL32.glEnd].
;
;* Jump:
; 100247C2(U) 
;
l1002491B: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx+004h]
           and eax, 000010000h
           test eax, eax
           je l10024A64
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000062178h
           mov dword ptr [ebp-018h], ecx
           push 03FB99999h
           push 09999999Ah
           push 03FE33333h
           push 033333333h
           push 03FB99999h
           push 09999999Ah
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l10024970
;
;* Jump:
; 10024A5F(U) 
;
l10024967: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 10024965(U) 
;
l10024970: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+000062174h]
           jnb l10024A64
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx], 000000000h
           je l100249BD
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-00Ch], eax
           jmp l100249EE
;
;* Jump:
; 10024988(C) 
;
l100249BD: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-020h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100249BB(U) 
;
l100249EE: mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+004h], 000000000h
           je l10024A11
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-020h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
           jmp l10024A2A
;
;* Jump:
; 100249F5(C) 
;
l10024A11: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
;
;* Jump:
; 10024A0F(U) 
;
;* Control "Cancel", Dialog 006E
;
l10024A2A: push 000000002h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           mov eax, dword ptr [ebp-010h]
           push eax
           call [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000000018h
           mov dword ptr [ebp-018h], ecx
           jmp near ptr l10024967
;
;* Jump:
; 10024928(C), 1002497C(C) 
;
l10024A64: mov esp, ebp
           pop ebp
           ret
l10024730 ENDP
;
;* Jump:
; 100016E0(U) 
;
l10024A68 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           add eax, 000062178h
           mov dword ptr [ebp-004h], eax
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx+0000860A0h]
           test eax, eax
           je l10024AAF
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+000086490h], 000000000h
           je l10024AAF
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+000086490h], 000000000h
;
;* Jump:
; 10024A89(C), 10024A95(C) 
;
l10024AAF: mov eax, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+0000862F0h], 000000001h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+000086494h]
           mov eax, dword ptr [ebp-018h]
           add edx, dword ptr [eax+000062174h]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+000086494h], edx
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov edx, dword ptr [ebp-018h]
           xor eax, eax
           mov al, byte ptr [edx+0000847EAh]
           push eax
           mov ecx, dword ptr [ebp-018h]
           xor edx, edx
           mov dl, byte ptr [ecx+0000847E9h]
           push edx
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000847E8h]
           push ecx
           call [__imp_glColor3ub]; [OPENGL32.glColor3ub].
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+000086494h]
           mov ecx, dword ptr [ebp-018h]
           add eax, dword ptr [ecx+000062174h]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+000086494h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l10024B36
;
;* Jump:
; 10024CD1(U) 
;
l10024B2D: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 10024B2B(U) 
;
l10024B36: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ecx+000062174h]
           jnb l10024CD6
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax], 000000000h
           je l10024B83
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-018h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-00Ch], ecx
           jmp l10024BB4
;
;* Jump:
; 10024B4E(C) 
;
l10024B83: mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-018h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10024B81(U) 
;
l10024BB4: mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+004h], 000000000h
           je l10024BD7
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-018h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-010h], edx
           jmp l10024BF0
;
;* Jump:
; 10024BBB(C) 
;
l10024BD7: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-018h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 10024BD5(U) 
;
l10024BF0: mov edx, dword ptr [ebp-008h]
           add edx, 000000018h
           push edx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [ecx+008h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [edx]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000018h
           push eax
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [edx+008h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [eax]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000018h
           push ecx
           call [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           mov edx, dword ptr [ebp-010h]
           fld qword ptr [edx+010h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-010h]
           fld qword ptr [eax+008h]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-010h]
           fld qword ptr [ecx]
           fmul qword ptr [g10037268]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           jmp near ptr l10024B2D
;
;* Jump:
; 10024B42(C) 
;
l10024CD6: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+0000860A0h]
           test ecx, ecx
           je l10024D0F
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+000086490h], 000000001h
           je l10024D0F
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov eax, dword ptr [ebp-018h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+000086490h], 000000001h
;
;* Jump:
; 10024CE9(C), 10024CF5(C) 
;
l10024D0F: mov esp, ebp
           pop ebp
           ret
l10024A68 ENDP
;
;* Jump:
; 100017F3(U) 
;
           call l10024D13; Implemented in c++ code
;
;* Jump:
; 10001695(U) 
;
           call l10024ECB; Implemented in c++ code
;
;* Jump:
; 10001730(U) 
;
           call l10024F36; Implemented in c++ code
;
;* Jump:
; 1000145B(U) 
;
l10024FA8 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           push esi
           push edi
           mov dword ptr [ebp-008h], ecx
           cmp dword ptr [ebp+00Ch], 000000000h
           jb l10024FC7
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+00Ch]
           cmp ecx, dword ptr [eax+000086468h]
           jb l10024FFA
;
;* Jump:
; 10024FB7(C) 
;
l10024FC7: mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+000086490h], 000000000h
           je l10024FEB
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+000086490h], 000000000h
;
;* Jump:
; 10024FD1(C) 
;
l10024FEB: mov ecx, dword ptr [ebp-008h]
           mov byte ptr [ecx+0000860A0h], 000h
           jmp near ptr l10025221
;
;* Jump:
; 10024FC5(C) 
;
l10024FFA: mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+000086464h]
           mov ecx, dword ptr [ebp+00Ch]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+014h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 040h
           je l1002505F
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+000086490h], 000000000h
           je l10025043
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+000086490h], 000000000h
;
;* Jump:
; 10025029(C) 
;
l10025043: mov eax, dword ptr [ebp-008h]
           mov byte ptr [eax+0000860A0h], 000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+000086488h], 000000000h
           jmp near ptr l10025221
;
;* Jump:
; 1002501D(C) 
;
l1002505F: mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+010h]
           mov dword ptr [ebp-00Ch], eax
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+000086478h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+000086478h]
           mov dword ptr [edx+000002144h], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+011h]
           mov dword ptr [ebp-010h], eax
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+00008647Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+00008647Ch]
           mov dword ptr [edx+000002148h], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+012h]
           mov dword ptr [ebp-014h], eax
           fild dword ptr [ebp-014h]
           fmul qword ptr [g100371F8]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+000086480h]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+000086480h]
           mov dword ptr [edx+00000214Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+000086484h], 03F800000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [eax+014h]
           fmul dword ptr [ecx+014h]
           mov edx, dword ptr [ebp-008h]
           fmul dword ptr [edx+00008648Ch]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+000086488h]
           mov ecx, dword ptr [ebp-008h]
           cmp dword ptr [ecx+00008482Ch], 000000000h
           jne l1002513B
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+000086488h]
           fmul dword ptr [g10037664]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+000086488h]
;
;* Jump:
; 10025121(C) 
;
l1002513B: mov esi, dword ptr [ebp+008h]
           add esi, 000000004h
           mov edi, dword ptr [ebp-008h]
           add edi, 000002150h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+01Ch]
           fsub qword ptr [g10037238]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1002517B
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [edx+01Ch]
           fsub qword ptr [g10037238]
           fstp qword ptr [ebp-01Ch]
           jmp l10025189
;
;* Jump:
; 10025168(C) 
;
l1002517B: mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-018h], 000000000h
;
;* Jump:
; 10025179(U) 
;
l10025189: fld qword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+000002168h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [ecx+014h]
           fmul dword ptr [edx+014h]
           mov eax, dword ptr [ebp-008h]
           fmul dword ptr [eax+00008648Ch]
           fmul qword ptr [g10037658]
           mov ecx, dword ptr [ebp-008h]
           fstp qword ptr [ecx+00000213Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+000086488h]
           push eax
           push 000000B62h
           call [__imp_glFogf]; [OPENGL32.glFogf].
           mov ecx, dword ptr [ebp-008h]
           add ecx, 000086478h
           push ecx
           push 000000B66h
           call [__imp_glFogfv]; [OPENGL32.glFogfv].
           push 000000800h
           push 000000B65h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           mov edx, dword ptr [ebp-008h]
           cmp dword ptr [edx+000086490h], 000000001h
           je l10025217
           push 000000B60h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           mov eax, dword ptr [ebp-008h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+000086490h], 000000001h
;
;* Jump:
; 100251FD(C) 
;
l10025217: mov ecx, dword ptr [ebp-008h]
;
;* Control "OK", Dialog 006E
;
           mov byte ptr [ecx+0000860A0h], 001h
;
;* Jump:
; 10024FF5(U), 1002505A(U) 
;
l10025221: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10024FA8 ENDP
;
;* Jump:
; 100017E9(U) 
;
           call l10025229; Implemented in c++ code
;
;* Jump:
; 10001514(U) 
;
l100252A6 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000008Ch
           mov dword ptr [ebp-078h], ecx
           mov eax, dword ptr [ebp-078h]
           cmp dword ptr [eax+078h], 000000000h
           je l100252C0
           jmp near ptr l10025625
;
;* Jump:
; 100252B9(C) 
;
l100252C0: lea ecx, [ebp-020h]
           push ecx
           lea edx, [ebp-010h]
           push edx
           lea eax, [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, 0000862E0h
           push ecx
           mov edx, dword ptr [ebp-078h]
           add edx, 000086260h
           push edx
           mov eax, dword ptr [ebp-078h]
           add eax, 0000861E0h
           push eax
           mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fsub qword ptr [g10037238]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [edx+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [edx]
           push ecx
           call l10035DD4; [GLU32.gluProject].
           mov edx, dword ptr [ebp+008h]
           fld qword ptr [g10037080]
           fdiv qword ptr [edx+010h]
           fmul qword ptr [g100376B8]
           fcomp qword ptr [g10037080]
           fnstsw ax
           test ah, 041h
           jne l10025344
           mov dword ptr [ebp-080h], 000000000h
           mov dword ptr [ebp-07Ch], 03FF00000h
           jmp l10025359
;
;* Jump:
; 10025332(C) 
;
l10025344: mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           fmul qword ptr [g100376B8]
           fstp qword ptr [ebp-080h]
;
;* Jump:
; 10025342(U) 
;
l10025359: mov ecx, dword ptr [ebp-080h]
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-07Ch]
           mov dword ptr [ebp-014h], edx
           fld qword ptr [ebp-008h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10025625
           mov eax, dword ptr [ebp-078h]
           fild dword ptr [eax+054h]
           fcomp qword ptr [ebp-008h]
           fnstsw ax
           test ah, 041h
           jne l10025625
           fld qword ptr [ebp-010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10025625
           mov ecx, dword ptr [ebp-078h]
           fild dword ptr [ecx+058h]
           fcomp qword ptr [ebp-010h]
           fnstsw ax
           test ah, 041h
           jne l10025625
           lea edx, [ebp-044h]
           push edx
           push 000001406h
           push 000001902h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           fld qword ptr [ebp-010h]
           call l10035E80; [MSVCRT._ftol].
           push eax
           fld qword ptr [ebp-008h]
           call l10035E80; [MSVCRT._ftol].
           push eax
           call [__imp_glReadPixels]; [OPENGL32.glReadPixels].
           lea eax, [ebp-040h]
           push eax
           lea ecx, [ebp-038h]
           push ecx
           lea edx, [ebp-030h]
           push edx
           mov eax, dword ptr [ebp-078h]
           add eax, 0000862E0h
           push eax
           mov ecx, dword ptr [ebp-078h]
           add ecx, 000086260h
           push ecx
           mov edx, dword ptr [ebp-078h]
           add edx, 0000861E0h
           push edx
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [g10037238]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           push ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           push ecx
           call l10035DD4; [GLU32.gluProject].
           fld dword ptr [ebp-044h]
           fstp qword ptr [ebp-028h]
           fld qword ptr [ebp-028h]
           fadd qword ptr [g100376A8]
           fcomp qword ptr [ebp-040h]
           fnstsw ax
           test ah, 041h
           jne l10025625
           mov edx, dword ptr [ebp+014h]
           push edx
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000140h]
           mov eax, dword ptr [ebp+010h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-000000084h], ecx
           fild dword ptr [ebp-000000084h]
           fmul qword ptr [g10037638]
           fmul qword ptr [ebp-018h]
           fstp qword ptr [ebp-054h]
           mov edx, dword ptr [ebp+010h]
           xor eax, eax
           mov al, byte ptr [edx+005h]
           mov dword ptr [ebp-000000088h], eax
           fild dword ptr [ebp-000000088h]
           fmul qword ptr [g10037638]
           fmul qword ptr [ebp-018h]
           fstp qword ptr [ebp-074h]
           mov ecx, dword ptr [ebp+010h]
           xor edx, edx
           mov dl, byte ptr [ecx+006h]
           mov dword ptr [ebp-00000008Ch], edx
           fild dword ptr [ebp-00000008Ch]
           fmul qword ptr [g10037638]
           fmul qword ptr [ebp-018h]
           fstp qword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-048h]
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           push ecx
           mov edx, dword ptr [ebp-070h]
           push edx
           mov eax, dword ptr [ebp-074h]
           push eax
           mov ecx, dword ptr [ebp-050h]
           push ecx
           mov edx, dword ptr [ebp-054h]
           push edx
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
;
;* Control "", Dialog 0073
;
           push 000000401h
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000114h]
           fld qword ptr [ebp+018h]
           fadd qword ptr [g10037698]
           fstp qword ptr [ebp-05Ch]
           fld qword ptr [ebp-05Ch]
           fcomp qword ptr [g10037688]
           fnstsw ax
           test ah, 041h
           jne l10025525
           fld qword ptr [ebp-05Ch]
           fsub qword ptr [g10037688]
           fstp qword ptr [ebp-05Ch]
;
;* Jump:
; 10025517(C) 
;
l10025525: fld dword ptr [ebp+00Ch]
           fmul qword ptr [g10037678]
           fmul qword ptr [g10037668]
           fld qword ptr [ebp-05Ch]
           call l10035ED6; [MSVCRT._CIsin].
           fmulp st(01h), st(00h)
           fstp qword ptr [ebp-064h]
           fld dword ptr [ebp+00Ch]
           fmul qword ptr [g10037678]
           fmul qword ptr [g10037668]
           fld qword ptr [ebp-05Ch]
           call l10035EDC; [MSVCRT._CIcos].
           fmulp st(01h), st(00h)
           fstp qword ptr [ebp-06Ch]
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           push 000000000h
           push 000000000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fld qword ptr [ebp-010h]
           fsub qword ptr [ebp-06Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld qword ptr [ebp-008h]
           fsub qword ptr [ebp-064h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 03F800000h
           push 000000000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fld qword ptr [ebp-010h]
           fadd qword ptr [ebp-064h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld qword ptr [ebp-008h]
           fsub qword ptr [ebp-06Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 03F800000h
           push 03F800000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fld qword ptr [ebp-010h]
           fadd qword ptr [ebp-06Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld qword ptr [ebp-008h]
           fadd qword ptr [ebp-064h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           push 000000000h
           push 03F800000h
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           fld qword ptr [ebp-010h]
           fsub qword ptr [ebp-064h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fld qword ptr [ebp-008h]
           fadd qword ptr [ebp-06Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-078h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-078h]
           call [edx+000000144h]
;
;* Jump:
; 100252BB(U), 10025373(C), 10025387(C), 1002539B(C), 100253AF(C), 
; 10025446(C) 
;
l10025625: mov esp, ebp
           pop ebp
           ret 0001Ch
l100252A6 ENDP
;
;* Jump:
; 100017FD(U) 
;
l1002562B PROC
           push ebp
           mov ebp, esp
           sub esp, 000000478h
           mov dword ptr [ebp-000000468h], ecx
           mov eax, dword ptr [ebp-000000468h]
           cmp dword ptr [eax+078h], 000000000h
           je l1002564B
           jmp near ptr l10025AA9
;
;* Jump:
; 10025644(C) 
;
l1002564B: mov ecx, dword ptr [ebp+008h]
           fld qword ptr [ecx+010h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 001h
           je l10025663
           jmp near ptr l10025AA9
;
;* Jump:
; 1002565C(C) 
;
l10025663: mov edx, dword ptr [ebp-000000468h]
           cmp dword ptr [edx+0000862F0h], 000000000h
           jne l10025677
           jmp near ptr l10025AA9
;
;* Jump:
; 10025670(C) 
;
l10025677: lea eax, [ebp-000000428h]
           push eax
           lea ecx, [ebp-01Ch]
           push ecx
           lea edx, [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-000000468h]
           add eax, 0000862E0h
           push eax
           mov ecx, dword ptr [ebp-000000468h]
           add ecx, 000086260h
           push ecx
           mov edx, dword ptr [ebp-000000468h]
           add edx, 0000861E0h
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [eax+010h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [eax+008h]
           push edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [eax]
           push edx
           call l10035DD4; [GLU32.gluProject].
           mov dword ptr [ebp-004h], 000000190h
           mov eax, dword ptr [ebp-004h]
           neg eax
           mov dword ptr [ebp-00000046Ch], eax
           fild dword ptr [ebp-00000046Ch]
           fcomp qword ptr [ebp-014h]
           fnstsw ax
           test ah, 041h
           je l10025752
           mov ecx, dword ptr [ebp-000000468h]
           mov edx, dword ptr [ecx+054h]
           add edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000470h], edx
           fild dword ptr [ebp-000000470h]
           fcomp qword ptr [ebp-014h]
           fnstsw ax
           test ah, 001h
           jne l10025752
           mov eax, dword ptr [ebp-004h]
           neg eax
           mov dword ptr [ebp-000000474h], eax
           fild dword ptr [ebp-000000474h]
           fcomp qword ptr [ebp-01Ch]
           fnstsw ax
           test ah, 041h
           je l10025752
           mov ecx, dword ptr [ebp-000000468h]
           mov edx, dword ptr [ecx+058h]
           add edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-000000478h], edx
           fild dword ptr [ebp-000000478h]
           fcomp qword ptr [ebp-01Ch]
           fnstsw ax
           test ah, 001h
           je l10025757
;
;* Jump:
; 100256F1(C), 10025713(C), 1002572E(C) 
;
l10025752: jmp near ptr l10025AA9
;
;* Jump:
; 10025750(C) 
;
l10025757: lea eax, [ebp-00000041Ch]
           push eax
           push 000001406h
           push 000001902h
           push 000000010h
           push 000000010h
           fld qword ptr [ebp-01Ch]
           fsub qword ptr [g100376E8]
           call l10035E80; [MSVCRT._ftol].
           push eax
           fld qword ptr [ebp-014h]
           fsub qword ptr [g100376E8]
           call l10035E80; [MSVCRT._ftol].
           push eax
           call [__imp_glReadPixels]; [OPENGL32.glReadPixels].
           mov dword ptr [ebp-00Ch], 000000000h
           mov dword ptr [ebp-008h], 0FFFFFFF8h
           jmp l100257A9
;
;* Jump:
; 1002587C(U) 
;
l100257A0: mov ecx, dword ptr [ebp-008h]
           add ecx, 000000001h
           mov dword ptr [ebp-008h], ecx
;
;* Jump:
; 1002579E(U) 
;
l100257A9: cmp dword ptr [ebp-008h], 000000008h
           jnl l10025881
           mov dword ptr [ebp-00000042Ch], 0FFFFFFF8h
           jmp l100257CE
;
;* Jump:
; 10025877(U) 
;
l100257BF: mov edx, dword ptr [ebp-00000042Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00000042Ch], edx
;
;* Jump:
; 100257BD(U) 
;
l100257CE: cmp dword ptr [ebp-00000042Ch], 000000008h
           jnl l1002587C
           fild dword ptr [ebp-008h]
           fadd qword ptr [ebp-014h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10025877
           fild dword ptr [ebp-008h]
           fadd qword ptr [ebp-014h]
           mov eax, dword ptr [ebp-000000468h]
           fild dword ptr [eax+054h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l10025877
           fild dword ptr [ebp-00000042Ch]
           fadd qword ptr [ebp-01Ch]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10025877
           fild dword ptr [ebp-00000042Ch]
           fadd qword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-000000468h]
           fild dword ptr [ecx+058h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l10025877
           mov edx, dword ptr [ebp-00000042Ch]
           add edx, 000000008h
           shl edx, 004h
           mov eax, dword ptr [ebp-008h]
           lea ecx, [edx+eax+008h]
           mov edx, dword ptr [ebp+ecx*04h-00000041Ch]
           mov dword ptr [ebp-000000420h], edx
           fld dword ptr [ebp-000000420h]
           fcomp qword ptr [g100376D8]
           fnstsw ax
           test ah, 001h
           jne l10025877
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000001h
           mov dword ptr [ebp-00Ch], eax
;
;* Jump:
; 100257EC(C), 10025808(C), 1002581E(C), 10025839(C), 1002586C(C) 
;
l10025877: jmp near ptr l100257BF
;
;* Jump:
; 100257D5(C) 
;
l1002587C: jmp near ptr l100257A0
;
;* Jump:
; 100257AD(C) 
;
l10025881: cmp dword ptr [ebp-00Ch], 000000000h
           jle l10025AA9
           mov ecx, dword ptr [ebp-000000468h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000468h]
           call [edx+000000140h]
;
;* Control "", Dialog 0073
;
           push 000000401h
           mov eax, dword ptr [ebp-000000468h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-000000468h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-000000468h]
           cmp dword ptr [eax+0000860A4h], 0FFFFFFFFh
           jne l100258E9
;
;* String: "SunFlare"
;
           push offset g1003B73C
           mov ecx, dword ptr [ebp-000000468h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000468h]
           call [edx+040h]
           mov ecx, dword ptr [ebp-000000468h]
           mov dword ptr [ecx+0000860A4h], eax
;
;* Jump:
; 100258C5(C) 
;
l100258E9: mov edx, dword ptr [ebp-000000468h]
           mov eax, dword ptr [edx+0000860A4h]
           push eax
           mov ecx, dword ptr [ebp-000000468h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000468h]
           call [edx+0000000ACh]
           fild dword ptr [ebp-00Ch]
           fdiv qword ptr [g100376C8]
           fstp qword ptr [ebp-00000045Ch]
           mov dword ptr [ebp-000000444h], 000000000h
           mov dword ptr [ebp-000000440h], 03FF00000h
           mov dword ptr [ebp-00000044Ch], 000000000h
           mov dword ptr [ebp-000000448h], 03FF00000h
           mov dword ptr [ebp-000000464h], 000000000h
           mov dword ptr [ebp-000000460h], 03FE40000h
           fld qword ptr [ebp-000000444h]
           fmul qword ptr [ebp-00000045Ch]
           fstp qword ptr [ebp-00000043Ch]
           fld qword ptr [ebp-00000044Ch]
           fmul qword ptr [ebp-00000045Ch]
           fstp qword ptr [ebp-000000454h]
           fld qword ptr [ebp-000000464h]
           fmul qword ptr [ebp-00000045Ch]
           fstp qword ptr [ebp-000000434h]
           mov eax, dword ptr [ebp-000000430h]
           push eax
           mov ecx, dword ptr [ebp-000000434h]
           push ecx
           mov edx, dword ptr [ebp-000000450h]
           push edx
           mov eax, dword ptr [ebp-000000454h]
           push eax
           mov ecx, dword ptr [ebp-000000438h]
           push ecx
           mov edx, dword ptr [ebp-00000043Ch]
           push edx
           call [__imp_glColor3d]; [OPENGL32.glColor3d].
           push 000000007h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           push 000000000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           push 000000000h
           push 000000000h
           fild dword ptr [ebp-004h]
           fadd qword ptr [ebp-01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           fsubr qword ptr [ebp-014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           push 03FF00000h
           push 000000000h
           push 000000000h
           push 000000000h
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           push 000000000h
           push 000000000h
           fild dword ptr [ebp-004h]
           fsubr qword ptr [ebp-01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           fsubr qword ptr [ebp-014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           push 03FF00000h
           push 000000000h
           push 03FF00000h
           push 000000000h
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           push 000000000h
           push 000000000h
           fild dword ptr [ebp-004h]
           fsubr qword ptr [ebp-01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           fadd qword ptr [ebp-014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           push 000000000h
           push 000000000h
           push 03FF00000h
           push 000000000h
           call [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           push 000000000h
           push 000000000h
           fild dword ptr [ebp-004h]
           fadd qword ptr [ebp-01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           fild dword ptr [ebp-004h]
           fadd qword ptr [ebp-014h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-000000468h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-000000468h]
           call [edx+000000144h]
;
;* Jump:
; 10025646(U), 1002565E(U), 10025672(U), 10025752(U), 10025885(C) 
;
l10025AA9: mov esp, ebp
           pop ebp
           ret 00004h
l1002562B ENDP
;
;* Jump:
; 100016A9(U) 
;
l10025AAF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           cmp dword ptr [eax+000086490h], 000000000h
           je l10025ADC
           push 000000B60h
           call [__imp_glDisable]; [OPENGL32.glDisable].
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+000086490h], 000000000h
;
;* Jump:
; 10025AC2(C) 
;
l10025ADC: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           fld dword ptr [ebp+020h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp+014h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-008h], eax
           fild dword ptr [ebp-008h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp+014h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-00Ch], edx
           fild dword ptr [ebp-00Ch]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp+014h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           fild dword ptr [ebp-010h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [edx+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [edx+008h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [edx]
           push ecx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           fld dword ptr [ebp+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp+018h]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-014h], eax
           fild dword ptr [ebp-014h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp+018h]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-018h], edx
           fild dword ptr [ebp-018h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp+018h]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-01Ch], ecx
           fild dword ptr [ebp-01Ch]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [edx+010h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [edx+008h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [edx]
           push ecx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           fld dword ptr [ebp+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp+01Ch]
           xor eax, eax
           mov al, byte ptr [edx+006h]
           mov dword ptr [ebp-020h], eax
           fild dword ptr [ebp-020h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp+01Ch]
           xor edx, edx
           mov dl, byte ptr [ecx+005h]
           mov dword ptr [ebp-024h], edx
           fild dword ptr [ebp-024h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp+01Ch]
           xor ecx, ecx
           mov cl, byte ptr [eax+004h]
           mov dword ptr [ebp-028h], ecx
           fild dword ptr [ebp-028h]
           fmul qword ptr [g100371F8]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [edx+010h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [edx+008h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [edx]
           push ecx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret 00024h
l10025AAF ENDP
;
;* Jump:
; 10001578(U) 
;
l10025C79 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+000084804h], 000000000h
           je l10025CA0
           push 000008522h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Jump:
; 10025C93(C) 
;
l10025CA0: push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov dword ptr [ebp-014h], 000000000h
           jmp l10025CBA
;
;* Jump:
; 10025E00(U) 
;
l10025CB1: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10025CAF(U) 
;
l10025CBA: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp+014h]
           jnb l10025E05
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp+010h]
           mov edx, dword ptr [ecx+eax*04h]
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+020h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov eax, dword ptr [ecx+010h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           push edx
           mov eax, dword ptr [ecx+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           push edx
           mov eax, dword ptr [ecx]
           push eax
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-00Ch]
           fld dword ptr [edx+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [eax+020h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+014h]
           push eax
           mov ecx, dword ptr [edx+010h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00Ch]
           push eax
           mov ecx, dword ptr [edx+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+004h]
           push eax
           mov ecx, dword ptr [edx]
           push ecx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+028h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+024h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ecx+020h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+01Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_glColor4d]; [OPENGL32.glColor4d].
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+014h]
           push ecx
           mov edx, dword ptr [eax+010h]
           push edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+00Ch]
           push ecx
           mov edx, dword ptr [eax+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [eax+004h]
           push ecx
           mov edx, dword ptr [eax]
           push edx
           call [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           jmp near ptr l10025CB1
;
;* Jump:
; 10025CC0(C) 
;
l10025E05: call [__imp_glEnd]; [OPENGL32.glEnd].
           mov eax, dword ptr [ebp-018h]
           cmp dword ptr [eax+000084804h], 000000000h
           je l10025E22
           push 000008522h
           call [__imp_glEnable]; [OPENGL32.glEnable].
;
;* Jump:
; 10025E15(C) 
;
l10025E22: mov esp, ebp
           pop ebp
           ret 00010h
l10025C79 ENDP
;
;* Jump:
; 10001172(U) 
;
l10025E28 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           push 000000004h
           call [__imp_glBegin]; [OPENGL32.glBegin].
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+0000860B8h]
           push ecx
           mov edx, dword ptr [ebp+02Ch]
           push edx
           mov eax, dword ptr [ebp+02Ch]
           push eax
           mov ecx, dword ptr [ebp+02Ch]
           push ecx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov edx, dword ptr [ebp+038h]
           mov eax, dword ptr [edx+010h]
           push eax
           mov ecx, dword ptr [ebp+038h]
           mov edx, dword ptr [ecx+004h]
           push edx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov eax, dword ptr [ebp-004h]
           fild dword ptr [eax+058h]
           fsub dword ptr [ebp+00Ch]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp+008h]
           push ecx
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+0000860B8h]
           push eax
           mov ecx, dword ptr [ebp+030h]
           push ecx
           mov edx, dword ptr [ebp+030h]
           push edx
           mov eax, dword ptr [ebp+030h]
           push eax
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov ecx, dword ptr [ebp+038h]
           mov edx, dword ptr [ecx+014h]
           push edx
           mov eax, dword ptr [ebp+038h]
           mov ecx, dword ptr [eax+008h]
           push ecx
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov edx, dword ptr [ebp-004h]
           fild dword ptr [edx+058h]
           fsub dword ptr [ebp+018h]
           push ecx
           fstp dword ptr [esp]
           mov eax, dword ptr [ebp+014h]
           push eax
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+0000860B8h]
           push edx
           mov eax, dword ptr [ebp+034h]
           push eax
           mov ecx, dword ptr [ebp+034h]
           push ecx
           mov edx, dword ptr [ebp+034h]
           push edx
           call [__imp_glColor4f]; [OPENGL32.glColor4f].
           mov eax, dword ptr [ebp+038h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov edx, dword ptr [ebp+038h]
           mov eax, dword ptr [edx+00Ch]
           push eax
           call [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           mov ecx, dword ptr [ebp-004h]
           fild dword ptr [ecx+058h]
           fsub dword ptr [ebp+024h]
           push ecx
           fstp dword ptr [esp]
           mov edx, dword ptr [ebp+020h]
           push edx
           call [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           call [__imp_glEnd]; [OPENGL32.glEnd].
           mov esp, ebp
           pop ebp
           ret 00034h
l10025E28 ENDP
;
;* Jump:
; 100010FA(U) 
;
l10025F18 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+050h], ecx
           cmp dword ptr [ebp+008h], 000000000h
           je l10025F5E
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+04Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+048h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+058h]
           sub edx, dword ptr [ecx+044h]
           mov eax, dword ptr [ebp-004h]
           sub edx, dword ptr [eax+04Ch]
           push edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+040h]
           push edx
           call [__imp_glScissor]; [OPENGL32.glScissor].
           jmp l10025F7C
;
;* Jump:
; 10025F2C(C) 
;
l10025F5E: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+058h]
           sub ecx, 000000002h
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+054h]
           sub eax, 000000002h
           push eax
;
;* Control "OK", Dialog 006E
;
           push 000000001h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           call [__imp_glScissor]; [OPENGL32.glScissor].
;
;* Jump:
; 10025F5C(U) 
;
l10025F7C: mov esp, ebp
           pop ebp
           ret 00004h
l10025F18 ENDP
;
;* Jump:
; 10001177(U) 
;
l10025F82 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+040h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+044h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx+048h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+04Ch], ecx
           mov edx, dword ptr [ebp-004h]
           cmp dword ptr [edx+050h], 000000000h
           je l10025FE4
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+04Ch]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+048h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+058h]
           sub eax, dword ptr [edx+044h]
           mov ecx, dword ptr [ebp-004h]
           sub eax, dword ptr [ecx+04Ch]
           push eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+040h]
           push eax
           call [__imp_glScissor]; [OPENGL32.glScissor].
;
;* Jump:
; 10025FB4(C) 
;
l10025FE4: mov esp, ebp
           pop ebp
           ret 00010h
l10025F82 ENDP
;
;* Jump:
; 10001834(U) 
;
           call l10025FEA; Implemented in c++ code
;
;* Jump:
; 10001037(U) 
;
           call l10026067; Implemented in c++ code
;
;* Jump:
; 10001541(U) 
;
           call l100260C0; Implemented in c++ code
;
;* Jump:
; 10001334(U) 
;
           call l100260DA; Implemented in c++ code
;
;* Jump:
; 100012B7(U) 
;
l10026115 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000002A0h
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-038h], eax
;
;* String: "FilterMode"
;
           mov dword ptr [ebp-03Ch], offset g1003B78C
;
;* Jump:
; 10026160(C) 
;
l1002612E: mov ecx, dword ptr [ebp-03Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-03Dh], dl
           mov eax, dword ptr [ebp-038h]
           cmp dl, byte ptr [eax]
           jne l1002616B
           cmp byte ptr [ebp-03Dh], 000h
           je l10026162
           mov ecx, dword ptr [ebp-03Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-03Eh], dl
           mov eax, dword ptr [ebp-038h]
           cmp dl, byte ptr [eax+001h]
           jne l1002616B
           add dword ptr [ebp-03Ch], 000000002h
           add dword ptr [ebp-038h], 000000002h
           cmp byte ptr [ebp-03Eh], 000h
           jne l1002612E
;
;* Jump:
; 10026141(C) 
;
l10026162: mov dword ptr [ebp-044h], 000000000h
           jmp l10026173
;
;* Jump:
; 1002613B(C), 10026152(C) 
;
l1002616B: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-044h], ecx
;
;* Jump:
; 10026169(U) 
;
l10026173: mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-048h], edx
           cmp dword ptr [ebp-048h], 000000000h
           jne l100264C7
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-04Ch], eax
;
;* String: "GL_NEAREST"
;
           mov dword ptr [ebp-050h], offset g1003B798
;
;* Jump:
; 100261C2(C) 
;
l10026190: mov ecx, dword ptr [ebp-050h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-051h], dl
           mov eax, dword ptr [ebp-04Ch]
           cmp dl, byte ptr [eax]
           jne l100261CD
           cmp byte ptr [ebp-051h], 000h
           je l100261C4
           mov ecx, dword ptr [ebp-050h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-052h], dl
           mov eax, dword ptr [ebp-04Ch]
           cmp dl, byte ptr [eax+001h]
           jne l100261CD
           add dword ptr [ebp-050h], 000000002h
           add dword ptr [ebp-04Ch], 000000002h
           cmp byte ptr [ebp-052h], 000h
           jne l10026190
;
;* Jump:
; 100261A3(C) 
;
l100261C4: mov dword ptr [ebp-058h], 000000000h
           jmp l100261D5
;
;* Jump:
; 1002619D(C), 100261B4(C) 
;
l100261CD: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-058h], ecx
;
;* Jump:
; 100261CB(U) 
;
l100261D5: mov edx, dword ptr [ebp-058h]
           mov dword ptr [ebp-05Ch], edx
           cmp dword ptr [ebp-05Ch], 000000000h
           jne l100261F3
           push 000002600h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 100261DF(C) 
;
l100261F3: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-060h], eax
;
;* String: "GL_LINEAR"
;
           mov dword ptr [ebp-064h], offset g1003B7A4
;
;* Jump:
; 10026232(C) 
;
l10026200: mov ecx, dword ptr [ebp-064h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-065h], dl
           mov eax, dword ptr [ebp-060h]
           cmp dl, byte ptr [eax]
           jne l1002623D
           cmp byte ptr [ebp-065h], 000h
           je l10026234
           mov ecx, dword ptr [ebp-064h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-066h], dl
           mov eax, dword ptr [ebp-060h]
           cmp dl, byte ptr [eax+001h]
           jne l1002623D
           add dword ptr [ebp-064h], 000000002h
           add dword ptr [ebp-060h], 000000002h
           cmp byte ptr [ebp-066h], 000h
           jne l10026200
;
;* Jump:
; 10026213(C) 
;
l10026234: mov dword ptr [ebp-06Ch], 000000000h
           jmp l10026245
;
;* Jump:
; 1002620D(C), 10026224(C) 
;
l1002623D: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-06Ch], ecx
;
;* Jump:
; 1002623B(U) 
;
l10026245: mov edx, dword ptr [ebp-06Ch]
           mov dword ptr [ebp-070h], edx
           cmp dword ptr [ebp-070h], 000000000h
           jne l10026263
           push 000002601h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 1002624F(C) 
;
l10026263: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-074h], eax
;
;* String: "GL_NEAREST_MIPMAP_NEAREST"
;
           mov dword ptr [ebp-078h], offset g1003B7B0
;
;* Jump:
; 100262A2(C) 
;
l10026270: mov ecx, dword ptr [ebp-078h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-079h], dl
           mov eax, dword ptr [ebp-074h]
           cmp dl, byte ptr [eax]
           jne l100262AD
           cmp byte ptr [ebp-079h], 000h
           je l100262A4
           mov ecx, dword ptr [ebp-078h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-07Ah], dl
           mov eax, dword ptr [ebp-074h]
           cmp dl, byte ptr [eax+001h]
           jne l100262AD
           add dword ptr [ebp-078h], 000000002h
           add dword ptr [ebp-074h], 000000002h
           cmp byte ptr [ebp-07Ah], 000h
           jne l10026270
;
;* Jump:
; 10026283(C) 
;
l100262A4: mov dword ptr [ebp-080h], 000000000h
           jmp l100262B5
;
;* Jump:
; 1002627D(C), 10026294(C) 
;
l100262AD: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-080h], ecx
;
;* Jump:
; 100262AB(U) 
;
l100262B5: mov edx, dword ptr [ebp-080h]
           mov dword ptr [ebp-000000084h], edx
           cmp dword ptr [ebp-000000084h], 000000000h
           jne l100262D9
           push 000002700h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 100262C5(C) 
;
l100262D9: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-000000088h], eax
;
;* String: "GL_LINEAR_MIPMAP_NEAREST"
;
           mov dword ptr [ebp-00000008Ch], offset g1003B7CC
;
;* Jump:
; 1002633C(C) 
;
l100262EC: mov ecx, dword ptr [ebp-00000008Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00000008Dh], dl
           mov eax, dword ptr [ebp-000000088h]
           cmp dl, byte ptr [eax]
           jne l1002634A
           cmp byte ptr [ebp-00000008Dh], 000h
           je l1002633E
           mov ecx, dword ptr [ebp-00000008Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00000008Eh], dl
           mov eax, dword ptr [ebp-000000088h]
           cmp dl, byte ptr [eax+001h]
           jne l1002634A
           add dword ptr [ebp-00000008Ch], 000000002h
           add dword ptr [ebp-000000088h], 000000002h
           cmp byte ptr [ebp-00000008Eh], 000h
           jne l100262EC
;
;* Jump:
; 1002630B(C) 
;
l1002633E: mov dword ptr [ebp-000000094h], 000000000h
           jmp l10026355
;
;* Jump:
; 10026302(C), 10026325(C) 
;
l1002634A: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000094h], ecx
;
;* Jump:
; 10026348(U) 
;
l10026355: mov edx, dword ptr [ebp-000000094h]
           mov dword ptr [ebp-000000098h], edx
           cmp dword ptr [ebp-000000098h], 000000000h
           jne l1002637C
           push 000002701h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 10026368(C) 
;
l1002637C: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-00000009Ch], eax
;
;* String: "GL_NEAREST_MIPMAP_LINEAR"
;
           mov dword ptr [ebp-0000000A0h], offset g1003B7E8
;
;* Jump:
; 100263DF(C) 
;
l1002638F: mov ecx, dword ptr [ebp-0000000A0h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000A1h], dl
           mov eax, dword ptr [ebp-00000009Ch]
           cmp dl, byte ptr [eax]
           jne l100263ED
           cmp byte ptr [ebp-0000000A1h], 000h
           je l100263E1
           mov ecx, dword ptr [ebp-0000000A0h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000A2h], dl
           mov eax, dword ptr [ebp-00000009Ch]
           cmp dl, byte ptr [eax+001h]
           jne l100263ED
           add dword ptr [ebp-0000000A0h], 000000002h
           add dword ptr [ebp-00000009Ch], 000000002h
           cmp byte ptr [ebp-0000000A2h], 000h
           jne l1002638F
;
;* Jump:
; 100263AE(C) 
;
l100263E1: mov dword ptr [ebp-0000000A8h], 000000000h
           jmp l100263F8
;
;* Jump:
; 100263A5(C), 100263C8(C) 
;
l100263ED: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000A8h], ecx
;
;* Jump:
; 100263EB(U) 
;
l100263F8: mov edx, dword ptr [ebp-0000000A8h]
           mov dword ptr [ebp-0000000ACh], edx
           cmp dword ptr [ebp-0000000ACh], 000000000h
           jne l1002641F
           push 000002702h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 1002640B(C) 
;
l1002641F: mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-0000000B0h], eax
;
;* String: "GL_LINEAR_MIPMAP_LINEAR"
;
           mov dword ptr [ebp-0000000B4h], offset g1003B804
;
;* Jump:
; 10026482(C) 
;
l10026432: mov ecx, dword ptr [ebp-0000000B4h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000B5h], dl
           mov eax, dword ptr [ebp-0000000B0h]
           cmp dl, byte ptr [eax]
           jne l10026490
           cmp byte ptr [ebp-0000000B5h], 000h
           je l10026484
           mov ecx, dword ptr [ebp-0000000B4h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000B6h], dl
           mov eax, dword ptr [ebp-0000000B0h]
           cmp dl, byte ptr [eax+001h]
           jne l10026490
           add dword ptr [ebp-0000000B4h], 000000002h
           add dword ptr [ebp-0000000B0h], 000000002h
           cmp byte ptr [ebp-0000000B6h], 000h
           jne l10026432
;
;* Jump:
; 10026451(C) 
;
l10026484: mov dword ptr [ebp-0000000BCh], 000000000h
           jmp l1002649B
;
;* Jump:
; 10026448(C), 1002646B(C) 
;
l10026490: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000BCh], ecx
;
;* Jump:
; 1002648E(U) 
;
l1002649B: mov edx, dword ptr [ebp-0000000BCh]
           mov dword ptr [ebp-0000000C0h], edx
           cmp dword ptr [ebp-0000000C0h], 000000000h
           jne l100264C2
           push 000002703h
           mov ecx, dword ptr [ebp-034h]
           call l100011FE
           jmp near ptr l10027923
;
;* Jump:
; 100264AE(C) 
;
l100264C2: jmp near ptr l10027921
;
;* Jump:
; 1002617D(C) 
;
l100264C7: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000C4h], eax
;
;* String: "AnisotropicLevel"
;
           mov dword ptr [ebp-0000000C8h], offset g1003B81C
;
;* Jump:
; 1002652A(C) 
;
l100264DA: mov ecx, dword ptr [ebp-0000000C8h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000C9h], dl
           mov eax, dword ptr [ebp-0000000C4h]
           cmp dl, byte ptr [eax]
           jne l10026538
           cmp byte ptr [ebp-0000000C9h], 000h
           je l1002652C
           mov ecx, dword ptr [ebp-0000000C8h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000CAh], dl
           mov eax, dword ptr [ebp-0000000C4h]
           cmp dl, byte ptr [eax+001h]
           jne l10026538
           add dword ptr [ebp-0000000C8h], 000000002h
           add dword ptr [ebp-0000000C4h], 000000002h
           cmp byte ptr [ebp-0000000CAh], 000h
           jne l100264DA
;
;* Jump:
; 100264F9(C) 
;
l1002652C: mov dword ptr [ebp-0000000D0h], 000000000h
           jmp l10026543
;
;* Jump:
; 100264F0(C), 10026513(C) 
;
l10026538: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000D0h], ecx
;
;* Jump:
; 10026536(U) 
;
l10026543: mov edx, dword ptr [ebp-0000000D0h]
           mov dword ptr [ebp-0000000D4h], edx
           cmp dword ptr [ebp-0000000D4h], 000000000h
           jne l100265C5
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084824h], 000000000h
           je l100265BE
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-004h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 040h
           jne l100265A7
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+000084818h], eax
           mov ecx, dword ptr [ebp-034h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+0000847F4h], 000000001h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026582(C) 
;
l100265A7: mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+0000847F4h], 000000000h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026562(C) 
;
l100265BE: xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 10026556(C) 
;
l100265C5: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000D8h], eax
;
;* String: "TextureLODBias"
;
           mov dword ptr [ebp-0000000DCh], offset g1003B830
;
;* Jump:
; 10026628(C) 
;
l100265D8: mov ecx, dword ptr [ebp-0000000DCh]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000DDh], dl
           mov eax, dword ptr [ebp-0000000D8h]
           cmp dl, byte ptr [eax]
           jne l10026636
           cmp byte ptr [ebp-0000000DDh], 000h
           je l1002662A
           mov ecx, dword ptr [ebp-0000000DCh]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000DEh], dl
           mov eax, dword ptr [ebp-0000000D8h]
           cmp dl, byte ptr [eax+001h]
           jne l10026636
           add dword ptr [ebp-0000000DCh], 000000002h
           add dword ptr [ebp-0000000D8h], 000000002h
           cmp byte ptr [ebp-0000000DEh], 000h
           jne l100265D8
;
;* Jump:
; 100265F7(C) 
;
l1002662A: mov dword ptr [ebp-0000000E4h], 000000000h
           jmp l10026641
;
;* Jump:
; 100265EE(C), 10026611(C) 
;
l10026636: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000E4h], ecx
;
;* Jump:
; 10026634(U) 
;
l10026641: mov edx, dword ptr [ebp-0000000E4h]
           mov dword ptr [ebp-0000000E8h], edx
           cmp dword ptr [ebp-0000000E8h], 000000000h
           jne l100266A8
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084828h], 000000000h
           je l100266A1
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx+00008481Ch]
           mov eax, dword ptr [ebp-034h]
           fld dword ptr [eax+00008481Ch]
           call l10035E80; [MSVCRT._ftol].
           push eax
           push 000008501h
           push 000008500h
           call [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026660(C) 
;
l100266A1: xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 10026654(C) 
;
l100266A8: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000ECh], ecx
;
;* String: "ShowStats"
;
           mov dword ptr [ebp-0000000F0h], offset g1003B840
;
;* Jump:
; 1002670B(C) 
;
l100266BB: mov edx, dword ptr [ebp-0000000F0h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-0000000F1h], al
           mov ecx, dword ptr [ebp-0000000ECh]
           cmp al, byte ptr [ecx]
           jne l10026719
           cmp byte ptr [ebp-0000000F1h], 000h
           je l1002670D
           mov edx, dword ptr [ebp-0000000F0h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000F2h], al
           mov ecx, dword ptr [ebp-0000000ECh]
           cmp al, byte ptr [ecx+001h]
           jne l10026719
           add dword ptr [ebp-0000000F0h], 000000002h
           add dword ptr [ebp-0000000ECh], 000000002h
           cmp byte ptr [ebp-0000000F2h], 000h
           jne l100266BB
;
;* Jump:
; 100266DA(C) 
;
l1002670D: mov dword ptr [ebp-0000000F8h], 000000000h
           jmp l10026724
;
;* Jump:
; 100266D1(C), 100266F4(C) 
;
l10026719: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000F8h], edx
;
;* Jump:
; 10026717(U) 
;
l10026724: mov eax, dword ptr [ebp-0000000F8h]
           mov dword ptr [ebp-0000000FCh], eax
           cmp dword ptr [ebp-0000000FCh], 000000000h
           jne l10026759
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+00008480Ch], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026737(C) 
;
l10026759: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000100h], eax
;
;* String: "ToonRender"
;
           mov dword ptr [ebp-000000104h], offset g1003B84C
;
;* Jump:
; 100267BC(C) 
;
l1002676C: mov ecx, dword ptr [ebp-000000104h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000105h], dl
           mov eax, dword ptr [ebp-000000100h]
           cmp dl, byte ptr [eax]
           jne l100267CA
           cmp byte ptr [ebp-000000105h], 000h
           je l100267BE
           mov ecx, dword ptr [ebp-000000104h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000106h], dl
           mov eax, dword ptr [ebp-000000100h]
           cmp dl, byte ptr [eax+001h]
           jne l100267CA
           add dword ptr [ebp-000000104h], 000000002h
           add dword ptr [ebp-000000100h], 000000002h
           cmp byte ptr [ebp-000000106h], 000h
           jne l1002676C
;
;* Jump:
; 1002678B(C) 
;
l100267BE: mov dword ptr [ebp-00000010Ch], 000000000h
           jmp l100267D5
;
;* Jump:
; 10026782(C), 100267A5(C) 
;
l100267CA: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-00000010Ch], ecx
;
;* Jump:
; 100267C8(U) 
;
l100267D5: mov edx, dword ptr [ebp-00000010Ch]
           mov dword ptr [ebp-000000110h], edx
           cmp dword ptr [ebp-000000110h], 000000000h
           jne l10026861
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+0000847F8h], eax
           mov edx, dword ptr [ebp-034h]
           cmp dword ptr [edx+0000847F8h], 000000000h
           je l10026840
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+0000847F8h], 000000001h
           jne l10026827
           mov ecx, dword ptr [ebp-034h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000084800h], 000000001h
           jmp l10026834
;
;* Jump:
; 10026816(C) 
;
l10026827: mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+000084800h], 000000000h
;
;* Jump:
; 10026825(U) 
;
;* Control "Cancel", Dialog 006E
;
l10026834: push 000000002h
           mov ecx, dword ptr [ebp-034h]
           call l10001050
           jmp l10026857
;
;* Jump:
; 1002680A(C) 
;
l10026840: mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+000084800h], 000000000h
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-034h]
           call l10001050
;
;* Jump:
; 1002683E(U) 
;
;* Control "OK", Dialog 006E
;
l10026857: mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 100267E8(C) 
;
l10026861: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000114h], ecx
;
;* String: "ToonLineWidth"
;
           mov dword ptr [ebp-000000118h], offset g1003B858
;
;* Jump:
; 100268C4(C) 
;
l10026874: mov edx, dword ptr [ebp-000000118h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-000000119h], al
           mov ecx, dword ptr [ebp-000000114h]
           cmp al, byte ptr [ecx]
           jne l100268D2
           cmp byte ptr [ebp-000000119h], 000h
           je l100268C6
           mov edx, dword ptr [ebp-000000118h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000011Ah], al
           mov ecx, dword ptr [ebp-000000114h]
           cmp al, byte ptr [ecx+001h]
           jne l100268D2
           add dword ptr [ebp-000000118h], 000000002h
           add dword ptr [ebp-000000114h], 000000002h
           cmp byte ptr [ebp-00000011Ah], 000h
           jne l10026874
;
;* Jump:
; 10026893(C) 
;
l100268C6: mov dword ptr [ebp-000000120h], 000000000h
           jmp l100268DD
;
;* Jump:
; 1002688A(C), 100268AD(C) 
;
l100268D2: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-000000120h], edx
;
;* Jump:
; 100268D0(U) 
;
l100268DD: mov eax, dword ptr [ebp-000000120h]
           mov dword ptr [ebp-000000124h], eax
           cmp dword ptr [ebp-000000124h], 000000000h
           jne l10026912
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov edx, dword ptr [ebp-034h]
           fstp dword ptr [edx+000084808h]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 100268F0(C) 
;
l10026912: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000128h], eax
;
;* String: "ToonColor"
;
           mov dword ptr [ebp-00000012Ch], offset g1003B868
;
;* Jump:
; 10026975(C) 
;
l10026925: mov ecx, dword ptr [ebp-00000012Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00000012Dh], dl
           mov eax, dword ptr [ebp-000000128h]
           cmp dl, byte ptr [eax]
           jne l10026983
           cmp byte ptr [ebp-00000012Dh], 000h
           je l10026977
           mov ecx, dword ptr [ebp-00000012Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00000012Eh], dl
           mov eax, dword ptr [ebp-000000128h]
           cmp dl, byte ptr [eax+001h]
           jne l10026983
           add dword ptr [ebp-00000012Ch], 000000002h
           add dword ptr [ebp-000000128h], 000000002h
           cmp byte ptr [ebp-00000012Eh], 000h
           jne l10026925
;
;* Jump:
; 10026944(C) 
;
l10026977: mov dword ptr [ebp-000000134h], 000000000h
           jmp l1002698E
;
;* Jump:
; 1002693B(C), 1002695E(C) 
;
l10026983: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000134h], ecx
;
;* Jump:
; 10026981(U) 
;
l1002698E: mov edx, dword ptr [ebp-000000134h]
           mov dword ptr [ebp-000000138h], edx
           cmp dword ptr [ebp-000000138h], 000000000h
           jne l100269C3
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+0000847FCh], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 100269A1(C) 
;
l100269C3: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000013Ch], edx
;
;* String: "ToonTextures"
;
           mov dword ptr [ebp-000000140h], offset g1003B874
;
;* Jump:
; 10026A26(C) 
;
l100269D6: mov eax, dword ptr [ebp-000000140h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000141h], cl
           mov edx, dword ptr [ebp-00000013Ch]
           cmp cl, byte ptr [edx]
           jne l10026A34
           cmp byte ptr [ebp-000000141h], 000h
           je l10026A28
           mov eax, dword ptr [ebp-000000140h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000142h], cl
           mov edx, dword ptr [ebp-00000013Ch]
           cmp cl, byte ptr [edx+001h]
           jne l10026A34
           add dword ptr [ebp-000000140h], 000000002h
           add dword ptr [ebp-00000013Ch], 000000002h
           cmp byte ptr [ebp-000000142h], 000h
           jne l100269D6
;
;* Jump:
; 100269F5(C) 
;
l10026A28: mov dword ptr [ebp-000000148h], 000000000h
           jmp l10026A3F
;
;* Jump:
; 100269EC(C), 10026A0F(C) 
;
l10026A34: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000148h], eax
;
;* Jump:
; 10026A32(U) 
;
l10026A3F: mov ecx, dword ptr [ebp-000000148h]
           mov dword ptr [ebp-00000014Ch], ecx
           cmp dword ptr [ebp-00000014Ch], 000000000h
           jne l10026A74
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+000084800h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026A52(C) 
;
l10026A74: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000150h], edx
;
;* String: "ToonShade"
;
           mov dword ptr [ebp-000000154h], offset g1003B884
;
;* Jump:
; 10026AD7(C) 
;
l10026A87: mov eax, dword ptr [ebp-000000154h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000155h], cl
           mov edx, dword ptr [ebp-000000150h]
           cmp cl, byte ptr [edx]
           jne l10026AE5
           cmp byte ptr [ebp-000000155h], 000h
           je l10026AD9
           mov eax, dword ptr [ebp-000000154h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000156h], cl
           mov edx, dword ptr [ebp-000000150h]
           cmp cl, byte ptr [edx+001h]
           jne l10026AE5
           add dword ptr [ebp-000000154h], 000000002h
           add dword ptr [ebp-000000150h], 000000002h
           cmp byte ptr [ebp-000000156h], 000h
           jne l10026A87
;
;* Jump:
; 10026AA6(C) 
;
l10026AD9: mov dword ptr [ebp-00000015Ch], 000000000h
           jmp l10026AF0
;
;* Jump:
; 10026A9D(C), 10026AC0(C) 
;
l10026AE5: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-00000015Ch], eax
;
;* Jump:
; 10026AE3(U) 
;
l10026AF0: mov ecx, dword ptr [ebp-00000015Ch]
           mov dword ptr [ebp-000000160h], ecx
           cmp dword ptr [ebp-000000160h], 000000000h
           jne l10026C96
           mov edx, dword ptr [ebp+00Ch]
           push edx
           lea ecx, [ebp-014h]
           call [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+000084800h]
           mov dword ptr [ebp-00Ch], ecx
;
;* String: "Normal"
;
           push offset g1003B890
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026B61
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+0000847F8h], 000000000h
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+000084800h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp near ptr l10026C6E
;
;* Jump:
; 10026B39(C) 
;
;* String: "Toon Shade"
;
l10026B61: push offset g1003B898
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026B99
           mov ecx, dword ptr [ebp-034h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+0000847F8h], 000000001h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+000084800h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp near ptr l10026C6E
;
;* Jump:
; 10026B71(C) 
;
;* String: "Toon Shade + Textures"
;
l10026B99: push offset g1003B8A4
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026BD1
           mov eax, dword ptr [ebp-034h]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [eax+0000847F8h], 000000002h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+000084800h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
           jmp near ptr l10026C6E
;
;* Jump:
; 10026BA9(C) 
;
;* String: "Toon Shade + Toon Textures (BW)"
;
l10026BD1: push offset g1003B8BC
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026C06
           mov edx, dword ptr [ebp-034h]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [edx+0000847F8h], 000000002h
           mov eax, dword ptr [ebp-034h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+000084800h], 000000001h
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000002h
           jmp l10026C6E
;
;* Jump:
; 10026BE1(C) 
;
;* String: "Toon Shade + Toon Textures (Color)"
;
l10026C06: push offset g1003B8DC
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026C3B
           mov ecx, dword ptr [ebp-034h]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ecx+0000847F8h], 000000002h
           mov edx, dword ptr [ebp-034h]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [edx+000084800h], 000000002h
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ebp-008h], 000000002h
           jmp l10026C6E
;
;* Jump:
; 10026C16(C) 
;
;* String: "Pencil Shade"
;
l10026C3B: push offset g1003B900
           lea ecx, [ebp-014h]
           call [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           test eax, eax
           je l10026C6E
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+0000847F8h], 000000003h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+000084800h], 000000000h
           mov dword ptr [ebp-008h], 000000000h
;
;* Jump:
; 10026B5C(U), 10026B94(U), 10026BCC(U), 10026C04(U), 10026C39(U), 
; 10026C4B(C) 
;
l10026C6E: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+000084800h]
           je l10026C88
           mov ecx, dword ptr [ebp-008h]
           push ecx
           mov ecx, dword ptr [ebp-034h]
           call l10001050
;
;* Jump:
; 10026C7A(C) 
;
l10026C88: lea ecx, [ebp-014h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           jmp near ptr l10027921
;
;* Jump:
; 10026B03(C) 
;
l10026C96: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000164h], edx
;
;* String: "FogFactor"
;
           mov dword ptr [ebp-000000168h], offset g1003B910
;
;* Jump:
; 10026CF9(C) 
;
l10026CA9: mov eax, dword ptr [ebp-000000168h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000169h], cl
           mov edx, dword ptr [ebp-000000164h]
           cmp cl, byte ptr [edx]
           jne l10026D07
           cmp byte ptr [ebp-000000169h], 000h
           je l10026CFB
           mov eax, dword ptr [ebp-000000168h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000016Ah], cl
           mov edx, dword ptr [ebp-000000164h]
           cmp cl, byte ptr [edx+001h]
           jne l10026D07
           add dword ptr [ebp-000000168h], 000000002h
           add dword ptr [ebp-000000164h], 000000002h
           cmp byte ptr [ebp-00000016Ah], 000h
           jne l10026CA9
;
;* Jump:
; 10026CC8(C) 
;
l10026CFB: mov dword ptr [ebp-000000170h], 000000000h
           jmp l10026D12
;
;* Jump:
; 10026CBF(C), 10026CE2(C) 
;
l10026D07: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000170h], eax
;
;* Jump:
; 10026D05(U) 
;
l10026D12: mov ecx, dword ptr [ebp-000000170h]
           mov dword ptr [ebp-000000174h], ecx
           cmp dword ptr [ebp-000000174h], 000000000h
           jne l10026D47
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           mov eax, dword ptr [ebp-034h]
           fstp dword ptr [eax+00008648Ch]
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026D25(C) 
;
l10026D47: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000178h], ecx
;
;* String: "FogSubdivide"
;
           mov dword ptr [ebp-00000017Ch], offset g1003B91C
;
;* Jump:
; 10026DAA(C) 
;
l10026D5A: mov edx, dword ptr [ebp-00000017Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-00000017Dh], al
           mov ecx, dword ptr [ebp-000000178h]
           cmp al, byte ptr [ecx]
           jne l10026DB8
           cmp byte ptr [ebp-00000017Dh], 000h
           je l10026DAC
           mov edx, dword ptr [ebp-00000017Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000017Eh], al
           mov ecx, dword ptr [ebp-000000178h]
           cmp al, byte ptr [ecx+001h]
           jne l10026DB8
           add dword ptr [ebp-00000017Ch], 000000002h
           add dword ptr [ebp-000000178h], 000000002h
           cmp byte ptr [ebp-00000017Eh], 000h
           jne l10026D5A
;
;* Jump:
; 10026D79(C) 
;
l10026DAC: mov dword ptr [ebp-000000184h], 000000000h
           jmp l10026DC3
;
;* Jump:
; 10026D70(C), 10026D93(C) 
;
l10026DB8: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-000000184h], edx
;
;* Jump:
; 10026DB6(U) 
;
l10026DC3: mov eax, dword ptr [ebp-000000184h]
           mov dword ptr [ebp-000000188h], eax
           cmp dword ptr [ebp-000000188h], 000000000h
           jne l10026DF8
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+000000080h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026DD6(C) 
;
l10026DF8: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000018Ch], eax
;
;* String: "UseOGLFog"
;
           mov dword ptr [ebp-000000190h], offset g1003B92C
;
;* Jump:
; 10026E5B(C) 
;
l10026E0B: mov ecx, dword ptr [ebp-000000190h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000191h], dl
           mov eax, dword ptr [ebp-00000018Ch]
           cmp dl, byte ptr [eax]
           jne l10026E69
           cmp byte ptr [ebp-000000191h], 000h
           je l10026E5D
           mov ecx, dword ptr [ebp-000000190h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000192h], dl
           mov eax, dword ptr [ebp-00000018Ch]
           cmp dl, byte ptr [eax+001h]
           jne l10026E69
           add dword ptr [ebp-000000190h], 000000002h
           add dword ptr [ebp-00000018Ch], 000000002h
           cmp byte ptr [ebp-000000192h], 000h
           jne l10026E0B
;
;* Jump:
; 10026E2A(C) 
;
l10026E5D: mov dword ptr [ebp-000000198h], 000000000h
           jmp l10026E74
;
;* Jump:
; 10026E21(C), 10026E44(C) 
;
l10026E69: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000198h], ecx
;
;* Jump:
; 10026E67(U) 
;
l10026E74: mov edx, dword ptr [ebp-000000198h]
           mov dword ptr [ebp-00000019Ch], edx
           cmp dword ptr [ebp-00000019Ch], 000000000h
           jne l10026F03
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+00008482Ch], 000000000h
           jne l10026E9C
           xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 10026E93(C) 
;
l10026E9C: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-018h], eax
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+000084868h]
           jne l10026EC4
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026EB8(C) 
;
l10026EC4: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [ecx+000084868h], edx
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084868h], 000000000h
           je l10026EEE
           push 000008452h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
           jmp l10026EFE
;
;* Jump:
; 10026EDA(C) 
;
l10026EEE: push 000008451h
           push 000008450h
           call [__imp_glFogi]; [OPENGL32.glFogi].
;
;* Jump:
; 10026EEC(U) 
;
l10026EFE: jmp near ptr l10027921
;
;* Jump:
; 10026E87(C) 
;
l10026F03: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001A0h], ecx
;
;* String: "UseOGLLight"
;
           mov dword ptr [ebp-0000001A4h], offset g1003B938
;
;* Jump:
; 10026F66(C) 
;
l10026F16: mov edx, dword ptr [ebp-0000001A4h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-0000001A5h], al
           mov ecx, dword ptr [ebp-0000001A0h]
           cmp al, byte ptr [ecx]
           jne l10026F74
           cmp byte ptr [ebp-0000001A5h], 000h
           je l10026F68
           mov edx, dword ptr [ebp-0000001A4h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000001A6h], al
           mov ecx, dword ptr [ebp-0000001A0h]
           cmp al, byte ptr [ecx+001h]
           jne l10026F74
           add dword ptr [ebp-0000001A4h], 000000002h
           add dword ptr [ebp-0000001A0h], 000000002h
           cmp byte ptr [ebp-0000001A6h], 000h
           jne l10026F16
;
;* Jump:
; 10026F35(C) 
;
l10026F68: mov dword ptr [ebp-0000001ACh], 000000000h
           jmp l10026F7F
;
;* Jump:
; 10026F2C(C), 10026F4F(C) 
;
l10026F74: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-0000001ACh], edx
;
;* Jump:
; 10026F72(U) 
;
l10026F7F: mov eax, dword ptr [ebp-0000001ACh]
           mov dword ptr [ebp-0000001B0h], eax
           cmp dword ptr [ebp-0000001B0h], 000000000h
           jne l10026FDD
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           cmp dword ptr [ebp-01Ch], 000000000h
           je l10026FB1
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-01Ch], 000000001h
;
;* Jump:
; 10026FA8(C) 
;
l10026FB1: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [edx+00008485Ch]
           jne l10026FC6
           xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 10026FBD(C) 
;
l10026FC6: mov ecx, dword ptr [ebp-034h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+000084864h], 000000001h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10026F92(C) 
;
l10026FDD: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001B4h], edx
;
;* String: "UseTextureFont"
;
           mov dword ptr [ebp-0000001B8h], offset g1003B944
;
;* Jump:
; 10027040(C) 
;
l10026FF0: mov eax, dword ptr [ebp-0000001B8h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000001B9h], cl
           mov edx, dword ptr [ebp-0000001B4h]
           cmp cl, byte ptr [edx]
           jne l1002704E
           cmp byte ptr [ebp-0000001B9h], 000h
           je l10027042
           mov eax, dword ptr [ebp-0000001B8h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000001BAh], cl
           mov edx, dword ptr [ebp-0000001B4h]
           cmp cl, byte ptr [edx+001h]
           jne l1002704E
           add dword ptr [ebp-0000001B8h], 000000002h
           add dword ptr [ebp-0000001B4h], 000000002h
           cmp byte ptr [ebp-0000001BAh], 000h
           jne l10026FF0
;
;* Jump:
; 1002700F(C) 
;
l10027042: mov dword ptr [ebp-0000001C0h], 000000000h
           jmp l10027059
;
;* Jump:
; 10027006(C), 10027029(C) 
;
l1002704E: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000001C0h], eax
;
;* Jump:
; 1002704C(U) 
;
l10027059: mov ecx, dword ptr [ebp-0000001C0h]
           mov dword ptr [ebp-0000001C4h], ecx
           cmp dword ptr [ebp-0000001C4h], 000000000h
           jne l1002708E
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+00008483Ch], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 1002706C(C) 
;
l1002708E: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001C8h], edx
;
;* String: "TFontScale"
;
           mov dword ptr [ebp-0000001CCh], offset g1003B954
;
;* Jump:
; 100270F1(C) 
;
l100270A1: mov eax, dword ptr [ebp-0000001CCh]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000001CDh], cl
           mov edx, dword ptr [ebp-0000001C8h]
           cmp cl, byte ptr [edx]
           jne l100270FF
           cmp byte ptr [ebp-0000001CDh], 000h
           je l100270F3
           mov eax, dword ptr [ebp-0000001CCh]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000001CEh], cl
           mov edx, dword ptr [ebp-0000001C8h]
           cmp cl, byte ptr [edx+001h]
           jne l100270FF
           add dword ptr [ebp-0000001CCh], 000000002h
           add dword ptr [ebp-0000001C8h], 000000002h
           cmp byte ptr [ebp-0000001CEh], 000h
           jne l100270A1
;
;* Jump:
; 100270C0(C) 
;
l100270F3: mov dword ptr [ebp-0000001D4h], 000000000h
           jmp l1002710A
;
;* Jump:
; 100270B7(C), 100270DA(C) 
;
l100270FF: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000001D4h], eax
;
;* Jump:
; 100270FD(U) 
;
l1002710A: mov ecx, dword ptr [ebp-0000001D4h]
           mov dword ptr [ebp-0000001D8h], ecx
           cmp dword ptr [ebp-0000001D8h], 000000000h
           jne l10027155
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atof]; [MSVCRT.atof].
           add esp, 000000004h
           fstp dword ptr [ebp-020h]
           fld dword ptr [ebp-020h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 040h
           jne l1002714B
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [eax+000084848h], ecx
;
;* Jump:
; 1002713D(C) 
;
;* Control "OK", Dialog 006E
;
l1002714B: mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 1002711D(C) 
;
l10027155: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001DCh], edx
;
;* String: "TFontOpaque"
;
           mov dword ptr [ebp-0000001E0h], offset g1003B960
;
;* Jump:
; 100271B8(C) 
;
l10027168: mov eax, dword ptr [ebp-0000001E0h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000001E1h], cl
           mov edx, dword ptr [ebp-0000001DCh]
           cmp cl, byte ptr [edx]
           jne l100271C6
           cmp byte ptr [ebp-0000001E1h], 000h
           je l100271BA
           mov eax, dword ptr [ebp-0000001E0h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000001E2h], cl
           mov edx, dword ptr [ebp-0000001DCh]
           cmp cl, byte ptr [edx+001h]
           jne l100271C6
           add dword ptr [ebp-0000001E0h], 000000002h
           add dword ptr [ebp-0000001DCh], 000000002h
           cmp byte ptr [ebp-0000001E2h], 000h
           jne l10027168
;
;* Jump:
; 10027187(C) 
;
l100271BA: mov dword ptr [ebp-0000001E8h], 000000000h
           jmp l100271D1
;
;* Jump:
; 1002717E(C), 100271A1(C) 
;
l100271C6: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000001E8h], eax
;
;* Jump:
; 100271C4(U) 
;
l100271D1: mov ecx, dword ptr [ebp-0000001E8h]
           mov dword ptr [ebp-0000001ECh], ecx
           cmp dword ptr [ebp-0000001ECh], 000000000h
           jne l10027206
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+000084840h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 100271E4(C) 
;
l10027206: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001F0h], edx
;
;* String: "CacheStretchImages"
;
           mov dword ptr [ebp-0000001F4h], offset g1003B96C
;
;* Jump:
; 10027269(C) 
;
l10027219: mov eax, dword ptr [ebp-0000001F4h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000001F5h], cl
           mov edx, dword ptr [ebp-0000001F0h]
           cmp cl, byte ptr [edx]
           jne l10027277
           cmp byte ptr [ebp-0000001F5h], 000h
           je l1002726B
           mov eax, dword ptr [ebp-0000001F4h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000001F6h], cl
           mov edx, dword ptr [ebp-0000001F0h]
           cmp cl, byte ptr [edx+001h]
           jne l10027277
           add dword ptr [ebp-0000001F4h], 000000002h
           add dword ptr [ebp-0000001F0h], 000000002h
           cmp byte ptr [ebp-0000001F6h], 000h
           jne l10027219
;
;* Jump:
; 10027238(C) 
;
l1002726B: mov dword ptr [ebp-0000001FCh], 000000000h
           jmp l10027282
;
;* Jump:
; 1002722F(C), 10027252(C) 
;
l10027277: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000001FCh], eax
;
;* Jump:
; 10027275(U) 
;
l10027282: mov ecx, dword ptr [ebp-0000001FCh]
           mov dword ptr [ebp-000000200h], ecx
           cmp dword ptr [ebp-000000200h], 000000000h
           jne l10027309
           cmp dword ptr [g10051814], 000000000h
           jne l100272A7
           xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 1002729E(C) 
;
l100272A7: mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+00008486Ch], eax
           mov edx, dword ptr [ebp-034h]
           cmp dword ptr [edx+00008486Ch], 000000000h
           jne l100272FF
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084874h], 0FFFFFFFFh
           je l100272E5
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+000084874h]
           push edx
           call [g10051818]
;
;* Jump:
; 100272D3(C) 
;
l100272E5: mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+000084874h], 0FFFFFFFFh
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+000084870h], 000000000h
;
;* Jump:
; 100272C7(C) 
;
;* Control "OK", Dialog 006E
;
l100272FF: mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027295(C) 
;
l10027309: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000204h], edx
;
;* String: "ConfigDlg"
;
           mov dword ptr [ebp-000000208h], offset g1003B980
;
;* Jump:
; 1002736C(C) 
;
l1002731C: mov eax, dword ptr [ebp-000000208h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000209h], cl
           mov edx, dword ptr [ebp-000000204h]
           cmp cl, byte ptr [edx]
           jne l1002737A
           cmp byte ptr [ebp-000000209h], 000h
           je l1002736E
           mov eax, dword ptr [ebp-000000208h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000020Ah], cl
           mov edx, dword ptr [ebp-000000204h]
           cmp cl, byte ptr [edx+001h]
           jne l1002737A
           add dword ptr [ebp-000000208h], 000000002h
           add dword ptr [ebp-000000204h], 000000002h
           cmp byte ptr [ebp-00000020Ah], 000h
           jne l1002731C
;
;* Jump:
; 1002733B(C) 
;
l1002736E: mov dword ptr [ebp-000000210h], 000000000h
           jmp l10027385
;
;* Jump:
; 10027332(C), 10027355(C) 
;
l1002737A: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000210h], eax
;
;* Jump:
; 10027378(U) 
;
l10027385: mov ecx, dword ptr [ebp-000000210h]
           mov dword ptr [ebp-000000214h], ecx
           cmp dword ptr [ebp-000000214h], 000000000h
           jne l100273C0
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+0000841A8h]
           push eax
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call l100017C6
           add esp, 000000008h
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027398(C) 
;
l100273C0: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000218h], eax
;
;* String: "SwapInterval"
;
           mov dword ptr [ebp-00000021Ch], offset g1003B98C
;
;* Jump:
; 10027423(C) 
;
l100273D3: mov ecx, dword ptr [ebp-00000021Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00000021Dh], dl
           mov eax, dword ptr [ebp-000000218h]
           cmp dl, byte ptr [eax]
           jne l10027431
           cmp byte ptr [ebp-00000021Dh], 000h
           je l10027425
           mov ecx, dword ptr [ebp-00000021Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00000021Eh], dl
           mov eax, dword ptr [ebp-000000218h]
           cmp dl, byte ptr [eax+001h]
           jne l10027431
           add dword ptr [ebp-00000021Ch], 000000002h
           add dword ptr [ebp-000000218h], 000000002h
           cmp byte ptr [ebp-00000021Eh], 000h
           jne l100273D3
;
;* Jump:
; 100273F2(C) 
;
l10027425: mov dword ptr [ebp-000000224h], 000000000h
           jmp l1002743C
;
;* Jump:
; 100273E9(C), 1002740C(C) 
;
l10027431: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000224h], ecx
;
;* Jump:
; 1002742F(U) 
;
l1002743C: mov edx, dword ptr [ebp-000000224h]
           mov dword ptr [ebp-000000228h], edx
           cmp dword ptr [ebp-000000228h], 000000000h
           jne l10027480
           cmp dword ptr [g1005182C], 000000000h
           je l10027479
           mov eax, dword ptr [ebp+00Ch]
           push eax
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov ecx, dword ptr [ebp-024h]
           push ecx
           call [g1005182C]
           jmp near ptr l10027923
;
;* Jump:
; 10027458(C) 
;
l10027479: xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 1002744F(C) 
;
l10027480: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000022Ch], edx
;
;* String: "GetINISettings"
;
           mov dword ptr [ebp-000000230h], offset g1003B99C
;
;* Jump:
; 100274E3(C) 
;
l10027493: mov eax, dword ptr [ebp-000000230h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000231h], cl
           mov edx, dword ptr [ebp-00000022Ch]
           cmp cl, byte ptr [edx]
           jne l100274F1
           cmp byte ptr [ebp-000000231h], 000h
           je l100274E5
           mov eax, dword ptr [ebp-000000230h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000232h], cl
           mov edx, dword ptr [ebp-00000022Ch]
           cmp cl, byte ptr [edx+001h]
           jne l100274F1
           add dword ptr [ebp-000000230h], 000000002h
           add dword ptr [ebp-00000022Ch], 000000002h
           cmp byte ptr [ebp-000000232h], 000h
           jne l10027493
;
;* Jump:
; 100274B2(C) 
;
l100274E5: mov dword ptr [ebp-000000238h], 000000000h
           jmp l100274FC
;
;* Jump:
; 100274A9(C), 100274CC(C) 
;
l100274F1: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000238h], eax
;
;* Jump:
; 100274EF(U) 
;
l100274FC: mov ecx, dword ptr [ebp-000000238h]
           mov dword ptr [ebp-00000023Ch], ecx
           cmp dword ptr [ebp-00000023Ch], 000000000h
           jne l10027525
           push 000000000h
           mov ecx, dword ptr [ebp-034h]
           call l10001573
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 1002750F(C) 
;
l10027525: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000240h], edx
;
;* String: "DisplayExtensions"
;
           mov dword ptr [ebp-000000244h], offset g1003B9AC
;
;* Jump:
; 10027588(C) 
;
l10027538: mov eax, dword ptr [ebp-000000244h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000245h], cl
           mov edx, dword ptr [ebp-000000240h]
           cmp cl, byte ptr [edx]
           jne l10027596
           cmp byte ptr [ebp-000000245h], 000h
           je l1002758A
           mov eax, dword ptr [ebp-000000244h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000246h], cl
           mov edx, dword ptr [ebp-000000240h]
           cmp cl, byte ptr [edx+001h]
           jne l10027596
           add dword ptr [ebp-000000244h], 000000002h
           add dword ptr [ebp-000000240h], 000000002h
           cmp byte ptr [ebp-000000246h], 000h
           jne l10027538
;
;* Jump:
; 10027557(C) 
;
l1002758A: mov dword ptr [ebp-00000024Ch], 000000000h
           jmp l100275A1
;
;* Jump:
; 1002754E(C), 10027571(C) 
;
l10027596: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-00000024Ch], eax
;
;* Jump:
; 10027594(U) 
;
l100275A1: mov ecx, dword ptr [ebp-00000024Ch]
           mov dword ptr [ebp-000000250h], ecx
           cmp dword ptr [ebp-000000250h], 000000000h
           jne l100275C8
           mov ecx, dword ptr [ebp-034h]
           call l10001735
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 100275B4(C) 
;
l100275C8: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000254h], edx
;
;* String: "NotUsePalettes"
;
           mov dword ptr [ebp-000000258h], offset g1003B9C0
;
;* Jump:
; 1002762B(C) 
;
l100275DB: mov eax, dword ptr [ebp-000000258h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000259h], cl
           mov edx, dword ptr [ebp-000000254h]
           cmp cl, byte ptr [edx]
           jne l10027639
           cmp byte ptr [ebp-000000259h], 000h
           je l1002762D
           mov eax, dword ptr [ebp-000000258h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000025Ah], cl
           mov edx, dword ptr [ebp-000000254h]
           cmp cl, byte ptr [edx+001h]
           jne l10027639
           add dword ptr [ebp-000000258h], 000000002h
           add dword ptr [ebp-000000254h], 000000002h
           cmp byte ptr [ebp-00000025Ah], 000h
           jne l100275DB
;
;* Jump:
; 100275FA(C) 
;
l1002762D: mov dword ptr [ebp-000000260h], 000000000h
           jmp l10027644
;
;* Jump:
; 100275F1(C), 10027614(C) 
;
l10027639: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000260h], eax
;
;* Jump:
; 10027637(U) 
;
l10027644: mov ecx, dword ptr [ebp-000000260h]
           mov dword ptr [ebp-000000264h], ecx
           cmp dword ptr [ebp-000000264h], 000000000h
           jne l10027697
           mov edx, dword ptr [ebp+00Ch]
           push edx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-028h], eax
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+000084860h]
           cmp ecx, dword ptr [ebp-028h]
           jne l10027681
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027675(C) 
;
l10027681: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+000084860h], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027657(C) 
;
l10027697: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000268h], ecx
;
;* String: "NotUseCompressedTextures"
;
           mov dword ptr [ebp-00000026Ch], offset g1003B9D0
;
;* Jump:
; 100276FA(C) 
;
l100276AA: mov edx, dword ptr [ebp-00000026Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-00000026Dh], al
           mov ecx, dword ptr [ebp-000000268h]
           cmp al, byte ptr [ecx]
           jne l10027708
           cmp byte ptr [ebp-00000026Dh], 000h
           je l100276FC
           mov edx, dword ptr [ebp-00000026Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000026Eh], al
           mov ecx, dword ptr [ebp-000000268h]
           cmp al, byte ptr [ecx+001h]
           jne l10027708
           add dword ptr [ebp-00000026Ch], 000000002h
           add dword ptr [ebp-000000268h], 000000002h
           cmp byte ptr [ebp-00000026Eh], 000h
           jne l100276AA
;
;* Jump:
; 100276C9(C) 
;
l100276FC: mov dword ptr [ebp-000000274h], 000000000h
           jmp l10027713
;
;* Jump:
; 100276C0(C), 100276E3(C) 
;
l10027708: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-000000274h], edx
;
;* Jump:
; 10027706(U) 
;
l10027713: mov eax, dword ptr [ebp-000000274h]
           mov dword ptr [ebp-000000278h], eax
           cmp dword ptr [ebp-000000278h], 000000000h
           jne l10027772
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-02Ch], eax
           xor edx, edx
           cmp dword ptr [ebp-02Ch], 000000000h
           sete  dl
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084844h], edx
           jne l10027756
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 1002774A(C) 
;
l10027756: xor ecx, ecx
           cmp dword ptr [ebp-02Ch], 000000000h
           sete  cl
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+000084844h], ecx
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027726(C) 
;
l10027772: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000027Ch], eax
;
;* String: "BWRender"
;
           mov dword ptr [ebp-000000280h], offset g1003B9EC
;
;* Jump:
; 100277D5(C) 
;
l10027785: mov ecx, dword ptr [ebp-000000280h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000281h], dl
           mov eax, dword ptr [ebp-00000027Ch]
           cmp dl, byte ptr [eax]
           jne l100277E3
           cmp byte ptr [ebp-000000281h], 000h
           je l100277D7
           mov ecx, dword ptr [ebp-000000280h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000282h], dl
           mov eax, dword ptr [ebp-00000027Ch]
           cmp dl, byte ptr [eax+001h]
           jne l100277E3
           add dword ptr [ebp-000000280h], 000000002h
           add dword ptr [ebp-00000027Ch], 000000002h
           cmp byte ptr [ebp-000000282h], 000h
           jne l10027785
;
;* Jump:
; 100277A4(C) 
;
l100277D7: mov dword ptr [ebp-000000288h], 000000000h
           jmp l100277EE
;
;* Jump:
; 1002779B(C), 100277BE(C) 
;
l100277E3: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000288h], ecx
;
;* Jump:
; 100277E1(U) 
;
l100277EE: mov edx, dword ptr [ebp-000000288h]
           mov dword ptr [ebp-00000028Ch], edx
           cmp dword ptr [ebp-00000028Ch], 000000000h
           jne l10027873
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084834h], 000000000h
           jne l10027816
           xor eax, eax
           jmp near ptr l10027923
;
;* Jump:
; 1002780D(C) 
;
l10027816: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov dword ptr [ebp-030h], eax
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-030h]
           cmp eax, dword ptr [edx+000084804h]
           jne l1002783E
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l10027923
;
;* Jump:
; 10027832(C) 
;
l1002783E: mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [ecx+000084804h], edx
           mov eax, dword ptr [ebp-034h]
           cmp dword ptr [eax+000084804h], 000000000h
           je l10027863
           push 000008522h
           call [__imp_glEnable]; [OPENGL32.glEnable].
           jmp l1002786E
;
;* Jump:
; 10027854(C) 
;
l10027863: push 000008522h
           call [__imp_glDisable]; [OPENGL32.glDisable].
;
;* Jump:
; 10027861(U) 
;
l1002786E: jmp near ptr l10027921
;
;* Jump:
; 10027801(C) 
;
l10027873: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000290h], ecx
;
;* String: "UseCreditsHack"
;
           mov dword ptr [ebp-000000294h], offset g1003B9F8
;
;* Jump:
; 100278D6(C) 
;
l10027886: mov edx, dword ptr [ebp-000000294h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-000000295h], al
           mov ecx, dword ptr [ebp-000000290h]
           cmp al, byte ptr [ecx]
           jne l100278E4
           cmp byte ptr [ebp-000000295h], 000h
           je l100278D8
           mov edx, dword ptr [ebp-000000294h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-000000296h], al
           mov ecx, dword ptr [ebp-000000290h]
           cmp al, byte ptr [ecx+001h]
           jne l100278E4
           add dword ptr [ebp-000000294h], 000000002h
           add dword ptr [ebp-000000290h], 000000002h
           cmp byte ptr [ebp-000000296h], 000h
           jne l10027886
;
;* Jump:
; 100278A5(C) 
;
l100278D8: mov dword ptr [ebp-00000029Ch], 000000000h
           jmp l100278EF
;
;* Jump:
; 1002789C(C), 100278BF(C) 
;
l100278E4: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-00000029Ch], edx
;
;* Jump:
; 100278E2(U) 
;
l100278EF: mov eax, dword ptr [ebp-00000029Ch]
           mov dword ptr [ebp-0000002A0h], eax
           cmp dword ptr [ebp-0000002A0h], 000000000h
           jne l10027921
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           call [__imp_atoi]; [MSVCRT.atoi].
           add esp, 000000004h
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx+0000847BCh], eax
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l10027923
;
;* Jump:
; 100264C2(U), 10026C91(U), 10026EFE(U), 1002786E(U), 10027902(C) 
;
l10027921: xor eax, eax
;
;* Jump:
; 100261EE(U), 1002625E(U), 100262D4(U), 10026377(U), 1002641A(U), 
; 100264BD(U), 100265A2(U), 100265B9(U), 100265C0(U), 1002669C(U), 
; 100266A3(U), 10026754(U), 1002685C(U), 1002690D(U), 100269BE(U), 
; 10026A6F(U), 10026D42(U), 10026DF3(U), 10026E97(U), 10026EBF(U), 
; 10026FC1(U), 10026FD8(U), 10027089(U), 10027150(U), 10027201(U), 
; 100272A2(U), 10027304(U), 100273BB(U), 10027474(U), 1002747B(U), 
; 10027520(U), 100275C3(U), 1002767C(U), 10027692(U), 10027751(U), 
; 1002776D(U), 10027811(U), 10027839(U), 1002791F(U) 
;
l10027923: mov esp, ebp
           pop ebp
           ret 00008h
l10026115 ENDP
;
;* Jump:
; 1000119F(U) 
;
l10027929 PROC
           push ebp
           mov ebp, esp
           sub esp, 0000001BCh
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-008h], eax
;
;* String: "MipmapMode"
;
           mov dword ptr [ebp-00Ch], offset g1003BA08
;
;* Jump:
; 10027974(C) 
;
l10027942: mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-00Dh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax]
           jne l1002797F
           cmp byte ptr [ebp-00Dh], 000h
           je l10027976
           mov ecx, dword ptr [ebp-00Ch]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-00Eh], dl
           mov eax, dword ptr [ebp-008h]
           cmp dl, byte ptr [eax+001h]
           jne l1002797F
           add dword ptr [ebp-00Ch], 000000002h
           add dword ptr [ebp-008h], 000000002h
           cmp byte ptr [ebp-00Eh], 000h
           jne l10027942
;
;* Jump:
; 10027955(C) 
;
l10027976: mov dword ptr [ebp-014h], 000000000h
           jmp l10027987
;
;* Jump:
; 1002794F(C), 10027966(C) 
;
l1002797F: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1002797D(U) 
;
l10027987: mov edx, dword ptr [ebp-014h]
           mov dword ptr [ebp-018h], edx
           cmp dword ptr [ebp-018h], 000000000h
           jne l1002799D
;
;* String: "Return value not implemented."
;
           mov eax, offset g1003BA14
           jmp near ptr l100286F6
;
;* Jump:
; 10027991(C) 
;
l1002799D: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-01Ch], eax
;
;* String: "AnisotropicLevel"
;
           mov dword ptr [ebp-020h], offset g1003BA34
;
;* Jump:
; 100279DC(C) 
;
l100279AA: mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-021h], dl
           mov eax, dword ptr [ebp-01Ch]
           cmp dl, byte ptr [eax]
           jne l100279E7
           cmp byte ptr [ebp-021h], 000h
           je l100279DE
           mov ecx, dword ptr [ebp-020h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-022h], dl
           mov eax, dword ptr [ebp-01Ch]
           cmp dl, byte ptr [eax+001h]
           jne l100279E7
           add dword ptr [ebp-020h], 000000002h
           add dword ptr [ebp-01Ch], 000000002h
           cmp byte ptr [ebp-022h], 000h
           jne l100279AA
;
;* Jump:
; 100279BD(C) 
;
l100279DE: mov dword ptr [ebp-028h], 000000000h
           jmp l100279EF
;
;* Jump:
; 100279B7(C), 100279CE(C) 
;
l100279E7: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 100279E5(U) 
;
l100279EF: mov edx, dword ptr [ebp-028h]
           mov dword ptr [ebp-02Ch], edx
           cmp dword ptr [ebp-02Ch], 000000000h
           jne l10027A1D
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+000084818h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003BA48
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           jmp near ptr l100286F6
;
;* Jump:
; 100279F9(C) 
;
l10027A1D: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-030h], ecx
;
;* String: "TextureLODBias"
;
           mov dword ptr [ebp-034h], offset g1003BA4C
;
;* Jump:
; 10027A5C(C) 
;
l10027A2A: mov edx, dword ptr [ebp-034h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-035h], al
           mov ecx, dword ptr [ebp-030h]
           cmp al, byte ptr [ecx]
           jne l10027A67
           cmp byte ptr [ebp-035h], 000h
           je l10027A5E
           mov edx, dword ptr [ebp-034h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-036h], al
           mov ecx, dword ptr [ebp-030h]
           cmp al, byte ptr [ecx+001h]
           jne l10027A67
           add dword ptr [ebp-034h], 000000002h
           add dword ptr [ebp-030h], 000000002h
           cmp byte ptr [ebp-036h], 000h
           jne l10027A2A
;
;* Jump:
; 10027A3D(C) 
;
l10027A5E: mov dword ptr [ebp-03Ch], 000000000h
           jmp l10027A6F
;
;* Jump:
; 10027A37(C), 10027A4E(C) 
;
l10027A67: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-03Ch], edx
;
;* Jump:
; 10027A65(U) 
;
l10027A6F: mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-040h], eax
           cmp dword ptr [ebp-040h], 000000000h
           jne l10027A9D
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+00008481Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003BA5C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           jmp near ptr l100286F6
;
;* Jump:
; 10027A79(C) 
;
l10027A9D: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-044h], edx
;
;* String: "ShowStats"
;
           mov dword ptr [ebp-048h], offset g1003BA60
;
;* Jump:
; 10027ADC(C) 
;
l10027AAA: mov eax, dword ptr [ebp-048h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-049h], cl
           mov edx, dword ptr [ebp-044h]
           cmp cl, byte ptr [edx]
           jne l10027AE7
           cmp byte ptr [ebp-049h], 000h
           je l10027ADE
           mov eax, dword ptr [ebp-048h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-04Ah], cl
           mov edx, dword ptr [ebp-044h]
           cmp cl, byte ptr [edx+001h]
           jne l10027AE7
           add dword ptr [ebp-048h], 000000002h
           add dword ptr [ebp-044h], 000000002h
           cmp byte ptr [ebp-04Ah], 000h
           jne l10027AAA
;
;* Jump:
; 10027ABD(C) 
;
l10027ADE: mov dword ptr [ebp-050h], 000000000h
           jmp l10027AEF
;
;* Jump:
; 10027AB7(C), 10027ACE(C) 
;
l10027AE7: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-050h], eax
;
;* Jump:
; 10027AE5(U) 
;
l10027AEF: mov ecx, dword ptr [ebp-050h]
           mov dword ptr [ebp-054h], ecx
           cmp dword ptr [ebp-054h], 000000000h
           jne l10027B18
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00008480Ch]
           push eax
;
;* String: "%d"
;
           push offset g1003BA6C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027AF9(C) 
;
l10027B18: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-058h], ecx
;
;* String: "FogFactor"
;
           mov dword ptr [ebp-05Ch], offset g1003BA70
;
;* Jump:
; 10027B57(C) 
;
l10027B25: mov edx, dword ptr [ebp-05Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-05Dh], al
           mov ecx, dword ptr [ebp-058h]
           cmp al, byte ptr [ecx]
           jne l10027B62
           cmp byte ptr [ebp-05Dh], 000h
           je l10027B59
           mov edx, dword ptr [ebp-05Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-05Eh], al
           mov ecx, dword ptr [ebp-058h]
           cmp al, byte ptr [ecx+001h]
           jne l10027B62
           add dword ptr [ebp-05Ch], 000000002h
           add dword ptr [ebp-058h], 000000002h
           cmp byte ptr [ebp-05Eh], 000h
           jne l10027B25
;
;* Jump:
; 10027B38(C) 
;
l10027B59: mov dword ptr [ebp-064h], 000000000h
           jmp l10027B6A
;
;* Jump:
; 10027B32(C), 10027B49(C) 
;
l10027B62: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-064h], edx
;
;* Jump:
; 10027B60(U) 
;
l10027B6A: mov eax, dword ptr [ebp-064h]
           mov dword ptr [ebp-068h], eax
           cmp dword ptr [ebp-068h], 000000000h
           jne l10027B98
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+00008648Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003BA7C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           jmp near ptr l100286F6
;
;* Jump:
; 10027B74(C) 
;
l10027B98: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-06Ch], edx
;
;* String: "ToonRender"
;
           mov dword ptr [ebp-070h], offset g1003BA80
;
;* Jump:
; 10027BD7(C) 
;
l10027BA5: mov eax, dword ptr [ebp-070h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-071h], cl
           mov edx, dword ptr [ebp-06Ch]
           cmp cl, byte ptr [edx]
           jne l10027BE2
           cmp byte ptr [ebp-071h], 000h
           je l10027BD9
           mov eax, dword ptr [ebp-070h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-072h], cl
           mov edx, dword ptr [ebp-06Ch]
           cmp cl, byte ptr [edx+001h]
           jne l10027BE2
           add dword ptr [ebp-070h], 000000002h
           add dword ptr [ebp-06Ch], 000000002h
           cmp byte ptr [ebp-072h], 000h
           jne l10027BA5
;
;* Jump:
; 10027BB8(C) 
;
l10027BD9: mov dword ptr [ebp-078h], 000000000h
           jmp l10027BEA
;
;* Jump:
; 10027BB2(C), 10027BC9(C) 
;
l10027BE2: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-078h], eax
;
;* Jump:
; 10027BE0(U) 
;
l10027BEA: mov ecx, dword ptr [ebp-078h]
           mov dword ptr [ebp-07Ch], ecx
           cmp dword ptr [ebp-07Ch], 000000000h
           jne l10027C13
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+0000847F8h]
           push eax
;
;* String: "%d"
;
           push offset g1003BA8C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027BF4(C) 
;
l10027C13: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-080h], ecx
;
;* String: "ToonLineWidth"
;
           mov dword ptr [ebp-000000084h], offset g1003BA90
;
;* Jump:
; 10027C6A(C) 
;
l10027C23: mov edx, dword ptr [ebp-000000084h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-000000085h], al
           mov ecx, dword ptr [ebp-080h]
           cmp al, byte ptr [ecx]
           jne l10027C78
           cmp byte ptr [ebp-000000085h], 000h
           je l10027C6C
           mov edx, dword ptr [ebp-000000084h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-000000086h], al
           mov ecx, dword ptr [ebp-080h]
           cmp al, byte ptr [ecx+001h]
           jne l10027C78
           add dword ptr [ebp-000000084h], 000000002h
           add dword ptr [ebp-080h], 000000002h
           cmp byte ptr [ebp-000000086h], 000h
           jne l10027C23
;
;* Jump:
; 10027C3F(C) 
;
l10027C6C: mov dword ptr [ebp-00000008Ch], 000000000h
           jmp l10027C83
;
;* Jump:
; 10027C36(C), 10027C56(C) 
;
l10027C78: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-00000008Ch], edx
;
;* Jump:
; 10027C76(U) 
;
l10027C83: mov eax, dword ptr [ebp-00000008Ch]
           mov dword ptr [ebp-000000090h], eax
           cmp dword ptr [ebp-000000090h], 000000000h
           jne l10027CBA
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+000084808h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003BAA0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           jmp near ptr l100286F6
;
;* Jump:
; 10027C96(C) 
;
l10027CBA: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000094h], edx
;
;* String: "ToonColor"
;
           mov dword ptr [ebp-000000098h], offset g1003BAA4
;
;* Jump:
; 10027D1D(C) 
;
l10027CCD: mov eax, dword ptr [ebp-000000098h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000099h], cl
           mov edx, dword ptr [ebp-000000094h]
           cmp cl, byte ptr [edx]
           jne l10027D2B
           cmp byte ptr [ebp-000000099h], 000h
           je l10027D1F
           mov eax, dword ptr [ebp-000000098h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000009Ah], cl
           mov edx, dword ptr [ebp-000000094h]
           cmp cl, byte ptr [edx+001h]
           jne l10027D2B
           add dword ptr [ebp-000000098h], 000000002h
           add dword ptr [ebp-000000094h], 000000002h
           cmp byte ptr [ebp-00000009Ah], 000h
           jne l10027CCD
;
;* Jump:
; 10027CEC(C) 
;
l10027D1F: mov dword ptr [ebp-0000000A0h], 000000000h
           jmp l10027D36
;
;* Jump:
; 10027CE3(C), 10027D06(C) 
;
l10027D2B: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000000A0h], eax
;
;* Jump:
; 10027D29(U) 
;
l10027D36: mov ecx, dword ptr [ebp-0000000A0h]
           mov dword ptr [ebp-0000000A4h], ecx
           cmp dword ptr [ebp-0000000A4h], 000000000h
           jne l10027D68
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+0000847FCh]
           push eax
;
;* String: "%d"
;
           push offset g1003BAB0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027D49(C) 
;
l10027D68: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000A8h], ecx
;
;* String: "ToonTextures"
;
           mov dword ptr [ebp-0000000ACh], offset g1003BAB4
;
;* Jump:
; 10027DCB(C) 
;
l10027D7B: mov edx, dword ptr [ebp-0000000ACh]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-0000000ADh], al
           mov ecx, dword ptr [ebp-0000000A8h]
           cmp al, byte ptr [ecx]
           jne l10027DD9
           cmp byte ptr [ebp-0000000ADh], 000h
           je l10027DCD
           mov edx, dword ptr [ebp-0000000ACh]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000AEh], al
           mov ecx, dword ptr [ebp-0000000A8h]
           cmp al, byte ptr [ecx+001h]
           jne l10027DD9
           add dword ptr [ebp-0000000ACh], 000000002h
           add dword ptr [ebp-0000000A8h], 000000002h
           cmp byte ptr [ebp-0000000AEh], 000h
           jne l10027D7B
;
;* Jump:
; 10027D9A(C) 
;
l10027DCD: mov dword ptr [ebp-0000000B4h], 000000000h
           jmp l10027DE4
;
;* Jump:
; 10027D91(C), 10027DB4(C) 
;
l10027DD9: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000B4h], edx
;
;* Jump:
; 10027DD7(U) 
;
l10027DE4: mov eax, dword ptr [ebp-0000000B4h]
           mov dword ptr [ebp-0000000B8h], eax
           cmp dword ptr [ebp-0000000B8h], 000000000h
           jne l10027E16
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+000084800h]
           push edx
;
;* String: "%d"
;
           push offset g1003BAC4
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027DF7(C) 
;
l10027E16: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000BCh], eax
;
;* String: "FogSubdivide"
;
           mov dword ptr [ebp-0000000C0h], offset g1003BAC8
;
;* Jump:
; 10027E79(C) 
;
l10027E29: mov ecx, dword ptr [ebp-0000000C0h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000C1h], dl
           mov eax, dword ptr [ebp-0000000BCh]
           cmp dl, byte ptr [eax]
           jne l10027E87
           cmp byte ptr [ebp-0000000C1h], 000h
           je l10027E7B
           mov ecx, dword ptr [ebp-0000000C0h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000C2h], dl
           mov eax, dword ptr [ebp-0000000BCh]
           cmp dl, byte ptr [eax+001h]
           jne l10027E87
           add dword ptr [ebp-0000000C0h], 000000002h
           add dword ptr [ebp-0000000BCh], 000000002h
           cmp byte ptr [ebp-0000000C2h], 000h
           jne l10027E29
;
;* Jump:
; 10027E48(C) 
;
l10027E7B: mov dword ptr [ebp-0000000C8h], 000000000h
           jmp l10027E92
;
;* Jump:
; 10027E3F(C), 10027E62(C) 
;
l10027E87: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000C8h], ecx
;
;* Jump:
; 10027E85(U) 
;
l10027E92: mov edx, dword ptr [ebp-0000000C8h]
           mov dword ptr [ebp-0000000CCh], edx
           cmp dword ptr [ebp-0000000CCh], 000000000h
           jne l10027EC4
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000000080h]
           push ecx
;
;* String: "%d"
;
           push offset g1003BAD8
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027EA5(C) 
;
l10027EC4: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000D0h], edx
;
;* String: "UseOGLFog"
;
           mov dword ptr [ebp-0000000D4h], offset g1003BADC
;
;* Jump:
; 10027F27(C) 
;
l10027ED7: mov eax, dword ptr [ebp-0000000D4h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-0000000D5h], cl
           mov edx, dword ptr [ebp-0000000D0h]
           cmp cl, byte ptr [edx]
           jne l10027F35
           cmp byte ptr [ebp-0000000D5h], 000h
           je l10027F29
           mov eax, dword ptr [ebp-0000000D4h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-0000000D6h], cl
           mov edx, dword ptr [ebp-0000000D0h]
           cmp cl, byte ptr [edx+001h]
           jne l10027F35
           add dword ptr [ebp-0000000D4h], 000000002h
           add dword ptr [ebp-0000000D0h], 000000002h
           cmp byte ptr [ebp-0000000D6h], 000h
           jne l10027ED7
;
;* Jump:
; 10027EF6(C) 
;
l10027F29: mov dword ptr [ebp-0000000DCh], 000000000h
           jmp l10027F40
;
;* Jump:
; 10027EED(C), 10027F10(C) 
;
l10027F35: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-0000000DCh], eax
;
;* Jump:
; 10027F33(U) 
;
l10027F40: mov ecx, dword ptr [ebp-0000000DCh]
           mov dword ptr [ebp-0000000E0h], ecx
           cmp dword ptr [ebp-0000000E0h], 000000000h
           jne l10027F72
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+000084868h]
           push eax
;
;* String: "%d"
;
           push offset g1003BAE8
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10027F53(C) 
;
l10027F72: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000E4h], ecx
;
;* String: "UseOGLLight"
;
           mov dword ptr [ebp-0000000E8h], offset g1003BAEC
;
;* Jump:
; 10027FD5(C) 
;
l10027F85: mov edx, dword ptr [ebp-0000000E8h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-0000000E9h], al
           mov ecx, dword ptr [ebp-0000000E4h]
           cmp al, byte ptr [ecx]
           jne l10027FE3
           cmp byte ptr [ebp-0000000E9h], 000h
           je l10027FD7
           mov edx, dword ptr [ebp-0000000E8h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-0000000EAh], al
           mov ecx, dword ptr [ebp-0000000E4h]
           cmp al, byte ptr [ecx+001h]
           jne l10027FE3
           add dword ptr [ebp-0000000E8h], 000000002h
           add dword ptr [ebp-0000000E4h], 000000002h
           cmp byte ptr [ebp-0000000EAh], 000h
           jne l10027F85
;
;* Jump:
; 10027FA4(C) 
;
l10027FD7: mov dword ptr [ebp-0000000F0h], 000000000h
           jmp l10027FEE
;
;* Jump:
; 10027F9B(C), 10027FBE(C) 
;
l10027FE3: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-0000000F0h], edx
;
;* Jump:
; 10027FE1(U) 
;
l10027FEE: mov eax, dword ptr [ebp-0000000F0h]
           mov dword ptr [ebp-0000000F4h], eax
           cmp dword ptr [ebp-0000000F4h], 000000000h
           jne l10028020
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00008485Ch]
           push edx
;
;* String: "%d"
;
           push offset g1003BAF8
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10028001(C) 
;
l10028020: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000000F8h], eax
;
;* String: "UseTextureFont"
;
           mov dword ptr [ebp-0000000FCh], offset g1003BAFC
;
;* Jump:
; 10028083(C) 
;
l10028033: mov ecx, dword ptr [ebp-0000000FCh]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000000FDh], dl
           mov eax, dword ptr [ebp-0000000F8h]
           cmp dl, byte ptr [eax]
           jne l10028091
           cmp byte ptr [ebp-0000000FDh], 000h
           je l10028085
           mov ecx, dword ptr [ebp-0000000FCh]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000000FEh], dl
           mov eax, dword ptr [ebp-0000000F8h]
           cmp dl, byte ptr [eax+001h]
           jne l10028091
           add dword ptr [ebp-0000000FCh], 000000002h
           add dword ptr [ebp-0000000F8h], 000000002h
           cmp byte ptr [ebp-0000000FEh], 000h
           jne l10028033
;
;* Jump:
; 10028052(C) 
;
l10028085: mov dword ptr [ebp-000000104h], 000000000h
           jmp l1002809C
;
;* Jump:
; 10028049(C), 1002806C(C) 
;
l10028091: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-000000104h], ecx
;
;* Jump:
; 1002808F(U) 
;
l1002809C: mov edx, dword ptr [ebp-000000104h]
           mov dword ptr [ebp-000000108h], edx
           cmp dword ptr [ebp-000000108h], 000000000h
           jne l100280CE
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00008483Ch]
           push ecx
;
;* String: "%d"
;
           push offset g1003BB0C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 100280AF(C) 
;
l100280CE: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000010Ch], edx
;
;* String: "TFontScale"
;
           mov dword ptr [ebp-000000110h], offset g1003BB10
;
;* Jump:
; 10028131(C) 
;
l100280E1: mov eax, dword ptr [ebp-000000110h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000111h], cl
           mov edx, dword ptr [ebp-00000010Ch]
           cmp cl, byte ptr [edx]
           jne l1002813F
           cmp byte ptr [ebp-000000111h], 000h
           je l10028133
           mov eax, dword ptr [ebp-000000110h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-000000112h], cl
           mov edx, dword ptr [ebp-00000010Ch]
           cmp cl, byte ptr [edx+001h]
           jne l1002813F
           add dword ptr [ebp-000000110h], 000000002h
           add dword ptr [ebp-00000010Ch], 000000002h
           cmp byte ptr [ebp-000000112h], 000h
           jne l100280E1
;
;* Jump:
; 10028100(C) 
;
l10028133: mov dword ptr [ebp-000000118h], 000000000h
           jmp l1002814A
;
;* Jump:
; 100280F7(C), 1002811A(C) 
;
l1002813F: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000118h], eax
;
;* Jump:
; 1002813D(U) 
;
l1002814A: mov ecx, dword ptr [ebp-000000118h]
           mov dword ptr [ebp-00000011Ch], ecx
           cmp dword ptr [ebp-00000011Ch], 000000000h
           jne l10028181
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+000084848h]
           sub esp, 000000008h
           fstp qword ptr [esp]
;
;* String: "%f"
;
           push offset g1003BB1C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 00000000Ch
           jmp near ptr l100286F6
;
;* Jump:
; 1002815D(C) 
;
l10028181: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000120h], eax
;
;* String: "TFontOpaque"
;
           mov dword ptr [ebp-000000124h], offset g1003BB20
;
;* Jump:
; 100281E4(C) 
;
l10028194: mov ecx, dword ptr [ebp-000000124h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000125h], dl
           mov eax, dword ptr [ebp-000000120h]
           cmp dl, byte ptr [eax]
           jne l100281F2
           cmp byte ptr [ebp-000000125h], 000h
           je l100281E6
           mov ecx, dword ptr [ebp-000000124h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000126h], dl
           mov eax, dword ptr [ebp-000000120h]
           cmp dl, byte ptr [eax+001h]
           jne l100281F2
           add dword ptr [ebp-000000124h], 000000002h
           add dword ptr [ebp-000000120h], 000000002h
           cmp byte ptr [ebp-000000126h], 000h
           jne l10028194
;
;* Jump:
; 100281B3(C) 
;
l100281E6: mov dword ptr [ebp-00000012Ch], 000000000h
           jmp l100281FD
;
;* Jump:
; 100281AA(C), 100281CD(C) 
;
l100281F2: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-00000012Ch], ecx
;
;* Jump:
; 100281F0(U) 
;
l100281FD: mov edx, dword ptr [ebp-00000012Ch]
           mov dword ptr [ebp-000000130h], edx
           cmp dword ptr [ebp-000000130h], 000000000h
           jne l1002822F
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+000084840h]
           push ecx
;
;* String: "%d"
;
           push offset g1003BB2C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10028210(C) 
;
l1002822F: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000134h], edx
;
;* String: "CacheStretchImages"
;
           mov dword ptr [ebp-000000138h], offset g1003BB30
;
;* Jump:
; 10028292(C) 
;
l10028242: mov eax, dword ptr [ebp-000000138h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000139h], cl
           mov edx, dword ptr [ebp-000000134h]
           cmp cl, byte ptr [edx]
           jne l100282A0
           cmp byte ptr [ebp-000000139h], 000h
           je l10028294
           mov eax, dword ptr [ebp-000000138h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000013Ah], cl
           mov edx, dword ptr [ebp-000000134h]
           cmp cl, byte ptr [edx+001h]
           jne l100282A0
           add dword ptr [ebp-000000138h], 000000002h
           add dword ptr [ebp-000000134h], 000000002h
           cmp byte ptr [ebp-00000013Ah], 000h
           jne l10028242
;
;* Jump:
; 10028261(C) 
;
l10028294: mov dword ptr [ebp-000000140h], 000000000h
           jmp l100282AB
;
;* Jump:
; 10028258(C), 1002827B(C) 
;
l100282A0: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000140h], eax
;
;* Jump:
; 1002829E(U) 
;
l100282AB: mov ecx, dword ptr [ebp-000000140h]
           mov dword ptr [ebp-000000144h], ecx
           cmp dword ptr [ebp-000000144h], 000000000h
           jne l100282DD
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00008486Ch]
           push eax
;
;* String: "%d"
;
           push offset g1003BB44
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 100282BE(C) 
;
l100282DD: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000148h], ecx
;
;* String: "SwapInterval"
;
           mov dword ptr [ebp-00000014Ch], offset g1003BB48
;
;* Jump:
; 10028340(C) 
;
l100282F0: mov edx, dword ptr [ebp-00000014Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-00000014Dh], al
           mov ecx, dword ptr [ebp-000000148h]
           cmp al, byte ptr [ecx]
           jne l1002834E
           cmp byte ptr [ebp-00000014Dh], 000h
           je l10028342
           mov edx, dword ptr [ebp-00000014Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000014Eh], al
           mov ecx, dword ptr [ebp-000000148h]
           cmp al, byte ptr [ecx+001h]
           jne l1002834E
           add dword ptr [ebp-00000014Ch], 000000002h
           add dword ptr [ebp-000000148h], 000000002h
           cmp byte ptr [ebp-00000014Eh], 000h
           jne l100282F0
;
;* Jump:
; 1002830F(C) 
;
l10028342: mov dword ptr [ebp-000000154h], 000000000h
           jmp l10028359
;
;* Jump:
; 10028306(C), 10028329(C) 
;
l1002834E: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-000000154h], edx
;
;* Jump:
; 1002834C(U) 
;
l10028359: mov eax, dword ptr [ebp-000000154h]
           mov dword ptr [ebp-000000158h], eax
           cmp dword ptr [ebp-000000158h], 000000000h
           jne l1002839B
           cmp dword ptr [g10051830], 000000000h
           je l10028391
           call [g10051830]
           push eax
;
;* String: "%d"
;
           push offset g1003BB58
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 10028375(C) 
;
;* String: "Not available"
;
l10028391: mov eax, offset g1003BB5C
           jmp near ptr l100286F6
;
;* Jump:
; 1002836C(C) 
;
l1002839B: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-00000015Ch], ecx
;
;* String: "NotUsePalettes"
;
           mov dword ptr [ebp-000000160h], offset g1003BB6C
;
;* Jump:
; 100283FE(C) 
;
l100283AE: mov edx, dword ptr [ebp-000000160h]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-000000161h], al
           mov ecx, dword ptr [ebp-00000015Ch]
           cmp al, byte ptr [ecx]
           jne l1002840C
           cmp byte ptr [ebp-000000161h], 000h
           je l10028400
           mov edx, dword ptr [ebp-000000160h]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-000000162h], al
           mov ecx, dword ptr [ebp-00000015Ch]
           cmp al, byte ptr [ecx+001h]
           jne l1002840C
           add dword ptr [ebp-000000160h], 000000002h
           add dword ptr [ebp-00000015Ch], 000000002h
           cmp byte ptr [ebp-000000162h], 000h
           jne l100283AE
;
;* Jump:
; 100283CD(C) 
;
l10028400: mov dword ptr [ebp-000000168h], 000000000h
           jmp l10028417
;
;* Jump:
; 100283C4(C), 100283E7(C) 
;
l1002840C: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-000000168h], edx
;
;* Jump:
; 1002840A(U) 
;
l10028417: mov eax, dword ptr [ebp-000000168h]
           mov dword ptr [ebp-00000016Ch], eax
           cmp dword ptr [ebp-00000016Ch], 000000000h
           jne l10028449
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+000084860h]
           push edx
;
;* String: "%d"
;
           push offset g1003BB7C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 1002842A(C) 
;
l10028449: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000170h], eax
;
;* String: "NotUseCompressedTextures"
;
           mov dword ptr [ebp-000000174h], offset g1003BB80
;
;* Jump:
; 100284AC(C) 
;
l1002845C: mov ecx, dword ptr [ebp-000000174h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-000000175h], dl
           mov eax, dword ptr [ebp-000000170h]
           cmp dl, byte ptr [eax]
           jne l100284BA
           cmp byte ptr [ebp-000000175h], 000h
           je l100284AE
           mov ecx, dword ptr [ebp-000000174h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-000000176h], dl
           mov eax, dword ptr [ebp-000000170h]
           cmp dl, byte ptr [eax+001h]
           jne l100284BA
           add dword ptr [ebp-000000174h], 000000002h
           add dword ptr [ebp-000000170h], 000000002h
           cmp byte ptr [ebp-000000176h], 000h
           jne l1002845C
;
;* Jump:
; 1002847B(C) 
;
l100284AE: mov dword ptr [ebp-00000017Ch], 000000000h
           jmp l100284C5
;
;* Jump:
; 10028472(C), 10028495(C) 
;
l100284BA: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-00000017Ch], ecx
;
;* Jump:
; 100284B8(U) 
;
l100284C5: mov edx, dword ptr [ebp-00000017Ch]
           mov dword ptr [ebp-000000180h], edx
           cmp dword ptr [ebp-000000180h], 000000000h
           jne l100284FD
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           cmp dword ptr [eax+000084844h], 000000000h
           sete  cl
           push ecx
;
;* String: "%d"
;
           push offset g1003BB9C
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 100284D8(C) 
;
l100284FD: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000184h], edx
;
;* String: "BWRender"
;
           mov dword ptr [ebp-000000188h], offset g1003BBA0
;
;* Jump:
; 10028560(C) 
;
l10028510: mov eax, dword ptr [ebp-000000188h]
           mov cl, byte ptr [eax]
           mov byte ptr [ebp-000000189h], cl
           mov edx, dword ptr [ebp-000000184h]
           cmp cl, byte ptr [edx]
           jne l1002856E
           cmp byte ptr [ebp-000000189h], 000h
           je l10028562
           mov eax, dword ptr [ebp-000000188h]
           mov cl, byte ptr [eax+001h]
           mov byte ptr [ebp-00000018Ah], cl
           mov edx, dword ptr [ebp-000000184h]
           cmp cl, byte ptr [edx+001h]
           jne l1002856E
           add dword ptr [ebp-000000188h], 000000002h
           add dword ptr [ebp-000000184h], 000000002h
           cmp byte ptr [ebp-00000018Ah], 000h
           jne l10028510
;
;* Jump:
; 1002852F(C) 
;
l10028562: mov dword ptr [ebp-000000190h], 000000000h
           jmp l10028579
;
;* Jump:
; 10028526(C), 10028549(C) 
;
l1002856E: sbb eax, eax
           sbb eax, 0FFFFFFFFh
           mov dword ptr [ebp-000000190h], eax
;
;* Jump:
; 1002856C(U) 
;
l10028579: mov ecx, dword ptr [ebp-000000190h]
           mov dword ptr [ebp-000000194h], ecx
           cmp dword ptr [ebp-000000194h], 000000000h
           jne l100285AB
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+000084804h]
           push eax
;
;* String: "%d"
;
           push offset g1003BBAC
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 1002858C(C) 
;
l100285AB: mov ecx, dword ptr [ebp+008h]
           mov dword ptr [ebp-000000198h], ecx
;
;* String: "UseCreditsHack"
;
           mov dword ptr [ebp-00000019Ch], offset g1003BBB0
;
;* Jump:
; 1002860E(C) 
;
l100285BE: mov edx, dword ptr [ebp-00000019Ch]
           mov al, byte ptr [edx]
           mov byte ptr [ebp-00000019Dh], al
           mov ecx, dword ptr [ebp-000000198h]
           cmp al, byte ptr [ecx]
           jne l1002861C
           cmp byte ptr [ebp-00000019Dh], 000h
           je l10028610
           mov edx, dword ptr [ebp-00000019Ch]
           mov al, byte ptr [edx+001h]
           mov byte ptr [ebp-00000019Eh], al
           mov ecx, dword ptr [ebp-000000198h]
           cmp al, byte ptr [ecx+001h]
           jne l1002861C
           add dword ptr [ebp-00000019Ch], 000000002h
           add dword ptr [ebp-000000198h], 000000002h
           cmp byte ptr [ebp-00000019Eh], 000h
           jne l100285BE
;
;* Jump:
; 100285DD(C) 
;
l10028610: mov dword ptr [ebp-0000001A4h], 000000000h
           jmp l10028627
;
;* Jump:
; 100285D4(C), 100285F7(C) 
;
l1002861C: sbb edx, edx
           sbb edx, 0FFFFFFFFh
           mov dword ptr [ebp-0000001A4h], edx
;
;* Jump:
; 1002861A(U) 
;
l10028627: mov eax, dword ptr [ebp-0000001A4h]
           mov dword ptr [ebp-0000001A8h], eax
           cmp dword ptr [ebp-0000001A8h], 000000000h
           jne l10028659
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+0000847BCh]
           push edx
;
;* String: "%d"
;
           push offset g1003BBC0
           call [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           add esp, 000000008h
           jmp near ptr l100286F6
;
;* Jump:
; 1002863A(C) 
;
l10028659: mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-0000001ACh], eax
;
;* String: "Help"
;
           mov dword ptr [ebp-0000001B0h], offset g1003BBC4
;
;* Jump:
; 100286BC(C) 
;
l1002866C: mov ecx, dword ptr [ebp-0000001B0h]
           mov dl, byte ptr [ecx]
           mov byte ptr [ebp-0000001B1h], dl
           mov eax, dword ptr [ebp-0000001ACh]
           cmp dl, byte ptr [eax]
           jne l100286CA
           cmp byte ptr [ebp-0000001B1h], 000h
           je l100286BE
           mov ecx, dword ptr [ebp-0000001B0h]
           mov dl, byte ptr [ecx+001h]
           mov byte ptr [ebp-0000001B2h], dl
           mov eax, dword ptr [ebp-0000001ACh]
           cmp dl, byte ptr [eax+001h]
           jne l100286CA
           add dword ptr [ebp-0000001B0h], 000000002h
           add dword ptr [ebp-0000001ACh], 000000002h
           cmp byte ptr [ebp-0000001B2h], 000h
           jne l1002866C
;
;* Jump:
; 1002868B(C) 
;
l100286BE: mov dword ptr [ebp-0000001B8h], 000000000h
           jmp l100286D5
;
;* Jump:
; 10028682(C), 100286A5(C) 
;
l100286CA: sbb ecx, ecx
           sbb ecx, 0FFFFFFFFh
           mov dword ptr [ebp-0000001B8h], ecx
;
;* Jump:
; 100286C8(U) 
;
l100286D5: mov edx, dword ptr [ebp-0000001B8h]
           mov dword ptr [ebp-0000001BCh], edx
           cmp dword ptr [ebp-0000001BCh], 000000000h
           jne l100286F1
;
;* String: "Commands:
;            MipmapMode
;            AnisotropicLevel
;            TextureLODBias
;            ShowStats
;            FogFactor
;            ToonRender
;            ToonColor
;            ToonTextures
;            FogSubdivide
;            UseOGLFog
;            UseOGLLight
;            UseTextureFont
;            TFontScale
;            NotUsePalettes
;            NotUseCompressedTextures
;            SwapInterval
;            BWRender
;            UseCreditsHack
;          "
;
           mov eax, offset g1003BBCC
           jmp l100286F6
;
;* Jump:
; 100286E8(C) 
;
;* String: "Parameter unknown
;          "
;
l100286F1: mov eax, offset g1003BCE8
;
;* Jump:
; 10027998(U), 10027A18(U), 10027A98(U), 10027B13(U), 10027B93(U), 
; 10027C0E(U), 10027CB5(U), 10027D63(U), 10027E11(U), 10027EBF(U), 
; 10027F6D(U), 1002801B(U), 100280C9(U), 1002817C(U), 1002822A(U), 
; 100282D8(U), 1002838C(U), 10028396(U), 10028444(U), 100284F8(U), 
; 100285A6(U), 10028654(U), 100286EF(U) 
;
l100286F6: mov esp, ebp
           pop ebp
           ret 00004h
l10027929 ENDP
;
;* Jump:
; 1000150A(U) 
;
           call l100286FC; Implemented in c++ code
;
;* Jump:
; 100014CE(U) 
;
           call l1002872D; Implemented in c++ code
;
;* Jump:
; 10001546(U) 
;
l10028764 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000002Ch
           mov dword ptr [ebp-02Ch], ecx
           mov eax, dword ptr [ebp-02Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-02Ch]
           call [edx+000000224h]
           test eax, eax
           jne l10028784
           jmp near ptr l100289B4
;
;* Jump:
; 1002877D(C) 
;
l10028784: cmp dword ptr [ebp+008h], 000000000h
           je l100288D1
           push 000000600h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-01Ch], eax
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-004h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l100287B6
;
;* Jump:
; 10028829(U) 
;
l100287AD: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100287AB(U) 
;
l100287B6: cmp dword ptr [ebp-00Ch], 000000100h
           jnl l1002882B
           mov edx, dword ptr [ebp-02Ch]
           add edx, dword ptr [ebp-00Ch]
           movsx ax, byte ptr [edx+000086344h]
           and eax, 00000FFFFh
           shl eax, 008h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov word ptr [edx+ecx*02h], ax
           mov eax, dword ptr [ebp-02Ch]
           add eax, dword ptr [ebp-00Ch]
           movsx cx, byte ptr [eax+000086344h]
           and ecx, 00000FFFFh
           shl ecx, 008h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov word ptr [eax+edx*02h+000000200h], cx
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, dword ptr [ebp-00Ch]
           movsx dx, byte ptr [ecx+000086344h]
           and edx, 00000FFFFh
           shl edx, 008h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov word ptr [ecx+eax*02h+000000400h], dx
           jmp l100287AD
;
;* Jump:
; 100287BD(C) 
;
l1002882B: mov edx, dword ptr [ebp-004h]
           push edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [__imp_SetDeviceGammaRamp]; [GDI32.SetDeviceGammaRamp].
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+0000847B0h], eax
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-020h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           push 000000003h
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+058h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+054h]
           push edx
           push 000000000h
           push 000000000h
           push 0FFFFFFFFh
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+000084198h]
           push ecx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+0000841A0h]
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+00008419Ch]
           push edx
           call [__imp_wglMakeCurrent]; [OPENGL32.wglMakeCurrent].
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           jne l100288BC
;
;* String: "B_OpenGLRasterDevice::B_OpenGLRasterDevice() -> wglMakeCurrent failed.
;          "
;
           push offset g1003BCFC
           mov eax, dword ptr [__imp_?mout@@3VB_MessageManager@@A]; [BBLibc.?mout@@3VB_MessageManager@@A].
           push eax
           call [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           add esp, 000000008h
           jmp near ptr l100289B4
;
;* Jump:
; 100288A1(C) 
;
l100288BC: mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetForegroundWindow]; [USER32.SetForegroundWindow].
           jmp near ptr l100289B4
;
;* Jump:
; 10028788(C) 
;
l100288D1: push 000000003h
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+058h]
           push ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+054h]
           push eax
           push 000000000h
           push 000000000h
           push 0FFFFFFFEh
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+000084198h]
           push edx
           call [__imp_SetWindowPos]; [USER32.SetWindowPos].
           push 000000600h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-024h], eax
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-010h], eax
           mov dword ptr [ebp-018h], 000000000h
           jmp l1002891F
;
;* Jump:
; 10028972(U) 
;
l10028916: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 10028914(U) 
;
l1002891F: cmp dword ptr [ebp-018h], 000000100h
           jnl l10028974
           mov edx, dword ptr [ebp-018h]
           and edx, 00000FFFFh
           shl edx, 008h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           mov word ptr [ecx+eax*02h], dx
           mov edx, dword ptr [ebp-018h]
           and edx, 00000FFFFh
           shl edx, 008h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           mov word ptr [ecx+eax*02h+000000200h], dx
           mov edx, dword ptr [ebp-018h]
           and edx, 00000FFFFh
           shl edx, 008h
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-010h]
           mov word ptr [ecx+eax*02h+000000400h], dx
           jmp l10028916
;
;* Jump:
; 10028926(C) 
;
l10028974: mov edx, dword ptr [ebp-010h]
           push edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00008419Ch]
           push ecx
           call [__imp_SetDeviceGammaRamp]; [GDI32.SetDeviceGammaRamp].
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-028h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+0000847B0h], 000000000h
           push 000000000h
           push 000000000h
           call [__imp_wglMakeCurrent]; [OPENGL32.wglMakeCurrent].
;
;* Jump:
; 1002877F(U), 100288B7(U), 100288CC(U) 
;
l100289B4: mov esp, ebp
           pop ebp
           ret 00004h
l10028764 ENDP
;
;* Jump:
; 100010CD(U) 
;
           call l100289BA; Implemented in c++ code
;
;* Jump:
; 100012D5(U) 
;
           call l10028A98; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001145(U), 10001564(U) 
;
l1002B550 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10001366
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002B575
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002B567(C) 
;
l1002B575: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002B550 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000157D(U) 
;
           call l1002B590; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015C3(U) 
;
           call l1002B5B0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001078(U) 
;
           call l1002B5C0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011F9(U) 
;
           call l1002B5D0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001226(U) 
;
           call l1002B5E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001640(U) 
;
           call l1002B5F0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100016EF(U) 
;
           call l1002B600; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001433(U) 
;
           call l1002B650; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000187A(U) 
;
           call l1002B670; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014BF(U) 
;
           call l1002B6E0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000132F(U) 
;
           call l1002B700; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100017CB(U) 
;
           call l1002B720; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000140B(U) 
;
           call l1002B740; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000112C(U) 
;
           call l1002B760; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001208(U) 
;
           call l1002B780; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000103C(U) 
;
           call l1002B7A0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000171C(U) 
;
           call l1002B7D0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015FF(U) 
;
           call l1002B800; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001221(U) 
;
           call l1002B830; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100012E4(U) 
;
           call l1002B860; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001041(U) 
;
           call l1002B8A0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015D7(U) 
;
           call l1002B8F0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000146A(U) 
;
           call l1002BCD0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001136(U) 
;
           call l1002BCF0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001023(U) 
;
           call l1002BD00; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010F5(U) 
;
           call l1002BD30; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001055(U) 
;
           call l1002BD70; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000128A(U) 
;
           call l1002BDB0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001370(U) 
;
           call l1002BDD0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100012A3(U) 
;
           call l1002BDF0; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000175D(U), 10001857(U) 
;
l1002BE10 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [__imp_??_7B_NamedObj@@6B@]; [BBLibc.??_7B_NamedObj@@6B@].
           mov dword ptr [eax], ecx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000004h
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l1002BE44
           mov eax, dword ptr [ebp-004h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002BE36(C) 
;
l1002BE44: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002BE10 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000169A(U), 100016B8(U) 
;
l1002BE60 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10037624
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002BF21
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002BE96
           jmp near ptr l1002BF21
;
;* Jump:
; 1002BE8F(C) 
;
l1002BE96: cmp dword ptr [ebp-014h], 000000000h
           je l1002BEEE
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002BEAE
;
;* Jump:
; 1002BEEC(U) 
;
l1002BEA5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002BEA3(U) 
;
l1002BEAE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002BEEE
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002BEE5
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002BEEC
;
;* Jump:
; 1002BED2(C) 
;
l1002BEE5: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002BEE3(U) 
;
l1002BEEC: jmp l1002BEA5
;
;* Jump:
; 1002BE9A(C), 1002BEB7(C) 
;
l1002BEEE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002BE79(C), 1002BE91(U) 
;
l1002BF21: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002BF37
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002BF29(C) 
;
l1002BF37: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002BE60 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000124E(U), 10001631(U) 
;
l1002BF80 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10037624
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002C041
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002BFB6
           jmp near ptr l1002C041
;
;* Jump:
; 1002BFAF(C) 
;
l1002BFB6: cmp dword ptr [ebp-014h], 000000000h
           je l1002C00E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002BFCE
;
;* Jump:
; 1002C00C(U) 
;
l1002BFC5: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002BFC3(U) 
;
l1002BFCE: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002C00E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002C005
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002C00C
;
;* Jump:
; 1002BFF2(C) 
;
l1002C005: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002C003(U) 
;
l1002C00C: jmp l1002BFC5
;
;* Jump:
; 1002BFBA(C), 1002BFD7(C) 
;
l1002C00E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002BF99(C), 1002BFB1(U) 
;
l1002C041: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002C057
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C049(C) 
;
l1002C057: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002BF80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000134D(U), 100016D1(U) 
;
l1002C0A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000024h
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax], offset g10037634
           mov ecx, dword ptr [ebp-020h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002C1BA
           mov edx, dword ptr [ebp-020h]
           cmp dword ptr [edx+010h], 000000000h
           jne l1002C0CD
           jmp near ptr l1002C1BA
;
;* Jump:
; 1002C0C6(C) 
;
l1002C0CD: mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           cmp dword ptr [ebp-004h], 000000000h
           je l1002C195
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-024h], eax
           mov ecx, 000000003h
           and ecx, 000000002h
           test ecx, ecx
           je l1002C16C
           mov edx, dword ptr [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-018h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax-004h]
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-010h], 000000008h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-010h]
           imul eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, eax
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 1002C144(U) 
;
l1002C126: mov edx, dword ptr [ebp-014h]
           sub edx, 000000001h
           mov dword ptr [ebp-014h], edx
           cmp dword ptr [ebp-014h], 000000000h
           jl l1002C146
           mov eax, dword ptr [ebp-00Ch]
           sub eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           call [ebp-018h]
           jmp l1002C126
;
;* Jump:
; 1002C133(C) 
;
l1002C146: mov ecx, 000000003h
           and ecx, 000000001h
           test ecx, ecx
           je l1002C161
           mov edx, dword ptr [ebp-004h]
           sub edx, 000000004h
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C150(C) 
;
l1002C161: mov eax, dword ptr [ebp-004h]
           sub eax, 000000004h
           mov dword ptr [ebp-024h], eax
           jmp l1002C193
;
;* Jump:
; 1002C0F6(C) 
;
l1002C16C: mov ecx, dword ptr [ebp-004h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov ecx, 000000003h
           and ecx, 000000001h
           test ecx, ecx
           je l1002C18D
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C17F(C) 
;
l1002C18D: mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1002C16A(U) 
;
l1002C193: jmp l1002C19C
;
;* Jump:
; 1002C0E0(C) 
;
l1002C195: mov dword ptr [ebp-024h], 000000000h
;
;* Jump:
; 1002C193(U) 
;
l1002C19C: mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+010h], 000000000h
;
;* Jump:
; 1002C0B9(C), 1002C0C8(U) 
;
l1002C1BA: mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l1002C1D0
           mov edx, dword ptr [ebp-020h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C1C2(C) 
;
l1002C1D0: mov eax, dword ptr [ebp-020h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002C0A0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001195(U) 
;
l1002C230 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp+008h]
           and eax, 000000002h
           test eax, eax
           je l1002C2B2
           mov ecx, dword ptr [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx-004h]
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-008h], 000000008h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-008h]
           imul edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           add eax, edx
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002C28F(U) 
;
l1002C271: mov ecx, dword ptr [ebp-00Ch]
           sub ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
           cmp dword ptr [ebp-00Ch], 000000000h
           jl l1002C291
           mov edx, dword ptr [ebp-004h]
           sub edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], edx
           mov ecx, dword ptr [ebp-004h]
           call [ebp-010h]
           jmp l1002C271
;
;* Jump:
; 1002C27E(C) 
;
l1002C291: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002C2AA
           mov ecx, dword ptr [ebp-014h]
           sub ecx, 000000004h
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C299(C) 
;
l1002C2AA: mov eax, dword ptr [ebp-014h]
           sub eax, 000000004h
           jmp l1002C2D4
;
;* Jump:
; 1002C241(C) 
;
l1002C2B2: mov ecx, dword ptr [ebp-014h]
           call [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           mov edx, dword ptr [ebp+008h]
           and edx, 000000001h
           test edx, edx
           je l1002C2D1
           mov eax, dword ptr [ebp-014h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C2C3(C) 
;
l1002C2D1: mov eax, dword ptr [ebp-014h]
;
;* Jump:
; 1002C2B0(U) 
;
l1002C2D4: mov esp, ebp
           pop ebp
           ret 00004h
l1002C230 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001122(U) 
;
l1002C310 PROC
           push ebp
           mov ebp, esp
           mov eax, dword ptr [ebp+00Ch]
           imul eax, dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp+008h]
           add ecx, eax
           mov dword ptr [ebp+008h], ecx
;
;* Jump:
; 1002C340(U) 
;
l1002C322: mov edx, dword ptr [ebp+010h]
           sub edx, 000000001h
           mov dword ptr [ebp+010h], edx
           cmp dword ptr [ebp+010h], 000000000h
           jl l1002C342
           mov eax, dword ptr [ebp+008h]
           sub eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp+008h], eax
           mov ecx, dword ptr [ebp+008h]
           call [ebp+014h]
           jmp l1002C322
;
;* Jump:
; 1002C32F(C) 
;
l1002C342: pop ebp
           ret 00010h
l1002C310 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015B4(U) 
;
l1002C360 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           push esi
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [eax+010h]
           cmp edx, dword ptr [ecx+008h]
           jbe l1002C39E
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [eax+ecx*04h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+008h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+008h], ecx
           jmp near ptr l1002C467
;
;* Jump:
; 1002C376(C) 
;
l1002C39E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-018h]
           add ecx, dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+010h], ecx
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+008h], 000000000h
           je l1002C428
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+010h]
           shl eax, 002h
           push eax
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], ecx
           mov dword ptr [ebp-008h], 000000000h
           jmp l1002C3E6
;
;* Jump:
; 1002C406(U) 
;
l1002C3DD: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1002C3DB(U) 
;
l1002C3E6: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002C408
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov esi, dword ptr [ebp-008h]
           mov eax, dword ptr [eax+esi*04h]
           mov dword ptr [edx+ecx*04h], eax
           jmp l1002C3DD
;
;* Jump:
; 1002C3EF(C) 
;
l1002C408: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+004h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           push eax
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], edx
           jmp l1002C446
;
;* Jump:
; 1002C3B7(C) 
;
l1002C428: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-014h], eax
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1002C426(U) 
;
l1002C446: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+008h], edx
;
;* Jump:
; 1002C399(U) 
;
l1002C467: mov ecx, dword ptr [ebp-018h]
           mov eax, dword ptr [ecx+008h]
           sub eax, 000000001h
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002C360 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000102D(U), 1000130C(U) 
;
l1002C4C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax], offset g10037624
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           je l1002C581
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+010h], 000000000h
           jne l1002C4F6
           jmp near ptr l1002C581
;
;* Jump:
; 1002C4EF(C) 
;
l1002C4F6: cmp dword ptr [ebp-014h], 000000000h
           je l1002C54E
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002C50E
;
;* Jump:
; 1002C54C(U) 
;
l1002C505: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002C503(U) 
;
l1002C50E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+008h]
           jnb l1002C54E
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+004h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+ecx*04h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           cmp dword ptr [ebp-008h], 000000000h
           je l1002C545
;
;* Control "OK", Dialog 006E
;
           push 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-008h]
           call [edx]
           mov dword ptr [ebp-01Ch], eax
           jmp l1002C54C
;
;* Jump:
; 1002C532(C) 
;
l1002C545: mov dword ptr [ebp-01Ch], 000000000h
;
;* Jump:
; 1002C543(U) 
;
l1002C54C: jmp l1002C505
;
;* Jump:
; 1002C4FA(C), 1002C517(C) 
;
l1002C54E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp-010h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002C4D9(C), 1002C4F1(U) 
;
l1002C581: mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l1002C597
           mov ecx, dword ptr [ebp-018h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 1002C589(C) 
;
l1002C597: mov eax, dword ptr [ebp-018h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002C4C0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
l1002C5E0 PROC
           push ebp
           mov ebp, esp
           call l1002C5EF
           call l1002C61C
           pop ebp
           ret
l1002C5E0 ENDP
;
;* Call:
; 1002C5E3 
;
l1002C5EF PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g100518CC], 000000000h
           mov dword ptr [g100518D0], 000000000h
           mov dword ptr [g100518D4], 000000000h
           mov dword ptr [g100518C8], offset g10037124
           pop ebp
           ret
l1002C5EF ENDP
;
;* Call:
; 1002C5E8 
;
l1002C61C PROC
           push ebp
           mov ebp, esp
           push offset l1002C62E
           call l10035EB2
           add esp, 000000004h
           pop ebp
           ret
l1002C61C ENDP
;
l1002C62E PROC
           push ebp
           mov ebp, esp
           mov dword ptr [g100518C8], offset g10037124
           cmp dword ptr [g100518CC], 000000000h
           je l1002C652
           mov eax, dword ptr [g100518CC]
           mov ecx, dword ptr [g100518D0]
           mov dword ptr [eax+008h], ecx
;
;* Jump:
; 1002C642(C) 
;
l1002C652: cmp dword ptr [g100518D0], 000000000h
           je l1002C669
           mov edx, dword ptr [g100518D0]
           mov eax, dword ptr [g100518CC]
           mov dword ptr [edx+004h], eax
;
;* Jump:
; 1002C659(C) 
;
l1002C669: mov dword ptr [g100518CC], 000000000h
           mov dword ptr [g100518D0], 000000000h
           pop ebp
           ret
l1002C62E ENDP
;
;* Jump:
; 10001154(U) 
;
l1002C67F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002C69A
;
;* Jump:
; 1002C6BA(U) 
;
l1002C691: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002C68F(U) 
;
l1002C69A: cmp dword ptr [ebp-004h], 0000000C8h
           jnb l1002C6BC
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+ecx+00007A21Ch], 000000000h
           jmp l1002C691
;
;* Jump:
; 1002C6A1(C) 
;
l1002C6BC: mov esp, ebp
           pop ebp
           ret
l1002C67F ENDP
;
;* Jump:
; 10001474(U) 
;
l1002C6C0 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002C6DC
;
;* Jump:
; 1002C7D6(U) 
;
l1002C6D3: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002C6D1(U) 
;
l1002C6DC: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+008h]
           jnb l1002C7DB
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           fld dword ptr [ebp+00Ch]
           fsub dword ptr [ecx+eax*04h+04Ch]
           fabs
           fcomp qword ptr [g10037080]
           fnstsw ax
           test ah, 001h
           je l1002C7D6
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [eax+edx*04h+00Ch]
           fsub dword ptr [ebp+008h]
           fabs
           fcomp qword ptr [g100370C0]
           fnstsw ax
           test ah, 001h
           je l1002C7D6
           fild dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           fadd dword ptr [edx+ecx*04h+00000008Ch]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+eax*04h+00000008Ch]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           fld dword ptr [eax+edx*04h+00000008Ch]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 040h
           je l1002C7D4
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-008h], ecx
           jmp l1002C773
;
;* Jump:
; 1002C7C3(U) 
;
l1002C76A: mov edx, dword ptr [ebp-008h]
           add edx, 000000001h
           mov dword ptr [ebp-008h], edx
;
;* Jump:
; 1002C768(U) 
;
l1002C773: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           sub ecx, 000000001h
           cmp dword ptr [ebp-008h], ecx
           jnb l1002C7C5
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [esi+ecx*04h+010h]
           mov dword ptr [eax+edx*04h+00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [esi+ecx*04h+050h]
           mov dword ptr [eax+edx*04h+04Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           mov esi, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [esi+ecx*04h+000000090h]
           mov dword ptr [eax+edx*04h+00000008Ch], ecx
           jmp l1002C76A
;
;* Jump:
; 1002C77F(C) 
;
l1002C7C5: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           sub eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 1002C760(C) 
;
l1002C7D4: jmp l1002C828
;
;* Jump:
; 1002C705(C), 1002C725(C) 
;
l1002C7D6: jmp near ptr l1002C6D3
;
;* Jump:
; 1002C6E5(C) 
;
l1002C7DB: mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+008h], 000000010h
           jb l1002C7E6
           jmp l1002C828
;
;* Jump:
; 1002C7E2(C) 
;
l1002C7E6: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+00Ch], eax
           fild dword ptr [ebp+010h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+edx*04h+00000008Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+edx*04h+04Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 1002C7D4(U), 1002C7E4(U) 
;
l1002C828: pop esi
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1002C6C0 ENDP
;
;* Jump:
; 10001271(U) 
;
l1002C82F PROC
           push ebp
           mov ebp, esp
           sub esp, 000000050h
           mov dword ptr [ebp-040h], ecx
           mov eax, dword ptr [ebp+008h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-040h]
           fld dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp+008h]
           fmul qword ptr [edx]
           fmul dword ptr [ebp-010h]
           fstp dword ptr [ebp-034h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-040h]
           fld dword ptr [ecx+070h]
           fmul qword ptr [eax+008h]
           fmul dword ptr [ebp-010h]
           fstp dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-040h]
           fld dword ptr [ebp-034h]
           fmul dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp-040h]
           fld dword ptr [ebp-008h]
           fmul dword ptr [eax+00007A180h]
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+00Ch]
           fld qword ptr [g10037080]
           fdiv qword ptr [edx+010h]
           fstp dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-040h]
           fld dword ptr [eax+06Ch]
           mov ecx, dword ptr [ebp+00Ch]
           fmul qword ptr [ecx]
           fmul dword ptr [ebp-010h]
           fstp dword ptr [ebp-034h]
           mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [ebp-040h]
           fld dword ptr [eax+070h]
           fmul qword ptr [edx+008h]
           fmul dword ptr [ebp-010h]
           fstp dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-040h]
           fld dword ptr [ebp-034h]
           fmul dword ptr [ecx+00007A17Ch]
           mov edx, dword ptr [ebp-040h]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx+00007A180h]
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [ebp-02Ch], eax
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-024h], 000000001h
           fld dword ptr [ebp-004h]
           fcomp dword ptr [ebp-00Ch]
           fnstsw ax
           test ah, 041h
           jne l1002C921
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-028h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [ebp-02Ch], eax
           mov dword ptr [ebp-024h], 0FFFFFFFFh
;
;* Jump:
; 1002C8F4(C) 
;
l1002C921: fld dword ptr [ebp-00Ch]
           fsub dword ptr [ebp-004h]
           fcomp qword ptr [g100376F8]
           fnstsw ax
           test ah, 001h
           je l1002C939
           jmp near ptr l1002C9FF
;
;* Jump:
; 1002C932(C) 
;
l1002C939: fld dword ptr [ebp-02Ch]
           fsub dword ptr [ebp-028h]
           fld dword ptr [ebp-00Ch]
           fsub dword ptr [ebp-004h]
           fdivp st(01h), st(00h)
           fstp dword ptr [ebp-030h]
           fld dword ptr [ebp-028h]
           fstp qword ptr [ebp-048h]
           fld dword ptr [ebp-030h]
           fstp qword ptr [ebp-050h]
           fld dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           fsub dword ptr [ebp-004h]
           fmul qword ptr [ebp-050h]
           fadd qword ptr [ebp-048h]
           fstp dword ptr [ebp-014h]
           fld dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           fadd qword ptr [g10037238]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-01Ch], eax
           fld dword ptr [ebp-00Ch]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           fadd qword ptr [g10037238]
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-018h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-020h], ecx
           jmp l1002C9C5
;
;* Jump:
; 1002C9FD(U) 
;
l1002C9BC: mov edx, dword ptr [ebp-020h]
           add edx, 000000001h
           mov dword ptr [ebp-020h], edx
;
;* Jump:
; 1002C9BA(U) 
;
l1002C9C5: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           cmp dword ptr [ebp-020h], eax
           jnl l1002C9FF
           mov ecx, dword ptr [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp-014h]
           push edx
           mov eax, dword ptr [ebp-030h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-040h]
           lea ecx, [edx+ecx+00007A214h]
           call l10001474
           fld dword ptr [ebp-014h]
           fadd dword ptr [ebp-030h]
           fstp dword ptr [ebp-014h]
           jmp l1002C9BC
;
;* Jump:
; 1002C934(U), 1002C9CE(C) 
;
l1002C9FF: mov esp, ebp
           pop ebp
           ret 00008h
l1002C82F ENDP
;
;* Jump:
; 1000115E(U) 
;
l1002CA05 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002CA20
;
;* Jump:
; 1002CA55(U) 
;
l1002CA17: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002CA15(U) 
;
l1002CA20: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           cmp dword ptr [ebp-004h], edx
           jnb l1002CA57
           mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+008h]
           lea edx, [ecx+eax+008h]
           push edx
           mov ecx, dword ptr [ebp-008h]
           call l10001271
           jmp l1002CA17
;
;* Jump:
; 1002CA2C(C) 
;
l1002CA57: mov eax, dword ptr [ebp+008h]
           add eax, 000000008h
           push eax
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea eax, [edx+ecx+008h]
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l10001271
           mov esp, ebp
           pop ebp
           ret 00004h
l1002CA05 ENDP
;
;* Jump:
; 1000141F(U) 
;
l1002CA7A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp-034h]
           add eax, 000002170h
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002CAA0
;
;* Jump:
; 1002CCF0(U) 
;
l1002CA97: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002CA95(U) 
;
l1002CAA0: mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l1002CCF5
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ecx+034h]
           fmul dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-034h]
           fld dword ptr [eax+038h]
           fmul dword ptr [ecx+00007A180h]
           faddp st(01h), st(00h)
           fst dword ptr [ebp-018h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-00Ch], eax
           fild dword ptr [ebp-00Ch]
           fsubr dword ptr [ebp-018h]
           fstp dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000064h
           imul edx, edx, 0000000CCh
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-034h]
           fmul dword ptr [eax+edx+00007A218h]
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000065h
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ebp-018h]
           fmul dword ptr [edx+ecx+00007A218h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000064h
           imul eax, eax, 0000000CCh
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-034h]
           fmul dword ptr [ecx+eax+00007A214h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000065h
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-034h]
           fld dword ptr [ebp-018h]
           fmul dword ptr [eax+edx+00007A214h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-014h]
           fcomp qword ptr [g10037258]
           fnstsw ax
           test ah, 001h
           je l1002CB8A
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-038h], edx
           jmp l1002CB98
;
;* Jump:
; 1002CB7A(C) 
;
l1002CB8A: mov dword ptr [ebp-03Ch], 0D2F1A9FCh
           mov dword ptr [ebp-038h], 03F40624Dh
;
;* Jump:
; 1002CB88(U) 
;
l1002CB98: fld qword ptr [ebp-03Ch]
           fcomp qword ptr [g10037248]
           fnstsw ax
           test ah, 041h
           jne l1002CBE2
           fld qword ptr [ebp-014h]
           fcomp qword ptr [g10037258]
           fnstsw ax
           test ah, 001h
           je l1002CBC6
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ebp-040h], ecx
           jmp l1002CBD4
;
;* Jump:
; 1002CBB6(C) 
;
l1002CBC6: mov dword ptr [ebp-044h], 0D2F1A9FCh
           mov dword ptr [ebp-040h], 03F40624Dh
;
;* Jump:
; 1002CBC4(U) 
;
l1002CBD4: mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-04Ch], edx
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-048h], eax
           jmp l1002CBF0
;
;* Jump:
; 1002CBA6(C) 
;
l1002CBE2: mov dword ptr [ebp-04Ch], 0D2F1A9FCh
           mov dword ptr [ebp-048h], 0BF40624Dh
;
;* Jump:
; 1002CBE0(U) 
;
l1002CBF0: mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000064h
           imul eax, eax, 0000000CCh
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+eax+00007A21Ch]
           mov dword ptr [ebp-030h], edx
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-02Ch], 000000001h
           mov dword ptr [ebp-028h], 000000000h
           jmp l1002CC2E
;
;* Jump:
; 1002CCBC(U) 
;
l1002CC25: mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
;
;* Jump:
; 1002CC23(U) 
;
l1002CC2E: mov ecx, dword ptr [ebp-028h]
           cmp ecx, dword ptr [ebp-030h]
           jnb l1002CCC1
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000064h
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-034h]
           lea ecx, [eax+edx+00007A214h]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000064h
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-034h]
           lea edx, [eax+edx+00007A214h]
           mov eax, dword ptr [ebp-028h]
           fld dword ptr [ebp-018h]
           fmul dword ptr [edx+eax*04h+00Ch]
           mov edx, dword ptr [ebp-028h]
           fadd dword ptr [ecx+edx*04h+04Ch]
           fstp dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [ebp-024h]
           fsub dword ptr [eax+034h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ebp-024h]
           fsub dword ptr [ecx+034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [edx+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-020h]
           fmul qword ptr [ebp-014h]
           fsubp st(01h), st(00h)
           fmulp st(01h), st(00h)
           fcomp qword ptr [g10037080]
           fnstsw ax
           test ah, 001h
           je l1002CCBC
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [ebp-028h], eax
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1002CCAD(C) 
;
l1002CCBC: jmp near ptr l1002CC25
;
;* Jump:
; 1002CC34(C) 
;
l1002CCC1: cmp dword ptr [ebp-02Ch], 000000000h
           je l1002CCE7
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx+034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [edx+06Ch]
           fmul qword ptr [g10037238]
           fmul qword ptr [ebp-020h]
           fmul qword ptr [ebp-014h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+034h]
;
;* Jump:
; 1002CCC5(C) 
;
l1002CCE7: mov ecx, dword ptr [ebp-008h]
           add ecx, 00000004Ch
           mov dword ptr [ebp-008h], ecx
           jmp near ptr l1002CA97
;
;* Jump:
; 1002CAAC(C) 
;
l1002CCF5: mov esp, ebp
           pop ebp
           ret
l1002CA7A ENDP
;
;* Jump:
; 100015AA(U) 
;
l1002CCF9 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00000216Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00000216Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00000216Ch], eax
           mov edx, dword ptr [ebp-008h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp+010h]
           fmul dword ptr [edx+034h]
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fmul dword ptr [eax+034h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+034h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp+010h]
           fmul dword ptr [edx+038h]
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fmul dword ptr [eax+038h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+038h]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp+010h]
           fmul dword ptr [edx+03Ch]
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fmul dword ptr [eax+03Ch]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+03Ch]
           mov edx, dword ptr [ebp+008h]
           fld dword ptr [ebp+010h]
           fmul dword ptr [edx+044h]
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp+010h]
           mov eax, dword ptr [ebp+00Ch]
           fmul dword ptr [eax+044h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+044h]
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+078h], 000000000h
           je l1002CE00
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+03Ch]
           fdivr qword ptr [g10037080]
           mov ecx, dword ptr [ebp-004h]
           fstp qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+034h]
           mov eax, dword ptr [ebp-004h]
           fmul qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-00Ch]
           fdiv dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp-004h]
           fstp qword ptr [edx]
           mov eax, dword ptr [ebp-004h]
           fld dword ptr [eax+038h]
           mov ecx, dword ptr [ebp-004h]
           fmul qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-00Ch]
           fdiv dword ptr [edx+070h]
           mov eax, dword ptr [ebp-004h]
           fstp qword ptr [eax+008h]
;
;* Jump:
; 1002CDBD(C) 
;
l1002CE00: mov eax, dword ptr [ebp-008h]
           mov esp, ebp
           pop ebp
           ret 0000Ch
l1002CCF9 ENDP
;
;* Jump:
; 10001884(U) 
;
l1002CE09 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           mov eax, dword ptr [ebp+008h]
           cmp eax, dword ptr [ebp+00Ch]
           jne l1002CF7C
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+00004E174h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+00Ch], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+00004E174h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+00004E174h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+00007A184h], ecx
           jmp near ptr l1002D38C
;
;* Jump:
; 1002CE18(C) 
;
l1002CF7C: mov edx, dword ptr [ebp+010h]
           cmp edx, dword ptr [ebp+014h]
           jne l1002D10B
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-00Ch]
           cmp dword ptr [ecx+00007A184h], 000000000h
           jne l1002D023
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+00004E174h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00007A184h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00007A184h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00007A184h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00007A184h]
           mov dword ptr [edx+008h], 000000000h
;
;* Jump:
; 1002CFC0(C) 
;
l1002D023: mov eax, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax], 000000001h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00007A184h]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+00004E174h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+00004E174h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00007A184h], 000000000h
           jmp near ptr l1002D38C
;
;* Jump:
; 1002CF82(C) 
;
l1002D10B: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+00007A184h], 000000000h
           jne l1002D1D4
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+00004E174h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00007A184h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00007A184h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00007A184h]
           mov ecx, dword ptr [ebp+00Ch]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00007A184h]
           mov dword ptr [eax+008h], 000000000h
;
;* Jump:
; 1002D171(C) 
;
l1002D1D4: mov ecx, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx], 000000001h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00007A184h]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-00Ch]
           lea eax, [edx+ecx+00004E174h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp+010h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+00004E174h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+014h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax], 000000001h
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-00Ch]
           lea edx, [ecx+eax+00004E174h]
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+010h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+010h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+00004E174h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+014h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+00007A184h], ecx
;
;* Jump:
; 1002CF77(U), 1002D106(U) 
;
l1002D38C: mov esp, ebp
           pop ebp
           ret 00010h
l1002CE09 ENDP
;
;* Jump:
; 100015FA(U) 
;
l1002D392 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000034h
           mov dword ptr [ebp-034h], ecx
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ecx+eax+0000021A4h]
           fmul dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp+008h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ecx+eax+0000021A8h]
           fmul dword ptr [edx+00007A180h]
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-010h]
           mov eax, dword ptr [ebp+010h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ecx+eax+0000021A4h]
           fmul dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp+010h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ebp-034h]
           fld dword ptr [ecx+eax+0000021A8h]
           fmul dword ptr [edx+00007A180h]
           faddp st(01h), st(00h)
           fstp dword ptr [ebp-004h]
           fld dword ptr [ebp-010h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-00Ch], eax
           fld dword ptr [ebp-004h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-018h], eax
           mov eax, dword ptr [ebp-018h]
           sub eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           fld dword ptr [ebp-004h]
           fsub dword ptr [ebp-010h]
           fstp dword ptr [ebp-014h]
           cmp dword ptr [ebp-008h], 000000000h
           jne l1002D485
           fld dword ptr [ebp-004h]
           fsub dword ptr [ebp-010h]
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l1002D480
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-034h]
           call l10001884
;
;* Jump:
; 1002D466(C) 
;
l1002D480: jmp near ptr l1002D57B
;
;* Jump:
; 1002D453(C) 
;
l1002D485: mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           jmp l1002D4A5
;
;* Jump:
; 1002D549(U) 
;
l1002D49C: mov edx, dword ptr [ebp-02Ch]
           add edx, 000000001h
           mov dword ptr [ebp-02Ch], edx
;
;* Jump:
; 1002D49A(U) 
;
l1002D4A5: mov eax, dword ptr [ebp-02Ch]
           cmp eax, dword ptr [ebp-018h]
           jg l1002D54E
           fild dword ptr [ebp-02Ch]
           fsub dword ptr [ebp-010h]
           fdiv dword ptr [ebp-014h]
           fsubr dword ptr [g1003706C]
           fstp dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-024h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-034h]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-034h]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov ecx, dword ptr [ebp-034h]
           call l100015AA
           mov dword ptr [ebp-030h], eax
           mov edx, dword ptr [ebp-024h]
           push edx
           mov eax, dword ptr [ebp+014h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           lea edx, [ecx+eax+000002170h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-034h]
           lea edx, [ecx+eax+000002170h]
           push edx
           mov ecx, dword ptr [ebp-034h]
           call l100015AA
           mov dword ptr [ebp-020h], eax
           mov eax, dword ptr [ebp-020h]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-034h]
           call l10001884
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ebp-028h], edx
           jmp near ptr l1002D49C
;
;* Jump:
; 1002D4AB(C) 
;
l1002D54E: fild dword ptr [ebp-018h]
           fsubr dword ptr [ebp-004h]
           fabs
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 041h
           jne l1002D57B
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           push edx
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-034h]
           call l10001884
;
;* Jump:
; 1002D480(U), 1002D561(C) 
;
l1002D57B: mov esp, ebp
           pop ebp
           ret 00010h
l1002D392 ENDP
;
;* Jump:
; 10001596(U) 
;
l1002D581 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000006Ch
           push esi
           push edi
           mov dword ptr [ebp-06Ch], ecx
           mov eax, dword ptr [ebp-06Ch]
           cmp dword ptr [eax+078h], 000000000h
           je l1002D950
           mov ecx, dword ptr [ebp-06Ch]
           mov dword ptr [ecx+00007A184h], 000000000h
           mov edx, dword ptr [ebp-06Ch]
           mov dword ptr [edx+00007A17Ch], 000000000h
           mov eax, dword ptr [ebp-06Ch]
           mov dword ptr [eax+00007A180h], 03DCCCCCDh
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-034h], 07F7FFFFFh
           mov dword ptr [ebp-02Ch], 000000000h
           mov dword ptr [ebp-024h], 000000000h
           jmp l1002D5E7
;
;* Jump:
; 1002D6C1(U) 
;
l1002D5DE: mov ecx, dword ptr [ebp-024h]
           add ecx, 000000001h
           mov dword ptr [ebp-024h], ecx
;
;* Jump:
; 1002D5DC(U) 
;
l1002D5E7: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [edx+004h]
           jnb l1002D6C6
           mov ecx, dword ptr [ebp-06Ch]
           mov edx, dword ptr [ecx+00000216Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-02Ch], ecx
           mov edx, dword ptr [ebp-06Ch]
           mov eax, dword ptr [edx+00000216Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-06Ch]
           mov dword ptr [ecx+00000216Ch], eax
           mov edx, dword ptr [ebp-024h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+008h]
           lea esi, [eax+edx+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-02Ch]
           rep movsd
           mov ecx, dword ptr [ebp-02Ch]
           fld qword ptr [g10037080]
           fdiv qword ptr [ecx+010h]
           fstp qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-06Ch]
           fld dword ptr [edx+06Ch]
           mov eax, dword ptr [ebp-02Ch]
           fmul qword ptr [eax]
           fmul qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-02Ch]
           fstp dword ptr [ecx+034h]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-06Ch]
           fld dword ptr [eax+070h]
           fmul qword ptr [edx+008h]
           fmul qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-02Ch]
           fstp dword ptr [ecx+038h]
           fld qword ptr [ebp-018h]
           mov edx, dword ptr [ebp-02Ch]
           fstp dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-06Ch]
           fld dword ptr [eax+034h]
           fmul dword ptr [ecx+00007A17Ch]
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-06Ch]
           fld dword ptr [edx+038h]
           fmul dword ptr [eax+00007A180h]
           faddp st(01h), st(00h)
           mov ecx, dword ptr [ebp-02Ch]
           fstp dword ptr [ecx+044h]
           mov edx, dword ptr [ebp-02Ch]
           fld dword ptr [edx+044h]
           fcomp dword ptr [ebp-034h]
           fnstsw ax
           test ah, 001h
           je l1002D6C1
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+044h]
           mov dword ptr [ebp-034h], edx
;
;* Jump:
; 1002D6B0(C) 
;
l1002D6C1: jmp near ptr l1002D5DE
;
;* Jump:
; 1002D5F0(C) 
;
l1002D6C6: mov eax, dword ptr [ebp-008h]
           add eax, 000000001h
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-008h]
           sub ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+004h]
           jb l1002D6EA
           mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1002D6E1(C) 
;
l1002D6EA: cmp dword ptr [ebp-028h], 000000000h
           jnl l1002D6FC
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov dword ptr [ebp-028h], edx
;
;* Jump:
; 1002D6EE(C) 
;
l1002D6FC: mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ebp-020h], ecx
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-038h], 000000001h
;
;* Jump:
; 1002D946(U) 
;
l1002D70F: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-038h]
           cmp eax, dword ptr [edx+004h]
           jnb l1002D94B
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           fld dword ptr [edx+ecx+0000021B4h]
           fadd qword ptr [g10037040]
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-06Ch]
           fld dword ptr [ecx+eax+0000021B4h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l1002D7FC
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-030h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [edx+eax+0000021B4h]
           fsub dword ptr [esi+ecx+0000021B4h]
           mov eax, dword ptr [ebp-028h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [edx+eax+0000021B4h]
           fsub dword ptr [esi+ecx+0000021B4h]
           fdivp st(01h), st(00h)
           fsubr dword ptr [g1003706C]
           fstp dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           push eax
           mov ecx, dword ptr [ebp-028h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           lea eax, [edx+ecx+000002170h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           lea eax, [edx+ecx+000002170h]
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           call l100015AA
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+004h]
           jb l1002D7EE
           mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1002D7E5(C) 
;
l1002D7EE: mov ecx, dword ptr [ebp-038h]
           add ecx, 000000001h
           mov dword ptr [ebp-038h], ecx
           jmp near ptr l1002D922
;
;* Jump:
; 1002D74B(C) 
;
l1002D7FC: mov edx, dword ptr [ebp-028h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           fld dword ptr [eax+edx+0000021B4h]
           fadd qword ptr [g10037040]
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           fld dword ptr [edx+ecx+0000021B4h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l1002D8D7
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [eax+ecx+0000021B4h]
           fsub dword ptr [esi+edx+0000021B4h]
           mov ecx, dword ptr [ebp-010h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-020h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [eax+ecx+0000021B4h]
           fsub dword ptr [esi+edx+0000021B4h]
           fdivp st(01h), st(00h)
           fsubr dword ptr [g1003706C]
           fstp dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp-010h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov ecx, dword ptr [ebp-06Ch]
           call l100015AA
           mov dword ptr [ebp-030h], eax
           mov edx, dword ptr [ebp-028h]
           sub edx, 000000001h
           mov dword ptr [ebp-028h], edx
           cmp dword ptr [ebp-028h], 000000000h
           jnl l1002D8CC
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1002D8BE(C) 
;
l1002D8CC: mov edx, dword ptr [ebp-038h]
           add edx, 000000001h
           mov dword ptr [ebp-038h], edx
           jmp l1002D922
;
;* Jump:
; 1002D829(C) 
;
l1002D8D7: mov eax, dword ptr [ebp-010h]
           mov dword ptr [ebp-030h], eax
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-028h]
           sub eax, 000000001h
           mov dword ptr [ebp-028h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           cmp edx, dword ptr [ecx+004h]
           jb l1002D907
           mov dword ptr [ebp-010h], 000000000h
;
;* Jump:
; 1002D8FE(C) 
;
l1002D907: cmp dword ptr [ebp-028h], 000000000h
           jnl l1002D919
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1002D90B(C) 
;
l1002D919: mov edx, dword ptr [ebp-038h]
           add edx, 000000002h
           mov dword ptr [ebp-038h], edx
;
;* Jump:
; 1002D7F7(U), 1002D8D5(U) 
;
l1002D922: mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-030h]
           push ecx
           mov edx, dword ptr [ebp-020h]
           push edx
           mov eax, dword ptr [ebp-004h]
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           call l100015FA
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-020h], edx
           jmp near ptr l1002D70F
;
;* Jump:
; 1002D718(C) 
;
l1002D94B: jmp near ptr l1002DC75
;
;* Jump:
; 1002D593(C) 
;
l1002D950: mov eax, dword ptr [ebp-06Ch]
           mov dword ptr [eax+00007A184h], 000000000h
           mov ecx, dword ptr [ebp-06Ch]
           mov dword ptr [ecx+00007A17Ch], 000000000h
           mov edx, dword ptr [ebp-06Ch]
           mov dword ptr [edx+00007A180h], 03DCCCCCDh
           mov dword ptr [ebp-040h], 000000000h
           mov dword ptr [ebp-064h], 07F7FFFFFh
           mov dword ptr [ebp-05Ch], 000000000h
           mov dword ptr [ebp-054h], 000000000h
           jmp l1002D99E
;
;* Jump:
; 1002D9EE(U) 
;
l1002D995: mov eax, dword ptr [ebp-054h]
           add eax, 000000001h
           mov dword ptr [ebp-054h], eax
;
;* Jump:
; 1002D993(U) 
;
l1002D99E: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-054h]
           cmp edx, dword ptr [ecx+004h]
           jnb l1002D9F0
           mov eax, dword ptr [ebp-06Ch]
           mov ecx, dword ptr [eax+00000216Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-05Ch], eax
           mov ecx, dword ptr [ebp-06Ch]
           mov edx, dword ptr [ecx+00000216Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-06Ch]
           mov dword ptr [eax+00000216Ch], edx
           mov ecx, dword ptr [ebp-054h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea esi, [edx+ecx+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-05Ch]
           rep movsd
           jmp l1002D995
;
;* Jump:
; 1002D9A7(C) 
;
l1002D9F0: mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-040h]
           sub ecx, 000000001h
           mov dword ptr [ebp-058h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-048h]
           cmp eax, dword ptr [edx+004h]
           jb l1002DA14
           mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 1002DA0B(C) 
;
l1002DA14: cmp dword ptr [ebp-058h], 000000000h
           jnl l1002DA26
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           sub edx, 000000001h
           mov dword ptr [ebp-058h], edx
;
;* Jump:
; 1002DA18(C) 
;
l1002DA26: mov eax, dword ptr [ebp-040h]
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-050h], ecx
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-068h], 000000001h
;
;* Jump:
; 1002DC70(U) 
;
l1002DA39: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-068h]
           cmp eax, dword ptr [edx+004h]
           jnb l1002DC75
           mov ecx, dword ptr [ebp-048h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           fld dword ptr [edx+ecx+0000021B4h]
           fadd qword ptr [g10037040]
           mov eax, dword ptr [ebp-058h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-06Ch]
           fld dword ptr [ecx+eax+0000021B4h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l1002DB26
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [ebp-060h], edx
           mov eax, dword ptr [ebp-060h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-03Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [edx+eax+0000021B4h]
           fsub dword ptr [esi+ecx+0000021B4h]
           mov eax, dword ptr [ebp-058h]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-03Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [edx+eax+0000021B4h]
           fsub dword ptr [esi+ecx+0000021B4h]
           fdivp st(01h), st(00h)
           fsubr dword ptr [g1003706C]
           fstp dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-04Ch]
           push eax
           mov ecx, dword ptr [ebp-058h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           lea eax, [edx+ecx+000002170h]
           push eax
           mov ecx, dword ptr [ebp-050h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           lea eax, [edx+ecx+000002170h]
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           call l100015AA
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-048h]
           add ecx, 000000001h
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-048h]
           cmp eax, dword ptr [edx+004h]
           jb l1002DB18
           mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 1002DB0F(C) 
;
l1002DB18: mov ecx, dword ptr [ebp-068h]
           add ecx, 000000001h
           mov dword ptr [ebp-068h], ecx
           jmp near ptr l1002DC4C
;
;* Jump:
; 1002DA75(C) 
;
l1002DB26: mov edx, dword ptr [ebp-058h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           fld dword ptr [eax+edx+0000021B4h]
           fadd qword ptr [g10037040]
           mov ecx, dword ptr [ebp-048h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-06Ch]
           fld dword ptr [edx+ecx+0000021B4h]
           fcompp
           fnstsw ax
           test ah, 041h
           jne l1002DC01
           mov eax, dword ptr [ebp-058h]
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-044h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-050h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [eax+ecx+0000021B4h]
           fsub dword ptr [esi+edx+0000021B4h]
           mov ecx, dword ptr [ebp-048h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-050h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           mov esi, dword ptr [ebp-06Ch]
           fld dword ptr [eax+ecx+0000021B4h]
           fsub dword ptr [esi+edx+0000021B4h]
           fdivp st(01h), st(00h)
           fsubr dword ptr [g1003706C]
           fstp dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-04Ch]
           push ecx
           mov edx, dword ptr [ebp-048h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov edx, dword ptr [ebp-03Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-06Ch]
           lea ecx, [eax+edx+000002170h]
           push ecx
           mov ecx, dword ptr [ebp-06Ch]
           call l100015AA
           mov dword ptr [ebp-060h], eax
           mov edx, dword ptr [ebp-058h]
           sub edx, 000000001h
           mov dword ptr [ebp-058h], edx
           cmp dword ptr [ebp-058h], 000000000h
           jnl l1002DBF6
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-058h], ecx
;
;* Jump:
; 1002DBE8(C) 
;
l1002DBF6: mov edx, dword ptr [ebp-068h]
           add edx, 000000001h
           mov dword ptr [ebp-068h], edx
           jmp l1002DC4C
;
;* Jump:
; 1002DB53(C) 
;
l1002DC01: mov eax, dword ptr [ebp-048h]
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-058h]
           mov dword ptr [ebp-044h], ecx
           mov edx, dword ptr [ebp-048h]
           add edx, 000000001h
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-058h]
           sub eax, 000000001h
           mov dword ptr [ebp-058h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-048h]
           cmp edx, dword ptr [ecx+004h]
           jb l1002DC31
           mov dword ptr [ebp-048h], 000000000h
;
;* Jump:
; 1002DC28(C) 
;
l1002DC31: cmp dword ptr [ebp-058h], 000000000h
           jnl l1002DC43
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           mov dword ptr [ebp-058h], ecx
;
;* Jump:
; 1002DC35(C) 
;
l1002DC43: mov edx, dword ptr [ebp-068h]
           add edx, 000000002h
           mov dword ptr [ebp-068h], edx
;
;* Jump:
; 1002DB21(U), 1002DBFF(U) 
;
l1002DC4C: mov eax, dword ptr [ebp-044h]
           push eax
           mov ecx, dword ptr [ebp-060h]
           push ecx
           mov edx, dword ptr [ebp-050h]
           push edx
           mov eax, dword ptr [ebp-03Ch]
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           call l100015FA
           mov ecx, dword ptr [ebp-060h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [ebp-050h], edx
           jmp near ptr l1002DA39
;
;* Jump:
; 1002D94B(U), 1002DA42(C) 
;
l1002DC75: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002D581 ENDP
;
;* Jump:
; 10001073(U) 
;
l1002DC7D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           push esi
           push edi
           mov dword ptr [ebp-044h], ecx
           mov eax, dword ptr [ebp-044h]
           cmp dword ptr [eax+078h], 000000000h
           je l1002E056
           mov ecx, dword ptr [ebp-044h]
           cmp dword ptr [ecx+00007A210h], 000000000h
           je l1002DCB2
           mov edx, dword ptr [ebp+008h]
           push edx
           mov ecx, dword ptr [ebp-044h]
           call l10001596
           jmp near ptr l1002E3C9
;
;* Jump:
; 1002DC9F(C) 
;
l1002DCB2: mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           jmp l1002DCCB
;
;* Jump:
; 1002DD60(U) 
;
l1002DCC2: mov eax, dword ptr [ebp-018h]
           add eax, 000000001h
           mov dword ptr [ebp-018h], eax
;
;* Jump:
; 1002DCC0(U) 
;
l1002DCCB: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-018h]
           cmp edx, dword ptr [ecx+004h]
           jnb l1002DD65
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00000216Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-044h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00000216Ch]
           add edx, 000000001h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+00000216Ch], edx
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea esi, [edx+ecx+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-020h]
           rep movsd
           mov eax, dword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           fstp qword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-044h]
           fld dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp-020h]
           fmul qword ptr [edx]
           fmul qword ptr [ebp-014h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+034h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-044h]
           fld dword ptr [edx+070h]
           fmul qword ptr [ecx+008h]
           fmul qword ptr [ebp-014h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+038h]
           fld qword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+03Ch]
           jmp near ptr l1002DCC2
;
;* Jump:
; 1002DCD4(C) 
;
l1002DD65: mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           jmp l1002DD7E
;
;* Jump:
; 1002DDD8(U) 
;
l1002DD75: mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov dword ptr [ebp-018h], edx
;
;* Jump:
; 1002DD73(U) 
;
l1002DD7E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           sub ecx, 000000001h
           cmp dword ptr [ebp-018h], ecx
           jnb l1002DDDA
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+004h], edx
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], 000000000h
           jmp l1002DD75
;
;* Jump:
; 1002DD8A(C) 
;
l1002DDDA: mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           add ecx, 00004E174h
           mov dword ptr [ebp-01Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-00Ch], 000000000h
           mov edx, dword ptr [ebp-044h]
           add edx, 00004E188h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00004E170h]
           sub ecx, 000000001h
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-044h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1002E04C(U) 
;
l1002DE66: cmp dword ptr [ebp-00Ch], 000000000h
           jne l1002E051
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-044h]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000014h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-024h]
           cmp eax, dword ptr [ebp-004h]
           jne l1002DEF9
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+014h], ecx
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-00Ch], 000000001h
           jmp near ptr l1002E04C
;
;* Jump:
; 1002DED2(C) 
;
l1002DEF9: mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-044h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-044h]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-024h]
           sub ecx, 000000014h
           mov dword ptr [ebp-024h], ecx
           mov edx, dword ptr [ebp-008h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+004h], 000000001h
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ebp-004h]
           jne l1002DFE6
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+014h], eax
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-00Ch], 000000001h
           jmp l1002E04C
;
;* Jump:
; 1002DFC2(C) 
;
l1002DFE6: mov ecx, dword ptr [ebp-008h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], 000000000h
;
;* Jump:
; 1002DEF4(U), 1002DFE4(U) 
;
l1002E04C: jmp near ptr l1002DE66
;
;* Jump:
; 1002DE6A(C) 
;
l1002E051: jmp near ptr l1002E3C9
;
;* Jump:
; 1002DC8F(C) 
;
l1002E056: mov edx, dword ptr [ebp-044h]
           cmp dword ptr [edx+00007A210h], 000000000h
           je l1002E073
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-044h]
           call l10001596
           jmp near ptr l1002E3C9
;
;* Jump:
; 1002E060(C) 
;
l1002E073: mov dword ptr [ebp-03Ch], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           jmp l1002E08C
;
;* Jump:
; 1002E0DC(U) 
;
l1002E083: mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 1002E081(U) 
;
l1002E08C: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-034h]
           cmp eax, dword ptr [edx+004h]
           jnb l1002E0DE
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00000216Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-044h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00000216Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00000216Ch], eax
           mov edx, dword ptr [ebp-034h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+008h]
           lea esi, [eax+edx+008h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-03Ch]
           rep movsd
           jmp l1002E083
;
;* Jump:
; 1002E095(C) 
;
l1002E0DE: mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           jmp l1002E0F7
;
;* Jump:
; 1002E151(U) 
;
l1002E0EE: mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 1002E0EC(U) 
;
l1002E0F7: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           sub eax, 000000001h
           cmp dword ptr [ebp-034h], eax
           jnb l1002E153
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-044h]
           lea ecx, [eax+edx+00004E174h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-034h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+004h], ecx
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+008h], 000000000h
           jmp l1002E0EE
;
;* Jump:
; 1002E103(C) 
;
l1002E153: mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-044h]
           lea ecx, [eax+edx+00004E174h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [edx], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-044h]
           add eax, 00004E174h
           mov dword ptr [ebp-038h], eax
           mov dword ptr [ebp-02Ch], 000000000h
           mov dword ptr [ebp-030h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           add ecx, 00004E188h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           sub eax, 000000001h
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-040h], edx
;
;* Jump:
; 1002E3C4(U) 
;
l1002E1DE: cmp dword ptr [ebp-030h], 000000000h
           jne l1002E3C9
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-044h]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-02Ch], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [edx+00Ch], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-028h]
           add ecx, 000000014h
           mov dword ptr [ebp-028h], ecx
           mov edx, dword ptr [ebp-040h]
           cmp edx, dword ptr [ebp-028h]
           jne l1002E271
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [edx+014h], eax
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-030h], 000000001h
           jmp near ptr l1002E3C4
;
;* Jump:
; 1002E24A(C) 
;
l1002E271: mov ecx, dword ptr [ebp-02Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-038h], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [eax+014h], ecx
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp-02Ch]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ecx]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp-038h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-044h]
           mov eax, dword ptr [edx+000062174h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-044h]
           lea edx, [ecx+eax+000062178h]
           mov dword ptr [ebp-02Ch], edx
           mov eax, dword ptr [ebp-044h]
           mov ecx, dword ptr [eax+000062174h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-044h]
           mov dword ptr [edx+000062174h], ecx
           mov eax, dword ptr [ebp-02Ch]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-040h]
           sub eax, 000000014h
           mov dword ptr [ebp-040h], eax
           mov ecx, dword ptr [ebp-02Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+004h], 000000001h
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-040h]
           cmp ecx, dword ptr [ebp-028h]
           jne l1002E35E
           mov edx, dword ptr [ebp-02Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [ecx+014h], edx
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-030h], 000000001h
           jmp l1002E3C4
;
;* Jump:
; 1002E33A(C) 
;
l1002E35E: mov eax, dword ptr [ebp-02Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+008h], 000000001h
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-044h]
           lea ecx, [eax+edx+00004E174h]
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-044h]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-044h]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-02Ch]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-02Ch]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-038h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp-038h]
           mov dword ptr [eax+008h], 000000000h
;
;* Jump:
; 1002E26C(U), 1002E35C(U) 
;
l1002E3C4: jmp near ptr l1002E1DE
;
;* Jump:
; 1002DCAD(U), 1002E051(U), 1002E06E(U), 1002E1E2(C) 
;
l1002E3C9: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002DC7D ENDP
;
;* Jump:
; 1000144C(U) 
;
l1002E3D1 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           mov dword ptr [ebp-04Ch], ecx
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax], offset g100379C0
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-04Ch]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ecx+014h], 000000002h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [eax+01Ch], 000000002h
           mov ecx, dword ptr [ebp-04Ch]
;
;* Control "Cancel", Dialog 006E
;
           mov dword ptr [ecx+020h], 000000002h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+024h], 03F800000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+028h], 03F800000h
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+02Ch], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+050h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+03Ch], 000000003h
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+038h], 000000003h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+034h], 000000003h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+030h], 000000003h
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+07Ch], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000000084h
           mov dword ptr [ebp-008h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx], offset g100370FC
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+0000000B0h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+0000001B4h], 000000000h
           mov dword ptr [ebp-018h], 000000040h
           mov dword ptr [ebp-014h], 000000020h
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 0000001B8h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 1002E55A(U) 
;
l1002E507: mov edx, dword ptr [ebp-018h]
           sub edx, 000000001h
           mov dword ptr [ebp-018h], edx
           cmp dword ptr [ebp-018h], 000000000h
           jl l1002E55C
           mov eax, dword ptr [ebp-010h]
           add eax, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           add ecx, dword ptr [ebp-014h]
           mov dword ptr [ebp-010h], ecx
           jmp l1002E507
;
;* Jump:
; 1002E514(C) 
;
l1002E55C: mov edx, dword ptr [ebp-04Ch]
           add edx, 0000009C8h
           mov dword ptr [ebp-020h], edx
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000004h
           call l100015DC
           mov ecx, dword ptr [ebp-020h]
           add ecx, 00000001Ch
           call l100015DC
           mov eax, dword ptr [ebp-020h]
           add eax, 00000003Ch
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000004h
           call l100015DC
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx], offset g100370FC
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000060h
           call l10001870
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000368h
           call l10001343
           mov ecx, dword ptr [ebp-020h]
           add ecx, 0000006D0h
           call l10001343
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000A38h
           call l10001343
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000000DA0h
           call l10001343
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000001108h
           call l10001343
           mov ecx, dword ptr [ebp-020h]
           add ecx, 000001470h
           call l10001870
           mov edx, dword ptr [ebp-04Ch]
           add edx, 000002150h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov dword ptr [ebp-030h], 000001000h
           mov dword ptr [ebp-02Ch], 00000004Ch
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000002170h
           mov dword ptr [ebp-028h], ecx
;
;* Jump:
; 1002E6A9(U) 
;
l1002E65F: mov edx, dword ptr [ebp-030h]
           sub edx, 000000001h
           mov dword ptr [ebp-030h], edx
           cmp dword ptr [ebp-030h], 000000000h
           jl l1002E6AB
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-028h]
           add eax, dword ptr [ebp-02Ch]
           mov dword ptr [ebp-028h], eax
           jmp l1002E65F
;
;* Jump:
; 1002E66C(C) 
;
l1002E6AB: mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           add eax, 00007A188h
           mov dword ptr [ebp-038h], eax
           mov ecx, dword ptr [ebp-038h]
           add ecx, 000000004h
           mov dword ptr [ebp-034h], ecx
           mov edx, dword ptr [ebp-034h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-034h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-034h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-038h]
           mov dword ptr [edx], offset g100370FC
           mov eax, dword ptr [ebp-04Ch]
           add eax, 00007A1ACh
           mov dword ptr [ebp-044h], eax
           mov ecx, dword ptr [ebp-044h]
           add ecx, 00000001Ch
           mov dword ptr [ebp-03Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-03Ch]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-044h]
           add edx, 000000034h
           mov dword ptr [ebp-040h], edx
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov ecx, dword ptr [ebp-044h]
           add ecx, 00000005Ch
           call [__imp_??0B_Color@@QAE@XZ]; [BBLibc.??0B_Color@@QAE@XZ].
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+00007A210h], 000000000h
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 000084174h
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ecx+00Ch], 000000010h
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-048h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+014h], 000000001h
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ecx], offset g10037110
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [edx+018h], 000000000h
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax], offset g1003710C
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx], offset g10037704
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+000084190h], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov dword ptr [eax+000084194h], 042C80000h
           call l100014E7
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+0000000ACh], 000000000h
           mov edx, dword ptr [ebp-04Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+000000080h], 000000001h
           mov eax, dword ptr [ebp-04Ch]
           mov esp, ebp
           pop ebp
           ret
l1002E3D1 ENDP
;
;* Jump:
; 10001618(U) 
;
l1002E851 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000001Ch
           mov dword ptr [ebp-01Ch], ecx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax], offset g10037704
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000084174h
           mov dword ptr [ebp-014h], ecx
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx], offset g10037110
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           je l1002E90C
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-014h]
           cmp dword ptr [eax+010h], 000000000h
           jne l1002E899
           jmp l1002E90C
;
;* Jump:
; 1002E895(C) 
;
l1002E899: cmp dword ptr [ebp-010h], 000000000h
           je l1002E8D9
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002E8B1
;
;* Jump:
; 1002E8D7(U) 
;
l1002E8A8: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002E8A6(U) 
;
l1002E8B1: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+008h]
           jnb l1002E8D9
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+004h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+eax*04h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           jmp l1002E8A8
;
;* Jump:
; 1002E89D(C), 1002E8BA(C) 
;
l1002E8D9: mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+010h], 000000000h
;
;* Jump:
; 1002E87F(C), 1002E897(U) 
;
l1002E90C: mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+00007A188h], offset g100370FC
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 0000009C8h
           mov dword ptr [ebp-018h], ecx
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+000001144h], offset g100370FC
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+000000DDCh], offset g100370FC
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+000000A74h], offset g100370FC
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+00000070Ch], offset g100370FC
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+0000003A4h], offset g100370FC
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+03Ch], offset g100370FC
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+000000084h], offset g100370FC
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax], offset g100379C0
           mov esp, ebp
           pop ebp
           ret
l1002E851 ENDP
;
;* Jump:
; 10001442(U) 
;
l1002E98A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           push esi
           mov dword ptr [ebp-00Ch], ecx
           xor eax, eax
           mov al, byte ptr [g100518A8]
           and eax, 000000001h
           test eax, eax
           jne l1002E9F6
           mov cl, byte ptr [g100518A8]
           or cl, 001h
           mov byte ptr [g100518A8], cl
           mov dword ptr [g100518E0], 000000000h
           mov dword ptr [g100518E4], 000000000h
           mov edx, offset g100518E8
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, offset g100518F0
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           push offset l1002ECB1
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 1002E9A0(C) 
;
l1002E9F6: mov dword ptr [ebp-008h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00000216Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov edx, dword ptr [edx+004h]
           imul edx, edx, 00000004Ch
           mov esi, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+eax+000002170h]
           fadd qword ptr [esi+edx+000002170h]
           fmul qword ptr [g10037100]
           mov eax, dword ptr [ebp-008h]
           fstp qword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov ecx, dword ptr [ecx+004h]
           imul ecx, ecx, 00000004Ch
           mov esi, dword ptr [ebp-00Ch]
           fld qword ptr [eax+edx+000002178h]
           fadd qword ptr [esi+ecx+000002178h]
           fmul qword ptr [g10037100]
           mov edx, dword ptr [ebp-008h]
           fstp qword ptr [edx+008h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov eax, dword ptr [eax+004h]
           imul eax, eax, 00000004Ch
           mov esi, dword ptr [ebp-00Ch]
           fld qword ptr [edx+ecx+000002180h]
           fadd qword ptr [esi+eax+000002180h]
           fmul qword ptr [g10037100]
           mov ecx, dword ptr [ebp-008h]
           fstp qword ptr [ecx+010h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+eax+00000219Ch]
           fadd dword ptr [esi+edx+00000219Ch]
           fmul dword ptr [g10037210]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+02Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov edx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [edx+ecx+000002190h]
           fadd dword ptr [esi+eax+000002190h]
           fmul dword ptr [g10037210]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+020h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov eax, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [eax+edx+000002194h]
           fadd dword ptr [esi+ecx+000002194h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov ecx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [ecx+eax+000002198h]
           fadd dword ptr [esi+edx+000002198h]
           fmul dword ptr [g10037210]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+028h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           imul eax, eax, 00000004Ch
           mov edx, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [edx+ecx+000002188h]
           fadd dword ptr [esi+eax+000002188h]
           fmul dword ptr [g10037210]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+018h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov eax, dword ptr [ebp-00Ch]
           mov esi, dword ptr [ebp-00Ch]
           fld dword ptr [eax+edx+00000218Ch]
           fadd dword ptr [esi+ecx+00000218Ch]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-00Ch]
           cmp dword ptr [edx+078h], 000000000h
           je l1002EC2B
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+03Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [edx+040h], ecx
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-008h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           fmul dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+034h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx+03Ch]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp-00Ch]
           fmul dword ptr [edx+070h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+038h]
;
;* Jump:
; 1002EBDC(C) 
;
l1002EC2B: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-00Ch]
           lea ecx, [eax+edx+00004E174h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+00000216Ch]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx+00000216Ch]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+00000216Ch]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+00000216Ch], eax
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002E98A ENDP
;
l1002ECB1 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l1002ECB1 ENDP
;
;* Jump:
; 100015AF(U) 
;
l1002ECB6 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000004Ch
           push esi
           mov dword ptr [ebp-04Ch], ecx
           mov dword ptr [ebp-028h], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           lea eax, [ebp-010h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-04Ch]
           add edx, 00004E174h
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [eax+00004E170h]
           mov dword ptr [ebp-020h], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1002ED1F
;
;* Jump:
; 1002EE73(U) 
;
l1002ED16: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1002ED14(U) 
;
l1002ED1F: mov eax, dword ptr [ebp-01Ch]
           cmp eax, dword ptr [ebp-020h]
           jnb l1002EE78
           mov ecx, dword ptr [ebp-028h]
           shl ecx, 001h
           mov edx, 000000FFDh
           sub edx, ecx
           mov eax, dword ptr [ebp-04Ch]
           cmp dword ptr [eax+00004E170h], edx
           jnb l1002EE6A
           mov ecx, dword ptr [ebp-024h]
           fld dword ptr [ecx+00Ch]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 040h
           jne l1002EE6A
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-024h]
           mov edx, dword ptr [edx+004h]
           imul edx, edx, 00000004Ch
           mov esi, dword ptr [ebp-04Ch]
           fld qword ptr [ecx+eax+000002170h]
           fsub qword ptr [esi+edx+000002170h]
           fstp qword ptr [ebp-040h]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-04Ch]
           mov eax, dword ptr [ebp-024h]
           mov eax, dword ptr [eax+004h]
           imul eax, eax, 00000004Ch
           mov esi, dword ptr [ebp-04Ch]
           fld qword ptr [edx+ecx+000002178h]
           fsub qword ptr [esi+eax+000002178h]
           fstp qword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-024h]
           mov ecx, dword ptr [ecx+004h]
           imul ecx, ecx, 00000004Ch
           mov esi, dword ptr [ebp-04Ch]
           fld qword ptr [eax+edx+000002180h]
           fsub qword ptr [esi+ecx+000002180h]
           fstp qword ptr [ebp-030h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-04Ch]
           mov edx, dword ptr [ebp-024h]
           mov edx, dword ptr [edx+004h]
           imul edx, edx, 00000004Ch
           mov esi, dword ptr [ebp-04Ch]
           fld qword ptr [ecx+eax+000002180h]
           fadd qword ptr [esi+edx+000002180h]
           fadd qword ptr [g10037C78]
           fdivr qword ptr [g100370A0]
           fstp qword ptr [ebp-038h]
           fld qword ptr [ebp-040h]
           fmul qword ptr [ebp-040h]
           fld qword ptr [ebp-048h]
           fmul qword ptr [ebp-048h]
           faddp st(01h), st(00h)
           fld qword ptr [ebp-030h]
           fmul qword ptr [ebp-030h]
           faddp st(01h), st(00h)
           fmul qword ptr [ebp-038h]
           fmul qword ptr [ebp-038h]
           fcomp qword ptr [g10037C68]
           fnstsw ax
           test ah, 041h
           jne l1002EE56
           mov eax, dword ptr [ebp-024h]
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           call l10001442
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [edx+00Ch], 03F800000h
           mov eax, dword ptr [ebp-028h]
           add eax, 000000001h
           mov dword ptr [ebp-028h], eax
           jmp l1002EE6A
;
;* Jump:
; 1002EE30(C) 
;
l1002EE56: mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+00Ch], 000000000h
;
;* Jump:
; 1002ED40(C), 1002ED57(C), 1002EE54(U) 
;
l1002EE6A: mov eax, dword ptr [ebp-024h]
           add eax, 000000014h
           mov dword ptr [ebp-024h], eax
           jmp near ptr l1002ED16
;
;* Jump:
; 1002ED25(C) 
;
l1002EE78: mov eax, dword ptr [ebp-028h]
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1002ECB6 ENDP
;
;* Jump:
; 10001479(U) 
;
l1002EE80 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000020h
           mov dword ptr [ebp-020h], ecx
           mov eax, dword ptr [ebp-020h]
           add eax, 00004E174h
           mov dword ptr [ebp-008h], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002EEA6
;
;* Jump:
; 1002EEC7(U) 
;
l1002EE9D: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002EE9B(U) 
;
l1002EEA6: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00004E170h]
           jnb l1002EEC9
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+00Ch], 03F800000h
           mov edx, dword ptr [ebp-008h]
           add edx, 000000014h
           mov dword ptr [ebp-008h], edx
           jmp l1002EE9D
;
;* Jump:
; 1002EEB2(C), 1002EEDD(U) 
;
l1002EEC9: mov ecx, dword ptr [ebp-020h]
           call l100015AF
           test eax, eax
           je l1002EEDF
           mov ecx, dword ptr [ebp-020h]
           call l10001424
           jmp l1002EEC9
;
;* Jump:
; 1002EED3(C) 
;
l1002EEDF: mov eax, dword ptr [ebp-020h]
           add eax, 000002170h
           mov dword ptr [ebp-00Ch], eax
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002EEFC
;
;* Jump:
; 1002EF94(U) 
;
l1002EEF3: mov ecx, dword ptr [ebp-004h]
           add ecx, 000000001h
           mov dword ptr [ebp-004h], ecx
;
;* Jump:
; 1002EEF1(U) 
;
l1002EEFC: mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-004h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l1002EF99
           mov ecx, dword ptr [ebp-020h]
           fld dword ptr [ecx+000002168h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [edx+000002150h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+000002158h]
           fmul qword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [eax+000002160h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-014h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00Ch]
           fld qword ptr [edx]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-00Ch]
           fld qword ptr [ecx+008h]
           fmul qword ptr [edx+008h]
           faddp st(01h), st(00h)
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           fld qword ptr [eax+010h]
           fmul qword ptr [ecx+010h]
           faddp st(01h), st(00h)
           fst qword ptr [ebp-01Ch]
           call l10035ECA; [MSVCRT._CIsqrt].
           fld qword ptr [g10037080]
           fadd qword ptr [ebp-014h]
           fmulp st(01h), st(00h)
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+030h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 00000004Ch
           mov dword ptr [ebp-00Ch], eax
           jmp near ptr l1002EEF3
;
;* Jump:
; 1002EF08(C) 
;
l1002EF99: mov esp, ebp
           pop ebp
           ret
l1002EE80 ENDP
;
;* Jump:
; 10001087(U) 
;
l1002EF9D PROC
           push ebp
           mov ebp, esp
           sub esp, 000000070h
           push esi
           push edi
           mov dword ptr [ebp-060h], ecx
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           lea eax, [ebp-010h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-060h]
           add edx, 00004E174h
           mov dword ptr [ebp-028h], edx
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1002EFF4
;
;* Jump:
; 1002F062(U) 
;
l1002EFEB: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1002EFE9(U) 
;
l1002EFF4: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+00004E170h]
           jnb l1002F064
           mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [eax+004h]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-060h]
           lea eax, [edx+ecx+000002170h]
           push eax
           lea ecx, [ebp-044h]
           push ecx
           mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-060h]
           lea ecx, [ecx+eax+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea edx, [ebp-018h]
           push edx
           lea ecx, [ebp-018h]
           call l100013CF
           mov eax, dword ptr [ebp-028h]
           fstp dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+010h], 000000000h
           mov edx, dword ptr [ebp-028h]
           add edx, 000000014h
           mov dword ptr [ebp-028h], edx
           jmp l1002EFEB
;
;* Jump:
; 1002F000(C) 
;
l1002F064: mov dword ptr [ebp-024h], 000000000h
           jmp l1002F076
;
;* Jump:
; 1002F282(U) 
;
l1002F06D: mov eax, dword ptr [ebp-024h]
           add eax, 000000001h
           mov dword ptr [ebp-024h], eax
;
;* Jump:
; 1002F06B(U) 
;
l1002F076: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-024h]
           cmp edx, dword ptr [ecx+0000001B4h]
           jnb l1002F287
           mov eax, dword ptr [ebp-024h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-060h]
           lea edx, [ecx+eax+0000001B8h]
           mov eax, dword ptr [ebp-060h]
           mov dword ptr [eax+00007A178h], edx
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+00007A178h]
           mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [edx]
           cmp ecx, dword ptr [eax+0000000ACh]
           je l1002F282
           mov dword ptr [ebp-02Ch], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1002F0D4
;
;* Jump:
; 1002F13C(U) 
;
l1002F0CB: mov edx, dword ptr [ebp-01Ch]
           add edx, 000000001h
           mov dword ptr [ebp-01Ch], edx
;
;* Jump:
; 1002F0C9(U) 
;
l1002F0D4: mov eax, dword ptr [ebp-060h]
           mov ecx, dword ptr [ebp-01Ch]
           cmp ecx, dword ptr [eax+00000216Ch]
           jnb l1002F13E
           mov edx, dword ptr [ebp-060h]
           mov eax, dword ptr [edx+00007A178h]
           add eax, 000000004h
           push eax
           lea ecx, [ebp-05Ch]
           push ecx
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-060h]
           lea ecx, [eax+edx+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea ecx, [ebp-018h]
           push ecx
           lea ecx, [ebp-018h]
           call l100013CF
           fst dword ptr [ebp-064h]
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-060h]
           fstp dword ptr [eax+edx+0000021B4h]
           mov ecx, dword ptr [ebp-02Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-02Ch], ecx
           jmp l1002F0CB
;
;* Jump:
; 1002F0E0(C) 
;
l1002F13E: mov edx, dword ptr [ebp-060h]
           cmp dword ptr [edx+00007A210h], 000000000h
           jne l1002F160
;
;* Jump:
; 1002F15E(U) 
;
l1002F14A: mov ecx, dword ptr [ebp-060h]
           call l100017B7
           test eax, eax
           je l1002F160
           mov ecx, dword ptr [ebp-060h]
           call l10001424
           jmp l1002F14A
;
;* Jump:
; 1002F148(C), 1002F154(C) 
;
l1002F160: mov dword ptr [ebp-02Ch], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           jmp l1002F179
;
;* Jump:
; 1002F27D(U) 
;
l1002F170: mov eax, dword ptr [ebp-01Ch]
           add eax, 000000001h
           mov dword ptr [ebp-01Ch], eax
;
;* Jump:
; 1002F16E(U) 
;
l1002F179: mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ebp-01Ch]
           cmp edx, dword ptr [ecx+00000216Ch]
           jnb l1002F282
           mov eax, dword ptr [ebp-060h]
           add eax, 000000088h
           push eax
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-060h]
           lea eax, [edx+ecx+000002170h]
           push eax
           mov ecx, dword ptr [ebp-060h]
           mov edx, dword ptr [ecx+00007A178h]
           mov ecx, dword ptr [edx]
           mov eax, dword ptr [ebp-060h]
           mov edx, dword ptr [eax+00007A178h]
           mov eax, dword ptr [edx]
           mov edx, dword ptr [eax]
           call [edx+00Ch]
           fstp dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-060h]
           xor edx, edx
           mov edx, dword ptr [ecx+00007A178h]
           mov ecx, dword ptr [edx]
           xor edx, edx
           mov dl, byte ptr [ecx+018h]
           mov dword ptr [ebp-068h], edx
           fild dword ptr [ebp-068h]
           fmul dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-060h]
           fadd dword ptr [ecx+eax+000002190h]
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-060h]
           fstp dword ptr [eax+edx+000002190h]
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-060h]
           xor eax, eax
           mov eax, dword ptr [edx+00007A178h]
           mov edx, dword ptr [eax]
           xor eax, eax
           mov al, byte ptr [edx+019h]
           mov dword ptr [ebp-06Ch], eax
           fild dword ptr [ebp-06Ch]
           fmul dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-060h]
           fadd dword ptr [edx+ecx+000002194h]
           mov eax, dword ptr [ebp-02Ch]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-060h]
           fstp dword ptr [ecx+eax+000002194h]
           mov edx, dword ptr [ebp-02Ch]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-060h]
           xor ecx, ecx
           mov ecx, dword ptr [eax+00007A178h]
           mov eax, dword ptr [ecx]
           xor ecx, ecx
           mov cl, byte ptr [eax+01Ah]
           mov dword ptr [ebp-070h], ecx
           fild dword ptr [ebp-070h]
           fmul dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-060h]
           fadd dword ptr [eax+edx+000002198h]
           mov ecx, dword ptr [ebp-02Ch]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-060h]
           fstp dword ptr [edx+ecx+000002198h]
           mov eax, dword ptr [ebp-02Ch]
           add eax, 000000001h
           mov dword ptr [ebp-02Ch], eax
           jmp near ptr l1002F170
;
;* Jump:
; 1002F0B5(C), 1002F185(C) 
;
l1002F282: jmp near ptr l1002F06D
;
;* Jump:
; 1002F082(C) 
;
l1002F287: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret
l1002EF9D ENDP
;
;* Jump:
; 10001159(U) 
;
l1002F28D PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           fild dword ptr [eax+058h]
           fmul qword ptr [g10037C88]
           mov ecx, dword ptr [ebp-004h]
           fidiv dword ptr [ecx+054h]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+074h]
           mov eax, dword ptr [ebp-004h]
           fild dword ptr [eax+054h]
           mov ecx, dword ptr [ebp+008h]
           fmul dword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+06Ch]
           mov eax, dword ptr [ebp-004h]
           fild dword ptr [eax+054h]
           mov ecx, dword ptr [ebp+008h]
           fmul dword ptr [ecx+014h]
           mov edx, dword ptr [ebp-004h]
           fmul dword ptr [edx+074h]
           mov eax, dword ptr [ebp-004h]
           fstp dword ptr [eax+070h]
           mov ecx, dword ptr [ebp-004h]
           fild dword ptr [ecx+054h]
           mov edx, dword ptr [ebp+008h]
           fmul dword ptr [edx+008h]
           fdiv dword ptr [g100370AC]
           call l10035E80; [MSVCRT._ftol].
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+064h], eax
           mov edx, dword ptr [ebp-004h]
           fild dword ptr [edx+054h]
           mov eax, dword ptr [ebp+008h]
           fmul dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp+008h]
           fmul dword ptr [ecx+010h]
           fdiv dword ptr [g100370AC]
           call l10035E80; [MSVCRT._ftol].
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+068h], eax
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [eax+074h], edx
           mov ecx, dword ptr [ebp+008h]
           call l100014C9
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000001E38h
           call l100016A4
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F28D ENDP
;
;* Jump:
; 10001785(U) 
;
           call l1002F33F; Implemented in c++ code
;
;* Jump:
; 100013A2(U) 
;
           call l1002F3DF; Implemented in c++ code
;
;* Jump:
; 100013B1(U) 
;
           call l1002F3EA; Implemented in c++ code
;
;* Jump:
; 1000137A(U) 
;
           call l1002F40C; Implemented in c++ code
;
;* Jump:
; 10001465(U) 
;
l1002F42E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000008h
           push esi
           push edi
           mov dword ptr [ebp-008h], ecx
           mov eax, dword ptr [ebp-008h]
           add eax, 000000084h
           mov dword ptr [ebp-004h], eax
           mov esi, dword ptr [ebp+008h]
           add esi, 000000004h
           mov edi, dword ptr [ebp-004h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+01Ch]
           mov dword ptr [edx+01Ch], eax
           mov ecx, dword ptr [ecx+020h]
           mov dword ptr [edx+020h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+0000009B8h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+0000009BCh], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+0000009C0h], 000000000h
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+0000009C4h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+0000000B0h], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+0000001B4h], 000000000h
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F42E ENDP
;
;* Jump:
; 100013C0(U) 
;
l1002F4BF PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+044h]
           mov dword ptr [eax+0000000A8h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           and ecx, 000000010h
           test ecx, ecx
           jne l1002F506
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-004h]
           call [edx+0000000ACh]
           push 000000019h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
;
;* Jump:
; 1002F4DF(C) 
;
l1002F506: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           and ecx, 000000100h
           test ecx, ecx
           je l1002F524
           mov edx, dword ptr [ebp-004h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+000084190h], 000000001h
           jmp l1002F531
;
;* Jump:
; 1002F513(C) 
;
l1002F524: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+000084190h], 000000000h
;
;* Jump:
; 1002F522(U) 
;
l1002F531: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           and edx, 000000020h
           test edx, edx
           je l1002F57B
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+050h]
           mov dword ptr [eax+0000009B8h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+054h]
           mov dword ptr [eax+0000009BCh], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+058h]
           mov dword ptr [eax+0000009C0h], edx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+05Ch]
           mov dword ptr [eax+0000009C4h], edx
           jmp l1002F5F1
;
;* Jump:
; 1002F53B(C) 
;
l1002F57B: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           and ecx, 000000001h
           test ecx, ecx
           jne l1002F5BD
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000009B8h], 0437F0000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000009BCh], 0437F0000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000009C0h], 0437F0000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000009C4h], 0437F0000h
           jmp l1002F5F1
;
;* Jump:
; 1002F585(C) 
;
l1002F5BD: mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000009B8h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+0000009BCh], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+0000009C0h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+0000009C4h], 0437F0000h
;
;* Jump:
; 1002F579(U), 1002F5BB(U) 
;
l1002F5F1: mov esp, ebp
           pop ebp
           ret 00004h
l1002F4BF ENDP
;
;* Jump:
; 100017BC(U) 
;
l1002F5F7 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           mov dword ptr [ebp-024h], ecx
           xor eax, eax
           test eax, eax
           jne l1002F61E
           push 0000003A1h
;
;* String: "C:\Code\Raster\rOpenGL3\RTrisDeviceDLL.cpp"
;
           push offset g1003C1E8
           push offset g1003C214
           call [__imp__assert]; [MSVCRT._assert].
           add esp, 00000000Ch
;
;* Jump:
; 1002F604(C) 
;
l1002F61E: push 000000022h
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-024h]
           call [eax+000000114h]
           mov ecx, dword ptr [ebp-024h]
           mov dword ptr [ecx+00000216Ch], 000000000h
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [edx+00004E170h], 000000000h
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+000062174h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-024h]
           call l10001073
           mov edx, dword ptr [ebp-024h]
           add edx, 000002170h
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002F67F
;
;* Jump:
; 1002F796(U) 
;
l1002F676: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002F674(U) 
;
l1002F67F: mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+00000216Ch]
           jnb l1002F79B
           mov eax, dword ptr [ebp-024h]
           fld dword ptr [eax+000002168h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [ecx+000002150h]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [eax+000002158h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [edx+000002160h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           fdivp st(01h), st(00h)
           fstp qword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-008h]
           fld qword ptr [ecx]
           fmul qword ptr [edx]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           fld qword ptr [eax+008h]
           fmul qword ptr [ecx+008h]
           faddp st(01h), st(00h)
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [edx+010h]
           fmul qword ptr [eax+010h]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-024h]
           fld qword ptr [ebp-020h]
           fmul qword ptr [ecx+00000213Ch]
           fst dword ptr [ebp-028h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, offset g1003C710
           call l100013F2
           fstp dword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-024h]
           fld qword ptr [ebp-018h]
           fmul qword ptr [edx+00000213Ch]
           fmul qword ptr [ebp-018h]
           fmul qword ptr [ebp-020h]
           fst dword ptr [ebp-030h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, offset g1003C710
           call l100013F2
           fdivr dword ptr [ebp-02Ch]
           fstp qword ptr [ebp-010h]
           fld qword ptr [g10037080]
           fsub qword ptr [ebp-010h]
           fmul qword ptr [g10037CA8]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+02Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000002144h]
           mov dword ptr [ecx+020h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+000002148h]
           mov dword ptr [ecx+024h], eax
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-024h]
           mov eax, dword ptr [edx+00000214Ch]
           mov dword ptr [ecx+028h], eax
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+030h], 000000000h
           mov edx, dword ptr [ebp-008h]
           add edx, 00000004Ch
           mov dword ptr [ebp-008h], edx
           jmp near ptr l1002F676
;
;* Jump:
; 1002F68B(C) 
;
l1002F79B: mov eax, dword ptr [ebp-024h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-024h]
           call [edx+000000234h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F5F7 ENDP
;
;* Jump:
; 100017EE(U) 
;
l1002F7AF PROC
           push ebp
           mov ebp, esp
           sub esp, 000000018h
           mov dword ptr [ebp-018h], ecx
           mov eax, dword ptr [ebp-018h]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov ecx, dword ptr [ebp-018h]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-018h]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp+008h]
           push eax
           mov ecx, dword ptr [ebp-018h]
           call l10001073
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000002170h
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-018h]
           cmp dword ptr [edx+000084190h], 000000000h
           je l1002F815
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+000084194h]
           mov dword ptr [eax+0000009B8h], edx
;
;* Jump:
; 1002F801(C) 
;
l1002F815: mov dword ptr [ebp-004h], 000000000h
           jmp l1002F827
;
;* Jump:
; 1002F8D5(U) 
;
l1002F81E: mov eax, dword ptr [ebp-004h]
           add eax, 000000001h
           mov dword ptr [ebp-004h], eax
;
;* Jump:
; 1002F81C(U) 
;
l1002F827: mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ebp-004h]
           cmp edx, dword ptr [ecx+00000216Ch]
           jnb l1002F8DA
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+03Ch]
           mov dword ptr [eax+040h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000009C4h]
           mov dword ptr [eax+02Ch], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000009B8h]
           mov dword ptr [eax+020h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000009BCh]
           mov dword ptr [eax+024h], edx
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000009C0h]
           mov dword ptr [eax+028h], edx
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [eax+0000000A8h]
           push ecx
           mov ecx, dword ptr [ebp-008h]
           call l100013CF
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+0000000A8h]
           fadd dword ptr [eax+030h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-008h]
           call l100013CF
           mov ecx, dword ptr [ebp-018h]
           mov edx, dword ptr [ecx+0000000A8h]
           fadd dword ptr [edx+034h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+01Ch]
           mov ecx, dword ptr [ebp-008h]
           add ecx, 00000004Ch
           mov dword ptr [ebp-008h], ecx
           jmp near ptr l1002F81E
;
;* Jump:
; 1002F833(C) 
;
l1002F8DA: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-018h]
           call [eax+000000240h]
           mov ecx, dword ptr [ebp-018h]
           call l10001087
           mov ecx, dword ptr [ebp-018h]
           add ecx, 000002170h
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           jmp l1002F90E
;
;* Jump:
; 1002FA72(U) 
;
l1002F905: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1002F903(U) 
;
l1002F90E: mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           cmp ecx, dword ptr [eax+00000216Ch]
           jnb l1002FA77
           mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+020h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l1002F96C
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+020h]
           fstp dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+024h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [ebp-00Ch]
           fmul dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+028h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+020h], 03F800000h
           jmp l1002F97E
;
;* Jump:
; 1002F931(C) 
;
l1002F96C: mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+020h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+020h]
;
;* Jump:
; 1002F96A(U) 
;
l1002F97E: mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+024h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l1002F9CA
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+024h]
           fstp dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ebp-010h]
           fmul dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+020h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [ebp-010h]
           fmul dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+028h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+024h], 03F800000h
           jmp l1002F9DC
;
;* Jump:
; 1002F98F(C) 
;
l1002F9CA: mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+024h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+024h]
;
;* Jump:
; 1002F9C8(U) 
;
l1002F9DC: mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+028h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l1002FA28
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+028h]
           fstp dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ebp-014h]
           fmul dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+020h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [ebp-014h]
           fmul dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+028h], 03F800000h
           jmp l1002FA3A
;
;* Jump:
; 1002F9ED(C) 
;
l1002FA28: mov eax, dword ptr [ebp-008h]
           fld dword ptr [eax+028h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+028h]
;
;* Jump:
; 1002FA26(U) 
;
l1002FA3A: mov edx, dword ptr [ebp-008h]
           fld dword ptr [edx+02Ch]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+02Ch]
           mov ecx, dword ptr [ebp-008h]
           fld dword ptr [ecx+02Ch]
           fcomp dword ptr [g1003706C]
           fnstsw ax
           test ah, 041h
           jne l1002FA69
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+02Ch], 03F800000h
;
;* Jump:
; 1002FA5D(C) 
;
l1002FA69: mov eax, dword ptr [ebp-008h]
           add eax, 00000004Ch
           mov dword ptr [ebp-008h], eax
           jmp near ptr l1002F905
;
;* Jump:
; 1002F91A(C) 
;
l1002FA77: mov ecx, dword ptr [ebp-018h]
           cmp dword ptr [ecx+00007A210h], 000000000h
           je l1002FA8B
           mov ecx, dword ptr [ebp-018h]
           call l1000141F
;
;* Jump:
; 1002FA81(C) 
;
l1002FA8B: mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-018h]
           call [eax+000000234h]
           mov esp, ebp
           pop ebp
           ret 00004h
l1002F7AF ENDP
;
;* Jump:
; 100016DB(U) 
;
l1002FA9F PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 00000044Ch
           je l1002FAE4
           cmp dword ptr [ebp-00Ch], 00000044Dh
           je l1002FB5B
           cmp dword ptr [ebp-00Ch], 00000044Eh
           je l1002FC37
           jmp near ptr l1002FC43
;
;* Jump:
; 1002FAC3(C) 
;
l1002FAE4: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-010h], eax
           fild dword ptr [ebp-010h]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fsubr dword ptr [ecx+0000009B8h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fsubr dword ptr [edx+0000009BCh]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-018h], edx
           fild dword ptr [ebp-018h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fsubr dword ptr [eax+0000009C0h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+0000009C0h]
           jmp near ptr l1002FC43
;
;* Jump:
; 1002FACC(C) 
;
l1002FB5B: mov edx, dword ptr [ebp+008h]
           fld dword ptr [edx+01Ch]
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           add eax, 000000088h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-020h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1002FBB8
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-028h]
           mov edx, dword ptr [ebp-008h]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-028h]
           fstp qword ptr [ebp-030h]
           jmp l1002FBC6
;
;* Jump:
; 1002FB8B(C) 
;
l1002FBB8: mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1002FBB6(U) 
;
l1002FBC6: fld qword ptr [ebp-030h]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-034h], ecx
           fild dword ptr [ebp-034h]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fsubr dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+0000009B8h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-038h], edx
           fild dword ptr [ebp-038h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fsubr dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+0000009BCh]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-03Ch], eax
           fild dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fsubr dword ptr [ecx+0000009C0h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+0000009C0h]
           jmp l1002FC43
;
;* Jump:
; 1002FAD9(C) 
;
l1002FC37: mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+0000000ACh], ecx
;
;* Jump:
; 1002FADF(U), 1002FB56(U), 1002FC35(U) 
;
l1002FC43: mov esp, ebp
           pop ebp
           ret 00004h
l1002FA9F ENDP
;
;* Jump:
; 100016D6(U) 
;
l1002FC49 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           mov dword ptr [ebp-008h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp+008h]
           call [edx]
           mov dword ptr [ebp-00Ch], eax
           cmp dword ptr [ebp-00Ch], 00000044Ch
           je l1002FC8E
           cmp dword ptr [ebp-00Ch], 00000044Dh
           je l1002FD05
           cmp dword ptr [ebp-00Ch], 00000044Eh
           je l1002FDE1
           jmp near ptr l1002FDEE
;
;* Jump:
; 1002FC6D(C) 
;
l1002FC8E: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-010h], eax
           fild dword ptr [ebp-010h]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fadd dword ptr [ecx+0000009B8h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-014h], ecx
           fild dword ptr [ebp-014h]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fadd dword ptr [edx+0000009BCh]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-018h], edx
           fild dword ptr [ebp-018h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fadd dword ptr [eax+0000009C0h]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+0000009C0h]
           jmp near ptr l1002FDEE
;
;* Jump:
; 1002FC76(C) 
;
l1002FD05: mov edx, dword ptr [ebp+008h]
           fld dword ptr [edx+01Ch]
           fstp qword ptr [ebp-020h]
           mov eax, dword ptr [ebp-008h]
           add eax, 000000088h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-020h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l1002FD62
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-028h]
           mov edx, dword ptr [ebp-008h]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-028h]
           fstp qword ptr [ebp-030h]
           jmp l1002FD70
;
;* Jump:
; 1002FD35(C) 
;
l1002FD62: mov dword ptr [ebp-030h], 000000000h
           mov dword ptr [ebp-02Ch], 000000000h
;
;* Jump:
; 1002FD60(U) 
;
l1002FD70: fld qword ptr [ebp-030h]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-034h], ecx
           fild dword ptr [ebp-034h]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-008h]
           fadd dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp-008h]
           fstp dword ptr [eax+0000009B8h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-038h], edx
           fild dword ptr [ebp-038h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-008h]
           fadd dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp-008h]
           fstp dword ptr [ecx+0000009BCh]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-03Ch], eax
           fild dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-008h]
           fadd dword ptr [ecx+0000009C0h]
           mov edx, dword ptr [ebp-008h]
           fstp dword ptr [edx+0000009C0h]
           jmp l1002FDEE
;
;* Jump:
; 1002FC83(C) 
;
l1002FDE1: mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+0000000ACh], 000000000h
;
;* Jump:
; 1002FC89(U), 1002FD00(U), 1002FDDF(U) 
;
l1002FDEE: mov esp, ebp
           pop ebp
           ret 00004h
l1002FC49 ENDP
;
;* Jump:
; 10001816(U) 
;
l1002FDF4 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000005Ch
           push esi
           push edi
           mov dword ptr [ebp-05Ch], ecx
           mov eax, dword ptr [ebp-05Ch]
           cmp dword ptr [eax+00007A210h], 000000000h
           je l1002FE10
           jmp near ptr l1003055F
;
;* Jump:
; 1002FE09(C) 
;
l1002FE10: mov ecx, dword ptr [ebp-05Ch]
           cmp dword ptr [ecx+078h], 000000000h
           je l100301E1
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+00000216Ch], eax
           mov ecx, dword ptr [ebp+014h]
           imul ecx, ecx, 000000003h
           mov edx, dword ptr [ebp-05Ch]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [eax+000062174h], ecx
           mov edx, dword ptr [ebp-05Ch]
           add edx, 000002170h
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [ebp-018h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l1002FE68
;
;* Jump:
; 1002FF56(U) 
;
l1002FE5F: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 1002FE5D(U) 
;
l1002FE68: mov edx, dword ptr [ebp-014h]
           cmp edx, dword ptr [ebp+00Ch]
           jnb l1002FF5B
           mov esi, dword ptr [ebp-018h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-020h]
           rep movsd
           mov eax, dword ptr [ebp-020h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           fstp qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-05Ch]
           fld dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp-020h]
           fmul qword ptr [edx]
           fmul qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+034h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-05Ch]
           fld dword ptr [edx+070h]
           fmul qword ptr [ecx+008h]
           fmul qword ptr [ebp-010h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+038h]
           fld qword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+03Ch]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [edx+02Ch], 000000000h
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009B8h]
           mov dword ptr [eax+020h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009BCh]
           mov dword ptr [eax+024h], edx
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009C0h]
           mov dword ptr [eax+028h], edx
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           push ecx
           mov ecx, dword ptr [ebp-020h]
           call l100013CF
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+0000000A8h]
           fadd dword ptr [eax+030h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-020h]
           call l100013CF
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000000A8h]
           fadd dword ptr [edx+034h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+01Ch]
           mov ecx, dword ptr [ebp-020h]
           add ecx, 00000004Ch
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-018h]
           add edx, 000000018h
           mov dword ptr [ebp-018h], edx
           jmp near ptr l1002FE5F
;
;* Jump:
; 1002FE6E(C) 
;
l1002FF5B: mov eax, dword ptr [ebp-05Ch]
           add eax, 00004E174h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-05Ch]
           add ecx, 000062178h
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-008h], edx
           mov dword ptr [ebp-014h], 000000000h
           jmp l1002FF8A
;
;* Jump:
; 1003005C(U) 
;
l1002FF81: mov eax, dword ptr [ebp-014h]
           add eax, 000000001h
           mov dword ptr [ebp-014h], eax
;
;* Jump:
; 1002FF7F(U) 
;
l1002FF8A: mov ecx, dword ptr [ebp-014h]
           cmp ecx, dword ptr [ebp+014h]
           jnb l10030061
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           add eax, 000000014h
           mov dword ptr [ebp-01Ch], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-01Ch]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-01Ch]
           add edx, 000000014h
           mov dword ptr [ebp-01Ch], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 000000014h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-004h]
           add edx, 000000018h
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           add eax, 00000000Ch
           mov dword ptr [ebp-008h], eax
           jmp near ptr l1002FF81
;
;* Jump:
; 1002FF90(C) 
;
l10030061: mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-05Ch]
           call [edx+000000240h]
           mov ecx, dword ptr [ebp-05Ch]
           call l10001087
           mov eax, dword ptr [ebp-05Ch]
           add eax, 000002170h
           mov dword ptr [ebp-020h], eax
           mov dword ptr [ebp-014h], 000000000h
           jmp l10030094
;
;* Jump:
; 100301C9(U) 
;
l1003008B: mov ecx, dword ptr [ebp-014h]
           add ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 10030089(U) 
;
l10030094: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp-014h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l100301CE
           mov ecx, dword ptr [ebp-020h]
           fld dword ptr [ecx+020h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l100300F2
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+020h]
           fstp dword ptr [ebp-024h]
           mov eax, dword ptr [ebp-020h]
           fld dword ptr [ebp-024h]
           fmul dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [ebp-024h]
           fmul dword ptr [edx+028h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+020h], 03F800000h
           jmp l10030104
;
;* Jump:
; 100300B7(C) 
;
l100300F2: mov edx, dword ptr [ebp-020h]
           fld dword ptr [edx+020h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+020h]
;
;* Jump:
; 100300F0(U) 
;
l10030104: mov ecx, dword ptr [ebp-020h]
           fld dword ptr [ecx+024h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10030150
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+024h]
           fstp dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-020h]
           fld dword ptr [ebp-028h]
           fmul dword ptr [eax+020h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [ebp-028h]
           fmul dword ptr [edx+028h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+024h], 03F800000h
           jmp l10030162
;
;* Jump:
; 10030115(C) 
;
l10030150: mov edx, dword ptr [ebp-020h]
           fld dword ptr [edx+024h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+024h]
;
;* Jump:
; 1003014E(U) 
;
l10030162: mov ecx, dword ptr [ebp-020h]
           fld dword ptr [ecx+028h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l100301AE
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+028h]
           fstp dword ptr [ebp-02Ch]
           mov eax, dword ptr [ebp-020h]
           fld dword ptr [ebp-02Ch]
           fmul dword ptr [eax+020h]
           mov ecx, dword ptr [ebp-020h]
           fstp dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-020h]
           fld dword ptr [ebp-02Ch]
           fmul dword ptr [edx+024h]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-020h]
           mov dword ptr [ecx+028h], 03F800000h
           jmp l100301C0
;
;* Jump:
; 10030173(C) 
;
l100301AE: mov edx, dword ptr [ebp-020h]
           fld dword ptr [edx+028h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-020h]
           fstp dword ptr [eax+028h]
;
;* Jump:
; 100301AC(U) 
;
l100301C0: mov ecx, dword ptr [ebp-020h]
           add ecx, 00000004Ch
           mov dword ptr [ebp-020h], ecx
           jmp near ptr l1003008B
;
;* Jump:
; 100300A0(C) 
;
l100301CE: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-05Ch]
           call [eax+000000234h]
           jmp near ptr l1003055F
;
;* Jump:
; 1002FE17(C) 
;
l100301E1: mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ebp+00Ch]
           mov dword ptr [ecx+00000216Ch], edx
           mov eax, dword ptr [ebp+014h]
           imul eax, eax, 000000003h
           mov ecx, dword ptr [ebp-05Ch]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [edx+000062174h], eax
           mov ecx, dword ptr [ebp-05Ch]
           add ecx, 000002170h
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp+008h]
           mov dword ptr [ebp-044h], edx
           mov dword ptr [ebp-040h], 000000000h
           jmp l1003022C
;
;* Jump:
; 100302D9(U) 
;
l10030223: mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-040h], eax
;
;* Jump:
; 10030221(U) 
;
l1003022C: mov ecx, dword ptr [ebp-040h]
           cmp ecx, dword ptr [ebp+00Ch]
           jnb l100302DE
           mov esi, dword ptr [ebp-044h]
           mov ecx, 000000006h
           mov edi, dword ptr [ebp-04Ch]
           rep movsd
           mov edx, dword ptr [ebp-04Ch]
           mov dword ptr [edx+02Ch], 000000000h
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009B8h]
           mov dword ptr [eax+020h], edx
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009BCh]
           mov dword ptr [eax+024h], edx
           mov eax, dword ptr [ebp-04Ch]
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000009C0h]
           mov dword ptr [eax+028h], edx
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [eax+0000000A8h]
           push ecx
           mov ecx, dword ptr [ebp-04Ch]
           call l100013CF
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+0000000A8h]
           fadd dword ptr [eax+030h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+0000000A8h]
           add eax, 000000018h
           push eax
           mov ecx, dword ptr [ebp-04Ch]
           call l100013CF
           mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+0000000A8h]
           fadd dword ptr [edx+034h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+01Ch]
           mov ecx, dword ptr [ebp-04Ch]
           add ecx, 00000004Ch
           mov dword ptr [ebp-04Ch], ecx
           mov edx, dword ptr [ebp-044h]
           add edx, 000000018h
           mov dword ptr [ebp-044h], edx
           jmp near ptr l10030223
;
;* Jump:
; 10030232(C) 
;
l100302DE: mov eax, dword ptr [ebp-05Ch]
           add eax, 00004E174h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-05Ch]
           add ecx, 000062178h
           mov dword ptr [ebp-030h], ecx
           mov edx, dword ptr [ebp+010h]
           mov dword ptr [ebp-034h], edx
           mov dword ptr [ebp-040h], 000000000h
           jmp l1003030D
;
;* Jump:
; 100303DF(U) 
;
l10030304: mov eax, dword ptr [ebp-040h]
           add eax, 000000001h
           mov dword ptr [ebp-040h], eax
;
;* Jump:
; 10030302(U) 
;
l1003030D: mov ecx, dword ptr [ebp-040h]
           cmp ecx, dword ptr [ebp+014h]
           jnb l100303E4
           mov edx, dword ptr [ebp-048h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-048h]
           mov eax, dword ptr [ebp-034h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ebp-048h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp-048h]
           add eax, 000000014h
           mov dword ptr [ebp-048h], eax
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-048h]
           mov edx, dword ptr [ebp-034h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-048h]
           mov dword ptr [eax+010h], ecx
           mov edx, dword ptr [ebp-048h]
           add edx, 000000014h
           mov dword ptr [ebp-048h], edx
           mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-048h]
           mov ecx, dword ptr [ebp-034h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax+004h], edx
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-030h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [ebp-048h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-048h]
           add ecx, 000000014h
           mov dword ptr [ebp-048h], ecx
           mov edx, dword ptr [ebp-030h]
           add edx, 000000018h
           mov dword ptr [ebp-030h], edx
           mov eax, dword ptr [ebp-034h]
           add eax, 00000000Ch
           mov dword ptr [ebp-034h], eax
           jmp near ptr l10030304
;
;* Jump:
; 10030313(C) 
;
l100303E4: mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-05Ch]
           call [edx+000000240h]
           mov ecx, dword ptr [ebp-05Ch]
           call l10001087
           mov eax, dword ptr [ebp-05Ch]
           add eax, 000002170h
           mov dword ptr [ebp-04Ch], eax
           mov dword ptr [ebp-040h], 000000000h
           jmp l10030417
;
;* Jump:
; 1003054C(U) 
;
l1003040E: mov ecx, dword ptr [ebp-040h]
           add ecx, 000000001h
           mov dword ptr [ebp-040h], ecx
;
;* Jump:
; 1003040C(U) 
;
l10030417: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ebp-040h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l10030551
           mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+020h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10030475
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+020h]
           fstp dword ptr [ebp-050h]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-050h]
           fmul dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-050h]
           fmul dword ptr [edx+028h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+020h], 03F800000h
           jmp l10030487
;
;* Jump:
; 1003043A(C) 
;
l10030475: mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [edx+020h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+020h]
;
;* Jump:
; 10030473(U) 
;
l10030487: mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+024h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l100304D3
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+024h]
           fstp dword ptr [ebp-054h]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-054h]
           fmul dword ptr [eax+020h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-054h]
           fmul dword ptr [edx+028h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+024h], 03F800000h
           jmp l100304E5
;
;* Jump:
; 10030498(C) 
;
l100304D3: mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [edx+024h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+024h]
;
;* Jump:
; 100304D1(U) 
;
l100304E5: mov ecx, dword ptr [ebp-04Ch]
           fld dword ptr [ecx+028h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10030531
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [g10037204]
           fdiv dword ptr [edx+028h]
           fstp dword ptr [ebp-058h]
           mov eax, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-058h]
           fmul dword ptr [eax+020h]
           mov ecx, dword ptr [ebp-04Ch]
           fstp dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [ebp-058h]
           fmul dword ptr [edx+024h]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-04Ch]
           mov dword ptr [ecx+028h], 03F800000h
           jmp l10030543
;
;* Jump:
; 100304F6(C) 
;
l10030531: mov edx, dword ptr [ebp-04Ch]
           fld dword ptr [edx+028h]
           fmul dword ptr [g10037208]
           mov eax, dword ptr [ebp-04Ch]
           fstp dword ptr [eax+028h]
;
;* Jump:
; 1003052F(U) 
;
l10030543: mov ecx, dword ptr [ebp-04Ch]
           add ecx, 00000004Ch
           mov dword ptr [ebp-04Ch], ecx
           jmp near ptr l1003040E
;
;* Jump:
; 10030423(C) 
;
l10030551: mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-05Ch]
           call [eax+000000234h]
;
;* Jump:
; 1002FE0B(U), 100301DC(U) 
;
l1003055F: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l1002FDF4 ENDP
;
;* Jump:
; 10001456(U) 
;
l10030567 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000070Ch
           push esi
           push edi
           mov dword ptr [ebp-000000704h], ecx
           mov eax, dword ptr [ebp+008h]
           push eax
           push 0408F4000h
           push 000000000h
           lea ecx, [ebp-00000034Ch]
           push ecx
           lea edx, [ebp-000000334h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l10001677
           push eax
           mov ecx, dword ptr [ebp+014h]
           add ecx, 00000003Ch
           call l10001712
           mov eax, dword ptr [ebp-000000704h]
           add eax, 000084174h
           mov dword ptr [ebp-0000006B8h], eax
           mov ecx, dword ptr [ebp-0000006B8h]
           cmp dword ptr [ecx+018h], 000000000h
           jne l10030626
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000006B4h], eax
           cmp dword ptr [ebp-0000006B4h], 000000000h
           je l100305F8
           mov ecx, dword ptr [ebp-0000006B4h]
           call l1000107D
           mov dword ptr [ebp-000000708h], eax
           jmp l10030602
;
;* Jump:
; 100305E3(C) 
;
l100305F8: mov dword ptr [ebp-000000708h], 000000000h
;
;* Jump:
; 100305F6(U) 
;
l10030602: mov edx, dword ptr [ebp-0000006B8h]
           mov eax, dword ptr [ebp-000000708h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-0000006B8h]
           mov edx, dword ptr [ecx+018h]
           push edx
           mov ecx, dword ptr [ebp-0000006B8h]
           call l100015B4
;
;* Jump:
; 100305C7(C) 
;
l10030626: mov eax, dword ptr [ebp-0000006B8h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [ebp-0000006B0h], ecx
           mov edx, dword ptr [ebp-0000006B8h]
           mov eax, dword ptr [edx+018h]
           mov ecx, dword ptr [ebp-0000006B8h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-0000006B0h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx+004h], 000000004h
           mov edx, dword ptr [ebp-000000704h]
           cmp dword ptr [edx+07Ch], 000000000h
           jne l100307CD
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-0000003ACh]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-000000394h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-00000037Ch]
           push ecx
           lea edx, [ebp-000000364h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000008h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-00000040Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-0000003F4h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-0000003DCh]
           push ecx
           lea edx, [ebp-0000003C4h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000020h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-00000046Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-000000454h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-00000043Ch]
           push ecx
           lea edx, [ebp-000000424h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000038h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-0000004CCh]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-0000004B4h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-00000049Ch]
           push ecx
           lea edx, [ebp-000000484h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000050h
           mov ecx, 000000006h
           rep movsd
           jmp near ptr l10030929
;
;* Jump:
; 10030666(C) 
;
l100307CD: push 0408F4000h
           push 000000000h
           lea eax, [ebp-00000052Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-000000514h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-0000004FCh]
           push ecx
           lea edx, [ebp-0000004E4h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000050h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-00000058Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-000000574h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-00000055Ch]
           push ecx
           lea edx, [ebp-000000544h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000038h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-0000005ECh]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-0000005D4h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-0000005BCh]
           push ecx
           lea edx, [ebp-0000005A4h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000020h
           mov ecx, 000000006h
           rep movsd
           push 0408F4000h
           push 000000000h
           lea eax, [ebp-00000064Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           lea edx, [ebp-000000634h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-00000061Ch]
           push ecx
           lea edx, [ebp-000000604h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           mov ecx, eax
           call l10001744
           mov ecx, eax
           call l1000123A
           mov ecx, eax
           call l10001677
           mov esi, eax
           mov edi, dword ptr [ebp-00Ch]
           add edi, 000000008h
           mov ecx, 000000006h
           rep movsd
;
;* Jump:
; 100307C8(U) 
;
l10030929: mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-000000704h]
           add ecx, 000084174h
           mov dword ptr [ebp-0000006DCh], ecx
           mov edx, dword ptr [ebp-0000006DCh]
           cmp dword ptr [edx+018h], 000000000h
           jne l10030B1B
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000006C0h], eax
           cmp dword ptr [ebp-0000006C0h], 000000000h
           je l10030980
           mov ecx, dword ptr [ebp-0000006C0h]
           call l1000107D
           mov dword ptr [ebp-00000070Ch], eax
           jmp l1003098A
;
;* Jump:
; 1003096B(C) 
;
l10030980: mov dword ptr [ebp-00000070Ch], 000000000h
;
;* Jump:
; 1003097E(U) 
;
l1003098A: mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [ebp-00000070Ch]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-0000006D8h], eax
           mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [ecx+010h]
           cmp eax, dword ptr [edx+008h]
           jbe l100309F1
           mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+008h]
           mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [eax+004h]
           mov eax, dword ptr [ebp-0000006D8h]
           mov dword ptr [ecx+edx*04h], eax
           mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+008h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-0000006DCh]
           mov dword ptr [eax+008h], edx
           jmp near ptr l10030B1B
;
;* Jump:
; 100309BA(C) 
;
l100309F1: mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-0000006DCh]
           add edx, dword ptr [eax+00Ch]
           mov ecx, dword ptr [ebp-0000006DCh]
           mov dword ptr [ecx+010h], edx
           mov edx, dword ptr [ebp-0000006DCh]
           cmp dword ptr [edx+008h], 000000000h
           je l10030AC1
           mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [eax+010h]
           shl ecx, 002h
           push ecx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000006CCh], eax
           mov edx, dword ptr [ebp-0000006CCh]
           mov dword ptr [ebp-0000006C4h], edx
           mov dword ptr [ebp-0000006C8h], 000000000h
           jmp l10030A5E
;
;* Jump:
; 10030A90(U) 
;
l10030A4F: mov eax, dword ptr [ebp-0000006C8h]
           add eax, 000000001h
           mov dword ptr [ebp-0000006C8h], eax
;
;* Jump:
; 10030A4D(U) 
;
l10030A5E: mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ebp-0000006C8h]
           cmp edx, dword ptr [ecx+008h]
           jnb l10030A92
           mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [eax+004h]
           mov edx, dword ptr [ebp-0000006C8h]
           mov eax, dword ptr [ebp-0000006C4h]
           mov esi, dword ptr [ebp-0000006C8h]
           mov ecx, dword ptr [ecx+esi*04h]
           mov dword ptr [eax+edx*04h], ecx
           jmp l10030A4F
;
;* Jump:
; 10030A6D(C) 
;
l10030A92: mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ebp-0000006D0h], eax
           mov ecx, dword ptr [ebp-0000006D0h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
           mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [ebp-0000006C4h]
           mov dword ptr [edx+004h], eax
           jmp l10030AEB
;
;* Jump:
; 10030A16(C) 
;
l10030AC1: mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+010h]
           shl edx, 002h
           push edx
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-0000006D4h], eax
           mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [ebp-0000006D4h]
           mov dword ptr [eax+004h], ecx
;
;* Jump:
; 10030ABF(U) 
;
l10030AEB: mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [edx+008h]
           mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+004h]
           mov ecx, dword ptr [ebp-0000006D8h]
           mov dword ptr [edx+eax*04h], ecx
           mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [edx+008h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-0000006DCh]
           mov dword ptr [ecx+008h], eax
;
;* Jump:
; 1003094B(C), 100309EC(U) 
;
l10030B1B: mov edx, dword ptr [ebp-0000006DCh]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-0000006BCh], eax
           mov ecx, dword ptr [ebp-0000006DCh]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-0000006DCh]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-0000006BCh]
           mov dword ptr [ebp-004h], edx
           mov dword ptr [ebp-000000318h], 000000000h
           mov dword ptr [ebp-000000314h], 000000000h
           jmp l10030B6C
;
;* Jump:
; 10030C91(U) 
;
l10030B5D: mov eax, dword ptr [ebp-000000314h]
           add eax, 000000001h
           mov dword ptr [ebp-000000314h], eax
;
;* Jump:
; 10030B5B(U) 
;
l10030B6C: mov ecx, dword ptr [ebp-000000704h]
           mov edx, dword ptr [ebp-000000314h]
           cmp edx, dword ptr [ecx+000002138h]
           jnb l10030C96
           mov eax, dword ptr [ebp-000000318h]
           xor eax, 000000001h
           mov ecx, dword ptr [ebp+eax*04h-008h]
           mov dword ptr [ebp-0000006E4h], ecx
           mov edx, dword ptr [ebp-000000318h]
           mov eax, dword ptr [ebp+edx*04h-008h]
           mov dword ptr [ebp-0000006E0h], eax
           push 03EB0C6F7h
           push 0A0B5ED8Dh
           mov ecx, dword ptr [ebp-000000314h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-000000704h]
           lea eax, [edx+ecx+000001E38h]
           push eax
           mov ecx, dword ptr [ebp-0000006E4h]
           push ecx
           mov edx, dword ptr [ebp-0000006E0h]
           push edx
           call l10035323
           add esp, 000000014h
           mov dword ptr [ebp-00000031Ch], eax
           cmp dword ptr [ebp-00000031Ch], 0FFFFFFFFh
           jne l10030C79
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-0000006ECh], eax
           mov ecx, dword ptr [ebp-000000704h]
           add ecx, 000084174h
           mov dword ptr [ebp-0000006E8h], ecx
           mov edx, dword ptr [ebp-0000006ECh]
           mov eax, dword ptr [ebp-0000006E8h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-0000006E8h]
           mov eax, dword ptr [ebp-0000006ECh]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ebp-0000006F4h], ecx
           mov edx, dword ptr [ebp-000000704h]
           add edx, 000084174h
           mov dword ptr [ebp-0000006F0h], edx
           mov eax, dword ptr [ebp-0000006F4h]
           mov ecx, dword ptr [ebp-0000006F0h]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp-0000006F0h]
           mov ecx, dword ptr [ebp-0000006F4h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [edx+000000364h], 000000000h
           jmp near ptr l10030E60
;
;* Jump:
; 10030BEB(C) 
;
l10030C79: cmp dword ptr [ebp-00000031Ch], 000000000h
           jne l10030C91
           mov eax, dword ptr [ebp-000000318h]
           xor eax, 000000001h
           mov dword ptr [ebp-000000318h], eax
;
;* Jump:
; 10030C80(C) 
;
l10030C91: jmp near ptr l10030B5D
;
;* Jump:
; 10030B7E(C) 
;
l10030C96: mov ecx, dword ptr [ebp-000000318h]
           xor ecx, 000000001h
           mov edx, dword ptr [ebp+ecx*04h-008h]
           mov dword ptr [ebp-0000006FCh], edx
           mov eax, dword ptr [ebp-000000704h]
           add eax, 000084174h
           mov dword ptr [ebp-0000006F8h], eax
           mov ecx, dword ptr [ebp-0000006FCh]
           mov edx, dword ptr [ebp-0000006F8h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-0000006F8h]
           mov edx, dword ptr [ebp-0000006FCh]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-000000318h]
           mov ecx, dword ptr [ebp+eax*04h-008h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp+014h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+000000364h], 000000001h
           lea ecx, [ebp-000000310h]
           call l10001870
           mov eax, dword ptr [ebp-00Ch]
           push eax
           lea ecx, [ebp-000000310h]
           call l1000178F
           mov ecx, dword ptr [ebp+014h]
           mov dword ptr [ecx+000000360h], 000000000h
           mov dword ptr [ebp-000000314h], 000000000h
           jmp l10030D36
;
;* Jump:
; 10030DA7(U) 
;
l10030D27: mov edx, dword ptr [ebp-000000314h]
           add edx, 000000001h
           mov dword ptr [ebp-000000314h], edx
;
;* Jump:
; 10030D25(U) 
;
l10030D36: mov eax, dword ptr [ebp-000000314h]
           cmp eax, dword ptr [ebp-010h]
           jnb l10030DAC
           mov ecx, dword ptr [ebp-000000314h]
           imul ecx, ecx, 000000018h
           lea edx, [ebp+ecx-000000310h]
           push edx
           mov ecx, dword ptr [ebp-000000704h]
           add ecx, 000001E38h
           call l100010E6
           cmp eax, 0FFFFFFFFh
           jne l10030DA7
           mov eax, dword ptr [ebp-000000314h]
           imul eax, eax, 000000018h
           lea esi, [ebp+eax-000000310h]
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+000000360h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp+014h]
           lea edi, [eax+edx+060h]
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+014h]
           mov edx, dword ptr [ecx+000000360h]
           add edx, 000000001h
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [eax+000000360h], edx
;
;* Jump:
; 10030D66(C) 
;
l10030DA7: jmp near ptr l10030D27
;
;* Jump:
; 10030D3F(C) 
;
l10030DAC: mov ecx, dword ptr [ebp-000000704h]
           add ecx, 000084174h
           mov dword ptr [ebp-000000700h], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-000000700h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-000000700h]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+018h], eax
           push 0409F4000h
           push 000000000h
           lea ecx, [ebp-00000067Ch]
           push ecx
           push 0406FE000h
           push 000000000h
           lea edx, [ebp-000000664h]
           push edx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001677
           mov ecx, eax
           call l10001483
           mov esi, eax
           mov edi, dword ptr [ebp+014h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           push 0409F4000h
           push 000000000h
           lea eax, [ebp-0000006ACh]
           push eax
           push 0406FE000h
           push 000000000h
           lea ecx, [ebp-000000694h]
           push ecx
           mov ecx, dword ptr [ebp+010h]
           call l10001677
           mov ecx, eax
           call l10001483
           mov esi, eax
           mov edi, dword ptr [ebp+014h]
           add edi, 00000001Ch
           mov ecx, 000000006h
           rep movsd
           mov edx, dword ptr [ebp+014h]
           mov dword ptr [edx+034h], 0C3000000h
           mov eax, dword ptr [ebp+014h]
           mov dword ptr [eax+038h], 0C3000000h
;
;* Jump:
; 10030C74(U) 
;
l10030E60: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00010h
l10030567 ENDP
;
;* Jump:
; 1000126C(U) 
;
l10030E68 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000094h
           mov dword ptr [ebp-000000094h], ecx
           mov eax, dword ptr [ebp-000000094h]
           add eax, 0000009C8h
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov ecx, dword ptr [ebp-000000094h]
           add ecx, 000000D30h
           push ecx
           lea edx, [ebp-018h]
           push edx
           mov ecx, dword ptr [ebp+010h]
           call l10001807
           push eax
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-030h]
           push ecx
           mov ecx, dword ptr [ebp+00Ch]
           call l10001807
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov edx, dword ptr [ebp-000000094h]
           add edx, 000001098h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           lea edx, [ebp-048h]
           push edx
           mov ecx, dword ptr [ebp+010h]
           call l10001807
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov eax, dword ptr [ebp-000000094h]
           add eax, 000001400h
           push eax
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           lea edx, [ebp-060h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           push eax
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov ecx, dword ptr [ebp-000000094h]
           add ecx, 000001768h
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+010h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov edx, dword ptr [ebp-000000094h]
           add edx, 000001AD0h
           push edx
           mov eax, dword ptr [ebp+00Ch]
           push eax
           lea ecx, [ebp-078h]
           push ecx
           mov ecx, dword ptr [ebp+010h]
           call l10001807
           push eax
           lea edx, [ebp-000000090h]
           push edx
           mov ecx, dword ptr [ebp+008h]
           call l10001807
           push eax
           mov ecx, dword ptr [ebp-000000094h]
           call l10001456
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10030E68 ENDP
;
;* Jump:
; 100012BC(U) 
;
l10030F8C PROC
           push ebp
           mov ebp, esp
           sub esp, 000000098h
           push esi
           push edi
           mov dword ptr [ebp-000000090h], ecx
           mov eax, dword ptr [ebp+00Ch]
           cmp dword ptr [eax+000000364h], 000000000h
           jne l10030FAE
           jmp near ptr l100313D6
;
;* Jump:
; 10030FA7(C) 
;
l10030FAE: mov ecx, dword ptr [ebp-000000090h]
           add ecx, 000084174h
           mov dword ptr [ebp-05Ch], ecx
           mov edx, dword ptr [ebp-05Ch]
           cmp dword ptr [edx+018h], 000000000h
           jne l10031011
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-058h], eax
           cmp dword ptr [ebp-058h], 000000000h
           je l10030FEC
           mov ecx, dword ptr [ebp-058h]
           call l1000107D
           mov dword ptr [ebp-000000094h], eax
           jmp l10030FF6
;
;* Jump:
; 10030FDA(C) 
;
l10030FEC: mov dword ptr [ebp-000000094h], 000000000h
;
;* Jump:
; 10030FEA(U) 
;
l10030FF6: mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp-000000094h]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [edx+018h]
           push eax
           mov ecx, dword ptr [ebp-05Ch]
           call l100015B4
;
;* Jump:
; 10030FC4(C) 
;
l10031011: mov ecx, dword ptr [ebp-05Ch]
           mov edx, dword ptr [ecx+018h]
           mov dword ptr [ebp-054h], edx
           mov eax, dword ptr [ebp-05Ch]
           mov ecx, dword ptr [eax+018h]
           mov edx, dword ptr [ebp-05Ch]
           mov eax, dword ptr [ecx]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-054h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-000000090h]
           add edx, 000084174h
           mov dword ptr [ebp-068h], edx
           mov eax, dword ptr [ebp-068h]
           cmp dword ptr [eax+018h], 000000000h
           jne l10031091
           push 000000308h
           call l10035F12; [MSVCRT.??2@YAPAXI@Z].
           add esp, 000000004h
           mov dword ptr [ebp-064h], eax
           cmp dword ptr [ebp-064h], 000000000h
           je l1003106C
           mov ecx, dword ptr [ebp-064h]
           call l1000107D
           mov dword ptr [ebp-000000098h], eax
           jmp l10031076
;
;* Jump:
; 1003105A(C) 
;
l1003106C: mov dword ptr [ebp-000000098h], 000000000h
;
;* Jump:
; 1003106A(U) 
;
l10031076: mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ebp-000000098h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [eax+018h]
           push ecx
           mov ecx, dword ptr [ebp-068h]
           call l100015B4
;
;* Jump:
; 10031044(C) 
;
l10031091: mov edx, dword ptr [ebp-068h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ebp-060h], eax
           mov ecx, dword ptr [ebp-068h]
           mov edx, dword ptr [ecx+018h]
           mov eax, dword ptr [ebp-068h]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax+018h], ecx
           mov edx, dword ptr [ebp-060h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx+004h], eax
           mov dword ptr [ebp-018h], 000000000h
           jmp l100310D2
;
;* Jump:
; 100310FE(U) 
;
l100310C9: mov ecx, dword ptr [ebp-018h]
           add ecx, 000000001h
           mov dword ptr [ebp-018h], ecx
;
;* Jump:
; 100310C7(U) 
;
l100310D2: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-018h]
           cmp eax, dword ptr [edx+004h]
           jnb l10031100
           mov ecx, dword ptr [ebp-018h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp+008h]
           lea esi, [edx+ecx+008h]
           mov eax, dword ptr [ebp-018h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-00Ch]
           lea edi, [ecx+eax+008h]
           mov ecx, 000000006h
           rep movsd
           jmp l100310C9
;
;* Jump:
; 100310DB(C) 
;
l10031100: mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-010h], 000000000h
           jmp l10031119
;
;* Jump:
; 100311D8(U) 
;
l10031110: mov edx, dword ptr [ebp-010h]
           add edx, 000000001h
           mov dword ptr [ebp-010h], edx
;
;* Jump:
; 1003110E(U) 
;
l10031119: mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-010h]
           cmp ecx, dword ptr [eax+000000360h]
           jnb l100311DD
           mov edx, dword ptr [ebp-014h]
           xor edx, 000000001h
           mov eax, dword ptr [ebp+edx*04h-008h]
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+ecx*04h-008h]
           mov dword ptr [ebp-06Ch], edx
           push 03EB0C6F7h
           push 0A0B5ED8Dh
           mov eax, dword ptr [ebp-010h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp+00Ch]
           lea edx, [ecx+eax+060h]
           push edx
           mov eax, dword ptr [ebp-070h]
           push eax
           mov ecx, dword ptr [ebp-06Ch]
           push ecx
           call l10035323
           add esp, 000000014h
           mov dword ptr [ebp-020h], eax
           cmp dword ptr [ebp-020h], 0FFFFFFFFh
           jne l100311C9
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ebp-078h], edx
           mov eax, dword ptr [ebp-000000090h]
           add eax, 000084174h
           mov dword ptr [ebp-074h], eax
           mov ecx, dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-074h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-074h]
           mov edx, dword ptr [ebp-078h]
           mov dword ptr [ecx+018h], edx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [ebp-080h], eax
           mov ecx, dword ptr [ebp-000000090h]
           add ecx, 000084174h
           mov dword ptr [ebp-07Ch], ecx
           mov edx, dword ptr [ebp-080h]
           mov eax, dword ptr [ebp-07Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-07Ch]
           mov eax, dword ptr [ebp-080h]
           mov dword ptr [edx+018h], eax
           jmp near ptr l100313D6
;
;* Jump:
; 10031171(C) 
;
l100311C9: cmp dword ptr [ebp-020h], 000000000h
           jne l100311D8
           mov ecx, dword ptr [ebp-014h]
           xor ecx, 000000001h
           mov dword ptr [ebp-014h], ecx
;
;* Jump:
; 100311CD(C) 
;
l100311D8: jmp near ptr l10031110
;
;* Jump:
; 10031125(C) 
;
l100311DD: mov edx, dword ptr [ebp-014h]
           xor edx, 000000001h
           mov eax, dword ptr [ebp+edx*04h-008h]
           mov dword ptr [ebp-000000088h], eax
           mov ecx, dword ptr [ebp-000000090h]
           add ecx, 000084174h
           mov dword ptr [ebp-000000084h], ecx
           mov edx, dword ptr [ebp-000000088h]
           mov eax, dword ptr [ebp-000000084h]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-000000084h]
           mov eax, dword ptr [ebp-000000088h]
           mov dword ptr [edx+018h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+ecx*04h-008h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-000000090h]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov ecx, dword ptr [ebp-000000090h]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-000000090h]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           push eax
           mov ecx, dword ptr [ebp-000000090h]
           call l10001073
           mov ecx, dword ptr [ebp-000000090h]
           add ecx, 000084174h
           mov dword ptr [ebp-00000008Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-00000008Ch]
           mov ecx, dword ptr [eax+018h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp-00000008Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [edx+018h], eax
           mov dword ptr [ebp-038h], 000000000h
           mov dword ptr [ebp-034h], 000000000h
           lea ecx, [ebp-030h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-028h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-000000090h]
           add eax, 000002170h
           mov dword ptr [ebp-01Ch], eax
           mov dword ptr [ebp-010h], 000000000h
           jmp l100312E2
;
;* Jump:
; 1003137A(U) 
;
l100312D9: mov ecx, dword ptr [ebp-010h]
           add ecx, 000000001h
           mov dword ptr [ebp-010h], ecx
;
;* Jump:
; 100312D7(U) 
;
l100312E2: mov edx, dword ptr [ebp-000000090h]
           mov eax, dword ptr [ebp-010h]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l1003137F
           mov ecx, dword ptr [ebp-01Ch]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           add edx, 000000040h
           push edx
           mov ecx, dword ptr [ebp-01Ch]
           call l100013CF
           fdivr qword ptr [g10037648]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea eax, [ebp-050h]
           push eax
           call l100013CA
           add esp, 000000010h
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-038h]
           rep movsd
           mov ecx, 000000006h
           lea esi, [ebp-038h]
           mov edi, dword ptr [ebp-01Ch]
           rep movsd
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 000000004h
           push ecx
           lea ecx, [ebp-038h]
           call l100013CF
           mov edx, dword ptr [ebp+00Ch]
           fadd dword ptr [edx+034h]
           mov eax, dword ptr [ebp-01Ch]
           fstp dword ptr [eax+018h]
           mov ecx, dword ptr [ebp+00Ch]
           add ecx, 00000001Ch
           push ecx
           lea ecx, [ebp-038h]
           call l100013CF
           mov edx, dword ptr [ebp+00Ch]
           fadd dword ptr [edx+038h]
           mov eax, dword ptr [ebp-01Ch]
           fstp dword ptr [eax+01Ch]
           mov ecx, dword ptr [ebp-01Ch]
           add ecx, 00000004Ch
           mov dword ptr [ebp-01Ch], ecx
           jmp near ptr l100312D9
;
;* Jump:
; 100312F1(C) 
;
l1003137F: mov edx, dword ptr [ebp+00Ch]
           mov eax, dword ptr [edx]
           push eax
           mov ecx, dword ptr [ebp-000000090h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-000000090h]
           call [edx+0000000ACh]
           mov eax, dword ptr [ebp-000000090h]
           cmp dword ptr [eax+00007A210h], 000000000h
           je l100313B3
           mov ecx, dword ptr [ebp-000000090h]
           call l1000141F
;
;* Jump:
; 100313A6(C) 
;
l100313B3: mov ecx, dword ptr [ebp-000000090h]
           add ecx, 000002170h
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-000000090h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-000000090h]
           call [eax+000000238h]
;
;* Jump:
; 10030FA9(U), 100311C4(U) 
;
l100313D6: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00008h
l10030F8C ENDP
;
;* Jump:
; 10001447(U) 
;
l100313DE PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           push 000000011h
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-004h]
           add eax, 0000009C8h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000244h]
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000D30h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000244h]
           mov eax, dword ptr [ebp-004h]
           add eax, 000001098h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000244h]
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000001400h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000244h]
           mov eax, dword ptr [ebp-004h]
           add eax, 000001768h
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-004h]
           call [eax+000000244h]
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000001AD0h
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-004h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-004h]
           call [edx+000000244h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100313DE ENDP
;
;* Jump:
; 10001609(U) 
;
l100314A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000054h
           push esi
           push edi
           mov dword ptr [ebp-054h], ecx
           mov eax, dword ptr [ebp-054h]
           add eax, 00007A188h
           mov dword ptr [ebp-050h], eax
           mov esi, dword ptr [ebp+008h]
           add esi, 000000004h
           mov edi, dword ptr [ebp-050h]
           add edi, 000000004h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-050h]
           mov eax, dword ptr [ecx+01Ch]
           mov dword ptr [edx+01Ch], eax
           mov ecx, dword ptr [ecx+020h]
           mov dword ptr [edx+020h], ecx
           mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-030h], 000000000h
           lea edx, [ebp-02Ch]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           lea eax, [ebp-024h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 03FF00000h
           mov ecx, dword ptr [ebp+008h]
           add ecx, 000000004h
           push ecx
           lea edx, [ebp-01Ch]
           push edx
           lea ecx, [ebp-034h]
           call l10001500
           lea eax, [ebp-01Ch]
           push eax
           lea ecx, [ebp-01Ch]
           call l100013CF
           fcomp qword ptr [g10037040]
           fnstsw ax
           test ah, 001h
           je l10031570
           mov dword ptr [ebp-04Ch], 000000000h
           mov dword ptr [ebp-048h], 03FF00000h
           lea ecx, [ebp-044h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           lea edx, [ebp-03Ch]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov ecx, 000000006h
           lea esi, [ebp-04Ch]
           lea edi, [ebp-01Ch]
           rep movsd
;
;* Jump:
; 10031533(C) 
;
l10031570: fld qword ptr [ebp-014h]
           mov eax, dword ptr [ebp-054h]
           fstp dword ptr [eax+00007A17Ch]
           fld qword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-054h]
           fstp dword ptr [ecx+00007A180h]
           mov edx, dword ptr [ebp-054h]
           fld dword ptr [edx+00007A180h]
           fcomp dword ptr [g10037074]
           fnstsw ax
           test ah, 001h
           je l100315CE
           mov eax, dword ptr [ebp-054h]
           fld dword ptr [eax+00007A17Ch]
           fmul dword ptr [g10037CB4]
           mov ecx, dword ptr [ebp-054h]
           fstp dword ptr [ecx+00007A17Ch]
           mov edx, dword ptr [ebp-054h]
           fld dword ptr [edx+00007A180h]
           fmul dword ptr [g10037CB4]
           mov eax, dword ptr [ebp-054h]
           fstp dword ptr [eax+00007A180h]
;
;* Jump:
; 1003159C(C) 
;
l100315CE: fld qword ptr [ebp-014h]
           fmul qword ptr [ebp-014h]
           fld qword ptr [ebp-01Ch]
           fmul qword ptr [ebp-01Ch]
           faddp st(01h), st(00h)
           call l10035ECA; [MSVCRT._CIsqrt].
           fmul qword ptr [g10037268]
           fdivr qword ptr [g10037080]
           fstp dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-054h]
           fld dword ptr [ebp-004h]
           fmul dword ptr [ecx+00007A17Ch]
           mov edx, dword ptr [ebp-054h]
           fstp dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp-054h]
           fld dword ptr [ebp-004h]
           fdiv dword ptr [eax+074h]
           mov ecx, dword ptr [ebp-054h]
           fmul dword ptr [ecx+00007A180h]
           mov edx, dword ptr [ebp-054h]
           fstp dword ptr [edx+00007A180h]
           mov ecx, dword ptr [ebp-054h]
           call l10001154
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100314A0 ENDP
;
;* Jump:
; 10001762(U) 
;
l10031630 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000028h
           push esi
           push edi
           mov dword ptr [ebp-018h], ecx
           push 00000001Ah
           mov eax, dword ptr [ebp-018h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-018h]
           call [edx+000000114h]
           mov eax, dword ptr [ebp-018h]
           add eax, 00007A1ACh
           mov dword ptr [ebp-014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx+010h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+018h]
           mov dword ptr [ecx+018h], eax
           mov esi, dword ptr [ebp+008h]
           add esi, 00000001Ch
           mov edi, dword ptr [ebp-014h]
           add edi, 00000001Ch
           mov ecx, 000000006h
           rep movsd
           mov esi, dword ptr [ebp+008h]
           add esi, 000000034h
           mov edi, dword ptr [ebp-014h]
           add edi, 000000034h
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ecx+04Ch]
           mov dword ptr [edx+04Ch], eax
           mov ecx, dword ptr [ecx+050h]
           mov dword ptr [edx+050h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [edx+054h]
           mov dword ptr [eax+054h], ecx
           mov edx, dword ptr [edx+058h]
           mov dword ptr [eax+058h], edx
           mov eax, dword ptr [ebp+008h]
           add eax, 00000005Ch
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           add ecx, 00000005Ch
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax+004h]
           mov byte ptr [edx+004h], cl
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax+005h]
           mov byte ptr [edx+005h], cl
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-010h]
           mov cl, byte ptr [eax+006h]
           mov byte ptr [edx+006h], cl
           mov dword ptr [ebp-004h], 000000000h
           jmp l1003173A
;
;* Jump:
; 10031838(U) 
;
l10031731: mov edx, dword ptr [ebp-004h]
           add edx, 000000001h
           mov dword ptr [ebp-004h], edx
;
;* Jump:
; 1003172F(U) 
;
l1003173A: cmp dword ptr [ebp-004h], 0000000C8h
           jnl l1003183D
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-018h]
           fld dword ptr [eax+00007A17Ch]
           fcomp dword ptr [ecx+00007A180h]
           fnstsw ax
           test ah, 041h
           jne l100317A7
           mov edx, dword ptr [ebp-018h]
           fld qword ptr [edx+00007A1A4h]
           fchs
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000064h
           mov dword ptr [ebp-01Ch], ecx
           fild dword ptr [ebp-01Ch]
           fmul qword ptr [eax+00007A18Ch]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           fld dword ptr [edx+00007A17Ch]
           fmul dword ptr [eax+06Ch]
           fdivp st(01h), st(00h)
           mov ecx, dword ptr [ebp-018h]
           fadd qword ptr [ecx+00007A19Ch]
           fadd qword ptr [g10037040]
           fdivp st(01h), st(00h)
           fstp dword ptr [ebp-008h]
           jmp l100317EC
;
;* Jump:
; 1003175E(C) 
;
l100317A7: mov edx, dword ptr [ebp-018h]
           fld qword ptr [edx+00007A1A4h]
           fchs
           mov eax, dword ptr [ebp-018h]
           mov ecx, dword ptr [ebp-004h]
           sub ecx, 000000064h
           mov dword ptr [ebp-020h], ecx
           fild dword ptr [ebp-020h]
           fmul qword ptr [eax+00007A194h]
           mov edx, dword ptr [ebp-018h]
           mov eax, dword ptr [ebp-018h]
           fld dword ptr [edx+00007A180h]
           fmul dword ptr [eax+070h]
           fdivp st(01h), st(00h)
           mov ecx, dword ptr [ebp-018h]
           fadd qword ptr [ecx+00007A19Ch]
           fadd qword ptr [g10037040]
           fdivp st(01h), st(00h)
           fstp dword ptr [ebp-008h]
;
;* Jump:
; 100317A5(U) 
;
l100317EC: fld dword ptr [ebp-008h]
           fdivr qword ptr [g10037080]
           fst dword ptr [ebp-024h]
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-018h]
           fstp dword ptr [eax+edx+00007A214h]
           fld dword ptr [ebp-008h]
           fdiv qword ptr [g10037CB8]
           mov ecx, dword ptr [ebp-018h]
           fadd dword ptr [ecx+00007A1B8h]
           call l10035ED6; [MSVCRT._CIsin].
           fst dword ptr [ebp-028h]
           mov edx, dword ptr [ebp-004h]
           imul edx, edx, 0000000CCh
           mov eax, dword ptr [ebp-018h]
           fstp dword ptr [eax+edx+00007A218h]
           jmp near ptr l10031731
;
;* Jump:
; 10031741(C) 
;
l1003183D: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10031630 ENDP
;
;* Jump:
; 1000127B(U) 
;
l10031845 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000007Ch
           mov dword ptr [ebp-028h], ecx
           mov eax, dword ptr [ebp-028h]
           mov dword ptr [eax+00000216Ch], 000000000h
           mov ecx, dword ptr [ebp-028h]
           mov dword ptr [ecx+00004E170h], 000000000h
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+000062174h], 000000000h
           mov eax, dword ptr [ebp-028h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+00007A210h], 000000001h
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov ecx, dword ptr [ebp-028h]
           call l10001073
           mov edx, dword ptr [ebp-028h]
           mov dword ptr [edx+00007A210h], 000000000h
           mov eax, dword ptr [ebp-028h]
           add eax, 000002170h
           mov dword ptr [ebp-010h], eax
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l100318B8
;
;* Jump:
; 10031B9D(U) 
;
l100318AF: mov ecx, dword ptr [ebp-00Ch]
           add ecx, 000000001h
           mov dword ptr [ebp-00Ch], ecx
;
;* Jump:
; 100318AD(U) 
;
l100318B8: mov edx, dword ptr [ebp-028h]
           mov eax, dword ptr [ebp-00Ch]
           cmp eax, dword ptr [edx+00000216Ch]
           jnb l10031BA2
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx+03Ch]
           mov dword ptr [ecx+040h], eax
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [ecx+034h]
           fmul dword ptr [edx+00007A17Ch]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [ebp-028h]
           fld dword ptr [eax+038h]
           fmul dword ptr [ecx+00007A180h]
           faddp st(01h), st(00h)
           fst dword ptr [ebp-008h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           call [__imp_floor]; [MSVCRT.floor].
           add esp, 000000008h
           call l10035E80; [MSVCRT._ftol].
           mov dword ptr [ebp-004h], eax
           fild dword ptr [ebp-004h]
           fsubr dword ptr [ebp-008h]
           fstp dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-004h]
           add edx, 000000064h
           imul edx, edx, 0000000CCh
           fld dword ptr [g1003706C]
           fsub dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-028h]
           fmul dword ptr [eax+edx+00007A218h]
           mov ecx, dword ptr [ebp-004h]
           add ecx, 000000065h
           imul ecx, ecx, 0000000CCh
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [ebp-008h]
           fmul dword ptr [edx+ecx+00007A218h]
           faddp st(01h), st(00h)
           fmul qword ptr [g10037CD8]
           fstp qword ptr [ebp-018h]
           mov eax, dword ptr [ebp-010h]
           fld qword ptr [g100370D0]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-030h]
           mov ecx, dword ptr [ebp-028h]
           add ecx, 00007A18Ch
           push ecx
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           fdivr qword ptr [ebp-030h]
           fst dword ptr [ebp-034h]
           push ecx
           fstp dword ptr [esp]
           call l1000128F
           add esp, 000000004h
           fadd qword ptr [ebp-018h]
           fmul qword ptr [g100372B0]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+00007A1C0h]
           fmul dword ptr [g10037070]
           faddp st(01h), st(00h)
           fcomp qword ptr [g10037CC8]
           fnstsw ax
           test ah, 001h
           je l10031A08
           mov eax, dword ptr [ebp-010h]
           fld qword ptr [g100370D0]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-03Ch]
           mov ecx, dword ptr [ebp-028h]
           add ecx, 00007A18Ch
           push ecx
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           fdivr qword ptr [ebp-03Ch]
           fst dword ptr [ebp-040h]
           push ecx
           fstp dword ptr [esp]
           call l1000128F
           add esp, 000000004h
           fadd qword ptr [ebp-018h]
           fmul qword ptr [g100372B0]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+00007A1C0h]
           fmul dword ptr [g10037070]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-048h]
           jmp l10031A16
;
;* Jump:
; 100319B4(C) 
;
l10031A08: mov dword ptr [ebp-048h], 000000000h
           mov dword ptr [ebp-044h], 0406D8000h
;
;* Jump:
; 10031A06(U) 
;
l10031A16: fld qword ptr [ebp-048h]
           fcomp qword ptr [g10037268]
           fnstsw ax
           test ah, 041h
           jne l10031AF2
           mov eax, dword ptr [ebp-010h]
           fld qword ptr [g100370D0]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-050h]
           mov ecx, dword ptr [ebp-028h]
           add ecx, 00007A18Ch
           push ecx
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           fdivr qword ptr [ebp-050h]
           fst dword ptr [ebp-054h]
           push ecx
           fstp dword ptr [esp]
           call l1000128F
           add esp, 000000004h
           fadd qword ptr [ebp-018h]
           fmul qword ptr [g100372B0]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+00007A1C0h]
           fmul dword ptr [g10037070]
           faddp st(01h), st(00h)
           fcomp qword ptr [g10037CC8]
           fnstsw ax
           test ah, 001h
           je l10031AD6
           mov eax, dword ptr [ebp-010h]
           fld qword ptr [g100370D0]
           fmul qword ptr [eax+010h]
           fstp qword ptr [ebp-05Ch]
           mov ecx, dword ptr [ebp-028h]
           add ecx, 00007A18Ch
           push ecx
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           fdivr qword ptr [ebp-05Ch]
           fst dword ptr [ebp-060h]
           push ecx
           fstp dword ptr [esp]
           call l1000128F
           add esp, 000000004h
           fadd qword ptr [ebp-018h]
           fmul qword ptr [g100372B0]
           mov edx, dword ptr [ebp-028h]
           fld dword ptr [edx+00007A1C0h]
           fmul dword ptr [g10037070]
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-068h]
           jmp l10031AE4
;
;* Jump:
; 10031A82(C) 
;
l10031AD6: mov dword ptr [ebp-068h], 000000000h
           mov dword ptr [ebp-064h], 0406D8000h
;
;* Jump:
; 10031AD4(U) 
;
l10031AE4: mov eax, dword ptr [ebp-068h]
           mov dword ptr [ebp-070h], eax
           mov ecx, dword ptr [ebp-064h]
           mov dword ptr [ebp-06Ch], ecx
           jmp l10031B00
;
;* Jump:
; 10031A24(C) 
;
l10031AF2: mov dword ptr [ebp-070h], 000000000h
           mov dword ptr [ebp-06Ch], 040240000h
;
;* Jump:
; 10031AF0(U) 
;
l10031B00: fld qword ptr [g100371F8]
           fmul qword ptr [ebp-070h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+02Ch]
           mov eax, dword ptr [ebp-028h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00007A20Ch]
           mov dword ptr [ebp-074h], ecx
           fild dword ptr [ebp-074h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+020h]
           mov eax, dword ptr [ebp-028h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00007A20Dh]
           mov dword ptr [ebp-078h], ecx
           fild dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+024h]
           mov eax, dword ptr [ebp-028h]
           xor ecx, ecx
           mov cl, byte ptr [eax+00007A20Eh]
           mov dword ptr [ebp-07Ch], ecx
           fild dword ptr [ebp-07Ch]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+028h]
           mov eax, dword ptr [ebp-028h]
           add eax, 00007A1C8h
           push eax
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           mov ecx, dword ptr [ebp-028h]
           fadd qword ptr [ecx+00007A1F8h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+018h]
           mov eax, dword ptr [ebp-028h]
           add eax, 00007A1E0h
           push eax
           mov ecx, dword ptr [ebp-010h]
           call l100013CF
           mov ecx, dword ptr [ebp-028h]
           fadd qword ptr [ecx+00007A200h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+01Ch]
           mov eax, dword ptr [ebp-010h]
           add eax, 00000004Ch
           mov dword ptr [ebp-010h], eax
           jmp near ptr l100318AF
;
;* Jump:
; 100318C4(C) 
;
l10031BA2: mov ecx, dword ptr [ebp-028h]
           add ecx, 000002170h
           mov dword ptr [ebp-010h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           jmp l10031BC0
;
;* Jump:
; 10031CF5(U) 
;
l10031BB7: mov edx, dword ptr [ebp-00Ch]
           add edx, 000000001h
           mov dword ptr [ebp-00Ch], edx
;
;* Jump:
; 10031BB5(U) 
;
l10031BC0: mov eax, dword ptr [ebp-028h]
           mov ecx, dword ptr [ebp-00Ch]
           cmp ecx, dword ptr [eax+00000216Ch]
           jnb l10031CFA
           mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+020h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10031C1E
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+020h]
           fstp dword ptr [ebp-01Ch]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ebp-01Ch]
           fmul dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+024h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [ebp-01Ch]
           fmul dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+028h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+020h], 03F800000h
           jmp l10031C30
;
;* Jump:
; 10031BE3(C) 
;
l10031C1E: mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+020h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+020h]
;
;* Jump:
; 10031C1C(U) 
;
l10031C30: mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+024h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10031C7C
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+024h]
           fstp dword ptr [ebp-020h]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ebp-020h]
           fmul dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+020h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [ebp-020h]
           fmul dword ptr [eax+028h]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+028h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+024h], 03F800000h
           jmp l10031C8E
;
;* Jump:
; 10031C41(C) 
;
l10031C7C: mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+024h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+024h]
;
;* Jump:
; 10031C7A(U) 
;
l10031C8E: mov edx, dword ptr [ebp-010h]
           fld dword ptr [edx+028h]
           fcomp dword ptr [g10037204]
           fnstsw ax
           test ah, 041h
           jne l10031CDA
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [g10037204]
           fdiv dword ptr [eax+028h]
           fstp dword ptr [ebp-024h]
           mov ecx, dword ptr [ebp-010h]
           fld dword ptr [ebp-024h]
           fmul dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-010h]
           fstp dword ptr [edx+020h]
           mov eax, dword ptr [ebp-010h]
           fld dword ptr [ebp-024h]
           fmul dword ptr [eax+024h]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+028h], 03F800000h
           jmp l10031CEC
;
;* Jump:
; 10031C9F(C) 
;
l10031CDA: mov eax, dword ptr [ebp-010h]
           fld dword ptr [eax+028h]
           fmul dword ptr [g10037208]
           mov ecx, dword ptr [ebp-010h]
           fstp dword ptr [ecx+028h]
;
;* Jump:
; 10031CD8(U) 
;
l10031CEC: mov edx, dword ptr [ebp-010h]
           add edx, 00000004Ch
           mov dword ptr [ebp-010h], edx
           jmp near ptr l10031BB7
;
;* Jump:
; 10031BCC(C) 
;
l10031CFA: mov eax, dword ptr [ebp-028h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-028h]
           call [edx+00000023Ch]
           mov esp, ebp
           pop ebp
           ret 00004h
l10031845 ENDP
;
;* Jump:
; 100013DE(U) 
;
l10031D0E PROC
           push ebp
           mov ebp, esp
           sub esp, 000000078h
           push esi
           push edi
           mov dword ptr [ebp-040h], ecx
           mov dword ptr [ebp-004h], 000000000h
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+0000000B0h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [edx+ecx*04h+0000000B4h], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+0000000B0h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [eax+0000000B0h], edx
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp+008h]
           call [edx]
           mov dword ptr [ebp-044h], eax
           cmp dword ptr [ebp-044h], 00000044Ch
           je l10031D80
           cmp dword ptr [ebp-044h], 00000044Dh
           je l10031DF7
           cmp dword ptr [ebp-044h], 00000044Eh
           je l10031ED6
           jmp near ptr l10031FBC
;
;* Jump:
; 10031D5F(C) 
;
l10031D80: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-048h], eax
           fild dword ptr [ebp-048h]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-040h]
           fadd dword ptr [ecx+0000009B8h]
           mov edx, dword ptr [ebp-040h]
           fstp dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-04Ch], ecx
           fild dword ptr [ebp-04Ch]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-040h]
           fadd dword ptr [edx+0000009BCh]
           mov eax, dword ptr [ebp-040h]
           fstp dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-050h], edx
           fild dword ptr [ebp-050h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-040h]
           fadd dword ptr [eax+0000009C0h]
           mov ecx, dword ptr [ebp-040h]
           fstp dword ptr [ecx+0000009C0h]
           jmp near ptr l10031FBC
;
;* Jump:
; 10031D68(C) 
;
l10031DF7: mov edx, dword ptr [ebp+008h]
           fld dword ptr [edx+01Ch]
           fstp qword ptr [ebp-058h]
           mov eax, dword ptr [ebp-040h]
           add eax, 000000088h
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-058h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10031E54
           mov ecx, dword ptr [ebp+008h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-060h]
           mov edx, dword ptr [ebp-040h]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-060h]
           fstp qword ptr [ebp-068h]
           jmp l10031E62
;
;* Jump:
; 10031E27(C) 
;
l10031E54: mov dword ptr [ebp-068h], 000000000h
           mov dword ptr [ebp-064h], 000000000h
;
;* Jump:
; 10031E52(U) 
;
l10031E62: fld qword ptr [ebp-068h]
           fstp dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-06Ch], ecx
           fild dword ptr [ebp-06Ch]
           fmul dword ptr [ebp-004h]
           mov edx, dword ptr [ebp-040h]
           fadd dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp-040h]
           fstp dword ptr [eax+0000009B8h]
           mov ecx, dword ptr [ebp+008h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-070h], edx
           fild dword ptr [ebp-070h]
           fmul dword ptr [ebp-004h]
           mov eax, dword ptr [ebp-040h]
           fadd dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp-040h]
           fstp dword ptr [ecx+0000009BCh]
           mov edx, dword ptr [ebp+008h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-074h], eax
           fild dword ptr [ebp-074h]
           fmul dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-040h]
           fadd dword ptr [ecx+0000009C0h]
           mov edx, dword ptr [ebp-040h]
           fstp dword ptr [edx+0000009C0h]
           jmp near ptr l10031FBC
;
;* Jump:
; 10031D75(C) 
;
l10031ED6: mov eax, dword ptr [ebp+008h]
           add eax, 00000004Ch
           mov dword ptr [ebp-03Ch], eax
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000084h
           mov dword ptr [ebp-038h], ecx
           mov edx, dword ptr [ebp-038h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-03Ch]
           fld qword ptr [ecx+010h]
           fmul qword ptr [eax+014h]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-03Ch]
           fld qword ptr [ecx+008h]
           fmul qword ptr [eax+00Ch]
           mov eax, dword ptr [ebp-038h]
           mov ecx, dword ptr [ebp-03Ch]
           fld qword ptr [ecx]
           fmul qword ptr [eax+004h]
           faddp st(01h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+01Ch]
           fst dword ptr [ebp-078h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+0000001B4h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-040h]
           fstp dword ptr [ecx+eax+0000001D4h]
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+0000001B4h]
           shl eax, 005h
           mov ecx, dword ptr [ebp-040h]
           fld dword ptr [ecx+eax+0000001D4h]
           sub esp, 000000008h
           fstp qword ptr [esp]
           lea edx, [ebp-01Ch]
           push edx
           mov ecx, dword ptr [ebp-040h]
           add ecx, 000000088h
           call l10001677
           push eax
           lea eax, [ebp-034h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           add ecx, 00000004Ch
           call l1000123A
           mov esi, eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+0000001B4h]
           shl edx, 005h
           mov eax, dword ptr [ebp-040h]
           lea edi, [eax+edx+0000001BCh]
           mov ecx, 000000006h
           rep movsd
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+0000001B4h]
           shl edx, 005h
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+edx+0000001B8h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+0000001B4h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx+0000001B4h], eax
;
;* Jump:
; 10031D7B(U), 10031DF2(U), 10031ED1(U) 
;
l10031FBC: pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10031D0E ENDP
;
;* Jump:
; 100012C6(U) 
;
l10031FC4 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           mov dword ptr [ebp-00Ch], ecx
           mov dword ptr [ebp-008h], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+0000000B0h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+0000000B0h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+0000000B0h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx+ecx*04h+0000000B4h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-004h]
           call [edx]
           mov dword ptr [ebp-010h], eax
           cmp dword ptr [ebp-010h], 00000044Ch
           je l10032034
           cmp dword ptr [ebp-010h], 00000044Dh
           je l100320AB
           cmp dword ptr [ebp-010h], 00000044Eh
           je l10032187
           jmp near ptr l1003219C
;
;* Jump:
; 10032013(C) 
;
l10032034: mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+01Ch]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+018h]
           mov dword ptr [ebp-014h], eax
           fild dword ptr [ebp-014h]
           fmul dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fsubr dword ptr [ecx+0000009B8h]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+019h]
           mov dword ptr [ebp-018h], ecx
           fild dword ptr [ebp-018h]
           fmul dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fsubr dword ptr [edx+0000009BCh]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+01Ah]
           mov dword ptr [ebp-01Ch], edx
           fild dword ptr [ebp-01Ch]
           fmul dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fsubr dword ptr [eax+0000009C0h]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+0000009C0h]
           jmp near ptr l1003219C
;
;* Jump:
; 1003201C(C) 
;
l100320AB: mov edx, dword ptr [ebp-004h]
           fld dword ptr [edx+01Ch]
           fstp qword ptr [ebp-024h]
           mov eax, dword ptr [ebp-00Ch]
           add eax, 000000088h
           push eax
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-024h]
           fcomp qword ptr [g10037020]
           fnstsw ax
           test ah, 041h
           jne l10032108
           mov ecx, dword ptr [ebp-004h]
           fld dword ptr [ecx+01Ch]
           fstp qword ptr [ebp-02Ch]
           mov edx, dword ptr [ebp-00Ch]
           add edx, 000000088h
           push edx
           mov ecx, dword ptr [ebp-004h]
           add ecx, 00000008Ch
           call l100013CF
           fchs
           fmul qword ptr [ebp-02Ch]
           fstp qword ptr [ebp-034h]
           jmp l10032116
;
;* Jump:
; 100320DB(C) 
;
l10032108: mov dword ptr [ebp-034h], 000000000h
           mov dword ptr [ebp-030h], 000000000h
;
;* Jump:
; 10032106(U) 
;
l10032116: fld qword ptr [ebp-034h]
           fstp dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-004h]
           xor ecx, ecx
           mov cl, byte ptr [eax+018h]
           mov dword ptr [ebp-038h], ecx
           fild dword ptr [ebp-038h]
           fmul dword ptr [ebp-008h]
           mov edx, dword ptr [ebp-00Ch]
           fsubr dword ptr [edx+0000009B8h]
           mov eax, dword ptr [ebp-00Ch]
           fstp dword ptr [eax+0000009B8h]
           mov ecx, dword ptr [ebp-004h]
           xor edx, edx
           mov dl, byte ptr [ecx+019h]
           mov dword ptr [ebp-03Ch], edx
           fild dword ptr [ebp-03Ch]
           fmul dword ptr [ebp-008h]
           mov eax, dword ptr [ebp-00Ch]
           fsubr dword ptr [eax+0000009BCh]
           mov ecx, dword ptr [ebp-00Ch]
           fstp dword ptr [ecx+0000009BCh]
           mov edx, dword ptr [ebp-004h]
           xor eax, eax
           mov al, byte ptr [edx+01Ah]
           mov dword ptr [ebp-040h], eax
           fild dword ptr [ebp-040h]
           fmul dword ptr [ebp-008h]
           mov ecx, dword ptr [ebp-00Ch]
           fsubr dword ptr [ecx+0000009C0h]
           mov edx, dword ptr [ebp-00Ch]
           fstp dword ptr [edx+0000009C0h]
           jmp l1003219C
;
;* Jump:
; 10032029(C) 
;
l10032187: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [eax+0000001B4h]
           sub ecx, 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+0000001B4h], ecx
;
;* Jump:
; 1003202F(U), 100320A6(U), 10032185(U) 
;
l1003219C: mov esp, ebp
           pop ebp
           ret
l10031FC4 ENDP
;
;* Jump:
; 100017B2(U) 
;
l100321A0 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000030h
           push esi
           push edi
           mov dword ptr [ebp-030h], ecx
           xor eax, eax
           mov al, byte ptr [g100518D8]
           and eax, 000000001h
           test eax, eax
           jne l1003220D
           mov cl, byte ptr [g100518D8]
           or cl, 001h
           mov byte ptr [g100518D8], cl
           mov dword ptr [g100518B0], 000000000h
           mov dword ptr [g100518B4], 000000000h
           mov edx, offset g100518B8
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, offset g100518C0
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           push offset l10032487
           call l10035EB2
           add esp, 000000004h
;
;* Jump:
; 100321B7(C) 
;
l1003220D: mov dword ptr [ebp-014h], 000000000h
           mov dword ptr [ebp-004h], 000000000h
           mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00000216Ch]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00000216Ch]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+00000216Ch], ecx
           mov eax, dword ptr [ebp-00Ch]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-030h]
           lea edx, [ecx+eax+000002170h]
           mov dword ptr [ebp-014h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           imul ecx, ecx, 00000004Ch
           mov edx, dword ptr [ebp-030h]
           lea eax, [edx+ecx+000002170h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-030h]
           lea ecx, [eax+edx+000002170h]
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [edx]
           fadd qword ptr [eax]
           fmul qword ptr [g10037100]
           mov ecx, dword ptr [ebp-014h]
           fstp qword ptr [ecx]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [edx+008h]
           fadd qword ptr [eax+008h]
           fmul qword ptr [g10037100]
           mov ecx, dword ptr [ebp-014h]
           fstp qword ptr [ecx+008h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld qword ptr [edx+010h]
           fadd qword ptr [eax+010h]
           fmul qword ptr [g10037100]
           mov ecx, dword ptr [ebp-014h]
           fstp qword ptr [ecx+010h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+02Ch]
           fadd dword ptr [eax+02Ch]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+02Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+020h]
           fadd dword ptr [eax+020h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+020h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+024h]
           fadd dword ptr [eax+024h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+024h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+028h]
           fadd dword ptr [eax+028h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+028h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+018h]
           fadd dword ptr [eax+018h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+018h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+01Ch]
           fadd dword ptr [eax+01Ch]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+01Ch]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ebp-008h]
           fld dword ptr [edx+030h]
           fadd dword ptr [eax+030h]
           fmul dword ptr [g10037210]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+030h]
           mov edx, dword ptr [ebp-030h]
           cmp dword ptr [edx+078h], 000000000h
           je l100323BD
           mov eax, dword ptr [ebp-014h]
           fld qword ptr [g10037080]
           fdiv qword ptr [eax+010h]
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+03Ch]
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+03Ch]
           mov dword ptr [edx+040h], ecx
           mov edx, dword ptr [ebp-014h]
           fld dword ptr [edx+03Ch]
           mov eax, dword ptr [ebp-014h]
           fmul qword ptr [eax]
           mov ecx, dword ptr [ebp-030h]
           fmul dword ptr [ecx+06Ch]
           mov edx, dword ptr [ebp-014h]
           fstp dword ptr [edx+034h]
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [ebp-014h]
           fld dword ptr [ecx+03Ch]
           fmul qword ptr [eax+008h]
           mov edx, dword ptr [ebp-030h]
           fmul dword ptr [edx+070h]
           mov eax, dword ptr [ebp-014h]
           fstp dword ptr [eax+038h]
;
;* Jump:
; 1003236E(C) 
;
l100323BD: mov ecx, dword ptr [ebp-030h]
           mov edx, dword ptr [ecx+00007A178h]
           add edx, 000000004h
           push edx
           lea eax, [ebp-02Ch]
           push eax
           mov ecx, dword ptr [ebp-014h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           mov edi, offset g100518B0
           rep movsd
           push offset g100518B0
           mov ecx, offset g100518B0
           call l100013CF
           mov ecx, dword ptr [ebp-014h]
           fstp dword ptr [ecx+044h]
           mov edx, dword ptr [ebp-030h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-030h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-004h], edx
           mov eax, dword ptr [ebp-030h]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-030h]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           fld dword ptr [eax+00Ch]
           fmul dword ptr [g1003720C]
           mov ecx, dword ptr [ebp-004h]
           fstp dword ptr [ecx+00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], eax
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100321A0 ENDP
;
l10032487 PROC
           push ebp
           mov ebp, esp
           pop ebp
           ret
l10032487 ENDP
;
;* Jump:
; 100017B7(U) 
;
           call l1003248C; Implemented in c++ code
;
;* Jump:
; 100017A8(U) 
;
l10032646 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-00Ch], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-014h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-010h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-010h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp-010h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-014h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+00004E170h]
           imul ecx, ecx, 000000014h
           mov edx, dword ptr [ebp-014h]
           lea eax, [edx+ecx+00004E174h]
           mov dword ptr [ebp-008h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+00004E170h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+00004E170h], edx
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+008h], 000000000h
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [ebp-008h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-008h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx+004h], eax
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-008h]
           mov ecx, dword ptr [edx+00Ch]
           mov dword ptr [eax+00Ch], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx+010h], 000000000h
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-014h]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-014h]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx], 000000000h
           je l100327F1
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+00Ch], edx
           jmp l100327FD
;
;* Jump:
; 100327DE(C) 
;
l100327F1: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax+00Ch], edx
;
;* Jump:
; 100327EF(U) 
;
l100327FD: mov eax, dword ptr [ebp-00Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+004h], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax+008h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+008h], 000000000h
           je l10032833
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+014h], eax
           jmp l10032842
;
;* Jump:
; 10032823(C) 
;
l10032833: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+014h], ecx
;
;* Jump:
; 10032831(U) 
;
l10032842: mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+000062174h]
           imul eax, eax, 000000018h
           mov ecx, dword ptr [ebp-014h]
           lea edx, [ecx+eax+000062178h]
           mov dword ptr [ebp-00Ch], edx
           mov eax, dword ptr [ebp-014h]
           mov ecx, dword ptr [eax+000062174h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-014h]
           mov dword ptr [edx+000062174h], ecx
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax], 000000000h
           je l10032890
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
           jmp l1003289F
;
;* Jump:
; 10032880(C) 
;
l10032890: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+00Ch], ecx
;
;* Jump:
; 1003288E(U) 
;
l1003289F: mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx+004h], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+004h], 000000000h
           je l100328C5
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+010h], eax
           jmp l100328D1
;
;* Jump:
; 100328B2(C) 
;
l100328C5: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx+010h], eax
;
;* Jump:
; 100328C3(U) 
;
l100328D1: mov ecx, dword ptr [ebp-00Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+008h], 000000001h
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp-010h]
           mov dword ptr [edx+014h], eax
           mov ecx, dword ptr [ebp-014h]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-014h]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-00Ch], ecx
           mov edx, dword ptr [ebp-014h]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-014h]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+004h], 000000000h
           je l10032934
           mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov dword ptr [eax+00Ch], edx
           jmp l10032943
;
;* Jump:
; 10032924(C) 
;
l10032934: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+00Ch], eax
;
;* Jump:
; 10032932(U) 
;
l10032943: mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+004h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+008h], 000000000h
           je l10032969
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+010h], edx
           jmp l10032975
;
;* Jump:
; 10032956(C) 
;
l10032969: mov eax, dword ptr [ebp-00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+014h]
           mov dword ptr [eax+010h], edx
;
;* Jump:
; 10032967(U) 
;
l10032975: mov eax, dword ptr [ebp-00Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [eax+008h], 000000001h
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-010h]
           mov dword ptr [ecx+00Ch], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [ecx+014h], edx
           mov esp, ebp
           pop ebp
           ret 00004h
l10032646 ENDP
;
;* Jump:
; 10001497(U) 
;
l100329C6 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000040h
           push esi
           push edi
           mov dword ptr [ebp-040h], ecx
           mov dword ptr [ebp-020h], 000000000h
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           lea eax, [ebp-014h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-00Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-040h]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-024h], edx
           mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-040h]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-024h]
           mov ecx, dword ptr [edx+004h]
           mov dword ptr [eax], ecx
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-024h]
           mov edx, dword ptr [eax+004h]
           mov dword ptr [ecx+004h], edx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+014h]
           fld dword ptr [ecx+00Ch]
           fmul dword ptr [g1003720C]
           mov edx, dword ptr [ebp-024h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+00004E170h]
           imul edx, edx, 000000014h
           mov eax, dword ptr [ebp-040h]
           lea ecx, [eax+edx+00004E174h]
           mov dword ptr [ebp-004h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+00004E170h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx+00004E170h], eax
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax+004h], 000000000h
           je l10032ACA
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+010h]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx]
           mov dword ptr [eax], ecx
           jmp l10032ADB
;
;* Jump:
; 10032AB9(C) 
;
l10032ACA: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [eax+008h]
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx], eax
;
;* Jump:
; 10032AC8(U) 
;
l10032ADB: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [edx+004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-040h]
           lea edx, [ecx+eax+000002170h]
           push edx
           lea eax, [ebp-03Ch]
           push eax
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-040h]
           lea ecx, [eax+edx+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-01Ch]
           rep movsd
           lea ecx, [ebp-01Ch]
           push ecx
           lea ecx, [ebp-01Ch]
           call l100013CF
           mov edx, dword ptr [ebp-004h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-040h]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-020h], ecx
           mov edx, dword ptr [ebp-040h]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-040h]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+004h]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx+004h], 000000000h
           je l10032B94
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+00Ch], eax
           jmp l10032BA0
;
;* Jump:
; 10032B81(C) 
;
l10032B94: mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov dword ptr [ecx+00Ch], eax
;
;* Jump:
; 10032B92(U) 
;
l10032BA0: mov ecx, dword ptr [ebp-020h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+004h], 000000001h
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp-024h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx], 000000000h
           je l10032BD4
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           mov dword ptr [edx+014h], ecx
           jmp l10032BE3
;
;* Jump:
; 10032BC4(C) 
;
l10032BD4: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+014h], edx
;
;* Jump:
; 10032BD2(U) 
;
l10032BE3: mov eax, dword ptr [ebp-040h]
           mov ecx, dword ptr [eax+000062174h]
           imul ecx, ecx, 000000018h
           mov edx, dword ptr [ebp-040h]
           lea eax, [edx+ecx+000062178h]
           mov dword ptr [ebp-020h], eax
           mov ecx, dword ptr [ebp-040h]
           mov edx, dword ptr [ecx+000062174h]
           add edx, 000000001h
           mov eax, dword ptr [ebp-040h]
           mov dword ptr [eax+000062174h], edx
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+004h]
           mov dword ptr [ecx], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10032C33
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov dword ptr [edx+00Ch], ecx
           jmp l10032C42
;
;* Jump:
; 10032C23(C) 
;
l10032C33: mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+00Ch], edx
;
;* Jump:
; 10032C31(U) 
;
l10032C42: mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [ecx+010h], edx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ebp-024h]
           mov dword ptr [ecx+014h], edx
           mov eax, dword ptr [ebp+008h]
           cmp dword ptr [eax], 000000000h
           je l10032C7F
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [edx+008h]
           mov dword ptr [eax+00Ch], ecx
;
;* Jump:
; 10032C6E(C) 
;
l10032C7F: mov edx, dword ptr [ebp+008h]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [edx+004h], 000000001h
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], ecx
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l100329C6 ENDP
;
;* Jump:
; 100017F8(U) 
;
l10032C9A PROC
           push ebp
           mov ebp, esp
           sub esp, 00000003Ch
           push esi
           push edi
           mov dword ptr [ebp-03Ch], ecx
           mov dword ptr [ebp-01Ch], 000000000h
           mov dword ptr [ebp-018h], 000000000h
           mov dword ptr [ebp-014h], 000000000h
           lea eax, [ebp-010h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           lea ecx, [ebp-008h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+00004E170h]
           imul eax, eax, 000000014h
           mov ecx, dword ptr [ebp-03Ch]
           lea edx, [ecx+eax+00004E174h]
           mov dword ptr [ebp-020h], edx
           mov eax, dword ptr [ebp-03Ch]
           mov ecx, dword ptr [eax+00004E170h]
           add ecx, 000000001h
           mov edx, dword ptr [ebp-03Ch]
           mov dword ptr [edx+00004E170h], ecx
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx+004h], 000000000h
           je l10032D2A
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+010h]
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [eax]
           mov dword ptr [ecx], edx
           jmp l10032D38
;
;* Jump:
; 10032D19(C) 
;
l10032D2A: mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+010h]
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [ecx+004h]
           mov dword ptr [edx], eax
;
;* Jump:
; 10032D28(U) 
;
l10032D38: mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ecx+00Ch]
           mov eax, dword ptr [ebp-020h]
           mov ecx, dword ptr [edx+004h]
           mov dword ptr [eax+004h], ecx
           mov edx, dword ptr [ebp-020h]
           mov eax, dword ptr [edx]
           imul eax, eax, 00000004Ch
           mov ecx, dword ptr [ebp-03Ch]
           lea edx, [ecx+eax+000002170h]
           push edx
           lea eax, [ebp-038h]
           push eax
           mov ecx, dword ptr [ebp-020h]
           mov edx, dword ptr [ecx+004h]
           imul edx, edx, 00000004Ch
           mov eax, dword ptr [ebp-03Ch]
           lea ecx, [eax+edx+000002170h]
           call l1000123A
           mov esi, eax
           mov ecx, 000000006h
           lea edi, [ebp-018h]
           rep movsd
           lea ecx, [ebp-018h]
           push ecx
           lea ecx, [ebp-018h]
           call l100013CF
           mov edx, dword ptr [ebp-020h]
           fstp dword ptr [edx+00Ch]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [eax+010h], 000000000h
           mov ecx, dword ptr [ebp-03Ch]
           mov edx, dword ptr [ecx+000062174h]
           imul edx, edx, 000000018h
           mov eax, dword ptr [ebp-03Ch]
           lea ecx, [eax+edx+000062178h]
           mov dword ptr [ebp-01Ch], ecx
           mov edx, dword ptr [ebp-03Ch]
           mov eax, dword ptr [edx+000062174h]
           add eax, 000000001h
           mov ecx, dword ptr [ebp-03Ch]
           mov dword ptr [ecx+000062174h], eax
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax]
           mov dword ptr [edx], ecx
           mov edx, dword ptr [ebp+008h]
           cmp dword ptr [edx], 000000000h
           je l10032DEF
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [eax+00Ch]
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ecx+008h]
           mov dword ptr [edx+00Ch], eax
           jmp l10032DFB
;
;* Jump:
; 10032DDC(C) 
;
l10032DEF: mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov dword ptr [ecx+00Ch], eax
;
;* Jump:
; 10032DED(U) 
;
l10032DFB: mov ecx, dword ptr [ebp-01Ch]
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ecx+004h], 000000001h
           mov edx, dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [edx+010h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+008h]
           mov dword ptr [ecx+008h], eax
           mov ecx, dword ptr [ebp-01Ch]
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+014h]
           mov dword ptr [ecx+014h], eax
           mov ecx, dword ptr [ebp+008h]
           cmp dword ptr [ecx], 000000000h
           jne l10032E3D
           mov edx, dword ptr [ebp+008h]
           mov eax, dword ptr [edx+00Ch]
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [eax+008h]
           mov dword ptr [ecx+00Ch], edx
;
;* Jump:
; 10032E2C(C) 
;
l10032E3D: mov eax, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], 000000000h
           mov ecx, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp-020h]
           mov dword ptr [ecx+014h], edx
           pop edi
           pop esi
           mov esp, ebp
           pop ebp
           ret 00004h
l10032C9A ENDP
;
;* Jump:
; 10001424(U) 
;
           call l10032E58; Implemented in c++ code
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015DC(U) 
;
l10034B70 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], 000000000h
           mov dword ptr [eax+004h], 000000000h
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx+008h], 000000000h
           mov dword ptr [ecx+00Ch], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+010h], 000000000h
           mov dword ptr [edx+014h], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret
l10034B70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000151E(U), 10001604(U) 
;
l10034BC0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov ecx, dword ptr [ebp-004h]
           call l10001618
           mov eax, dword ptr [ebp+008h]
           and eax, 000000001h
           test eax, eax
           je l10034BE5
           mov ecx, dword ptr [ebp-004h]
           push ecx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 10034BD7(C) 
;
l10034BE5: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l10034BC0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001343(U) 
;
l10034C00 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000014h
           mov dword ptr [ebp-014h], ecx
           mov eax, dword ptr [ebp-014h]
           add eax, 000000004h
           mov dword ptr [ebp-004h], eax
           mov ecx, dword ptr [ebp-004h]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-004h]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-014h]
           add ecx, 00000001Ch
           mov dword ptr [ebp-008h], ecx
           mov edx, dword ptr [ebp-008h]
           mov dword ptr [edx], 000000000h
           mov dword ptr [edx+004h], 000000000h
           mov eax, dword ptr [ebp-008h]
           mov dword ptr [eax+008h], 000000000h
           mov dword ptr [eax+00Ch], 000000000h
           mov ecx, dword ptr [ebp-008h]
           mov dword ptr [ecx+010h], 000000000h
           mov dword ptr [ecx+014h], 000000000h
           mov edx, dword ptr [ebp-014h]
           add edx, 00000003Ch
           mov dword ptr [ebp-010h], edx
           mov eax, dword ptr [ebp-010h]
           add eax, 000000004h
           mov dword ptr [ebp-00Ch], eax
           mov ecx, dword ptr [ebp-00Ch]
           mov dword ptr [ecx], 000000000h
           mov dword ptr [ecx+004h], 000000000h
           mov edx, dword ptr [ebp-00Ch]
           mov dword ptr [edx+008h], 000000000h
           mov dword ptr [edx+00Ch], 000000000h
           mov eax, dword ptr [ebp-00Ch]
           mov dword ptr [eax+010h], 000000000h
           mov dword ptr [eax+014h], 000000000h
           mov ecx, dword ptr [ebp-010h]
           mov dword ptr [ecx], offset g100370FC
           mov ecx, dword ptr [ebp-014h]
           add ecx, 000000060h
           call l10001870
           mov eax, dword ptr [ebp-014h]
           mov esp, ebp
           pop ebp
           ret
l10034C00 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000154B(U) 
;
l10034D20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10034D20 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001591(U) 
;
l10034D30 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034D30 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011BD(U) 
;
l10034D40 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034D40 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010D7(U) 
;
l10034D50 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00034h
l10034D50 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015CD(U) 
;
l10034D60 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034D60 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001866(U) 
;
l10034D70 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10034D70 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100013ED(U) 
;
l10034D80 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10034D80 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011DB(U) 
;
l10034D90 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l10034D90 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011D6(U) 
;
l10034DA0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l10034DA0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000139D(U) 
;
l10034DB0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00010h
l10034DB0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000121C(U) 
;
l10034DC0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l10034DC0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001659(U) 
;
l10034DD0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 0000Ch
l10034DD0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014DD(U) 
;
l10034DE0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l10034DE0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000117C(U) 
;
l10034DF0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 0001Ch
l10034DF0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015D2(U) 
;
l10034E00 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00010h
l10034E00 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000176C(U) 
;
l10034E10 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00018h
l10034E10 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001811(U) 
;
l10034E20 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00004h
l10034E20 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001325(U) 
;
l10034E30 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00024h
l10034E30 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001393(U) 
;
l10034E40 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00010h
l10034E40 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100017C1(U) 
;
l10034E50 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00060h
l10034E50 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100014F6(U) 
;
l10034E60 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret
l10034E60 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000122B(U) 
;
l10034E70 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034E70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000142E(U) 
;
l10034E80 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034E80 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100015C8(U) 
;
l10034E90 PROC
           push ebp
           mov ebp, esp
           sub esp, 00000000Ch
           mov dword ptr [ebp-00Ch], ecx
           lea eax, [ebp-008h]
           push eax
           lea ecx, [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+000000174h]
           fild dword ptr [ebp+00Ch]
           push ecx
           fstp dword ptr [esp]
           fild dword ptr [ebp+008h]
           push ecx
           fstp dword ptr [esp]
           mov ecx, dword ptr [ebp-00Ch]
           mov edx, dword ptr [ecx]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+00000015Ch]
           mov eax, dword ptr [ebp+00Ch]
           push eax
           mov ecx, dword ptr [ebp+010h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+00000014Ch]
           mov ecx, dword ptr [ebp+014h]
           push ecx
           mov edx, dword ptr [ebp+010h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+00000014Ch]
           mov eax, dword ptr [ebp+014h]
           push eax
           mov ecx, dword ptr [ebp+008h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+00000014Ch]
           mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-00Ch]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-00Ch]
           call [edx+00000014Ch]
           mov eax, dword ptr [ebp-008h]
           push eax
           mov ecx, dword ptr [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp-00Ch]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-00Ch]
           call [eax+00000015Ch]
           mov esp, ebp
           pop ebp
           ret 00010h
l10034E90 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000160E(U) 
;
l10034F70 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov ecx, dword ptr [ebp+008h]
           mov dword ptr [eax+008h], ecx
           mov edx, dword ptr [ebp-004h]
           mov eax, dword ptr [ebp+00Ch]
           mov dword ptr [edx+00Ch], eax
           mov esp, ebp
           pop ebp
           ret 00008h
l10034F70 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 1000173A(U) 
;
l10034FA0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp+008h]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+008h]
           mov dword ptr [eax], edx
           mov eax, dword ptr [ebp+00Ch]
           mov ecx, dword ptr [ebp-004h]
           mov edx, dword ptr [ecx+00Ch]
           mov dword ptr [eax], edx
           mov esp, ebp
           pop ebp
           ret 00008h
l10034FA0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001280(U) 
;
l10034FD0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret 00018h
l10034FD0 ENDP
;
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 10001708(U) 
;
l10034FE0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov esp, ebp
           pop ebp
           ret
l10034FE0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100010F0(U) 
;
l10034FF0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret 00008h
l10034FF0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100013D4(U) 
;
l10035010 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           xor eax, eax
           mov esp, ebp
           pop ebp
           ret 00004h
l10035010 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100011CC(U) 
;
l10035030 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000010h
           mov dword ptr [ebp-010h], ecx
           mov eax, dword ptr [ebp-010h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-010h]
           call [edx+000000224h]
           test eax, eax
           je l1003506F
           lea eax, [ebp-00Ch]
           push eax
           lea ecx, [ebp-004h]
           push ecx
           mov edx, dword ptr [ebp+00Ch]
           push edx
           mov eax, dword ptr [ebp+008h]
           push eax
           lea ecx, [ebp-008h]
           push ecx
           mov edx, dword ptr [ebp-010h]
           mov eax, dword ptr [edx]
           mov ecx, dword ptr [ebp-010h]
           call [eax+000000220h]
           jmp l10035085
;
;* Jump:
; 10035049(C) 
;
l1003506F: mov ecx, dword ptr [ebp+00Ch]
           push ecx
           mov edx, dword ptr [ebp+008h]
           push edx
           mov eax, dword ptr [ebp-010h]
           mov edx, dword ptr [eax]
           mov ecx, dword ptr [ebp-010h]
           call [edx+00000020Ch]
;
;* Jump:
; 1003506D(U) 
;
l10035085: mov esp, ebp
           pop ebp
           ret 00008h
l10035030 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Jump:
; 100013FC(U), 10001537(U) 
;
l100350B0 PROC
           push ebp
           mov ebp, esp
           push ecx
           mov dword ptr [ebp-004h], ecx
           mov eax, dword ptr [ebp-004h]
           mov dword ptr [eax], offset g100379C0
           mov ecx, dword ptr [ebp+008h]
           and ecx, 000000001h
           test ecx, ecx
           je l100350D6
           mov edx, dword ptr [ebp-004h]
           push edx
           call l10035EE2; [MSVCRT.??3@YAXPAX@Z].
           add esp, 000000004h
;
;* Jump:
; 100350C8(C) 
;
l100350D6: mov eax, dword ptr [ebp-004h]
           mov esp, ebp
           pop ebp
           ret 00004h
l100350B0 ENDP
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 1003533D, 100354CA, 10035671 
;
l100350EA PROC
           mov ecx, dword ptr [esi+004h]
           mov dword ptr [ebp-014h], ecx
           mov dword ptr [ebp-018h], ecx
           dec ecx
           lea ebx, [esi+008h]
           mov [ebp-01Ch], ebx
           mov [ebp-020h], ebx
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fcomp qword ptr [ebp-010h]
           sahf
           jbe l100351BD
;
;* Jump:
; 10035148(C), 10035287(U) 
;
l10035126: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcomp qword ptr [ebp-010h]
           fwait
           fnstsw ax
           sahf
           jbe l10035154
           loop l10035126
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp near ptr l100352D2
;
;* Jump:
; 10035146(C) 
;
l10035154: sub dword ptr [ebp-018h], ecx
           dec dword ptr [ebp-018h]
           mov [ebp-020h], ebx
           sub dword ptr [ebp-020h], 000000030h
           loop l10035174
           mov dword ptr [ebp-014h], 000000000h
           mov eax, 000000000h
           jmp near ptr l100352D2
;
;* Jump:
; 10035161(C), 10035196(C) 
;
l10035174: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcomp qword ptr [ebp-010h]
           fwait
           fnstsw ax
           sahf
           ja l100351A9
           loop l10035174
           mov dword ptr [ebp-014h], 000000000h
           mov eax, 000000000h
           jmp near ptr l100352D2
;
;* Jump:
; 10035194(C) 
;
l100351A9: sub dword ptr [ebp-014h], ecx
           mov [ebp-01Ch], ebx
           sub dword ptr [ebp-01Ch], 000000018h
           mov eax, 000000000h
           jmp near ptr l100352D2
;
;* Jump:
; 10035120(C) 
;
l100351BD: fwait
           fnstsw ax
           sahf
           jnb l10035261
;
;* Jump:
; 100351E9(C), 10035292(U) 
;
l100351C7: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcomp qword ptr [ebp-008h]
           fwait
           fnstsw ax
           sahf
           jnb l100351F5
           loop l100351C7
           mov eax, 0FFFFFFFFh
           jmp near ptr l100352D2
;
;* Jump:
; 100351E7(C) 
;
l100351F5: sub dword ptr [ebp-014h], ecx
           mov [ebp-01Ch], ebx
           sub dword ptr [ebp-01Ch], 000000018h
           loop l10035215
           dec dword ptr [ebp-018h]
           mov [ebp-020h], ebx
           sub dword ptr [ebp-020h], 000000018h
           mov eax, 000000000h
           jmp near ptr l100352D2
;
;* Jump:
; 100351FF(C), 10035237(C) 
;
l10035215: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcomp qword ptr [ebp-008h]
           fwait
           fnstsw ax
           sahf
           jb l1003524D
           loop l10035215
           dec dword ptr [ebp-018h]
           mov [ebp-020h], ebx
           sub dword ptr [ebp-020h], 000000018h
           mov eax, 000000000h
           jmp near ptr l100352D2
;
;* Jump:
; 10035235(C) 
;
l1003524D: sub dword ptr [ebp-018h], ecx
           dec dword ptr [ebp-018h]
           mov [ebp-020h], ebx
           sub dword ptr [ebp-020h], 000000030h
           mov eax, 000000000h
           jmp l100352D2
;
;* Jump:
; 100351C1(C) 
;
l10035261: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           add ebx, 000000018h
           fcom qword ptr [ebp-008h]
           dec ecx
           fwait
           fnstsw ax
           fcomp qword ptr [ebp-010h]
           sahf
           jbe l1003528C
           jmp near ptr l10035126
;
;* Jump:
; 10035285(C) 
;
l1003528C: fwait
           fnstsw ax
           sahf
           jnb l10035297
           jmp near ptr l100351C7
;
;* Jump:
; 10035290(C), 100352C9(C) 
;
l10035297: fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fcomp qword ptr [ebp-010h]
           sahf
           jbe l100352C0
;
;* Control "OK", Dialog 006E
;
           mov eax, 000000001h
           jmp l100352D2
;
;* Jump:
; 100352B7(C) 
;
l100352C0: fwait
           fnstsw ax
           sahf
           jbe l100352CB
           add ebx, 000000018h
           loop l10035297
;
;* Jump:
; 100352C4(C) 
;
l100352CB: mov eax, 0FFFFFFFFh
           jmp l100352D2
;
;* Jump:
; 1003514F(U), 1003516F(U), 100351A4(U), 100351B8(U), 100351F0(U), 
; 10035210(U), 10035248(U), 1003525F(U), 100352BE(U), 100352D0(U) 
;
l100352D2: ret
l100350EA ENDP
;
;* Call:
; 10035352, 100354DF, 100356DF, 10035705 
;
l100352D3: mov ecx, dword ptr [ebp-018h]
           sub ecx, dword ptr [ebp-014h]
           jb l100352F0
           inc ecx
           mov dword ptr [edi+004h], ecx
           mov eax, ecx
           add ecx, eax
           add ecx, eax
           add ecx, ecx
           mov esi, dword ptr [ebp-01Ch]
           lea edi, [edi+008h]
           rep movsd
           ret
;
;* Jump:
; 100352D9(C) 
;
l100352F0: mov eax, dword ptr [ebp-018h]
           inc eax
           mov ecx, dword ptr [esi+004h]
           sub ecx, dword ptr [ebp-014h]
           mov dword ptr [edi+004h], ecx
           add dword ptr [edi+004h], eax
           mov ebx, ecx
           add ecx, ebx
           add ecx, ebx
           add ecx, ecx
           mov ebx, eax
           add eax, ebx
           add eax, ebx
           add eax, eax
           mov esi, dword ptr [ebp-01Ch]
           lea edi, [edi+008h]
           rep movsd
           mov ecx, eax
           mov esi, dword ptr [ebp+008h]
           lea esi, [esi+008h]
           rep movsd
           ret
;
;* Call:
; 10023C03, 10030BD6, 10031162 
;
l10035323 PROC
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           fld qword ptr [ebp+014h]
           fstp qword ptr [ebp-008h]
           fldz
           fsub qword ptr [ebp+014h]
           fstp qword ptr [ebp-010h]
           mov esi, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           call l100350EA
           cmp eax, 000000000h
           jne l1003549F
           push eax
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           call l100352D3
           mov ecx, edi
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fstp qword ptr [ebp-028h]
           sahf
           jbe l100353FB
           inc dword ptr [edi+004h]
           mov eax, dword ptr [ebp-018h]
           inc eax
           cmp eax, dword ptr [esi+004h]
           je l1003539B
           mov eax, dword ptr [ebp-020h]
           add eax, 000000018h
           jmp l1003539E
;
;* Jump:
; 10035391(C) 
;
l1003539B: lea eax, [esi+008h]
;
;* Jump:
; 10035399(U) 
;
l1003539E: mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
           add ecx, 000000018h
;
;* Jump:
; 10035385(C) 
;
l100353FB: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fstp qword ptr [ebp-028h]
           sahf
           jbe l1003549E
           inc dword ptr [edi+004h]
           cmp dword ptr [ebp-014h], 000000000h
           je l10035434
           mov eax, dword ptr [ebp-01Ch]
           sub eax, 000000018h
           jmp l10035444
;
;* Jump:
; 1003542A(C) 
;
l10035434: mov eax, 000000018h
           mul dword ptr [esi+004h]
           sub eax, 000000018h
           mov eax, eax
           add eax, dword ptr [ebp-01Ch]
;
;* Jump:
; 10035432(U) 
;
l10035444: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
;
;* Jump:
; 10035421(C) 
;
l1003549E: pop eax
;
;* Jump:
; 10035345(C) 
;
l1003549F: mov esp, ebp
           pop ebp
           ret
l10035323 ENDP
;
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           add dword ptr [ebp+010h], 000000004h
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebp+014h]
           fsub qword ptr [edx+018h]
           fstp qword ptr [ebp-008h]
           fldz
           fsub qword ptr [edx+018h]
           fsub qword ptr [ebp+014h]
           fstp qword ptr [ebp-010h]
           mov esi, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           call l100350EA
           cmp eax, 000000000h
           jne l10035638
           push eax
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           call l100352D3
           mov ecx, edi
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-028h]
           sahf
           jbe l1003558E
           inc dword ptr [edi+004h]
           mov eax, dword ptr [ebp-018h]
           inc eax
           cmp eax, dword ptr [esi+004h]
           je l1003552B
           mov eax, dword ptr [ebp-020h]
           add eax, 000000018h
           jmp l1003552E
;
;* Jump:
; 10035521(C) 
;
l1003552B: lea eax, [esi+008h]
;
;* Jump:
; 10035529(U) 
;
l1003552E: mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
           add ecx, 000000018h
;
;* Jump:
; 10035515(C) 
;
l1003558E: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-028h]
           sahf
           jbe l10035637
           inc dword ptr [edi+004h]
           cmp dword ptr [ebp-014h], 000000000h
           je l100355CA
           mov eax, dword ptr [ebp-01Ch]
           sub eax, 000000018h
           jmp l100355DA
;
;* Jump:
; 100355C0(C) 
;
l100355CA: mov eax, 000000018h
           mul dword ptr [esi+004h]
           sub eax, 000000018h
           mov eax, eax
           add eax, dword ptr [ebp-01Ch]
;
;* Jump:
; 100355C8(U) 
;
l100355DA: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
;
;* Jump:
; 100355B7(C) 
;
l10035637: pop eax
;
;* Jump:
; 100354D2(C) 
;
l10035638: mov esp, ebp
           pop ebp
           ret
;
           push ebp
           mov ebp, esp
           sub esp, 000000044h
           add dword ptr [ebp+010h], 000000004h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-040h], 000000001h
;
;* Control "OK", Dialog 006E
;
           mov dword ptr [ebp-044h], 000000001h
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebp+014h]
           fsub qword ptr [edx+018h]
           fstp qword ptr [ebp-008h]
           fldz
           fsub qword ptr [edx+018h]
           fsub qword ptr [ebp+014h]
           fstp qword ptr [ebp-010h]
           mov esi, dword ptr [ebp+008h]
           mov edx, dword ptr [ebp+010h]
           call l100350EA
           cmp eax, 000000000h
           jne l100358D4
           push eax
           push dword ptr [ebp-01Ch]
           push dword ptr [ebp-014h]
           push dword ptr [ebp-020h]
           push dword ptr [ebp-018h]
           mov esi, dword ptr [ebp+008h]
           cmp dword ptr [ebp-014h], 000000000h
           je l100356A1
           mov eax, dword ptr [ebp-01Ch]
           sub eax, 000000018h
           mov ebx, [ebp-014h]
           dec ebx
           jmp l100356B5
;
;* Jump:
; 10035693(C) 
;
l100356A1: mov eax, 000000018h
           mul dword ptr [esi+004h]
           sub eax, 000000018h
           mov eax, eax
           add eax, dword ptr [ebp-01Ch]
           mov ebx, [esi+004h]
           dec ebx
;
;* Jump:
; 1003569F(U) 
;
l100356B5: push eax
           push ebx
           mov ebx, [ebp-018h]
           inc ebx
           cmp ebx, [esi+004h]
           je l100356C8
           mov eax, dword ptr [ebp-020h]
           add eax, 000000018h
           jmp l100356CD
;
;* Jump:
; 100356BE(C) 
;
l100356C8: lea eax, [esi+008h]
           xor ebx, ebx
;
;* Jump:
; 100356C6(U) 
;
l100356CD: pop dword ptr [ebp-018h]
           pop dword ptr [ebp-020h]
           mov [ebp-014h], ebx
           mov dword ptr [ebp-01Ch], eax
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+01Ch]
           call l100352D3
           mov dword ptr [ebp-03Ch], edi
           pop dword ptr [ebp-018h]
           pop dword ptr [ebp-020h]
           pop dword ptr [ebp-014h]
           pop dword ptr [ebp-01Ch]
           mov eax, dword ptr [ebp-01Ch]
           mov dword ptr [ebp-034h], eax
           mov eax, dword ptr [ebp-020h]
           mov dword ptr [ebp-038h], eax
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           call l100352D3
           mov ecx, edi
           mov esi, dword ptr [ebp+008h]
           mov edi, dword ptr [ebp+00Ch]
           mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-028h]
           sahf
           jbe l100357CD
           inc dword ptr [edi+004h]
           mov eax, dword ptr [ebp-018h]
           inc eax
           cmp eax, dword ptr [esi+004h]
           je l10035755
           mov eax, dword ptr [ebp-020h]
           add eax, 000000018h
           jmp l10035758
;
;* Jump:
; 1003574B(C) 
;
l10035755: lea eax, [esi+008h]
;
;* Jump:
; 10035753(U) 
;
l10035758: mov ebx, [ebp-020h]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           push eax
           fcom qword ptr [ebp-010h]
           fwait
           fnstsw ax
           sahf
           jb l10035785
           mov dword ptr [ebp-044h], 000000000h
;
;* Jump:
; 1003577C(C) 
;
l10035785: pop eax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
           mov dword ptr [ebp-038h], ecx
           add ecx, 000000018h
;
;* Jump:
; 1003573B(C) 
;
l100357CD: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [ebx]
           fmul qword ptr [edx]
           fld qword ptr [ebx+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [ebx+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-008h]
           fwait
           fnstsw ax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-028h]
           sahf
           jbe l1003588F
           inc dword ptr [edi+004h]
           cmp dword ptr [ebp-014h], 000000000h
           je l1003580D
           mov eax, dword ptr [ebp-01Ch]
           sub eax, 000000018h
           jmp l1003581D
;
;* Jump:
; 10035803(C) 
;
l1003580D: mov eax, 000000018h
           mul dword ptr [esi+004h]
           sub eax, 000000018h
           mov eax, eax
           add eax, dword ptr [ebp-01Ch]
;
;* Jump:
; 1003580B(U) 
;
l1003581D: mov ebx, [ebp-01Ch]
           mov edx, dword ptr [ebp+010h]
           fld qword ptr [eax]
           fmul qword ptr [edx]
           fld qword ptr [eax+008h]
           fmul qword ptr [edx+008h]
           fld qword ptr [eax+010h]
           fmul qword ptr [edx+010h]
           fxch st(01h)
           faddp st(02h), st(00h)
           faddp st(01h), st(00h)
           fcom qword ptr [ebp-010h]
           push eax
           fwait
           fnstsw ax
           sahf
           jb l1003584A
           mov dword ptr [ebp-040h], 000000000h
;
;* Jump:
; 10035841(C) 
;
l1003584A: pop eax
           fadd qword ptr [edx+018h]
           fstp qword ptr [ebp-030h]
           fld qword ptr [eax]
           fsub qword ptr [ebx]
           fld qword ptr [eax+008h]
           fsub qword ptr [ebx+008h]
           fld qword ptr [eax+010h]
           fsub qword ptr [ebx+010h]
           fld qword ptr [ebp-028h]
           fld qword ptr [ebp-030h]
           fsub qword ptr [ebp-028h]
           fdivp st(01h), st(00h)
           fmul st(03h), st(00h)
           fmul st(02h), st(00h)
           fmulp st(01h), st(00h)
           fxch st(02h)
           fsubr qword ptr [ebx]
           fxch st(01h)
           fsubr qword ptr [ebx+008h]
           fxch st(02h)
           fsubr qword ptr [ebx+010h]
           fxch st(01h)
           fstp qword ptr [ecx]
           fxch st(01h)
           fstp qword ptr [ecx+008h]
           fstp qword ptr [ecx+010h]
           mov dword ptr [ebp-034h], ecx
;
;* Jump:
; 100357F6(C) 
;
l1003588F: mov edi, dword ptr [ebp-03Ch]
           cmp dword ptr [ebp-040h], 000000000h
           je l100358B4
           mov esi, dword ptr [ebp+01Ch]
           inc dword ptr [esi+004h]
           mov ecx, dword ptr [ebp-034h]
           fld qword ptr [ecx]
           fstp qword ptr [edi]
           fld qword ptr [ecx+008h]
           fstp qword ptr [edi+008h]
           fld qword ptr [ecx+010h]
           fstp qword ptr [edi+010h]
           add edi, 000000018h
;
;* Jump:
; 10035896(C) 
;
l100358B4: cmp dword ptr [ebp-044h], 000000000h
           je l100358D3
           mov esi, dword ptr [ebp+01Ch]
           inc dword ptr [esi+004h]
           mov ecx, dword ptr [ebp-038h]
           fld qword ptr [ecx]
           fstp qword ptr [edi]
           fld qword ptr [ecx+008h]
           fstp qword ptr [edi+008h]
           fld qword ptr [ecx+010h]
           fstp qword ptr [edi+010h]
;
;* Jump:
; 100358B8(C) 
;
l100358D3: pop eax
;
;* Jump:
; 10035679(C) 
;
l100358D4: mov esp, ebp
           pop ebp
           ret
;
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           jmp [__imp_GetPrivateProfileStringA]; [KERNEL32.GetPrivateProfileStringA].
           jmp [__imp_WritePrivateProfileStringA]; [KERNEL32.WritePrivateProfileStringA].
           jmp [__imp_GetVersionExA]; [KERNEL32.GetVersionExA].
           jmp [__imp_GetProcAddress]; [KERNEL32.GetProcAddress].
           jmp [__imp_GetWindowLongA]; [USER32.GetWindowLongA].
           jmp [__imp_SendMessageA]; [USER32.SendMessageA].
           jmp [__imp_SetWindowTextA]; [USER32.SetWindowTextA].
           jmp [__imp_SetWindowLongA]; [USER32.SetWindowLongA].
           jmp [__imp_GetDlgItem]; [USER32.GetDlgItem].
           jmp [__imp_EnableWindow]; [USER32.EnableWindow].
           jmp [__imp_GetWindowTextA]; [USER32.GetWindowTextA].
           jmp [__imp_LoadImageA]; [USER32.LoadImageA].
           jmp [__imp_EnumDisplaySettingsA]; [USER32.EnumDisplaySettingsA].
           jmp [__imp_ShowWindow]; [USER32.ShowWindow].
           jmp [__imp_SetWindowPos]; [USER32.SetWindowPos].
           jmp [__imp_ChangeDisplaySettingsA]; [USER32.ChangeDisplaySettingsA].
           jmp [__imp_AdjustWindowRectEx]; [USER32.AdjustWindowRectEx].
           jmp [__imp_GetDC]; [USER32.GetDC].
           jmp [__imp_GetWindowRect]; [USER32.GetWindowRect].
           jmp [__imp_GetClientRect]; [USER32.GetClientRect].
           jmp [__imp_ReleaseDC]; [USER32.ReleaseDC].
           jmp [__imp_MessageBoxA]; [USER32.MessageBoxA].
           jmp [__imp_SetForegroundWindow]; [USER32.SetForegroundWindow].
           jmp [__imp_SetDeviceGammaRamp]; [GDI32.SetDeviceGammaRamp].
           jmp [__imp_GetObjectA]; [GDI32.GetObjectA].
           jmp [__imp_GetDeviceCaps]; [GDI32.GetDeviceCaps].
           jmp [__imp_SelectObject]; [GDI32.SelectObject].
           jmp [__imp_CreateFontA]; [GDI32.CreateFontA].
           jmp [__imp_GetDeviceGammaRamp]; [GDI32.GetDeviceGammaRamp].
           jmp [__imp_DeleteObject]; [GDI32.DeleteObject].
           jmp [__imp_SetPixelFormat]; [GDI32.SetPixelFormat].
           jmp [__imp_ChoosePixelFormat]; [GDI32.ChoosePixelFormat].
           jmp [__imp_SwapBuffers]; [GDI32.SwapBuffers].
           jmp [__imp_wglGetCurrentDC]; [OPENGL32.wglGetCurrentDC].
           jmp [__imp_wglGetProcAddress]; [OPENGL32.wglGetProcAddress].
           jmp [__imp_glGetString]; [OPENGL32.glGetString].
           jmp [__imp_glShadeModel]; [OPENGL32.glShadeModel].
           jmp [__imp_glDisable]; [OPENGL32.glDisable].
           jmp [__imp_glRasterPos2i]; [OPENGL32.glRasterPos2i].
           jmp [__imp_glCallLists]; [OPENGL32.glCallLists].
           jmp [__imp_glListBase]; [OPENGL32.glListBase].
           jmp [__imp_glScalef]; [OPENGL32.glScalef].
           jmp [__imp_glTranslated]; [OPENGL32.glTranslated].
           jmp [__imp_glDepthFunc]; [OPENGL32.glDepthFunc].
           jmp [__imp_glBindTexture]; [OPENGL32.glBindTexture].
           jmp [__imp_glEnable]; [OPENGL32.glEnable].
           jmp [__imp_glBlendFunc]; [OPENGL32.glBlendFunc].
           jmp [__imp_glTexEnvi]; [OPENGL32.glTexEnvi].
           jmp [__imp_glColor3ub]; [OPENGL32.glColor3ub].
           jmp [__imp_glReadPixels]; [OPENGL32.glReadPixels].
           jmp [__imp_glEnd]; [OPENGL32.glEnd].
           jmp [__imp_glVertex2d]; [OPENGL32.glVertex2d].
           jmp [__imp_glBegin]; [OPENGL32.glBegin].
           jmp [__imp_glColor3fv]; [OPENGL32.glColor3fv].
           jmp [__imp_glColor4fv]; [OPENGL32.glColor4fv].
           jmp [__imp_glTexCoord2f]; [OPENGL32.glTexCoord2f].
           jmp [__imp_glColor4ubv]; [OPENGL32.glColor4ubv].
           jmp [__imp_glVertex2f]; [OPENGL32.glVertex2f].
           jmp [__imp_glTexCoord2d]; [OPENGL32.glTexCoord2d].
           jmp [__imp_glPixelStorei]; [OPENGL32.glPixelStorei].
           jmp [__imp_glReadBuffer]; [OPENGL32.glReadBuffer].
           jmp [__imp_glDrawPixels]; [OPENGL32.glDrawPixels].
           jmp [__imp_glPixelZoom]; [OPENGL32.glPixelZoom].
           jmp [__imp_glColor3f]; [OPENGL32.glColor3f].
           jmp [__imp_glBitmap]; [OPENGL32.glBitmap].
           jmp [__imp_glDrawBuffer]; [OPENGL32.glDrawBuffer].
           jmp [__imp_glLightf]; [OPENGL32.glLightf].
           jmp [__imp_glLightfv]; [OPENGL32.glLightfv].
           jmp [__imp_glLightModelfv]; [OPENGL32.glLightModelfv].
           jmp [__imp_glNormal3dv]; [OPENGL32.glNormal3dv].
           jmp [__imp_glVertex3fv]; [OPENGL32.glVertex3fv].
           jmp [__imp_glTexCoord4d]; [OPENGL32.glTexCoord4d].
           jmp [__imp_glVertex3d]; [OPENGL32.glVertex3d].
           jmp [__imp_glTexCoord2fv]; [OPENGL32.glTexCoord2fv].
           jmp [__imp_glTexImage2D]; [OPENGL32.glTexImage2D].
           jmp [__imp_glTexParameteri]; [OPENGL32.glTexParameteri].
           jmp [__imp_glPixelTransferf]; [OPENGL32.glPixelTransferf].
           jmp [__imp_glTexParameterf]; [OPENGL32.glTexParameterf].
           jmp [__imp_glGetTexLevelParameteriv]; [OPENGL32.glGetTexLevelParameteriv].
           jmp [__imp_glIsTexture]; [OPENGL32.glIsTexture].
           jmp [__imp_glGetTexImage]; [OPENGL32.glGetTexImage].
           jmp [__imp_glTexSubImage2D]; [OPENGL32.glTexSubImage2D].
           jmp [__imp_glDeleteTextures]; [OPENGL32.glDeleteTextures].
           jmp [__imp_glPolygonOffset]; [OPENGL32.glPolygonOffset].
           jmp [__imp_glPolygonMode]; [OPENGL32.glPolygonMode].
           jmp [__imp_glDepthMask]; [OPENGL32.glDepthMask].
           jmp [__imp_glLineWidth]; [OPENGL32.glLineWidth].
           jmp [__imp_glColor3d]; [OPENGL32.glColor3d].
           jmp [__imp_glTexGenfv]; [OPENGL32.glTexGenfv].
           jmp [__imp_glTexGeni]; [OPENGL32.glTexGeni].
           jmp [__imp_glPolygonStipple]; [OPENGL32.glPolygonStipple].
           jmp [__imp_glTexCoord1f]; [OPENGL32.glTexCoord1f].
           jmp [__imp_glColor4f]; [OPENGL32.glColor4f].
           jmp [__imp_glVertex3dv]; [OPENGL32.glVertex3dv].
           jmp [__imp_wglGetCurrentContext]; [OPENGL32.wglGetCurrentContext].
           jmp [__imp_glPopMatrix]; [OPENGL32.glPopMatrix].
           jmp [__imp_glEndList]; [OPENGL32.glEndList].
           jmp [__imp_glViewport]; [OPENGL32.glViewport].
           jmp [__imp_glTranslatef]; [OPENGL32.glTranslatef].
           jmp [__imp_glLoadIdentity]; [OPENGL32.glLoadIdentity].
           jmp [__imp_glPushMatrix]; [OPENGL32.glPushMatrix].
           jmp [__imp_glMatrixMode]; [OPENGL32.glMatrixMode].
           jmp [__imp_glNewList]; [OPENGL32.glNewList].
           jmp [__imp_glTexImage1D]; [OPENGL32.glTexImage1D].
           jmp [__imp_glGetIntegerv]; [OPENGL32.glGetIntegerv].
           jmp [__imp_wglUseFontBitmapsA]; [OPENGL32.wglUseFontBitmapsA].
           jmp [__imp_glVertex2i]; [OPENGL32.glVertex2i].
           jmp [__imp_wglMakeCurrent]; [OPENGL32.wglMakeCurrent].
           jmp [__imp_wglCreateContext]; [OPENGL32.wglCreateContext].
           jmp [__imp_glDeleteLists]; [OPENGL32.glDeleteLists].
           jmp [__imp_wglDeleteContext]; [OPENGL32.wglDeleteContext].
           jmp [__imp_glOrtho]; [OPENGL32.glOrtho].
           jmp [__imp_glGetDoublev]; [OPENGL32.glGetDoublev].
           jmp [__imp_glScissor]; [OPENGL32.glScissor].
           jmp [__imp_glScaled]; [OPENGL32.glScaled].
           jmp [__imp_glFrustum]; [OPENGL32.glFrustum].
           jmp [__imp_glClear]; [OPENGL32.glClear].
           jmp [__imp_glClearColor]; [OPENGL32.glClearColor].
           jmp [__imp_glMaterialfv]; [OPENGL32.glMaterialfv].
           jmp [__imp_glLightModeli]; [OPENGL32.glLightModeli].
           jmp [__imp_glVertex3f]; [OPENGL32.glVertex3f].
           jmp [__imp_glFogi]; [OPENGL32.glFogi].
           jmp [__imp_glFogfv]; [OPENGL32.glFogfv].
           jmp [__imp_glFogf]; [OPENGL32.glFogf].
           jmp [__imp_glColor4d]; [OPENGL32.glColor4d].
           jmp [__imp_glCallList]; [OPENGL32.glCallList].
;
;* Call:
; 100101A7, 1001675C, 10016788, 10016C28, 10016C63 
;
l10035DC8: jmp [__imp_gluScaleImage]; [GLU32.gluScaleImage].
;
;* Call:
; 100146B8 
;
l10035DCE: jmp [__imp_gluBuild2DMipmaps]; [GLU32.gluBuild2DMipmaps].
;
;* Call:
; 10025310, 1002542A, 100256CC 
;
l10035DD4: jmp [__imp_gluProject]; [GLU32.gluProject].
           jmp [__imp_PropertySheetA]; [COMCTL32.PropertySheetA].
           jmp [__imp_?Read@B_IDataFile@@QAEXPAXI@Z]; [BBLibc.?Read@B_IDataFile@@QAEXPAXI@Z].
           jmp [__imp_?Write@B_ODataFile@@QAEXPBXI@Z]; [BBLibc.?Write@B_ODataFile@@QAEXPBXI@Z].
           jmp [__imp_??5@YAAAVB_IDataFile@@AAV0@AAM@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAM@Z].
           jmp [__imp_??6@YAAAVB_ODataFile@@AAV0@ABM@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABM@Z].
           jmp [__imp_??5@YAAAVB_IDataFile@@AAV0@AAN@Z]; [BBLibc.??5@YAAAVB_IDataFile@@AAV0@AAN@Z].
           jmp [__imp_??6@YAAAVB_ODataFile@@AAV0@ABN@Z]; [BBLibc.??6@YAAAVB_ODataFile@@AAV0@ABN@Z].
           jmp [__imp_??1B_Name@@QAE@XZ]; [BBLibc.??1B_Name@@QAE@XZ].
           jmp [__imp_??0B_Name@@QAE@PBD@Z]; [BBLibc.??0B_Name@@QAE@PBD@Z].
           jmp [__imp_?GetCurrentLanguage@@YAPBDXZ]; [BBLibc.?GetCurrentLanguage@@YAPBDXZ].
           jmp [__imp_?GetConfigDirectory@@YAPBDXZ]; [BBLibc.?GetConfigDirectory@@YAPBDXZ].
           jmp [__imp_?vararg@@YAPBDPBDZZ]; [BBLibc.?vararg@@YAPBDPBDZZ].
           jmp [__imp_??4B_Name@@QAEAAV0@ABV0@@Z]; [BBLibc.??4B_Name@@QAEAAV0@ABV0@@Z].
           jmp [__imp_?String@B_Name@@QBEQADXZ]; [BBLibc.?String@B_Name@@QBEQADXZ].
           jmp [__imp_??0B_Name@@QAE@ABV0@@Z]; [BBLibc.??0B_Name@@QAE@ABV0@@Z].
           jmp [__imp_??6@YAAAVB_MessageManager@@AAV0@PBD@Z]; [BBLibc.??6@YAAAVB_MessageManager@@AAV0@PBD@Z].
           jmp [__imp_?MakeCons@B_Color@@UAEXXZ]; [BBLibc.?MakeCons@B_Color@@UAEXXZ].
           jmp [__imp_??0B_NamedObj@@QAE@ABVB_Name@@@Z]; [BBLibc.??0B_NamedObj@@QAE@ABVB_Name@@@Z].
           jmp [__imp_?GetBlue@B_Pal@@QBEEI@Z]; [BBLibc.?GetBlue@B_Pal@@QBEEI@Z].
           jmp [__imp_?GetGreen@B_Pal@@QBEEI@Z]; [BBLibc.?GetGreen@B_Pal@@QBEEI@Z].
           jmp [__imp_?GetRed@B_Pal@@QBEEI@Z]; [BBLibc.?GetRed@B_Pal@@QBEEI@Z].
           jmp [__imp_??8B_Name@@QBEIPBD@Z]; [BBLibc.??8B_Name@@QBEIPBD@Z].
           jmp [__imp_?Id@B_NamedObj@@QBEABVB_Name@@XZ]; [BBLibc.?Id@B_NamedObj@@QBEABVB_Name@@XZ].
           jmp [__imp_?OutputWin32Error@@YAXPBD@Z]; [BBLibc.?OutputWin32Error@@YAXPBD@Z].
           jmp [__imp_??0B_Name@@QAE@XZ]; [BBLibc.??0B_Name@@QAE@XZ].
           jmp [__imp_??8B_Name@@QBEIABV0@@Z]; [BBLibc.??8B_Name@@QBEIABV0@@Z].
           jmp [__imp_??0B_Color@@QAE@XZ]; [BBLibc.??0B_Color@@QAE@XZ].
           int 03h
           int 03h
           int 03h
           int 03h
;
;* Call:
; 100023B5, 100023CC, 10002439, 1000244D, 100030E8, 1000A607, 1000A624, 1000A65F, 
; 1000A67C, 1000A6B7, 1000A6D4, 1000AAAB, 1000F2EB, 1000F302, 1000F319, 1000F371, 
; 1000F388, 1000F39F, 1000F46E, 1000F5E6, 1000F5FD, 1000F614, 1000F741, 1000F758, 
; 1000FCDD, 1000FCE9, 1000FD92, 1000FD9E, 100103F1, 10010402, 10012B13, 10015FA1, 
; 10016848, 1001686B, 1001688E, 100168B1, 100168BF, 100168E9, 100168F7, 10016921, 
; 1001692F, 10016D7D, 10016DA6, 10016DCF, 10016E04, 10016E1B, 10016E5A, 10016E71, 
; 10016EB0, 10016EC7, 10017879, 1001788B, 100178B4, 100253CA, 100253D3, 10025775, 
; 10025784, 10026681, 1002B685, 1002B691, 1002C98C, 1002C9AC, 1002CAE4, 1002D41B, 
; 1002D435, 1002F2E8, 1002F30B, 10031908 
;
l10035E80: jmp [__imp__ftol]; [MSVCRT._ftol].
;
;* Call:
; 10035EB6 
;
l10035E86: cmp dword ptr [g10051A84], 0FFFFFFFFh
           jne l10035E9B
           push dword ptr [esp+004h]
           call [__imp__onexit]; [MSVCRT._onexit].
           pop ecx
           ret
;
;* Jump:
; 10035E8D(C) 
;
l10035E9B: push offset g10051A74
           push offset g10051A84
           push dword ptr [esp+00Ch]
           call l10036072; [MSVCRT.__dllonexit].
           add esp, 00000000Ch
           ret
;
;* Call:
; 100026CC, 1000279A, 1000296E, 100073EC, 10007586, 100119C2, 10013BA8, 1002C624, 
; 1002E9EE, 10032205 
;
l10035EB2 PROC
           push dword ptr [esp+004h]
           call l10035E86
           neg eax
           sbb eax, eax
           pop ecx
           neg eax
           dec eax
           ret
l10035EB2 ENDP
;
;* Call:
; 100030A4, 10024018, 10025260 
;
l10035EC4: jmp [__imp__CIexp]; [MSVCRT._CIexp].
;
;* Call:
; 1000309D, 100031C6, 100032A6, 100032E5, 10003D57, 10004049, 10004081, 100040B9, 
; 1000561E, 1000566D, 100056C0, 100057AA, 10005800, 10005814, 10005879, 100058DB, 
; 10005986, 10005BDD, 10005CB4, 10006059, 10006211, 1000621C, 1000630C, 10008120, 
; 100084F1, 10022044, 10022713, 10023181, 10024006, 1002EF75, 100315DC 
;
l10035ECA: jmp [__imp__CIsqrt]; [MSVCRT._CIsqrt].
           jmp [__imp_malloc]; [MSVCRT.malloc].
;
;* Call:
; 100038B7, 100054FF, 100083BB, 10025537, 1003181D 
;
l10035ED6: jmp [__imp__CIsin]; [MSVCRT._CIsin].
;
;* Call:
; 100038AC, 10005510, 100083DB, 10025553 
;
l10035EDC: jmp [__imp__CIcos]; [MSVCRT._CIcos].
;
;* Call:
; 1000735E, 1000745B, 10007472, 100076A6, 100076BD, 100078C6, 100078DD, 100079E2, 
; 10007A79, 10007A90, 10007AC4, 10007B79, 10007B90, 10007BC4, 1000C769, 1000C780, 
; 1000C849, 1000C860, 1000C894, 1000EB1E, 1000ED0A, 10010D41, 10010E2A, 10010E9C, 
; 10010EB2, 10013C3A, 10013C50, 10013DF7, 10013F35, 10014049, 10014060, 100141F8, 
; 10014364, 100144B0, 10014B4D, 10014CD6, 10014EFE, 10015BEE, 10015CD7, 10015EAF, 
; 1001650C, 10016A74, 10016A8C, 10016AA4, 10016FA9, 10016FC4, 100171D3, 100174DC, 
; 1001799E, 10018CCC, 10018D59, 10018D70, 10018DA4, 1001C045, 1001C5E8, 1001C95C, 
; 1001CB4D, 1001CC43, 1001D0BA, 1001D311, 1001D4BF, 1001D58D, 1001DD3C, 1001DE3B, 
; 1001DE6F, 1001DF5B, 1001DF8F, 1001E07B, 1001E0AF, 1001F08C, 1001F0AC, 1001F651, 
; 1001F714, 1001F7A6, 1001F7BD, 1001FD01, 10020993, 10020E24, 10020E53, 10021419, 
; 10021445, 10021515, 10021541, 10024E69, 10028852, 10028995, 1002B56D, 1002BE3C, 
; 1002BEFB, 1002BF2F, 1002C01B, 1002C04F, 1002C159, 1002C185, 1002C1C8, 1002C2A2, 
; 1002C2C9, 1002C415, 1002C55B, 1002C58F, 1002E8CF, 1002E8E6, 10030AA8, 10034BDD, 
; 100350CE 
;
l10035EE2: jmp [__imp_??3@YAXPAX@Z]; [MSVCRT.??3@YAXPAX@Z].
l10035EE8: jmp [__imp__purecall]; [MSVCRT._purecall].
;
;* Call:
; 10008462, 1000847C, 100084A9, 100084C1, 10008530, 10008548 
;
l10035EEE: jmp [__imp__CIatan]; [MSVCRT._CIatan].
           jmp [__imp_sscanf]; [MSVCRT.sscanf].
           jmp [__imp_atof]; [MSVCRT.atof].
           jmp [__imp_atoi]; [MSVCRT.atoi].
           jmp [__imp_free]; [MSVCRT.free].
           jmp [__imp_strtok]; [MSVCRT.strtok].
;
;* Call:
; 1000EA39, 1000EACC, 1000EB3B, 1000EB9F, 1000EC31, 10010DA4, 10013D23, 10013DA6, 
; 10013E13, 10013E5F, 10013EE3, 10013F52, 10014100, 100141A6, 10014215, 10014271, 
; 10014312, 10014381, 100143BD, 1001445E, 100144CD, 100148DF, 10014C19, 10014DC3, 
; 10015C51, 10015D86, 10016242, 100165D3, 100166FC, 1001671E, 10016B0D, 10016BBA, 
; 10016BDB, 100173E9, 100178E5, 1001BF1A, 1001BFCF, 1001C065, 1001C4BE, 1001C572, 
; 1001C608, 1001C7F6, 1001C8DD, 1001C982, 1001CFFD, 1001D071, 1001D0D1, 1001D1C3, 
; 1001D298, 1001D334, 1001FC6B, 10020CE2, 10020E92, 10021084, 1002118E, 10023A61, 
; 10023AE0, 10024D1F, 10024E17, 10024E86, 10028793, 100288FC, 10028A64, 1002C3C3, 
; 1002C432, 100305CE, 10030956, 10030A29, 10030ACE, 10030FCB, 1003104B 
;
l10035F12: jmp [__imp_??2@YAPAXI@Z]; [MSVCRT.??2@YAPAXI@Z].
           jmp [__imp__assert]; [MSVCRT._assert].
           jmp [__imp_floor]; [MSVCRT.floor].
           jmp [__imp_sprintf]; [MSVCRT.sprintf].
;
;* Call:
; 10036010, 10036034, 10036045 
;
l10035F2A PROC
           mov eax, dword ptr [esp+008h]
           test eax, eax
           jne l10035F40
           cmp dword ptr [g10051918], eax
           jle l10035F68
           dec dword ptr [g10051918]
;
;* Jump:
; 10035F30(C) 
;
l10035F40: mov ecx, dword ptr [__imp__adjust_fdiv]; [MSVCRT._adjust_fdiv].
           cmp eax, 000000001h
           mov ecx, dword ptr [ecx]
           mov dword ptr [g10051A5C], ecx
           jne l10035F92
           push 000000080h
           call [__imp_malloc]; [MSVCRT.malloc].
           test eax, eax
           pop ecx
           mov dword ptr [g10051A84], eax
           jne l10035F6C
;
;* Jump:
; 10035F38(C) 
;
l10035F68: xor eax, eax
           jmp l10035FD2
;
;* Jump:
; 10035F66(C) 
;
l10035F6C: and dword ptr [eax], 000000000h
           mov eax, dword ptr [g10051A84]
           push offset g10039230
           push offset g10039000
           mov dword ptr [g10051A74], eax
           call l10036078; [MSVCRT._initterm].
           inc dword ptr [g10051918]
           pop ecx
           pop ecx
           jmp l10035FCF
;
;* Jump:
; 10035F51(C) 
;
l10035F92: test eax, eax
           jne l10035FCF
           mov eax, dword ptr [g10051A84]
           test eax, eax
           je l10035FCF
           mov ecx, dword ptr [g10051A74]
           push esi
           lea esi, [ecx-004h]
;
;* Jump:
; 10035FBD(U) 
;
l10035FA9: cmp esi, eax
           jb l10035FBF
           mov ecx, dword ptr [esi]
           test ecx, ecx
           je l10035FBA
           call ecx
           mov eax, dword ptr [g10051A84]
;
;* Jump:
; 10035FB1(C) 
;
l10035FBA: sub esi, 000000004h
           jmp l10035FA9
;
;* Jump:
; 10035FAB(C) 
;
l10035FBF: push eax
           call [__imp_free]; [MSVCRT.free].
           and dword ptr [g10051A84], 000000000h
           pop ecx
           pop esi
;
;* Jump:
; 10035F90(U), 10035F94(C), 10035F9D(C) 
;
;* Control "OK", Dialog 006E
;
l10035FCF: push 000000001h
           pop eax
;
;* Jump:
; 10035F6A(U) 
;
l10035FD2: ret 0000Ch
l10035F2A ENDP
;
;* Entry Point:
;
__startup PROC
           push ebp
           mov ebp, esp
           push ebx
           mov ebx, [ebp+008h]
           push esi
           mov esi, dword ptr [ebp+00Ch]
           push edi
           mov edi, dword ptr [ebp+010h]
           test esi, esi
           jne l10035FF1
           cmp dword ptr [g10051918], 000000000h
           jmp l10036017
;
;* Jump:
; 10035FE6(C) 
;
l10035FF1: cmp esi, 000000001h
           je l10035FFB
           cmp esi, 000000002h
           jne l1003601D
;
;* Jump:
; 10035FF4(C) 
;
l10035FFB: mov eax, dword ptr [g10051A68]
           test eax, eax
           je l1003600D
           push edi
           push esi
           push ebx
           call eax
           test eax, eax
           je l10036019
;
;* Jump:
; 10036002(C) 
;
l1003600D: push edi
           push esi
           push ebx
           call l10035F2A
           test eax, eax
;
;* Jump:
; 10035FEF(U) 
;
l10036017: jne l1003601D
;
;* Jump:
; 1003600B(C) 
;
l10036019: xor eax, eax
           jmp l1003606B
;
;* Jump:
; 10035FF9(C), 10036017(C) 
;
l1003601D: push edi
           push esi
           push ebx
           call l1003607E
           cmp esi, 000000001h
           mov dword ptr [ebp+00Ch], eax
           jne l10036039
           test eax, eax
           jne l10036068
           push edi
           push eax
           push ebx
           call l10035F2A
;
;* Jump:
; 1003602B(C) 
;
l10036039: test esi, esi
           je l10036042
           cmp esi, 000000003h
           jne l10036068
;
;* Jump:
; 1003603B(C) 
;
l10036042: push edi
           push esi
           push ebx
           call l10035F2A
           test eax, eax
           jne l10036051
           and dword ptr [ebp+00Ch], eax
;
;* Jump:
; 1003604C(C) 
;
l10036051: cmp dword ptr [ebp+00Ch], 000000000h
           je l10036068
           mov eax, dword ptr [g10051A68]
           test eax, eax
           je l10036068
           push edi
           push esi
           push ebx
           call eax
           mov dword ptr [ebp+00Ch], eax
;
;* Jump:
; 1003602F(C), 10036040(C), 10036055(C), 1003605E(C) 
;
l10036068: mov eax, dword ptr [ebp+00Ch]
;
;* Jump:
; 1003601B(U) 
;
l1003606B: pop edi
           pop esi
           pop ebx
           pop ebp
           ret 0000Ch
__startup ENDP
;
;* Call:
; 10035EA9 
;
l10036072: jmp [__imp___dllonexit]; [MSVCRT.__dllonexit].
;
;* Call:
; 10035F83 
;
l10036078: jmp [__imp__initterm]; [MSVCRT._initterm].
;
;* Call:
; 10036020 
;
l1003607E PROC
           cmp dword ptr [esp+008h], 000000001h
           jne l10036098
           cmp dword ptr [g10051A68], 000000000h
           jne l10036098
           push dword ptr [esp+004h]
           call [__imp_DisableThreadLibraryCalls]; [KERNEL32.DisableThreadLibraryCalls].
;
;* Jump:
; 10036083(C), 1003608C(C) 
;
;* Control "OK", Dialog 006E
;
l10036098: push 000000001h
           pop eax
           ret 0000Ch
l1003607E ENDP
;
           int 03h
           int 03h
           jmp [__imp_DisableThreadLibraryCalls]; [KERNEL32.DisableThreadLibraryCalls].
           jmp [__imp__strdup]; [MSVCRT._strdup].
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
           int 03h
g10036C9C  dd 217 dup (?)
           dd 000000000h
           dd 03AAECDA2h
           dd 000000000h
           dd 000000002h
           dd 000000032h
           dd 000000000h
           dd 00006A000h
           dd 000000000h
g10037020  dd 4 dup (0)
g10037030  dd 0E7210BE9h
           dd 0BFEFFFFDh
           dd 2 dup (0)
g10037040  dd 0A0B5ED8Dh
           dd 03EB0C6F7h
           dd 2 dup (0)
g10037050  dd 0A0B5ED8Dh
           dd 0BEB0C6F7h
           dd 2 dup (0)
g10037060  dd 000000000h
           dd 040440000h
           dd 000000000h
g1003706C  dd 03F800000h
g10037070  dd 042200000h
g10037074  dd 000000000h
g10037078  dd 041C80000h
           dd 000000000h
g10037080  dd 000000000h
           dd 03FF00000h
           dd 2 dup (0)
g10037090  dd 000000000h
           dd 0C0000000h
           dd 2 dup (0)
g100370A0  dd 000000000h
           dd 040000000h
           dd 000000000h
g100370AC  dd 040000000h
g100370B0  dd 0E7210BE9h
           dd 03FEFFFFDh
           dd 2 dup (0)
g100370C0  dd 0D2F1A9FCh
           dd 03F50624Dh
           dd 2 dup (0)
g100370D0  dd 000000000h
           dd 0BFF00000h
           dd 2 dup (0)
g100370E0  dd 048E8A71Eh
           dd 0BFEFFF2Eh
           dd 2 dup (0)
g100370F0  dd 048E8A71Eh
           dd 03FEFFF2Eh
           dd 000000000h
g100370FC  dd l100016C7
g10037100  dd 000000000h
           dd 03FE00000h
           dd 000000000h
g1003710C  dd l10001587
g10037110  dd l10001776
g10037114  dd l1000114A
           dd l100012D0
           dd l1000174E
           dd 000000000h
g10037124  dd l100011EA
g10037128  dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd 000000000h
g10037138  dd 054442EEAh
           dd 03FF921FBh
           dd 2 dup (0)
g10037148  dd 07F332330h
           dd 04012D97Ch
           dd 2 dup (0)
g10037158  dd 054442EEAh
           dd 0400921FBh
           dd 000000000h
g10037164  dd l100016FE
           dd l10001311
           dd l10001113
           dd 000000000h
g10037174  dd l10001771
           dd l1000137F
           dd l10001118
           dd 000000000h
g10037184  dd l10001032
           dd l100010C8
           dd l10001069
           dd 000000000h
g10037194  dd l1000183E
           dd l10001163
           dd l100016CC
           dd 000000000h
g100371A4  dd l10001168
           dd l100012DF
           dd l10001339
           dd 000000000h
g100371B4  dd l100014EC
           dd l100014AB
           dd l1000185C
           dd 000000000h
g100371C4  dd l1000186B
g100371C8  dd l100011A9
           dd l10001492
           dd l100016F4
           dd 000000000h
g100371D8  dd 000000000h
           dd 040840000h
           dd 2 dup (0)
g100371E8  dd 000000000h
           dd 0407E0000h
           dd 000000000h
g100371F4  dd l10001438
g100371F8  dd 07BF7C823h
           dd 03F701018h
           dd 000000000h
g10037204  dd 0437F0000h
g10037208  dd 03B8080C4h
g1003720C  dd 03E800000h
g10037210  dd 03F000000h
           dd 000000000h
g10037218  dd 000000000h
           dd 0C0500000h
           dd 2 dup (0)
g10037228  dd 000000000h
           dd 040500000h
           dd 2 dup (0)
g10037238  dd 000000000h
           dd 040590000h
           dd 2 dup (0)
g10037248  dd 0D2F1A9FCh
           dd 0BF40624Dh
           dd 2 dup (0)
g10037258  dd 0D2F1A9FCh
           dd 03F40624Dh
           dd 2 dup (0)
g10037268  dd 000000000h
           dd 040240000h
           dd 000000000h
g10037274  dd l100012A8
g10037278  dd l100012DA
g1003727C  dd 042700000h
g10037280  dd 0428C0000h
g10037284  dd 042F00000h
g10037288  dd 040400000h
           dd 000000000h
g10037290  dd 033333333h
           dd 03FF33333h
           dd 2 dup (0)
g100372A0  dd 000000000h
           dd 040600000h
           dd 2 dup (0)
g100372B0  dd 000000000h
           dd 0406FE000h
           dd 2 dup (0)
g100372C0  dd 09999999Ah
           dd 03FD99999h
           dd 2 dup (0)
g100372D0  dd 09999999Ah
           dd 03FC99999h
           dd 2 dup (0)
g100372E0  dd 000000000h
           dd 03FE80000h
           dd 2 dup (0)
g100372F0  dd 033333333h
           dd 03FE33333h
           dd 2 dup (0)
g10037300  dd 0CCCCCCCDh
           dd 03FDCCCCCh
           dd 2 dup (0)
g10037310  dd 033333333h
           dd 03FC33333h
           dd 2 dup (0)
g10037320  dd 09999999Ah
           dd 03FE99999h
           dd 2 dup (0)
g10037330  dd 066666666h
           dd 03FE66666h
           dd 2 dup (0)
g10037340  dd 033333333h
           dd 03FD33333h
           dd 000000000h
g1003734C  dd 03DE38E39h
g10037350  dd 03EAAAAABh
g10037354  dd l100013E3
g10037358  dd l10001488
g1003735C  dd l100016E5
g10037360  dd l10001145
           dd l10001758
           dd l10001717
           dd l1000114F
           dd l10001398
           dd l1000168B
           dd l10001721
           dd l1000155A
           dd l1000152D
           dd l1000166D
           dd l1000105F
           dd l1000157D
           dd l100013B1
           dd l1000137A
           dd l10001389
           dd l100017F3
           dd l100017D5
           dd l10001695
           dd l10001825
           dd l10001730
           dd l10001528
           dd l100012B2
           dd l10001550
           dd l100012EE
           dd l10001843
           dd l10001749
           dd l100015C3
           dd l10001078
           dd l100011F9
           dd l10001541
           dd l10001334
           dd l10001172
           dd l10001276
           dd l10001136
           dd l100017DF
           dd l1000173F
           dd l10001140
           dd l1000136B
           dd l100016C2
           dd l100011E5
           dd l1000181B
           dd l1000150A
           dd l100014CE
           dd l10001316
           dd l1000145B
           dd l100017E9
           dd l10001767
           dd l10001609
           dd l100011D1
           dd l10001762
           dd l10001523
           dd l1000177B
           dd l1000163B
           dd l10001686
           dd l100010B4
           dd l100010AF
           dd l100011C7
           dd l1000127B
           dd l1000115E
           dd l100017E4
           dd l1000126C
           dd l10001447
           dd l100017FD
           dd l100013F7
           dd l100014BA
           dd l100015A0
           dd l10001514
           dd l1000119A
           dd l1000120D
           dd l10001361
           dd l100016A9
           dd l10001226
           dd l10001578
           dd l100016B3
           dd l100015E1
           dd l10001640
           dd l10001177
           dd l100016EF
           dd l100010FA
           dd l10001433
           dd l10001834
           dd l10001037
           dd l10001861
           dd l1000187A
           dd l1000182A
           dd l10001875
           dd l10001203
           dd l10001023
           dd l10001375
           dd l1000153C
           dd l1000129E
           dd l10001127
           dd l100014A6
           dd l100010F5
           dd l10001244
           dd l1000184D
           dd l100013C5
           dd l100014BF
           dd l1000132F
           dd l100017CB
           dd l1000140B
           dd l1000112C
           dd l10001208
           dd l1000103C
           dd l1000171C
           dd l100015FF
           dd l10001221
           dd l100012E4
           dd l10001041
           dd l10001703
           dd l100011B3
           dd l10001451
           dd l10001663
           dd l10001258
           dd l1000143D
           dd l1000100F
           dd l100010BE
           dd l1000155F
           dd l1000106E
           dd l10001357
           dd l100015D7
           dd l100013E8
           dd l100010D2
           dd l10001352
           dd l10001654
           dd l1000100A
           dd l100012B7
           dd l1000119F
           dd l10001055
           dd l10001546
           dd l1000150F
           dd l100014D8
           dd l1000128A
           dd l10001096
           dd l10001131
           dd l100012E9
           dd l1000135C
           dd l100014FB
           dd l1000146A
           dd l10001370
           dd l100012A3
           dd l10001668
           dd l100016E0
           dd l10001064
           dd l10001410
           dd l1000111D
           dd 29 dup (0)
g1003761C  dd l100016B8
g10037620  dd l1000102D
g10037624  dd l1000124E
g10037628  dd 03D800000h
g1003762C  dd 041800000h
g10037630  dd 0C2C80000h
g10037634  dd l1000134D
g10037638  dd 06BF94D5Eh
           dd 03F70000Dh
           dd 2 dup (0)
g10037648  dd 000000000h
           dd 0C08F4000h
           dd 000000000h
g10037654  dd l1000175D
g10037658  dd 0A0B5ED8Dh
           dd 03E90C6F7h
           dd 000000000h
g10037664  dd 03F8CCCCDh
g10037668  dd 0667F055Ah
           dd 03FF6A09Eh
           dd 2 dup (0)
g10037678  dd 000000000h
           dd 040490000h
           dd 2 dup (0)
g10037688  dd 054442EEAh
           dd 0401921FBh
           dd 2 dup (0)
g10037698  dd 054442EEAh
           dd 03FE921FBh
           dd 2 dup (0)
g100376A8  dd 030553261h
           dd 03F33A92Ah
           dd 2 dup (0)
g100376B8  dd 000000000h
           dd 040C38800h
           dd 2 dup (0)
g100376C8  dd 000000000h
           dd 040700000h
           dd 2 dup (0)
g100376D8  dd 06BB98C7Eh
           dd 03FEFF909h
           dd 2 dup (0)
g100376E8  dd 000000000h
           dd 040200000h
           dd 2 dup (0)
g100376F8  dd 09999999Ah
           dd 03FB99999h
           dd 000000000h
g10037704  dd l1000151E
           dd l10035EE8
           dd l10001159
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000154B
           dd l10035EE8
           dd l1000157D
           dd l100013B1
           dd l1000137A
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100015C3
           dd l10001078
           dd l100011F9
           dd l10001591
           dd l100011BD
           dd l100010D7
           dd l100015CD
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001785
           dd l100013A2
           dd l10035EE8
           dd l10035EE8
           dd l10001866
           dd l100013ED
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001465
           dd l10001609
           dd l100013C0
           dd l10001762
           dd l100013DE
           dd l100012C6
           dd l100017BC
           dd l100017EE
           dd l100016DB
           dd l100016D6
           dd l10001816
           dd l1000127B
           dd l1000115E
           dd l10001659
           dd l1000126C
           dd l10001447
           dd l100014DD
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000117C
           dd l1000176C
           dd l100015D2
           dd l10035EE8
           dd l10001325
           dd l10001226
           dd l10001393
           dd l100017C1
           dd l100014F6
           dd l10001640
           dd l10035EE8
           dd l100016EF
           dd l10035EE8
           dd l10001433
           dd l1000122B
           dd l1000142E
           dd l10035EE8
           dd l1000187A
           dd l100015C8
           dd l10035EE8
           dd l10035EE8
           dd l1000160E
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000173A
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100014BF
           dd l1000132F
           dd l100017CB
           dd l1000140B
           dd l1000112C
           dd l10001208
           dd l1000103C
           dd l1000171C
           dd l100015FF
           dd l10001221
           dd l100012E4
           dd l10001041
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100015D7
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001280
           dd l10001708
           dd l100010F0
           dd l100013D4
           dd l100011CC
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000146A
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001479
           dd l100012BC
           dd 29 dup (0)
g100379C0  dd l10001537
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000154B
           dd l10035EE8
           dd l1000157D
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100015C3
           dd l10001078
           dd l100011F9
           dd l10001591
           dd l100011BD
           dd l100010D7
           dd l100015CD
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001866
           dd l100013ED
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100011DB
           dd l100011D6
           dd l1000139D
           dd l10035EE8
           dd l1000121C
           dd l10001659
           dd l10035EE8
           dd l10035EE8
           dd l100014DD
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000117C
           dd l1000176C
           dd l100015D2
           dd l10001811
           dd l10001325
           dd l10001226
           dd l10001393
           dd l100017C1
           dd l100014F6
           dd l10001640
           dd l10035EE8
           dd l100016EF
           dd l10035EE8
           dd l10001433
           dd l1000122B
           dd l1000142E
           dd l10035EE8
           dd l1000187A
           dd l100015C8
           dd l10035EE8
           dd l10035EE8
           dd l1000160E
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000173A
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100014BF
           dd l1000132F
           dd l100017CB
           dd l1000140B
           dd l1000112C
           dd l10001208
           dd l1000103C
           dd l1000171C
           dd l100015FF
           dd l10001221
           dd l100012E4
           dd l10001041
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l100015D7
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10001280
           dd l10001708
           dd l100010F0
           dd l100013D4
           dd l100011CC
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l10035EE8
           dd l1000146A
           dd l10035EE8
           dd l10035EE8
           dd 29 dup (0)
g10037C68  dd 000000000h
           dd 03FD00000h
           dd 2 dup (0)
g10037C78  dd 000000000h
           dd 040AF4000h
           dd 2 dup (0)
g10037C88  dd 0FBDAD752h
           dd 03FF55554h
           dd 000000000h
g10037C94  dd 0437A0000h
g10037C98  dd 000000000h
           dd 040040000h
           dd 2 dup (0)
g10037CA8  dd 000000000h
           dd 0402E0000h
           dd 000000000h
g10037CB4  dd 0BF800000h
g10037CB8  dd 000000000h
           dd 040690000h
           dd 2 dup (0)
g10037CC8  dd 000000000h
           dd 0406D8000h
           dd 2 dup (0)
g10037CD8  dd 0EB851EB8h
           dd 03FAEB851h
           dd 000000000h
g10037CE4  dd 03A83126Fh
g10037CE8  dd 046EA6000h
g10037CEC  dd 0447A0000h
           dd 105 dup (0)
           dd 03AAECDA2h
           dd 000000000h
           dd 000037ED6h
           dd 000000001h
           dd 000000003h
           dd 000000003h
           dd 000037EB8h
           dd 000037EC4h
           dd 000037ED0h
           dd 000001091h
           dd 0000010CDh
           dd 0000012D5h
           dd 000037EE3h
           dd 000037EEDh
           dd 000037EFAh
           dd 000010000h
           dd 04F720002h
           dd 0476E6570h
           dd 0642E334Ch
           dd 043006C6Ch
           dd 069666E6Fh
           dd 0676C4467h
           dd 065724300h
           dd 052657461h
           dd 065747361h
           dd 065440072h
           dd 06F727473h
           dd 073615279h
           dd 000726574h
           dd 70 dup (0)
           dd 1016 dup (?)
;
;...
;
;Section .data
;
g10039000  dd 65 dup (0)
           dd l10003120
           dd l10007380
           dd l1000749C
           dd 000000000h
           dd l10007C10
           dd l10007C57
           dd l10007C9E
           dd 000000000h
           dd l10013B50
           dd l1002C5E0
           dd 65 dup (0)
g10039230  dd 196 dup (0)
g10039540  dd 0704F722Fh
g10039544  dd 04C476E65h
g10039548  dd 0696E692Eh
g1003954C  dd 000000000h
g10039550  dd 02F2E2E2Fh
           dd 061746144h
           dd 06169442Fh
           dd 073676F6Ch
           dd 07361522Fh
           dd 02F726574h
           dd 06E65704Fh
           dd 0002F4C47h
g10039570  dd 07865542Fh
g10039574  dd 0692E7374h
g10039578  db 06Eh
           db 069h
g1003957A  db 000h
           db 000h
g1003957C  dd 065646956h
           dd 06F4D206Fh
           dd 000006564h
g10039588  dd 06C746954h
           dd 000000065h
g10039590  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g1003959C  dd 074786554h
           dd 073657275h
           dd 000000000h
g100395A8  dd 06C746954h
           dd 000000065h
g100395B0  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g100395C0  dd 06F6C6F43h
           dd 000000072h
g100395C8  dd 06C746954h
           dd 000000065h
g100395D0  dd 06F6C6F43h
           dd 061542072h
           dd 000000062h
g100395DC  dd 06E6F6F54h
           dd 000000000h
g100395E4  dd 06C746954h
           dd 000000065h
g100395EC  dd 06E6F6F54h
           dd 062615420h
           dd 000000000h
g100395F8  dd 06F6D7441h
           dd 065687073h
           dd 000006572h
g10039604  dd 06C746954h
           dd 000000065h
g1003960C  dd 06F6D7441h
           dd 065687073h
           dd 054206572h
           dd 000006261h
g1003961C  dd 06373694Dh
           dd 000000000h
g10039624  dd 06C746954h
           dd 000000065h
g1003962C  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039638  dd 06E65704Fh
           dd 049204C47h
           dd 0726F666Eh
           dd 06974616Dh
           dd 000006E6Fh
g1003964C  dd 06C746954h
           dd 000000065h
g10039654  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039660  dd 05F444449h
           dd 0464E4F43h
           dd 04C444749h
           dd 000000047h
g10039670  dd 064616C42h
           dd 0202D2065h
           dd 06E65704Fh
           dd 043204C47h
           dd 069666E6Fh
           dd 061727567h
           dd 06E6F6974h
           dd 000000000h
g10039690  dd 06C746954h
           dd 000000065h
g10039698  dd 06C616944h
           dd 00000676Fh
;
;* Jump:
; 10039639(C) 
;
g100396A0  dd 078206425h
           dd 020642520h
           dd 025207461h
           dd 07A482064h
           dd 000000000h
g100396B4  dd 06E695726h
           dd 065776F64h
           dd 000000064h
g100396C0  dd 0646E6957h
           dd 06465776Fh
           dd 000000000h
g100396CC  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g100396D8  dd 06C754626h
           dd 06353206Ch
           dd 06E656572h
           dd 000000000h
g100396E8  dd 06C6C7546h
           dd 065726353h
           dd 000006E65h
g100396F4  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g10039700  dd 06C6F2643h
           dd 02072756Fh
           dd 074706544h
           dd 000000068h
g10039710  dd 06F6C6F43h
           dd 065447275h
           dd 000687470h
g1003971C  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g10039728  dd 062203631h
           dd 000007070h
g10039730  dd 070623631h
           dd 000000070h
g10039738  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g10039744  dd 062203233h
           dd 000007070h
g1003974C  dd 070623233h
           dd 000000070h
g10039754  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g10039760  dd 073655226h
           dd 074756C6Fh
           dd 0006E6F69h
g1003976C  dd 06F736552h
           dd 06974756Ch
           dd 000006E6Fh
g10039778  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g10039784  dd 073655426h
           dd 000000074h
g1003978C  dd 074736554h
           dd 000000000h
g10039794  dd 065646956h
           dd 06154206Fh
           dd 000000062h
g100397A0  dd 078206425h
           dd 020642520h
           dd 025207461h
           dd 000000064h
g100397B0  dd 04E5F4C47h
           dd 045524145h
           dd 000005453h
g100397BC  dd 04C5F4C47h
           dd 041454E49h
           dd 000000052h
g100397C8  dd 04E5F4C47h
           dd 045524145h
           dd 04D5F5453h
           dd 0414D5049h
           dd 0454E5F50h
           dd 053455241h
           dd 000000054h
g100397E4  dd 04C5F4C47h
           dd 041454E49h
           dd 0494D5F52h
           dd 050414D50h
           dd 041454E5Fh
           dd 054534552h
           dd 000000000h
g10039800  dd 04E5F4C47h
           dd 045524145h
           dd 04D5F5453h
           dd 0414D5049h
           dd 0494C5F50h
           dd 05241454Eh
           dd 000000000h
g1003981C  dd 04C5F4C47h
           dd 041454E49h
           dd 0494D5F52h
           dd 050414D50h
           dd 04E494C5Fh
           dd 000524145h
g10039834  dd 000006625h
g10039838  dd 000006425h
g1003983C  dd 0696E4126h
           dd 072746F73h
           dd 06369706Fh
           dd 000000000h
g1003984C  dd 073696E41h
           dd 06F72746Fh
           dd 000636970h
g10039858  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g10039868  dd 0444F4C26h
           dd 061694220h
           dd 000000073h
g10039874  dd 042444F4Ch
           dd 000736169h
g1003987C  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g1003988C  dd 06C694626h
           dd 020726574h
           dd 065646F4Dh
           dd 000000000h
g1003989C  dd 0746C6946h
           dd 06F4D7265h
           dd 000006564h
g100398A8  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g100398B8  dd 026206F44h
           dd 020746F4Eh
           dd 020657355h
           dd 0706D6F43h
           dd 073736572h
           dd 054206465h
           dd 075747865h
           dd 000736572h
;
;* Jump:
; 100398D6(C) 
;
g100398D8  dd 043746F4Eh
           dd 072706D6Fh
           dd 054737365h
           dd 075747865h
           dd 000736572h
;
;* Jump:
; 100398E9(C) 
;
g100398EC  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g100398FC  dd 04E206F44h
           dd 02620746Fh
           dd 020657355h
           dd 0656C6150h
           dd 073657474h
           dd 000000000h
g10039914  dd 061506F4Eh
           dd 07474656Ch
           dd 000007365h
g10039920  dd 074786554h
           dd 073657275h
           dd 062615420h
           dd 000000000h
g10039930  dd 04C5F4C47h
           dd 041454E49h
           dd 000000052h
g1003993C  dd 000006625h
g10039940  dd 000006425h
g10039944  dd 000006425h
g10039948  dd 000006425h
g1003994C  dd 000006425h
g10039950  dd 000006425h
g10039954  dd 06D614726h
           dd 00000616Dh
g1003995C  dd 06D6D6147h
           dd 000000061h
g10039964  dd 06F6C6F43h
           dd 054207275h
           dd 000006261h
g10039970  dd 069724226h
           dd 06E746867h
           dd 000737365h
;
;* Jump:
; 1003997A(C) 
;
g1003997C  dd 067697242h
           dd 0656E7468h
           dd 000007373h
g10039988  dd 06F6C6F43h
           dd 054207275h
           dd 000006261h
g10039994  dd 06E6F4326h
           dd 073617274h
           dd 000000074h
g100399A0  dd 0746E6F43h
           dd 074736172h
           dd 000000000h
g100399AC  dd 06F6C6F43h
           dd 054207275h
           dd 000006261h
g100399B8  dd 065735526h
           dd 072614820h
           dd 072617764h
           dd 061472065h
           dd 020616D6Dh
           dd 070206669h
           dd 06973736Fh
           dd 000656C62h
g100399D8  dd 048657355h
           dd 06D614757h
           dd 00000616Dh
g100399E4  dd 06F6C6F43h
           dd 054207275h
           dd 000006261h
g100399F0  dd 073655226h
           dd 000007465h
g100399F8  dd 065736552h
           dd 000000074h
;
;* Jump:
; 1003998C(C) 
;
g10039A00  dd 06F6C6F43h
           dd 054207275h
           dd 000006261h
;
;* Jump:
; 10039998(C) 
;
g10039A0C  dd 000006425h
g10039A10  dd 06D726F4Eh
           dd 000006C61h
g10039A18  dd 06E6F6F54h
           dd 061685320h
           dd 000006564h
;
;* Jump:
; 100399B0(C), 100399C1(C) 
;
g10039A24  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 078655420h
           dd 065727574h
           dd 000000073h
g10039A3C  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 06F6F5420h
           dd 06554206Eh
           dd 072757478h
           dd 028207365h
           dd 000295742h
;
;* Jump:
; 100399E8(C) 
;
g10039A5C  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 06F6F5420h
           dd 06554206Eh
           dd 072757478h
           dd 028207365h
           dd 06F6C6F43h
           dd 000002972h
g10039A80  dd 06E694C26h
           dd 069572065h
           dd 000687464h
g10039A8C  dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g10039A98  dd 06E6F6F54h
           dd 062615420h
           dd 000000000h
g10039AA4  dd 061685326h
           dd 04D206564h
           dd 00065646Fh
g10039AB0  dd 064616853h
           dd 0646F4D65h
           dd 000000065h
g10039ABC  dd 06E6F6F54h
           dd 062615420h
           dd 000000000h
;
;* Jump:
; 10039A51(C) 
;
g10039AC8  dd 06F6F5426h
           dd 06F43206Eh
           dd 072756F6Ch
           dd 000000000h
g10039AD8  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000007275h
g10039AE4  dd 06E6F6F54h
           dd 062615420h
           dd 000000000h
g10039AF0  dd 000006425h
g10039AF4  dd 06D726F4Eh
           dd 000006C61h
g10039AFC  dd 000006625h
g10039B00  dd 000006425h
g10039B04  dd 0776F6853h
           dd 06E492620h
           dd 000006F66h
g10039B10  dd 0776F6853h
           dd 06F666E49h
           dd 000000000h
g10039B1C  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039B28  dd 0776F6853h
           dd 0624F2620h
           dd 07463656Ah
           dd 069725420h
           dd 06C676E61h
           dd 000007365h
g10039B40  dd 0776F6853h
           dd 0546A624Fh
           dd 000736972h
;
;* Jump:
; 10039B4A(C) 
;
g10039B4C  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039B58  dd 0776F6853h
           dd 0614D2620h
           dd 0754F2070h
           dd 06E696C74h
           dd 000000065h
g10039B6C  dd 0776F6853h
           dd 04F70614Dh
           dd 0696C7475h
           dd 00000656Eh
g10039B7C  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039B88  dd 0776F6853h
           dd 070614D20h
           dd 072542620h
           dd 0676E6169h
           dd 00073656Ch
;
;* Jump:
; 10039B99(C) 
;
g10039B9C  dd 0776F6853h
           dd 05470614Dh
           dd 000736972h
;
;* Jump:
; 10039BA6(C) 
;
g10039BA8  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039BB4  dd 020657355h
           dd 074786554h
           dd 020657275h
           dd 0746E6F46h
           dd 0726F4620h
           dd 073795320h
           dd 0006D6574h
g10039BD0  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g10039BE0  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039BEC  dd 07161704Fh
           dd 042206575h
           dd 0676B6361h
           dd 06E756F72h
           dd 000000064h
g10039C00  dd 07161704Fh
           dd 061426575h
           dd 072676B63h
           dd 0646E756Fh
           dd 000000000h
g10039C14  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039C20  dd 070617753h
           dd 0746E4920h
           dd 061767265h
           dd 00000006Ch
g10039C30  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g10039C40  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039C4C  dd 06C616353h
           dd 000000065h
g10039C54  dd 06C616353h
           dd 000000065h
g10039C5C  dd 06373694Dh
           dd 062615420h
           dd 000000000h
g10039C68  dd 000006625h
g10039C6C  dd 000006425h
g10039C70  dd 065735526h
           dd 065704F20h
           dd 0204C476Eh
           dd 000676F46h
g10039C80  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g10039C8C  dd 06F6D7441h
           dd 065687073h
           dd 054206572h
           dd 000006261h
g10039C9C  dd 062755326h
           dd 069766964h
           dd 04D206564h
           dd 000007061h
g10039CAC  dd 064627553h
           dd 064697669h
           dd 070614D65h
           dd 000000000h
g10039CBC  dd 06F6D7441h
           dd 065687073h
           dd 054206572h
           dd 000006261h
g10039CCC  dd 0676F4626h
           dd 063614620h
           dd 000726F74h
g10039CD8  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g10039CE4  dd 06F6D7441h
           dd 065687073h
           dd 054206572h
           dd 000006261h
g10039CF4  dd 000006625h
g10039CF8  dd 000006625h
g10039CFC  dd 0646E6556h
           dd 0003A726Fh
g10039D04  dd 0646E6556h
           dd 00000726Fh
g10039D0C  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039D18  dd 0646E6552h
           dd 072657265h
           dd 00000003Ah
g10039D24  dd 0646E6552h
           dd 072657265h
           dd 000000000h
g10039D30  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039D3C  dd 073726556h
           dd 03A6E6F69h
           dd 000000000h
g10039D48  dd 073726556h
           dd 0006E6F69h
g10039D50  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039D5C  dd 065747845h
           dd 06F69736Eh
           dd 06720736Eh
           dd 00000006Ch
g10039D6C  dd 065747845h
           dd 06F69736Eh
           dd 04C47736Eh
           dd 000000000h
g10039D7C  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039D88  dd 065747845h
           dd 06F69736Eh
           dd 07720736Eh
           dd 000006C67h
g10039D98  dd 065747845h
           dd 06F69736Eh
           dd 04757736Eh
           dd 00000004Ch
g10039DA8  dd 06E494C47h
           dd 054206F66h
           dd 000006261h
g10039DB4  dd 06E65704Fh
           dd 069204C47h
           dd 0726F666Eh
           dd 06974616Dh
           dd 06F206E6Fh
           dd 020796C6Eh
           dd 069617661h
           dd 06C62616Ch
           dd 066692065h
           dd 061696420h
           dd 020676F6Ch
           dd 020786F62h
           dd 000000000h
g10039DE8  dd 06C6C6163h
           dd 077206465h
           dd 0656C6968h
           dd 065687420h
           dd 06D616720h
           dd 073692065h
           dd 06E757220h
           dd 0676E696Eh
           dd 00000002Eh
g10039E0C  db 020h
           db 02Ch
g10039E0E  db 000h
           db 000h
g10039E10  dd 0476C6777h
           dd 078457465h
           dd 0736E6574h
           dd 0736E6F69h
           dd 069727453h
           dd 05845676Eh
           dd 000000054h
           dd 114 dup (0)
g10039FF4  dd 06F6D7441h
           dd 065687073h
           dd 000006572h
           dd 000000000h
g1003A004  dd 06F6C6F43h
           dd 000000072h
g1003A00C  dd 06373694Dh
           dd 000000000h
g1003A014  dd 06E6F6F54h
           dd 000000000h
g1003A01C  dd 074786554h
           dd 000657275h
           dd 000000000h
g1003A028  dd 065646956h
           dd 0646F4D6Fh
           dd 000007365h
           dd 000000000h
g1003A038  dd 000003032h
g1003A03C  dd 06D6D6147h
           dd 0726F4361h
           dd 074636572h
           dd 0006E6F69h
g1003A04C  dd 000003532h
g1003A050  dd 067697242h
           dd 0656E7468h
           dd 000007373h
g1003A05C  dd 000003031h
g1003A060  dd 0746E6F43h
           dd 074736172h
           dd 000000000h
g1003A06C  dd 000000031h
g1003A070  dd 048657355h
           dd 06D614757h
           dd 00000616Dh
g1003A07C  dd 06D6D6147h
           dd 0726F4361h
           dd 074636572h
           dd 0006E6F69h
g1003A08C  dd 067697242h
           dd 0656E7468h
           dd 000007373h
g1003A098  dd 0746E6F43h
           dd 074736172h
           dd 000000000h
g1003A0A4  dd 048657355h
           dd 06D614757h
           dd 00000616Dh
g1003A0B0  dd 000000030h
g1003A0B4  dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g1003A0C0  dd 06D726F4Eh
           dd 000006C61h
g1003A0C8  dd 064616853h
           dd 0646F4D65h
           dd 000000065h
g1003A0D4  dd 000000030h
g1003A0D8  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000000072h
g1003A0E4  dd 06E6F6F54h
           dd 064616853h
           dd 000000065h
g1003A0F0  dd 000006425h
g1003A0F4  dd 06E6F6F54h
           dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g1003A104  dd 000006425h
g1003A108  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000000072h
;
;* Jump:
; 1003A09E(C) 
;
g1003A114  dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g1003A120  dd 064616853h
           dd 0646F4D65h
           dd 000000065h
g1003A12C  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000000072h
g1003A138  dd 000000031h
g1003A13C  dd 0646E6957h
           dd 00000776Fh
g1003A144  dd 000303436h
g1003A148  dd 074646957h
           dd 000000068h
g1003A150  dd 000303834h
g1003A154  dd 067696548h
           dd 000007468h
g1003A15C  dd 000003233h
g1003A160  dd 000707042h
;
;* Jump:
; 1003A162(C) 
;
g1003A164  dd 000000030h
g1003A168  dd 067616C46h
           dd 000000073h
g1003A170  dd 000003237h
g1003A174  dd 071657246h
           dd 0636E6575h
           dd 000000079h
g1003A180  dd 0646E6957h
           dd 00000776Fh
g1003A188  dd 074646957h
           dd 000000068h
g1003A190  dd 067696548h
           dd 000007468h
g1003A198  dd 000707042h
g1003A19C  dd 067616C46h
           dd 000000073h
g1003A1A4  dd 071657246h
           dd 0636E6575h
           dd 000000079h
g1003A1B0  dd 000000030h
g1003A1B4  dd 0776F6853h
           dd 06F666E49h
           dd 000000000h
g1003A1C0  dd 000000030h
g1003A1C4  dd 0776F6853h
           dd 0546A624Fh
           dd 000736972h
;
;* Jump:
; 1003A1CE(C) 
;
g1003A1D0  dd 000000030h
g1003A1D4  dd 0776F6853h
           dd 04F70614Dh
           dd 0696C7475h
           dd 00000656Eh
g1003A1E4  dd 000000030h
g1003A1E8  dd 0776F6853h
           dd 05470614Dh
           dd 000736972h
;
;* Jump:
; 1003A1F2(C) 
;
g1003A1F4  dd 000000030h
g1003A1F8  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g1003A208  dd 000000031h
;
;* Jump:
; 1003A1A5(C) 
;
g1003A20C  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g1003A21C  dd 000000030h
g1003A220  dd 06E6F4654h
           dd 061704F74h
           dd 000657571h
g1003A22C  dd 000352E30h
g1003A230  dd 06E6F4654h
           dd 061635374h
           dd 00000656Ch
g1003A23C  dd 000006425h
g1003A240  dd 0776F6853h
           dd 074617453h
           dd 000000073h
g1003A24C  dd 000006425h
g1003A250  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g1003A260  dd 000006425h
g1003A264  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g1003A274  dd 000006625h
g1003A278  dd 06E6F4654h
           dd 061635374h
           dd 00000656Ch
g1003A284  dd 000006425h
g1003A288  dd 06E6F4654h
           dd 061704F74h
           dd 000657571h
g1003A294  dd 0776F6853h
           dd 06F666E49h
           dd 000000000h
g1003A2A0  dd 0776F6853h
           dd 0546A624Fh
           dd 000736972h
;
;* Jump:
; 1003A2AA(C) 
;
g1003A2AC  dd 0776F6853h
           dd 04F70614Dh
           dd 06E6C7475h
           dd 000000065h
g1003A2BC  dd 0776F6853h
           dd 05470614Dh
           dd 000736972h
;
;* Jump:
; 1003A2C6(C) 
;
g1003A2C8  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g1003A2D8  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g1003A2E8  dd 06E6F4654h
           dd 061704F74h
           dd 000657571h
g1003A2F4  dd 06E6F4654h
           dd 061635374h
           dd 00000656Ch
g1003A300  dd 04C5F4C47h
           dd 041454E49h
           dd 000000052h
g1003A30C  dd 0746C6946h
           dd 06F4D7265h
           dd 000006564h
;
;* Jump:
; 1003A2C2(C) 
;
g1003A318  dd 000000030h
g1003A31C  dd 073696E41h
           dd 06F72746Fh
           dd 056636970h
           dd 065756C61h
           dd 000000000h
g1003A330  dd 000000030h
g1003A334  dd 050746F4Eh
           dd 074656C61h
           dd 000736574h
;
;* Jump:
; 1003A2D9(C), 1003A33D(C) 
;
g1003A340  dd 000000030h
g1003A344  dd 043746F4Eh
           dd 072706D6Fh
           dd 065737365h
           dd 078655464h
           dd 065727574h
           dd 000000073h
g1003A35C  dd 000000030h
;
;* Jump:
; 1003A311(C) 
;
g1003A360  dd 042444F4Ch
           dd 000736169h
g1003A368  dd 0746C6946h
           dd 06F4D7265h
           dd 000006564h
g1003A374  dd 000006625h
g1003A378  dd 073696E41h
           dd 06F72746Fh
           dd 04C636970h
           dd 06C657665h
           dd 000000000h
g1003A38C  dd 000006625h
g1003A390  dd 074786554h
           dd 04C657275h
           dd 06942444Fh
           dd 000007361h
g1003A3A0  dd 000006425h
g1003A3A4  dd 055746F4Eh
           dd 061506573h
           dd 07474656Ch
           dd 000007365h
g1003A3B4  dd 000006425h
g1003A3B8  dd 055746F4Eh
           dd 06F436573h
           dd 06572706Dh
           dd 064657373h
           dd 074786554h
           dd 073657275h
           dd 000000000h
g1003A3D4  dd 0746C6946h
           dd 06F4D7265h
           dd 000006564h
g1003A3E0  dd 073696E41h
           dd 06F72746Fh
           dd 056636970h
           dd 065756C61h
           dd 000000000h
g1003A3F4  dd 043746F4Eh
           dd 072706D6Fh
           dd 065737365h
           dd 078655464h
           dd 065727574h
           dd 000000073h
g1003A40C  dd 050746F4Eh
           dd 074656C61h
           dd 000736574h
;
;* Jump:
; 1003A415(C) 
;
g1003A418  dd 042444F4Ch
           dd 000736169h
g1003A420  dd 032302E30h
           dd 000000000h
g1003A428  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g1003A434  dd 000000030h
g1003A438  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g1003A444  dd 000000030h
g1003A448  dd 053676F46h
           dd 069646275h
           dd 065646976h
           dd 000000000h
g1003A458  dd 000006425h
g1003A45C  dd 053676F46h
           dd 069646275h
           dd 065646976h
           dd 000000000h
g1003A46C  dd 000006625h
g1003A470  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g1003A47C  dd 000006425h
g1003A480  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g1003A48C  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g1003A498  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g1003A4A4  dd 053676F46h
           dd 069646275h
           dd 065646976h
           dd 58 dup (0)
g1003A598  dd 000006425h
g1003A59C  dd 000006625h
g1003A5A0  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065473A3Ah
           dd 074694274h
           dd 03270614Dh
           dd 020292834h
           dd 045203E2Dh
           dd 0726F7272h
           dd 0206C6120h
           dd 061657263h
           dd 06D622072h
           dd 00A2E3432h
           dd 000000000h
g1003A5E0  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 044324C47h
           dd 07070632Eh
           dd 000000000h
g1003A604  dd 072727543h
           dd 046746E65h
           dd 000746E6Fh
;
;* Jump:
; 1003A60E(C) 
;
g1003A610  dd 000424752h
g1003A614  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065473A3Ah
           dd 0616D4974h
           dd 029286567h
           dd 0203E2D20h
           dd 06F727245h
           dd 075203A72h
           dd 07075736Eh
           dd 074726F70h
           dd 066206465h
           dd 0616D726Fh
           dd 0000A2E74h
g1003A654  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065473A3Ah
           dd 0616D4974h
           dd 029286567h
           dd 0203E2D20h
           dd 066667562h
           dd 074207265h
           dd 073206F6Fh
           dd 06C6C616Dh
           dd 000000A2Eh
g1003A68C  dd 000424752h
g1003A690  dd 000524742h
g1003A694  dd 06D726F4Eh
           dd 000006C61h
g1003A69C  dd 069737055h
           dd 06F446564h
           dd 000006E77h
g1003A6A8  dd 06974614Eh
           dd 000006576h
g1003A6B0  dd 0746E6543h
           dd 064657265h
           dd 000000000h
;
;* Jump:
; 1003A646(C), 1003A64D(C) 
;
g1003A6BC  dd 065727453h
           dd 000686374h
g1003A6C4  dd 065727453h
           dd 000686374h
g1003A6CC  dd 0746E6543h
           dd 064657265h
           dd 000000000h
g1003A6D8  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065533A3Ah
           dd 063614274h
           dd 06F72676Bh
           dd 049646E75h
           dd 06567616Dh
           dd 02D202928h
           dd 07245203Eh
           dd 03A726F72h
           dd 0736E5520h
           dd 06F707075h
           dd 064657472h
           dd 0646F6D20h
           dd 0000A2E65h
           dd 19 dup (0)
g1003A76C  dd 0FFFFFFFFh
g1003A770  dd 06F727245h
           dd 05F422072h
           dd 06E65704Fh
           dd 061524C47h
           dd 072657473h
           dd 069766544h
           dd 03A3A6563h
           dd 064616F4Ch
           dd 02D202928h
           dd 06E55203Eh
           dd 0776F6E6Bh
           dd 06962206Eh
           dd 070616D74h
           dd 070797420h
           dd 0000A2E65h
g1003A7AC  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 06F4C3A3Ah
           dd 069426461h
           dd 070616D74h
           dd 041385038h
           dd 02D202928h
           dd 06942203Eh
           dd 070616D74h
           dd 070797420h
           dd 06F4E2065h
           dd 06D692074h
           dd 06D656C70h
           dd 065746E65h
           dd 0000A2E64h
g1003A7F4  dd 0466E7553h
           dd 06572616Ch
           dd 000000000h
g1003A800  dd 0776F6C47h
           dd 000000000h
g1003A808  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065473A3Ah
           dd 078655474h
           dd 065727574h
           dd 073746942h
           dd 02D202928h
           dd 07245203Eh
           dd 03A726F72h
           dd 0736E7520h
           dd 06F707075h
           dd 064657472h
           dd 06D756E20h
           dd 020726562h
           dd 06320666Fh
           dd 06F706D6Fh
           dd 0746E656Eh
           dd 0000A2E73h
g1003A85C  dd 06E616843h
           dd 0676E6967h
           dd 06F727020h
           dd 075646563h
           dd 0206C6172h
           dd 0706D6F63h
           dd 065736572h
           dd 065742064h
           dd 072757478h
           dd 064252065h
           dd 000000A2Eh
g1003A888  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065533A3Ah
           dd 078655474h
           dd 065727574h
           dd 073746942h
           dd 02D202928h
           dd 07245203Eh
           dd 03A726F72h
           dd 0736E7520h
           dd 06F707075h
           dd 064657472h
           dd 06D756E20h
           dd 020726562h
           dd 06320666Fh
           dd 06F706D6Fh
           dd 0746E656Eh
           dd 0000A2E73h
g1003A8DC  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 06E553A3Ah
           dd 064616F4Ch
           dd 06D746942h
           dd 029287061h
           dd 0203E2D20h
           dd 06F727245h
           dd 061632072h
           dd 02074B46Eh
           dd 0646E6966h
           dd 078657420h
           dd 065727574h
           dd 000000A2Eh
g1003A920  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065544C47h
           dd 06E614D78h
           dd 072656761h
           dd 07070632Eh
           dd 000000000h
;
;* Jump:
; 1003A8D7(C) 
;
g1003A94C  dd 061727261h
           dd 000000079h
g1003A954  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065544C47h
           dd 06E614D78h
           dd 072656761h
           dd 07070632Eh
           dd 000000000h
;
;* Jump:
; 1003A92F(C) 
;
g1003A980  dd 061727261h
           dd 000000079h
g1003A988  dd 0656D6F44h
           dd 000007055h
g1003A990  dd 0656D6F44h
           dd 06E776F44h
           dd 000000000h
g1003A99C  dd 0656D6F44h
           dd 07466654Ch
           dd 000000000h
g1003A9A8  dd 0656D6F44h
           dd 068676952h
           dd 000000074h
;
;* Jump:
; 1003A963(C) 
;
g1003A9B4  dd 0656D6F44h
           dd 06E6F7246h
           dd 000000074h
g1003A9C0  dd 0656D6F44h
           dd 06B636142h
           dd 31 dup (0)
           dd 03C23D70Ah
           dd 3 dup (0)
g1003AA54  dd 03B03126Fh
           dd 3 dup (0)
g1003AA64  dd 000000000h
           dd 03B03126Fh
           dd 4 dup (0)
           dd 03B03126Fh
           dd 000000000h
           dd 03C23D70Ah
           dd 3 dup (0)
g1003AA94  dd 03BA3D70Ah
           dd 3 dup (0)
g1003AAA4  dd 000000000h
           dd 03BA3D70Ah
           dd 4 dup (0)
           dd 03BA3D70Ah
           dd 8 dup (0)
g1003AAE0  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065533A3Ah
           dd 064695674h
           dd 06F4D6F65h
           dd 029286564h
           dd 046202D20h
           dd 06F6C6C61h
           dd 0206E6520h
           dd 056746547h
           dd 069737265h
           dd 078456E6Fh
           dd 00A202928h
           dd 000000000h
g1003AB24  dd 061747345h
           dd 072657620h
           dd 06EF36973h
           dd 020656420h
           dd 0646E6957h
           dd 02073776Fh
           dd 070206F6Eh
           dd 065646575h
           dd 06D616320h
           dd 072616962h
           dd 020616C20h
           dd 0666F7270h
           dd 069646E75h
           dd 020646164h
           dd 063206564h
           dd 0726F6C6Fh
           dd 000000A2Eh
g1003AB68  dd 074746553h
           dd 020676E69h
           dd 065646976h
           dd 06F6D206Fh
           dd 025206564h
           dd 025203A64h
           dd 064257864h
           dd 00A642578h
           dd 000000000h
g1003AB8C  dd 056746553h
           dd 06F656469h
           dd 065646F4Dh
           dd 02D202928h
           dd 061684320h
           dd 04465676Eh
           dd 06C707369h
           dd 065537961h
           dd 06E697474h
           dd 029287367h
           dd 069616620h
           dd 02E64656Ch
           dd 00000000Ah
g1003ABC0  dd 06F727245h
           dd 06E692072h
           dd 074655320h
           dd 0646E6957h
           dd 06F4C776Fh
           dd 02928676Eh
           dd 000000A2Eh
g1003ABDC  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 065533A3Ah
           dd 06E695774h
           dd 053776F64h
           dd 028657A69h
           dd 03E2D2029h
           dd 072724520h
           dd 06520726Fh
           dd 06553206Eh
           dd 06E695774h
           dd 04C776F64h
           dd 028676E6Fh
           dd 0000A2E29h
           dd 16 dup (0)
g1003AC60  dd 000010028h
           dd 000000025h
           dd 000001800h
           dd 2 dup (0)
           dd 010000000h
           dd 4 dup (0)
g1003AC88  dd 074696E49h
           dd 0696C6169h
           dd 0676E697Ah
           dd 065704F20h
           dd 0204C476Eh
           dd 069766564h
           dd 00A2E6563h
           dd 000000000h
g1003ACA8  dd 0704F722Fh
g1003ACAC  dd 04C476E65h
g1003ACB0  dd 0696E692Eh
g1003ACB4  dd 000000000h
g1003ACB8  dd 06E65704Fh
           dd 049204C47h
           dd 03A6F666Eh
           dd 00000000Ah
g1003ACC8  dd 065562020h
           dd 0726F646Eh
           dd 07325203Ah
           dd 000000A2Eh
g1003ACD8  dd 065522020h
           dd 07265646Eh
           dd 0203A7265h
           dd 00A2E7325h
           dd 000000000h
g1003ACEC  dd 065562020h
           dd 06F697372h
           dd 025203A6Eh
           dd 0000A2E73h
g1003ACFC  dd 0614D2020h
           dd 078655478h
           dd 065727574h
           dd 0657A6953h
           dd 06425203Ah
           dd 000000A2Eh
g1003AD14  dd 074532020h
           dd 069636E65h
           dd 07469426Ch
           dd 025203A73h
           dd 0000A2E64h
g1003AD28  dd 06F432020h
           dd 042726F6Ch
           dd 03A737469h
           dd 020642520h
           dd 025206425h
           dd 0000A2E64h
g1003AD40  dd 065442020h
           dd 042687470h
           dd 03A737469h
           dd 02E642520h
           dd 00000000Ah
g1003AD54  dd 076412020h
           dd 0616C6961h
           dd 020656C62h
           dd 065646976h
           dd 06F6D206Fh
           dd 03A736564h
           dd 02E642520h
           dd 00000000Ah
g1003AD74  dd 06E65704Fh
           dd 069204C47h
           dd 06974696Eh
           dd 07A696C61h
           dd 00A2E6465h
           dd 00000000Ah
g1003AD8C  dd 0704F722Fh
g1003AD90  dd 04C476E65h
g1003AD94  dd 0696E692Eh
g1003AD98  dd 000000000h
g1003AD9C  dd 061697241h
           dd 00000006Ch
g1003ADA4  dd 06F727245h
           dd 06E692072h
           dd 06C677720h
           dd 046657355h
           dd 042746E6Fh
           dd 0616D7469h
           dd 029287370h
           dd 000000A2Eh
g1003ADC4  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 05F423A3Ah
           dd 06E65704Fh
           dd 061524C47h
           dd 072657473h
           dd 069766544h
           dd 029286563h
           dd 0203E2D20h
           dd 0436C6777h
           dd 074616572h
           dd 06E6F4365h
           dd 074786574h
           dd 069616620h
           dd 02E64656Ch
           dd 00000000Ah
g1003AE10  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 05F423A3Ah
           dd 06E65704Fh
           dd 061524C47h
           dd 072657473h
           dd 069766544h
           dd 029286563h
           dd 0203E2D20h
           dd 04D6C6777h
           dd 043656B61h
           dd 065727275h
           dd 06620746Eh
           dd 0656C6961h
           dd 0000A2E64h
g1003AE58  dd 0476C6777h
           dd 078457465h
           dd 0736E6574h
           dd 0736E6F69h
           dd 069727453h
           dd 05845676Eh
           dd 000000054h
g1003AE74  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 06C433A3Ah
           dd 05265736Fh
           dd 065747361h
           dd 00A292872h
           dd 000000000h
g1003AE9C  dd 06F727245h
           dd 000000072h
;
;* Jump:
; 1003AE5C(C) 
;
g1003AEA4  dd 06F6F6843h
           dd 069506573h
           dd 0466C6578h
           dd 0616D726Fh
           dd 061662074h
           dd 064656C69h
           dd 000000000h
g1003AEC0  dd 06F727245h
           dd 000000072h
g1003AEC8  dd 050746553h
           dd 06C657869h
           dd 06D726F46h
           dd 066207461h
           dd 0656C6961h
           dd 000000064h
g1003AEE0  dd 06F727245h
           dd 06E692072h
           dd 061775320h
           dd 066754270h
           dd 073726566h
           dd 0002E2928h
g1003AEF8  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 077533A3Ah
           dd 075427061h
           dd 072656666h
           dd 020292873h
           dd 046203E2Dh
           dd 06F6C6C61h
           dd 0206E6520h
           dd 070617753h
           dd 066667542h
           dd 028737265h
           dd 0000A2E29h
g1003AF38  dd 073697254h
           dd 070616D20h
           dd 025203A61h
           dd 000002E64h
g1003AF48  dd 073697254h
           dd 06A624F20h
           dd 025203A73h
           dd 000002E64h
g1003AF58  dd 074726150h
           dd 0656C6369h
           dd 025203A73h
           dd 000002E64h
g1003AF68  dd 074786554h
           dd 020657275h
           dd 070617753h
           dd 025203A73h
           dd 000002E64h
g1003AF7C  dd 06F727245h
           dd 06E692072h
           dd 061775320h
           dd 066754270h
           dd 073726566h
           dd 0002E2928h
g1003AF94  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 06E453A3Ah
           dd 065635364h
           dd 02D20656Eh
           dd 06146203Eh
           dd 0206F6C6Ch
           dd 053206E65h
           dd 042706177h
           dd 065666675h
           dd 029287372h
           dd 000000A2Eh
g1003AFD0  db 020h
           db 02Ch
g1003AFD2  db 000h
           db 000h
g1003AFD4  db 020h
           db 02Ch
g1003AFD6  db 000h
           db 000h
g1003AFD8  dd 065747845h
           dd 06F69736Eh
           dd 00A3A736Eh
           dd 000000000h
g1003AFE8  dd 073252020h
           dd 00000000Ah
g1003AFF0  dd 07478450Ah
           dd 069736E65h
           dd 020736E6Fh
           dd 03A6C6777h
           dd 00000000Ah
g1003B004  dd 073252020h
           dd 00000000Ah
g1003B00C  dd 00000000Ah
g1003B010  dd 0455F4C47h
           dd 0705F5458h
           dd 074656C61h
           dd 05F646574h
           dd 074786574h
           dd 000657275h
g1003B028  dd 06F436C67h
           dd 054726F6Ch
           dd 0656C6261h
           dd 000545845h
g1003B038  dd 06F436C67h
           dd 053726F6Ch
           dd 061546275h
           dd 045656C62h
           dd 000005458h
g1003B04C  dd 065476C67h
           dd 06C6F4374h
           dd 06154726Fh
           dd 045656C62h
           dd 000005458h
g1003B060  dd 065476C67h
           dd 06C6F4374h
           dd 06154726Fh
           dd 050656C62h
           dd 06D617261h
           dd 072657465h
           dd 000007669h
g1003B07C  dd 065476C67h
           dd 06C6F4374h
           dd 06154726Fh
           dd 050656C62h
           dd 06D617261h
           dd 072657465h
           dd 000007666h
g1003B098  dd 06F462020h
           dd 020646E75h
           dd 0455F4C47h
           dd 0705F5458h
           dd 074656C61h
           dd 05F646574h
           dd 074786574h
           dd 02E657275h
           dd 00000000Ah
g1003B0BC  dd 0415F4C47h
           dd 06D5F4252h
           dd 069746C75h
           dd 074786574h
           dd 000657275h
g1003B0D0  dd 063416C67h
           dd 065766974h
           dd 074786554h
           dd 041657275h
           dd 000004252h
g1003B0E4  dd 0754D6C67h
           dd 05469746Ch
           dd 06F437865h
           dd 03164726Fh
           dd 042524166h
           dd 000000000h
g1003B0FC  dd 0754D6C67h
           dd 05469746Ch
           dd 06F437865h
           dd 03264726Fh
           dd 042524166h
           dd 000000000h
g1003B114  dd 0754D6C67h
           dd 05469746Ch
           dd 06F437865h
           dd 03264726Fh
           dd 052417666h
           dd 000000042h
g1003B12C  dd 06F462020h
           dd 020646E75h
           dd 0415F4C47h
           dd 06D5F4252h
           dd 069746C75h
           dd 074786574h
           dd 02E657275h
           dd 00000000Ah
g1003B14C  dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 0655F6572h
           dd 0635F766Eh
           dd 069626D6Fh
           dd 00000656Eh
g1003B168  dd 06F462020h
           dd 020646E75h
           dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 0655F6572h
           dd 0635F766Eh
           dd 069626D6Fh
           dd 00A2E656Eh
           dd 000000000h
g1003B190  dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 0665F6572h
           dd 065746C69h
           dd 06E615F72h
           dd 0746F7369h
           dd 069706F72h
           dd 000000063h
g1003B1B4  dd 06F462020h
           dd 020646E75h
           dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 0665F6572h
           dd 065746C69h
           dd 06E615F72h
           dd 0746F7369h
           dd 069706F72h
           dd 0000A2E63h
g1003B1E0  dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 06C5F6572h
           dd 0625F646Fh
           dd 000736169h
;
;* Jump:
; 1003B1F6(C) 
;
g1003B1F8  dd 06F462020h
           dd 020646E75h
           dd 0455F4C47h
           dd 0745F5458h
           dd 075747865h
           dd 06C5F6572h
           dd 0625F646Fh
           dd 02E736169h
           dd 00000000Ah
g1003B21C  dd 0455F4C47h
           dd 0665F5458h
           dd 0635F676Fh
           dd 064726F6Fh
           dd 000000000h
g1003B230  dd 06F466C67h
           dd 06F6F4367h
           dd 045666472h
           dd 000005458h
g1003B240  dd 06F466C67h
           dd 06F6F4367h
           dd 076666472h
           dd 000545845h
g1003B250  dd 065476C67h
           dd 06C6F4374h
           dd 06154726Fh
           dd 045656C62h
           dd 000005458h
g1003B264  dd 06F466C67h
           dd 06F6F4367h
           dd 076646472h
           dd 000545845h
g1003B274  dd 06F462020h
           dd 020646E75h
           dd 0455F4C47h
           dd 0665F5458h
           dd 0635F676Fh
           dd 064726F6Fh
           dd 000000A2Eh
g1003B290  dd 04B5F4C47h
           dd 0625F5854h
           dd 065666675h
           dd 065725F72h
           dd 06E6F6967h
           dd 000000000h
g1003B2A8  dd 0654E6C67h
           dd 066754277h
           dd 052726566h
           dd 06F696765h
           dd 00000006Eh
g1003B2BC  dd 065446C67h
           dd 06574656Ch
           dd 066667542h
           dd 065527265h
           dd 06E6F6967h
           dd 000000000h
g1003B2D4  dd 065526C67h
           dd 075426461h
           dd 072656666h
           dd 069676552h
           dd 000006E6Fh
g1003B2E8  dd 072446C67h
           dd 075427761h
           dd 072656666h
           dd 069676552h
           dd 000006E6Fh
g1003B2FC  dd 075426C67h
           dd 072656666h
           dd 069676552h
           dd 06E456E6Fh
           dd 0656C6261h
           dd 000000064h
g1003B314  dd 06F462020h
           dd 020646E75h
           dd 04B5F4C47h
           dd 0625F5854h
           dd 065666675h
           dd 065725F72h
           dd 06E6F6967h
           dd 000000A2Eh
g1003B334  dd 072442020h
           dd 072657669h
           dd 070757320h
           dd 074726F70h
           dd 04C472073h
           dd 058544B5Fh
           dd 06675625Fh
           dd 05F726566h
           dd 069676572h
           dd 069206E6Fh
           dd 06E61206Eh
           dd 066666520h
           dd 065696369h
           dd 06D20746Eh
           dd 0656E6E61h
           dd 0000A2E72h
g1003B374  dd 0415F4C47h
           dd 0745F4252h
           dd 075747865h
           dd 0635F6572h
           dd 072706D6Fh
           dd 069737365h
           dd 000006E6Fh
g1003B390  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 049786554h
           dd 06567616Dh
           dd 052414433h
           dd 000000042h
g1003B3AC  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 049786554h
           dd 06567616Dh
           dd 052414432h
           dd 000000042h
g1003B3C8  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 049786554h
           dd 06567616Dh
           dd 052414431h
           dd 000000042h
g1003B3E4  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 053786554h
           dd 06D496275h
           dd 033656761h
           dd 042524144h
           dd 000000000h
g1003B404  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 053786554h
           dd 06D496275h
           dd 032656761h
           dd 042524144h
           dd 000000000h
g1003B424  dd 06F436C67h
           dd 06572706Dh
           dd 064657373h
           dd 053786554h
           dd 06D496275h
           dd 031656761h
           dd 042524144h
           dd 000000000h
g1003B444  dd 065476C67h
           dd 06D6F4374h
           dd 073657270h
           dd 054646573h
           dd 06D497865h
           dd 041656761h
           dd 000004252h
g1003B460  dd 06F462020h
           dd 020646E75h
           dd 0415F4C47h
           dd 0745F4252h
           dd 075747865h
           dd 0635F6572h
           dd 072706D6Fh
           dd 069737365h
           dd 00A2E6E6Fh
           dd 000000000h
g1003B488  dd 04E5F4C47h
           dd 065725F56h
           dd 074736967h
           dd 0635F7265h
           dd 069626D6Fh
           dd 07372656Eh
           dd 000000000h
g1003B4A4  dd 06F436C67h
           dd 06E69626Dh
           dd 061507265h
           dd 0656D6172h
           dd 066726574h
           dd 000564E76h
g1003B4BC  dd 06F436C67h
           dd 06E69626Dh
           dd 061507265h
           dd 0656D6172h
           dd 069726574h
           dd 000564E76h
g1003B4D4  dd 06F436C67h
           dd 06E69626Dh
           dd 061507265h
           dd 0656D6172h
           dd 066726574h
           dd 00000564Eh
g1003B4EC  dd 06F436C67h
           dd 06E69626Dh
           dd 061507265h
           dd 0656D6172h
           dd 069726574h
           dd 00000564Eh
g1003B504  dd 06F436C67h
           dd 06E69626Dh
           dd 06E497265h
           dd 04E747570h
           dd 000000056h
g1003B518  dd 06F436C67h
           dd 06E69626Dh
           dd 0754F7265h
           dd 074757074h
           dd 00000564Eh
g1003B52C  dd 069466C67h
           dd 0436C616Eh
           dd 069626D6Fh
           dd 04972656Eh
           dd 07475706Eh
           dd 00000564Eh
g1003B544  dd 065476C67h
           dd 06D6F4374h
           dd 0656E6962h
           dd 0706E4972h
           dd 061507475h
           dd 0656D6172h
           dd 066726574h
           dd 000564E76h
g1003B564  dd 065476C67h
           dd 06D6F4374h
           dd 0656E6962h
           dd 0706E4972h
           dd 061507475h
           dd 0656D6172h
           dd 069726574h
           dd 000564E76h
g1003B584  dd 065476C67h
           dd 06D6F4374h
           dd 0656E6962h
           dd 074754F72h
           dd 050747570h
           dd 06D617261h
           dd 072657465h
           dd 0564E7666h
           dd 000000000h
g1003B5A8  dd 065476C67h
           dd 06D6F4374h
           dd 0656E6962h
           dd 074754F72h
           dd 050747570h
           dd 06D617261h
           dd 072657465h
           dd 0564E7669h
           dd 000000000h
g1003B5CC  dd 065476C67h
           dd 06E694674h
           dd 06F436C61h
           dd 06E69626Dh
           dd 06E497265h
           dd 066747570h
           dd 000564E76h
g1003B5E8  dd 065476C67h
           dd 06E694674h
           dd 06F436C61h
           dd 06E69626Dh
           dd 06E497265h
           dd 069747570h
           dd 000564E76h
g1003B604  dd 06F462020h
           dd 020646E75h
           dd 04E5F4C47h
           dd 065725F56h
           dd 074736967h
           dd 0635F7265h
           dd 069626D6Fh
           dd 07372656Eh
           dd 000000A2Eh
g1003B628  dd 0535F4C47h
           dd 05F534947h
           dd 0656E6567h
           dd 065746172h
           dd 070696D5Fh
           dd 00070616Dh
g1003B640  dd 06F462020h
           dd 020646E75h
           dd 053494753h
           dd 06E65675Fh
           dd 074617265h
           dd 0696D5F65h
           dd 070616D70h
           dd 000000A2Eh
g1003B660  dd 05F4C4757h
           dd 05F545845h
           dd 070617773h
           dd 06E6F635Fh
           dd 06C6F7274h
           dd 000000000h
;
;* Jump:
; 1003B608(C) 
;
g1003B678  dd 0536C6777h
           dd 049706177h
           dd 07265746Eh
           dd 0456C6176h
           dd 000005458h
g1003B68C  dd 0476C6777h
           dd 077537465h
           dd 06E497061h
           dd 076726574h
           dd 058456C61h
           dd 000000054h
g1003B6A4  dd 06F462020h
           dd 020646E75h
           dd 05F4C4757h
           dd 05F545845h
           dd 070617773h
           dd 06E6F635Fh
           dd 06C6F7274h
           dd 000000A2Eh
g1003B6C4  dd 00000000Ah
g1003B6C8  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 061523A3Ah
           dd 072657473h
           dd 067617246h
           dd 0746E656Dh
           dd 020292873h
           dd 04E203E2Dh
           dd 06920746Fh
           dd 0656C706Dh
           dd 0746E656Dh
           dd 0002E6465h
g1003B704  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 074413A3Ah
           dd 06D614E6Dh
           dd 020292865h
           dd 048203E2Dh
           dd 06C646E61h
           dd 06F6E2065h
           dd 06CE17620h
           dd 02E6F6469h
           dd 00000000Ah
g1003B73C  dd 0466E7553h
           dd 06572616Ch
           dd 000000000h
;
;* Jump:
; 1003B6D2(C), 1003B6E5(C) 
;
g1003B748  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065704F52h
           dd 0444C476Eh
           dd 063697665h
           dd 04C4C4465h
           dd 07070632Eh
           dd 000000000h
g1003B778  dd 065646F4Dh
           dd 06C666552h
           dd 069746365h
           dd 03D3E6E6Fh
           dd 000000030h
g1003B78C  dd 0746C6946h
           dd 06F4D7265h
           dd 000006564h
g1003B798  dd 04E5F4C47h
           dd 045524145h
           dd 000005453h
g1003B7A4  dd 04C5F4C47h
           dd 041454E49h
           dd 000000052h
g1003B7B0  dd 04E5F4C47h
           dd 045524145h
           dd 04D5F5453h
           dd 0414D5049h
           dd 0454E5F50h
           dd 053455241h
           dd 000000054h
g1003B7CC  dd 04C5F4C47h
           dd 041454E49h
           dd 0494D5F52h
           dd 050414D50h
           dd 041454E5Fh
           dd 054534552h
           dd 000000000h
g1003B7E8  dd 04E5F4C47h
           dd 045524145h
           dd 04D5F5453h
           dd 0414D5049h
           dd 0494C5F50h
           dd 05241454Eh
           dd 000000000h
g1003B804  dd 04C5F4C47h
           dd 041454E49h
           dd 0494D5F52h
           dd 050414D50h
           dd 04E494C5Fh
           dd 000524145h
g1003B81C  dd 073696E41h
           dd 06F72746Fh
           dd 04C636970h
           dd 06C657665h
           dd 000000000h
g1003B830  dd 074786554h
           dd 04C657275h
           dd 06942444Fh
           dd 000007361h
g1003B840  dd 0776F6853h
           dd 074617453h
           dd 000000073h
g1003B84C  dd 06E6F6F54h
           dd 0646E6552h
           dd 000007265h
g1003B858  dd 06E6F6F54h
           dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g1003B868  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000000072h
g1003B874  dd 06E6F6F54h
           dd 074786554h
           dd 073657275h
           dd 000000000h
g1003B884  dd 06E6F6F54h
           dd 064616853h
           dd 000000065h
g1003B890  dd 06D726F4Eh
           dd 000006C61h
;
;* Jump:
; 1003B843(C) 
;
g1003B898  dd 06E6F6F54h
           dd 061685320h
           dd 000006564h
g1003B8A4  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 078655420h
           dd 065727574h
           dd 000000073h
;
;* Jump:
; 1003B847(C) 
;
g1003B8BC  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 06F6F5420h
           dd 06554206Eh
           dd 072757478h
           dd 028207365h
           dd 000295742h
g1003B8DC  dd 06E6F6F54h
           dd 061685320h
           dd 02B206564h
           dd 06F6F5420h
           dd 06554206Eh
           dd 072757478h
           dd 028207365h
           dd 06F6C6F43h
           dd 000002972h
g1003B900  dd 0636E6550h
           dd 053206C69h
           dd 065646168h
           dd 000000000h
g1003B910  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g1003B91C  dd 053676F46h
           dd 069646275h
           dd 065646976h
           dd 000000000h
g1003B92C  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g1003B938  dd 04F657355h
           dd 0694C4C47h
           dd 000746867h
g1003B944  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g1003B954  dd 06E6F4654h
           dd 061635374h
           dd 00000656Ch
g1003B960  dd 06E6F4654h
           dd 061704F74h
           dd 000657571h
g1003B96C  dd 068636143h
           dd 072745365h
           dd 068637465h
           dd 067616D49h
           dd 000007365h
g1003B980  dd 0666E6F43h
           dd 06C446769h
           dd 000000067h
g1003B98C  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g1003B99C  dd 049746547h
           dd 06553494Eh
           dd 06E697474h
           dd 000007367h
g1003B9AC  dd 070736944h
           dd 04579616Ch
           dd 06E657478h
           dd 06E6F6973h
           dd 000000073h
g1003B9C0  dd 055746F4Eh
           dd 061506573h
           dd 07474656Ch
           dd 000007365h
g1003B9D0  dd 055746F4Eh
           dd 06F436573h
           dd 06572706Dh
           dd 064657373h
           dd 074786554h
           dd 073657275h
           dd 000000000h
g1003B9EC  dd 065525742h
           dd 07265646Eh
           dd 000000000h
g1003B9F8  dd 043657355h
           dd 069646572h
           dd 061487374h
           dd 000006B63h
g1003BA08  dd 06D70694Dh
           dd 06F4D7061h
           dd 000006564h
g1003BA14  dd 075746552h
           dd 076206E72h
           dd 065756C61h
           dd 0746F6E20h
           dd 0706D6920h
           dd 0656D656Ch
           dd 06465746Eh
           dd 00000002Eh
g1003BA34  dd 073696E41h
           dd 06F72746Fh
           dd 04C636970h
           dd 06C657665h
           dd 000000000h
g1003BA48  dd 000006625h
g1003BA4C  dd 074786554h
           dd 04C657275h
           dd 06942444Fh
           dd 000007361h
g1003BA5C  dd 000006625h
g1003BA60  dd 0776F6853h
           dd 074617453h
           dd 000000073h
g1003BA6C  dd 000006425h
g1003BA70  dd 046676F46h
           dd 06F746361h
           dd 000000072h
g1003BA7C  dd 000006625h
g1003BA80  dd 06E6F6F54h
           dd 0646E6552h
           dd 000007265h
g1003BA8C  dd 000006425h
g1003BA90  dd 06E6F6F54h
           dd 0656E694Ch
           dd 074646957h
           dd 000000068h
g1003BAA0  dd 000006625h
g1003BAA4  dd 06E6F6F54h
           dd 06F6C6F43h
           dd 000000072h
g1003BAB0  dd 000006425h
g1003BAB4  dd 06E6F6F54h
           dd 074786554h
           dd 073657275h
           dd 000000000h
g1003BAC4  dd 000006425h
g1003BAC8  dd 053676F46h
           dd 069646275h
           dd 065646976h
           dd 000000000h
g1003BAD8  dd 000006425h
g1003BADC  dd 04F657355h
           dd 06F464C47h
           dd 000000067h
g1003BAE8  dd 000006425h
g1003BAEC  dd 04F657355h
           dd 0694C4C47h
           dd 000746867h
g1003BAF8  dd 000006425h
g1003BAFC  dd 054657355h
           dd 075747865h
           dd 06F466572h
           dd 00000746Eh
g1003BB0C  dd 000006425h
g1003BB10  dd 06E6F4654h
           dd 061635374h
           dd 00000656Ch
g1003BB1C  dd 000006625h
g1003BB20  dd 06E6F4654h
           dd 061704F74h
           dd 000657571h
g1003BB2C  dd 000006425h
g1003BB30  dd 068636143h
           dd 072745365h
           dd 068637465h
           dd 067616D49h
           dd 000007365h
g1003BB44  dd 000006425h
g1003BB48  dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 000000000h
g1003BB58  dd 000006425h
g1003BB5C  dd 020746F4Eh
           dd 069617661h
           dd 06C62616Ch
           dd 000000065h
g1003BB6C  dd 055746F4Eh
           dd 061506573h
           dd 07474656Ch
           dd 000007365h
g1003BB7C  dd 000006425h
g1003BB80  dd 055746F4Eh
           dd 06F436573h
           dd 06572706Dh
           dd 064657373h
           dd 074786554h
           dd 073657275h
           dd 000000000h
g1003BB9C  dd 000006425h
g1003BBA0  dd 065525742h
           dd 07265646Eh
           dd 000000000h
g1003BBAC  dd 000006425h
g1003BBB0  dd 043657355h
           dd 069646572h
           dd 061487374h
           dd 000006B63h
g1003BBC0  dd 000006425h
g1003BBC4  dd 0706C6548h
           dd 000000000h
g1003BBCC  dd 06D6D6F43h
           dd 073646E61h
           dd 020200A3Ah
           dd 06D70694Dh
           dd 06F4D7061h
           dd 0200A6564h
           dd 0696E4120h
           dd 072746F73h
           dd 06369706Fh
           dd 06576654Ch
           dd 020200A6Ch
           dd 074786554h
           dd 04C657275h
           dd 06942444Fh
           dd 0200A7361h
           dd 06F685320h
           dd 061745377h
           dd 0200A7374h
           dd 0676F4620h
           dd 074636146h
           dd 0200A726Fh
           dd 06F6F5420h
           dd 06E65526Eh
           dd 00A726564h
           dd 06F542020h
           dd 06F436E6Fh
           dd 00A726F6Ch
           dd 06F542020h
           dd 065546E6Fh
           dd 072757478h
           dd 0200A7365h
           dd 0676F4620h
           dd 064627553h
           dd 064697669h
           dd 020200A65h
           dd 04F657355h
           dd 06F464C47h
           dd 020200A67h
           dd 04F657355h
           dd 0694C4C47h
           dd 00A746867h
           dd 073552020h
           dd 078655465h
           dd 065727574h
           dd 0746E6F46h
           dd 05420200Ah
           dd 0746E6F46h
           dd 06C616353h
           dd 020200A65h
           dd 055746F4Eh
           dd 061506573h
           dd 07474656Ch
           dd 0200A7365h
           dd 0746F4E20h
           dd 043657355h
           dd 072706D6Fh
           dd 065737365h
           dd 078655464h
           dd 065727574h
           dd 020200A73h
           dd 070617753h
           dd 065746E49h
           dd 06C617672h
           dd 04220200Ah
           dd 06E655257h
           dd 00A726564h
           dd 073552020h
           dd 065724365h
           dd 073746964h
           dd 06B636148h
           dd 00000000Ah
g1003BCE8  dd 061726150h
           dd 06574656Dh
           dd 06E752072h
           dd 0776F6E6Bh
           dd 000000A6Eh
g1003BCFC  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 05F423A3Ah
           dd 06E65704Fh
           dd 061524C47h
           dd 072657473h
           dd 069766544h
           dd 029286563h
           dd 0203E2D20h
           dd 04D6C6777h
           dd 043656B61h
           dd 065727275h
           dd 06620746Eh
           dd 0656C6961h
           dd 0000A2E64h
g1003BD44  dd 0475F4D52h
           dd 065527465h
           dd 072756F73h
           dd 000006563h
g1003BD54  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065704F52h
           dd 0444C476Eh
           dd 063697665h
           dd 04C4C4465h
           dd 07070632Eh
           dd 000000000h
g1003BD84  dd 05F4D5245h
           dd 052746547h
           dd 0756F7365h
           dd 000656372h
g1003BD94  dd 0465F4D52h
           dd 052656572h
           dd 0756F7365h
           dd 000656372h
g1003BDA4  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065704F52h
           dd 0444C476Eh
           dd 063697665h
           dd 04C4C4465h
           dd 07070632Eh
           dd 000000000h
;
;* Jump:
; 1003BD5E(C) 
;
g1003BDD4  dd 05F4D5245h
           dd 065657246h
           dd 06F736552h
           dd 065637275h
           dd 000000000h
g1003BDE8  dd 061647055h
           dd 047416574h
           dd 074786554h
           dd 000657275h
g1003BDF8  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 065704F52h
           dd 0444C476Eh
           dd 063697665h
           dd 04C4C4465h
           dd 07070632Eh
           dd 000000000h
g1003BE28  dd 061647055h
           dd 047416574h
           dd 074786554h
           dd 000657275h
           dd 229 dup (0)
g1003C1CC  dd 0704F5F42h
           dd 04C476E65h
           dd 074736152h
           dd 065447265h
           dd 065636976h
           dd 2 dup (0)
g1003C1E8  dd 0435C3A43h
           dd 05C65646Fh
           dd 074736152h
           dd 0725C7265h
           dd 06E65704Fh
           dd 05C334C47h
           dd 069725452h
           dd 076654473h
           dd 044656369h
           dd 0632E4C4Ch
           dd 000007070h
g1003C214  dd 000000030h
           dd 70 dup (0)
g1003C330  dd 000000000h
g1003C334  dd 000000000h
g1003C338  dd 2 dup (0)
g1003C340  dd 2 dup (0)
g1003C348  dd 192 dup (0)
g1003C648  dd 2 dup (0)
g1003C650  dd 000000000h
g1003C654  dd 000000000h
g1003C658  dd 2 dup (0)
g1003C660  dd 44 dup (0)
g1003C710  dd 572 dup (0)
           dd 631 dup (?)
g1003D9DC  dd 8192 dup (?)
g100459DC  dd 8192 dup (?)
g1004D9DC  dd 3279 dup (?)
g10050D18  dd 1 dup (?)
g10050D1C  dd 1 dup (?)
g10050D20  dd 1 dup (?)
g10050D24  dd 1 dup (?)
g10050D28  dd 1 dup (?)
g10050D2C  dd 1 dup (?)
g10050D30  dd 2 dup (?)
g10050D38  dd 1 dup (?)
g10050D3C  dd 6 dup (?)
g10050D54  dd 1 dup (?)
g10050D58  dd 8 dup (?)
g10050D78  dd 1 dup (?)
g10050D7C  dd 1 dup (?)
g10050D80  dd 2 dup (?)
g10050D88  dd 2 dup (?)
g10050D90  dd 1 dup (?)
g10050D94  dd 1 dup (?)
g10050D98  dd 2 dup (?)
g10050DA0  dd 2 dup (?)
g10050DA8  dd 1 dup (?)
g10050DAC  dd 1 dup (?)
g10050DB0  dd 2 dup (?)
g10050DB8  dd 6 dup (?)
g10050DD0  dd 64 dup (?)
g10050ED0  dd 64 dup (?)
g10050FD0  dd 1 dup (?)
g10050FD4  dd 1 dup (?)
g10050FD8  dd 1 dup (?)
g10050FDC  dd 1 dup (?)
g10050FE0  dd 27 dup (?)
g1005104C  dd 1 dup (?)
g10051050  dd 2 dup (?)
g10051058  dd 1 dup (?)
g1005105C  dd 1 dup (?)
g10051060  dd 2 dup (?)
g10051068  dd 2 dup (?)
g10051070  dd 2 dup (?)
g10051078  dd 192 dup (?)
g10051378  dd 1 dup (?)
g1005137C  dd 1 dup (?)
g10051380  dd 1 dup (?)
g10051384  dd 1 dup (?)
g10051388  dd 1 dup (?)
g1005138C  dd 1 dup (?)
g10051390  dd 192 dup (?)
g10051690  dd 1 dup (?)
g10051694  dd 1 dup (?)
g10051698  dd 79 dup (?)
g100517D4  dd 1 dup (?)
g100517D8  dd 1 dup (?)
g100517DC  dd 1 dup (?)
g100517E0  dd 1 dup (?)
g100517E4  dd 1 dup (?)
g100517E8  dd 1 dup (?)
g100517EC  dd 1 dup (?)
g100517F0  dd 1 dup (?)
g100517F4  dd 1 dup (?)
g100517F8  dd 1 dup (?)
g100517FC  dd 1 dup (?)
g10051800  dd 1 dup (?)
g10051804  dd 1 dup (?)
g10051808  dd 1 dup (?)
g1005180C  dd 1 dup (?)
g10051810  dd 1 dup (?)
g10051814  dd 1 dup (?)
g10051818  dd 1 dup (?)
g1005181C  dd 1 dup (?)
g10051820  dd 1 dup (?)
g10051824  dd 1 dup (?)
g10051828  dd 1 dup (?)
g1005182C  dd 1 dup (?)
g10051830  dd 1 dup (?)
g10051834  dd 1 dup (?)
g10051838  dd 1 dup (?)
g1005183C  dd 1 dup (?)
g10051840  dd 1 dup (?)
g10051844  dd 1 dup (?)
g10051848  dd 1 dup (?)
g1005184C  dd 1 dup (?)
g10051850  dd 1 dup (?)
g10051854  dd 1 dup (?)
g10051858  dd 1 dup (?)
g1005185C  dd 1 dup (?)
g10051860  dd 1 dup (?)
g10051864  dd 1 dup (?)
g10051868  dd 1 dup (?)
g1005186C  dd 1 dup (?)
g10051870  dd 1 dup (?)
g10051874  dd 1 dup (?)
g10051878  dd 1 dup (?)
g1005187C  dd 1 dup (?)
g10051880  dd 1 dup (?)
g10051884  dd 9 dup (?)
g100518A8  dd 2 dup (?)
g100518B0  dd 1 dup (?)
g100518B4  dd 1 dup (?)
g100518B8  dd 2 dup (?)
g100518C0  dd 2 dup (?)
g100518C8  dd 1 dup (?)
g100518CC  dd 1 dup (?)
g100518D0  dd 1 dup (?)
g100518D4  dd 1 dup (?)
g100518D8  dd 2 dup (?)
g100518E0  dd 1 dup (?)
g100518E4  dd 1 dup (?)
g100518E8  dd 2 dup (?)
g100518F0  dd 10 dup (?)
g10051918  dd 2 dup (?)
g10051920  dd 79 dup (?)
g10051A5C  dd 3 dup (?)
g10051A68  dd 3 dup (?)
g10051A74  dd 4 dup (?)
g10051A84  dd 351 dup (?)
           dd 00005224Ch
           dd 2 dup (0)
           dd 000052B1Ch
           dd 000052748h
           dd 000052540h
           dd 2 dup (0)
           dd 000052C6Ch
           dd 000052A3Ch
           dd 0000521B8h
           dd 2 dup (0)
           dd 000052D24h
           dd 0000526B4h
           dd 000052328h
           dd 2 dup (0)
           dd 00005329Eh
           dd 000052824h
           dd 000052214h
           dd 2 dup (0)
           dd 0000532DEh
           dd 000052710h
           dd 000052188h
           dd 2 dup (0)
           dd 0000532FAh
           dd 000052684h
           dd 0000520C8h
           dd 2 dup (0)
           dd 0000536A4h
           dd 0000525C4h
           dd 000052510h
           dd 2 dup (0)
           dd 0000536E0h
           dd 000052A0Ch
           dd 000052290h
           dd 2 dup (0)
           dd 0000537A4h
           dd 00005278Ch
           dd 5 dup (0)
           dd 002392694h
           dd 00239244Ch
           dd 0023924B6h
           dd 0023924DEh
           dd 0023924FEh
           dd 00239253Ch
           dd 002392552h
           dd 00239256Eh
           dd 002392582h
           dd 0023925A6h
           dd 00239249Ch
           dd 0023925D6h
           dd 00239230Eh
           dd 00239232Eh
           dd 002392350h
           dd 002392374h
           dd 002392398h
           dd 0023923BCh
           dd 0023923E0h
           dd 0023923F4h
           dd 00239240Ch
           dd 00239242Ch
           dd 002392462h
           dd 002392480h
           dd 0023925F2h
           dd 00239260Ch
           dd 002392624h
           dd 002392648h
           dd 002392666h
           dd 00239267Ah
           dd 0023925BCh
           dd 17 dup (0)
           dd 0023922EEh
           dd 11 dup (0)
           dd 002391CD0h
           dd 002391D08h
           dd 002391CF6h
           dd 002391CE6h
           dd 002391D1Ch
           dd 002391CC2h
           dd 002391CB2h
           dd 002391C94h
           dd 002391C7Eh
           dd 002391CA2h
           dd 13 dup (0)
           dd 0023922D6h
           dd 0023922C2h
           dd 0023922B2h
           dd 11 dup (0)
           dd 002391AE2h
           dd 0023927EAh
           dd 002391B10h
           dd 002391B00h
           dd 002391AC6h
           dd 12 dup (0)
           dd 00239277Eh
           dd 00239272Ch
           dd 00239273Ch
           dd 002392748h
           dd 002392752h
           dd 00239275Ch
           dd 002392764h
           dd 00239276Ch
           dd 002392774h
           dd 002392722h
           dd 00239278Eh
           dd 002392798h
           dd 0023927A0h
           dd 0023927B6h
           dd 0023927C4h
           dd 0023927CEh
           dd 0023927DAh
           dd 002392806h
           dd 0023926FAh
           dd 00239270Eh
           dd 002392718h
           dd 002392704h
           dd 0023926F2h
           dd 15 dup (0)
           dd 002391FB6h
           dd 002391FA2h
           dd 002391FE4h
           dd 002391FF2h
           dd 002392002h
           dd 002391F90h
           dd 002391FC8h
           dd 0023920F0h
           dd 00239203Ah
           dd 00239204Ah
           dd 002392058h
           dd 002392066h
           dd 002392072h
           dd 002392080h
           dd 00239208Ch
           dd 0023920A0h
           dd 0023920B0h
           dd 0023920BCh
           dd 002391F52h
           dd 002391F70h
           dd 002391F80h
           dd 0023920FCh
           dd 00239210Ah
           dd 00239211Ah
           dd 00239212Ch
           dd 00239213Ch
           dd 00239214Ch
           dd 002392158h
           dd 002392168h
           dd 002392178h
           dd 00239218Eh
           dd 00239219Ch
           dd 0023921AEh
           dd 0023921C2h
           dd 0023921D2h
           dd 0023921E6h
           dd 0023921F0h
           dd 002392200h
           dd 00239220Ch
           dd 002392218h
           dd 002392224h
           dd 00239222Eh
           dd 0023920E2h
           dd 00239223Eh
           dd 00239225Eh
           dd 00239226Ch
           dd 002392276h
           dd 002392280h
           dd 00239228Ah
           dd 002392296h
           dd 002391F44h
           dd 002391F36h
           dd 002391F24h
           dd 002391F18h
           dd 002391F0Ch
           dd 002391EFCh
           dd 002391EF0h
           dd 002391EE4h
           dd 002391ED6h
           dd 002391EC6h
           dd 002391EB6h
           dd 002391EA6h
           dd 002391E96h
           dd 002391E88h
           dd 002391E7Ah
           dd 002391E6Ah
           dd 002391E5Ch
           dd 002391E4Eh
           dd 002391E44h
           dd 002391E36h
           dd 002391E2Eh
           dd 002391E1Eh
           dd 002391E10h
           dd 002391E04h
           dd 002391DF6h
           dd 002391DEAh
           dd 002391DDAh
           dd 002391DCCh
           dd 002391DBCh
           dd 002391DB0h
           dd 002391DA2h
           dd 002391D94h
           dd 002391D84h
           dd 002391D78h
           dd 002391D68h
           dd 002391D5Ah
           dd 002391D46h
           dd 002391D34h
           dd 002391F62h
           dd 00239224Eh
           dd 002392014h
           dd 002392028h
           dd 0023920CAh
           dd 29 dup (0)
           dd 0023926B6h
           dd 11 dup (0)
           dd 002391C5Ch
           dd 002391C4Eh
           dd 002391C42h
           dd 002391C32h
           dd 002391C22h
           dd 002391C1Ah
           dd 002391C04h
           dd 002391BEAh
           dd 002391BDAh
           dd 002391BCCh
           dd 002391BB4h
           dd 002391BA6h
           dd 002391B94h
           dd 002391B84h
           dd 002391B76h
           dd 002391B64h
           dd 002391B52h
           dd 002391B42h
           dd 002391B30h
           dd 14 dup (0)
g100525C4  dd 08E360500h; ??0B_Color@@QAE@XZ
g100525C8  dd 046340500h; ?vararg@@YAPBDPBDZZ
g100525CC  dd 0B0340500h; ??6@YAAAVB_MessageManager@@AAV0@PBD@Z
g100525D0  dd 0D8340500h; ?mout@@3VB_MessageManager@@A
g100525D4  dd 0F8340500h; ?BitMap24DataList@B_BitMap24@@0V?$B_Array@VB_BitMap24@@@@A
g100525D8  dd 036350500h; ??_7B_BitMap24@@6B@
g100525DC  dd 04C350500h; ?MakeCons@B_Color@@UAEXXZ
g100525E0  dd 068350500h; ??_7B_Color@@6B@
g100525E4  dd 07C350500h; ??0B_NamedObj@@QAE@ABVB_Name@@@Z
g100525E8  dd 0A0350500h; ??_7B_NamedObj@@6B@
g100525EC  dd 096340500h; ??0B_Name@@QAE@ABV0@@Z
g100525F0  dd 0D0350500h; ?GetGreen@B_Pal@@QBEEI@Z
g100525F4  dd 008330500h; ?Read@B_IDataFile@@QAEXPAXI@Z
g100525F8  dd 028330500h; ?Write@B_ODataFile@@QAEXPBXI@Z
g100525FC  dd 04A330500h; ??5@YAAAVB_IDataFile@@AAV0@AAM@Z
g10052600  dd 06E330500h; ??6@YAAAVB_ODataFile@@AAV0@ABM@Z
g10052604  dd 092330500h; ??5@YAAAVB_IDataFile@@AAV0@AAN@Z
g10052608  dd 0B6330500h; ??6@YAAAVB_ODataFile@@AAV0@ABN@Z
g1005260C  dd 0DA330500h; ??1B_Name@@QAE@XZ
g10052610  dd 0EE330500h; ??0B_Name@@QAE@PBD@Z
g10052614  dd 006340500h; ?GetCurrentLanguage@@YAPBDXZ
g10052618  dd 026340500h; ?GetConfigDirectory@@YAPBDXZ
g1005261C  dd 05C340500h; ??4B_Name@@QAEAAV0@ABV0@@Z
g10052620  dd 07A340500h; ?String@B_Name@@QBEQADXZ
g10052624  dd 0EC350500h; ?GetRed@B_Pal@@QBEEI@Z
g10052628  dd 006360500h; ??8B_Name@@QBEIPBD@Z
g1005262C  dd 01E360500h; ?Id@B_NamedObj@@QBEABVB_Name@@XZ
g10052630  dd 042360500h; ?OutputWin32Error@@YAXPBD@Z
g10052634  dd 060360500h; ??0B_Name@@QAE@XZ
g10052638  dd 074360500h; ??8B_Name@@QBEIABV0@@Z
g1005263C  dd 0B6350500h; ?GetBlue@B_Pal@@QBEEI@Z
g10052640  dd 17 dup (0)
g10052684  dd 0E8320500h; PropertySheetA
g10052688  dd 11 dup (0)
g100526B4  dd 0CA2C0500h; GetDeviceGammaRamp
g100526B8  dd 0022D0500h; ChoosePixelFormat
g100526BC  dd 0F02C0500h; SetPixelFormat
g100526C0  dd 0E02C0500h; DeleteObject
g100526C4  dd 0162D0500h; SwapBuffers
g100526C8  dd 0BC2C0500h; CreateFontA
g100526CC  dd 0AC2C0500h; SelectObject
g100526D0  dd 08E2C0500h; GetObjectA
g100526D4  dd 0782C0500h; SetDeviceGammaRamp
g100526D8  dd 09C2C0500h; GetDeviceCaps
g100526DC  dd 13 dup (0)
g10052710  dd 0D0320500h; gluProject
g10052714  dd 0BC320500h; gluBuild2DMipmaps
g10052718  dd 0AC320500h; gluScaleImage
g1005271C  dd 11 dup (0)
g10052748  dd 0DC2A0500h; WritePrivateProfileStringA
g1005274C  dd 0E4370500h; DisableThreadLibraryCalls
g10052750  dd 00A2B0500h; GetProcAddress
g10052754  dd 0FA2A0500h; GetVersionExA
g10052758  dd 0C02A0500h; GetPrivateProfileStringA
g1005275C  dd 12 dup (0)
g1005278C  dd 078370500h; ??2@YAPAXI@Z
g10052790  dd 026370500h; ??3@YAXPAX@Z
g10052794  dd 036370500h; _purecall
g10052798  dd 042370500h; _CIatan
g1005279C  dd 04C370500h; sscanf
g100527A0  dd 056370500h; atof
g100527A4  dd 05E370500h; atoi
g100527A8  dd 066370500h; free
g100527AC  dd 06E370500h; strtok
g100527B0  dd 01C370500h; _CIcos
g100527B4  dd 088370500h; _assert
g100527B8  dd 092370500h; floor
g100527BC  dd 09A370500h; sprintf
g100527C0  dd 0B0370500h; __dllonexit
g100527C4  dd 0BE370500h; _onexit
g100527C8  dd 0C8370500h; _initterm
g100527CC  dd 0D4370500h; _adjust_fdiv
g100527D0  dd 000380500h; _strdup
g100527D4  dd 0F4360500h; _CIexp
g100527D8  dd 008370500h; malloc
g100527DC  dd 012370500h; _CIsin
g100527E0  dd 0FE360500h; _CIsqrt
g100527E4  dd 0EC360500h; _ftol
g100527E8  dd 15 dup (0)
g10052824  dd 0B02F0500h; glTexParameterf
g10052828  dd 09C2F0500h; glPixelTransferf
g1005282C  dd 0DE2F0500h; glIsTexture
g10052830  dd 0EC2F0500h; glGetTexImage
g10052834  dd 0FC2F0500h; glTexSubImage2D
g10052838  dd 08A2F0500h; glTexParameteri
g1005283C  dd 0C22F0500h; glGetTexLevelParameteriv
g10052840  dd 0EA300500h; glEndList
g10052844  dd 034300500h; glPolygonMode
g10052848  dd 044300500h; glDepthMask
g1005284C  dd 052300500h; glLineWidth
g10052850  dd 060300500h; glColor3d
g10052854  dd 06C300500h; glTexGenfv
g10052858  dd 07A300500h; glTexGeni
g1005285C  dd 086300500h; glPolygonStipple
g10052860  dd 09A300500h; glTexCoord1f
g10052864  dd 0AA300500h; glColor4f
g10052868  dd 0B6300500h; glVertex3dv
g1005286C  dd 04C2F0500h; glTexCoord4d
g10052870  dd 06A2F0500h; glTexCoord2fv
g10052874  dd 07A2F0500h; glTexImage2D
g10052878  dd 0F6300500h; glViewport
g1005287C  dd 004310500h; glTranslatef
g10052880  dd 014310500h; glLoadIdentity
g10052884  dd 026310500h; glPushMatrix
g10052888  dd 036310500h; glMatrixMode
g1005288C  dd 046310500h; glNewList
g10052890  dd 052310500h; glTexImage1D
g10052894  dd 062310500h; glGetIntegerv
g10052898  dd 072310500h; wglUseFontBitmapsA
g1005289C  dd 088310500h; glVertex2i
g100528A0  dd 096310500h; wglMakeCurrent
g100528A4  dd 0A8310500h; wglCreateContext
g100528A8  dd 0BC310500h; glDeleteLists
g100528AC  dd 0CC310500h; wglDeleteContext
g100528B0  dd 0E0310500h; glOrtho
g100528B4  dd 0EA310500h; glGetDoublev
g100528B8  dd 0FA310500h; glScissor
g100528BC  dd 006320500h; glScaled
g100528C0  dd 012320500h; glFrustum
g100528C4  dd 01E320500h; glClear
g100528C8  dd 028320500h; glClearColor
g100528CC  dd 0DC300500h; glPopMatrix
g100528D0  dd 038320500h; glMaterialfv
g100528D4  dd 058320500h; glVertex3f
g100528D8  dd 066320500h; glFogi
g100528DC  dd 070320500h; glFogfv
g100528E0  dd 07A320500h; glFogf
g100528E4  dd 084320500h; glColor4d
g100528E8  dd 090320500h; glCallList
g100528EC  dd 03E2F0500h; glVertex3fv
g100528F0  dd 0302F0500h; glNormal3dv
g100528F4  dd 01E2F0500h; glLightModelfv
g100528F8  dd 0122F0500h; glLightfv
g100528FC  dd 0062F0500h; glLightf
g10052900  dd 0F62E0500h; glDrawBuffer
g10052904  dd 0EA2E0500h; glBitmap
g10052908  dd 0DE2E0500h; glColor3f
g1005290C  dd 0D02E0500h; glPixelZoom
g10052910  dd 0C02E0500h; glDrawPixels
g10052914  dd 0B02E0500h; glReadBuffer
g10052918  dd 0A02E0500h; glPixelStorei
g1005291C  dd 0902E0500h; glTexCoord2d
g10052920  dd 0822E0500h; glVertex2f
g10052924  dd 0742E0500h; glColor4ubv
g10052928  dd 0642E0500h; glTexCoord2f
g1005292C  dd 0562E0500h; glColor4fv
g10052930  dd 0482E0500h; glColor3fv
g10052934  dd 03E2E0500h; glBegin
g10052938  dd 0302E0500h; glVertex2d
g1005293C  dd 0282E0500h; glEnd
g10052940  dd 0182E0500h; glReadPixels
g10052944  dd 00A2E0500h; glColor3ub
g10052948  dd 0FE2D0500h; glTexEnvi
g1005294C  dd 0F02D0500h; glBlendFunc
g10052950  dd 0E42D0500h; glEnable
g10052954  dd 0D42D0500h; glBindTexture
g10052958  dd 0C62D0500h; glDepthFunc
g1005295C  dd 0B62D0500h; glTranslated
g10052960  dd 0AA2D0500h; glScalef
g10052964  dd 09C2D0500h; glListBase
g10052968  dd 08E2D0500h; glCallLists
g1005296C  dd 07E2D0500h; glRasterPos2i
g10052970  dd 0722D0500h; glDisable
g10052974  dd 0622D0500h; glShadeModel
g10052978  dd 0542D0500h; glGetString
g1005297C  dd 0402D0500h; wglGetProcAddress
g10052980  dd 02E2D0500h; wglGetCurrentDC
g10052984  dd 05C2F0500h; glVertex3d
g10052988  dd 048320500h; glLightModeli
g1005298C  dd 00E300500h; glDeleteTextures
g10052990  dd 022300500h; glPolygonOffset
g10052994  dd 0C4300500h; wglGetCurrentContext
g10052998  dd 29 dup (0)
g10052A0C  dd 0B0360500h; ?B_3D_raster_device@@3PAVB_3DRasterDevice@@A
g10052A10  dd 11 dup (0)
g10052A3C  dd 0562C0500h; SetForegroundWindow
g10052A40  dd 0482C0500h; MessageBoxA
g10052A44  dd 03C2C0500h; ReleaseDC
g10052A48  dd 02C2C0500h; GetClientRect
g10052A4C  dd 01C2C0500h; GetWindowRect
g10052A50  dd 0142C0500h; GetDC
g10052A54  dd 0FE2B0500h; AdjustWindowRectEx
g10052A58  dd 0E42B0500h; ChangeDisplaySettingsA
g10052A5C  dd 0D42B0500h; SetWindowPos
g10052A60  dd 0C62B0500h; ShowWindow
g10052A64  dd 0AE2B0500h; EnumDisplaySettingsA
g10052A68  dd 0A02B0500h; LoadImageA
g10052A6C  dd 08E2B0500h; GetWindowTextA
g10052A70  dd 07E2B0500h; EnableWindow
g10052A74  dd 0702B0500h; GetDlgItem
g10052A78  dd 05E2B0500h; SetWindowLongA
g10052A7C  dd 04C2B0500h; SetWindowTextA
g10052A80  dd 03C2B0500h; SendMessageA
g10052A84  dd 02A2B0500h; GetWindowLongA
g10052A88  dd 14 dup (0)
           dd 06547013Ah
           dd 069725074h
           dd 065746176h
           dd 0666F7250h
           dd 053656C69h
           dd 06E697274h
           dd 000004167h
           dd 0725702E5h
           dd 050657469h
           dd 061766972h
           dd 072506574h
           dd 06C69666Fh
           dd 072745365h
           dd 041676E69h
           dd 001750000h
           dd 056746547h
           dd 069737265h
           dd 078456E6Fh
           dd 0013E0041h
           dd 050746547h
           dd 041636F72h
           dd 065726464h
           dd 000007373h
           dd 04E52454Bh
           dd 032334C45h
           dd 06C6C642Eh
           dd 001560000h
           dd 057746547h
           dd 06F646E69h
           dd 06E6F4C77h
           dd 000004167h
           dd 065530214h
           dd 0654D646Eh
           dd 067617373h
           dd 000004165h
           dd 06553025Eh
           dd 06E695774h
           dd 054776F64h
           dd 041747865h
           dd 002580000h
           dd 057746553h
           dd 06F646E69h
           dd 06E6F4C77h
           dd 000004167h
           dd 065470102h
           dd 0676C4474h
           dd 06D657449h
           dd 000B70000h
           dd 062616E45h
           dd 06957656Ch
           dd 0776F646Eh
           dd 0015E0000h
           dd 057746547h
           dd 06F646E69h
           dd 078655477h
           dd 000004174h
           dd 06F4C01A0h
           dd 06D496461h
           dd 041656761h
           dd 000C50000h
           dd 06D756E45h
           dd 070736944h
           dd 05379616Ch
           dd 069747465h
           dd 04173676Eh
           dd 0026A0000h
           dd 0776F6853h
           dd 0646E6957h
           dd 00000776Fh
           dd 06553025Bh
           dd 06E695774h
           dd 050776F64h
           dd 00000736Fh
           dd 06843001Bh
           dd 065676E61h
           dd 070736944h
           dd 05379616Ch
           dd 069747465h
           dd 04173676Eh
           dd 000020000h
           dd 0756A6441h
           dd 069577473h
           dd 0776F646Eh
           dd 074636552h
           dd 000007845h
           dd 0654700FDh
           dd 000434474h
           dd 06547015Ch
           dd 06E695774h
           dd 052776F64h
           dd 000746365h
           dd 0654700F0h
           dd 0696C4374h
           dd 052746E65h
           dd 000746365h
           dd 065520203h
           dd 07361656Ch
           dd 000434465h
           dd 0654D01BEh
           dd 067617373h
           dd 0786F4265h
           dd 002300041h
           dd 046746553h
           dd 06765726Fh
           dd 06E756F72h
           dd 06E695764h
           dd 000776F64h
           dd 052455355h
           dd 0642E3233h
           dd 000006C6Ch
           dd 0655301D8h
           dd 076654474h
           dd 047656369h
           dd 0616D6D61h
           dd 0706D6152h
           dd 0014F0000h
           dd 04F746547h
           dd 063656A62h
           dd 000004174h
           dd 065470125h
           dd 076654474h
           dd 043656369h
           dd 000737061h
           dd 0655301C7h
           dd 07463656Ch
           dd 0656A624Fh
           dd 000007463h
           dd 072430036h
           dd 065746165h
           dd 0746E6F46h
           dd 001260041h
           dd 044746547h
           dd 063697665h
           dd 06D614765h
           dd 06152616Dh
           dd 00000706Dh
           dd 065440053h
           dd 06574656Ch
           dd 0656A624Fh
           dd 000007463h
           dd 0655301E9h
           dd 078695074h
           dd 06F466C65h
           dd 074616D72h
           dd 000170000h
           dd 06F6F6843h
           dd 069506573h
           dd 0466C6578h
           dd 0616D726Fh
           dd 002040074h
           dd 070617753h
           dd 066667542h
           dd 000737265h
           dd 033494447h
           dd 06C642E32h
           dd 00160006Ch
           dd 0476C6777h
           dd 075437465h
           dd 06E657272h
           dd 000434474h
           dd 067770164h
           dd 07465476Ch
           dd 0636F7250h
           dd 072646441h
           dd 000737365h
           dd 06C67007Dh
           dd 053746547h
           dd 06E697274h
           dd 001050067h
           dd 068536C67h
           dd 04D656461h
           dd 06C65646Fh
           dd 000470000h
           dd 069446C67h
           dd 06C626173h
           dd 000E00065h
           dd 061526C67h
           dd 072657473h
           dd 032736F50h
           dd 000100069h
           dd 061436C67h
           dd 0694C6C6Ch
           dd 000737473h
           dd 06C6700A4h
           dd 07473694Ch
           dd 065736142h
           dd 001020000h
           dd 063536C67h
           dd 066656C61h
           dd 0013C0000h
           dd 072546C67h
           dd 06C736E61h
           dd 064657461h
           dd 000440000h
           dd 065446C67h
           dd 046687470h
           dd 000636E75h
           dd 06C67000Ch
           dd 0646E6942h
           dd 074786554h
           dd 000657275h
           dd 06C670050h
           dd 062616E45h
           dd 00000656Ch
           dd 06C67000Eh
           dd 06E656C42h
           dd 06E754664h
           dd 0012C0063h
           dd 065546C67h
           dd 0766E4578h
           dd 000220069h
           dd 06F436C67h
           dd 033726F6Ch
           dd 000006275h
           dd 06C6700F5h
           dd 064616552h
           dd 065786950h
           dd 00000736Ch
           dd 06C670052h
           dd 000646E45h
           dd 06C67013Eh
           dd 074726556h
           dd 064327865h
           dd 0000B0000h
           dd 065426C67h
           dd 0006E6967h
           dd 06C67001Dh
           dd 06F6C6F43h
           dd 076663372h
           dd 0002D0000h
           dd 06F436C67h
           dd 034726F6Ch
           dd 000007666h
           dd 06C670113h
           dd 043786554h
           dd 064726F6Fh
           dd 000006632h
           dd 06C670033h
           dd 06F6C6F43h
           dd 062753472h
           dd 001400076h
           dd 065566C67h
           dd 078657472h
           dd 000006632h
           dd 06C670111h
           dd 043786554h
           dd 064726F6Fh
           dd 000006432h
           dd 06C6700CBh
           dd 065786950h
           dd 06F74536Ch
           dd 000696572h
           dd 06C6700F4h
           dd 064616552h
           dd 066667542h
           dd 000007265h
           dd 06C67004Ch
           dd 077617244h
           dd 065786950h
           dd 00000736Ch
           dd 06C6700CEh
           dd 065786950h
           dd 06F6F5A6Ch
           dd 0001C006Dh
           dd 06F436C67h
           dd 033726F6Ch
           dd 0000D0066h
           dd 069426C67h
           dd 070616D74h
           dd 0004A0000h
           dd 072446C67h
           dd 075427761h
           dd 072656666h
           dd 0009E0000h
           dd 0694C6C67h
           dd 066746867h
           dd 0009F0000h
           dd 0694C6C67h
           dd 066746867h
           dd 0009B0076h
           dd 0694C6C67h
           dd 04D746867h
           dd 06C65646Fh
           dd 000007666h
           dd 06C6700BDh
           dd 06D726F4Eh
           dd 064336C61h
           dd 001490076h
           dd 065566C67h
           dd 078657472h
           dd 000766633h
           dd 06C670121h
           dd 043786554h
           dd 064726F6Fh
           dd 000006434h
           dd 06C670146h
           dd 074726556h
           dd 064337865h
           dd 001140000h
           dd 065546C67h
           dd 06F6F4378h
           dd 066326472h
           dd 001350076h
           dd 065546C67h
           dd 0616D4978h
           dd 044326567h
           dd 001380000h
           dd 065546C67h
           dd 072615078h
           dd 074656D61h
           dd 000697265h
           dd 06C6700CCh
           dd 065786950h
           dd 06172546Ch
           dd 06566736Eh
           dd 000006672h
           dd 06C670136h
           dd 050786554h
           dd 06D617261h
           dd 072657465h
           dd 000850066h
           dd 065476C67h
           dd 078655474h
           dd 06576654Ch
           dd 07261506Ch
           dd 074656D61h
           dd 076697265h
           dd 000990000h
           dd 073496C67h
           dd 074786554h
           dd 000657275h
           dd 06C670083h
           dd 054746547h
           dd 06D497865h
           dd 000656761h
           dd 06C67013Bh
           dd 053786554h
           dd 06D496275h
           dd 032656761h
           dd 000430044h
           dd 065446C67h
           dd 06574656Ch
           dd 074786554h
           dd 073657275h
           dd 000D10000h
           dd 06F506C67h
           dd 06F67796Ch
           dd 066664F6Eh
           dd 000746573h
           dd 06C6700D0h
           dd 0796C6F50h
           dd 04D6E6F67h
           dd 00065646Fh
           dd 06C670045h
           dd 074706544h
           dd 073614D68h
           dd 000A3006Bh
           dd 0694C6C67h
           dd 06957656Eh
           dd 000687464h
           dd 06C67001Ah
           dd 06F6C6F43h
           dd 000643372h
           dd 06C670131h
           dd 047786554h
           dd 076666E65h
           dd 001320000h
           dd 065546C67h
           dd 06E654778h
           dd 000D20069h
           dd 06F506C67h
           dd 06F67796Ch
           dd 06974536Eh
           dd 0656C7070h
           dd 0010B0000h
           dd 065546C67h
           dd 06F6F4378h
           dd 066316472h
           dd 0002C0000h
           dd 06F436C67h
           dd 034726F6Ch
           dd 001470066h
           dd 065566C67h
           dd 078657472h
           dd 000766433h
           dd 06777015Fh
           dd 07465476Ch
           dd 072727543h
           dd 043746E65h
           dd 065746E6Fh
           dd 000007478h
           dd 06C6700D5h
           dd 04D706F50h
           dd 069727461h
           dd 000530078h
           dd 06E456C67h
           dd 073694C64h
           dd 001570074h
           dd 069566C67h
           dd 06F707765h
           dd 000007472h
           dd 06C67013Dh
           dd 06E617254h
           dd 074616C73h
           dd 000006665h
           dd 06C6700A5h
           dd 064616F4Ch
           dd 06E656449h
           dd 079746974h
           dd 000DA0000h
           dd 075506C67h
           dd 0614D6873h
           dd 078697274h
           dd 000B60000h
           dd 0614D6C67h
           dd 078697274h
           dd 065646F4Dh
           dd 000B90000h
           dd 0654E6C67h
           dd 073694C77h
           dd 001340074h
           dd 065546C67h
           dd 0616D4978h
           dd 044316567h
           dd 000700000h
           dd 065476C67h
           dd 0746E4974h
           dd 072656765h
           dd 0016D0076h
           dd 0556C6777h
           dd 06F466573h
           dd 06942746Eh
           dd 070616D74h
           dd 000004173h
           dd 06C670142h
           dd 074726556h
           dd 069327865h
           dd 001650000h
           dd 04D6C6777h
           dd 043656B61h
           dd 065727275h
           dd 00000746Eh
           dd 06777015Ah
           dd 06572436Ch
           dd 043657461h
           dd 065746E6Fh
           dd 000007478h
           dd 06C670042h
           dd 0656C6544h
           dd 0694C6574h
           dd 000737473h
           dd 06777015Ch
           dd 06C65446Ch
           dd 043657465h
           dd 065746E6Fh
           dd 000007478h
           dd 06C6700C5h
           dd 06874724Fh
           dd 0006D006Fh
           dd 065476C67h
           dd 0756F4474h
           dd 076656C62h
           dd 001030000h
           dd 063536C67h
           dd 06F737369h
           dd 001010072h
           dd 063536C67h
           dd 064656C61h
           dd 000680000h
           dd 072466C67h
           dd 075747375h
           dd 00011006Dh
           dd 06C436C67h
           dd 000726165h
           dd 06C670013h
           dd 061656C43h
           dd 06C6F4372h
           dd 00000726Fh
           dd 06C6700B3h
           dd 06574614Dh
           dd 06C616972h
           dd 000007666h
           dd 06C67009Ch
           dd 06867694Ch
           dd 0646F4D74h
           dd 000696C65h
           dd 06C670148h
           dd 074726556h
           dd 066337865h
           dd 000650000h
           dd 06F466C67h
           dd 000006967h
           dd 06C670064h
           dd 066676F46h
           dd 000630076h
           dd 06F466C67h
           dd 000006667h
           dd 06C67002Ah
           dd 06F6C6F43h
           dd 000643472h
           dd 06C67000Fh
           dd 06C6C6143h
           dd 07473694Ch
           dd 0504F0000h
           dd 04C474E45h
           dd 0642E3233h
           dd 000006C6Ch
           dd 06C670029h
           dd 061635375h
           dd 06D49656Ch
           dd 000656761h
           dd 06C670005h
           dd 069754275h
           dd 04432646Ch
           dd 06D70694Dh
           dd 000737061h
           dd 06C670022h
           dd 06F725075h
           dd 07463656Ah
           dd 04C470000h
           dd 02E323355h
           dd 0006C6C64h
           dd 072500049h
           dd 07265706Fh
           dd 068537974h
           dd 041746565h
           dd 04F430000h
           dd 04C54434Dh
           dd 0642E3233h
           dd 000006C6Ch
           dd 0523F00F4h
           dd 040646165h
           dd 044495F42h
           dd 046617461h
           dd 040656C69h
           dd 045415140h
           dd 058415058h
           dd 0005A4049h
           dd 0573F011Bh
           dd 065746972h
           dd 04F5F4240h
           dd 061746144h
           dd 0656C6946h
           dd 041514040h
           dd 042505845h
           dd 05A404958h
           dd 000570000h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404D41h
           dd 000690000h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404D42h
           dd 000580000h
           dd 040353F3Fh
           dd 041414159h
           dd 0495F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404E41h
           dd 0006A0000h
           dd 040363F3Fh
           dd 041414159h
           dd 04F5F4256h
           dd 061746144h
           dd 0656C6946h
           dd 041414040h
           dd 041403056h
           dd 05A404E42h
           dd 000350000h
           dd 042313F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 058404541h
           dd 0001A005Ah
           dd 042303F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 050404541h
           dd 05A404442h
           dd 000BA0000h
           dd 07465473Fh
           dd 072727543h
           dd 04C746E65h
           dd 075676E61h
           dd 040656761h
           dd 050415940h
           dd 05A584442h
           dd 000B90000h
           dd 07465473Fh
           dd 0666E6F43h
           dd 069446769h
           dd 074636572h
           dd 04079726Fh
           dd 050415940h
           dd 05A584442h
           dd 001210000h
           dd 07261763Fh
           dd 040677261h
           dd 050415940h
           dd 042504442h
           dd 0005A5A44h
           dd 03F3F0046h
           dd 04E5F4234h
           dd 040656D61h
           dd 045415140h
           dd 030564141h
           dd 056424140h
           dd 05A404030h
           dd 001180000h
           dd 07274533Fh
           dd 040676E69h
           dd 0614E5F42h
           dd 04040656Dh
           dd 051454251h
           dd 05A584441h
           dd 000180000h
           dd 042303F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 041404541h
           dd 040305642h
           dd 000005A40h
           dd 03F3F0060h
           dd 041594036h
           dd 042564141h
           dd 073654D5Fh
           dd 065676173h
           dd 0616E614Dh
           dd 040726567h
           dd 056414140h
           dd 042504030h
           dd 0005A4044h
           dd 06D3F011Dh
           dd 04074756Fh
           dd 042563340h
           dd 073654D5Fh
           dd 065676173h
           dd 0616E614Dh
           dd 040726567h
           dd 000004140h
           dd 0423F009Bh
           dd 0614D7469h
           dd 044343270h
           dd 04C617461h
           dd 040747369h
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 0243F5630h
           dd 072415F42h
           dd 040796172h
           dd 0425F4256h
           dd 0614D7469h
           dd 040343270h
           dd 041404040h
           dd 000860000h
           dd 0375F3F3Fh
           dd 069425F42h
           dd 070614D74h
           dd 040403432h
           dd 000404236h
           dd 04D3F00E3h
           dd 043656B61h
           dd 040736E6Fh
           dd 06F435F42h
           dd 040726F6Ch
           dd 045415540h
           dd 0005A5858h
           dd 03F3F0089h
           dd 05F42375Fh
           dd 06F6C6F43h
           dd 036404072h
           dd 000004042h
           dd 03F3F001Dh
           dd 04E5F4230h
           dd 064656D61h
           dd 0406A624Fh
           dd 045415140h
           dd 056424140h
           dd 0614E5F42h
           dd 04040656Dh
           dd 000005A40h
           dd 03F3F008Dh
           dd 05F42375Fh
           dd 0656D614Eh
           dd 06A624F64h
           dd 042364040h
           dd 000B80040h
           dd 07465473Fh
           dd 065756C42h
           dd 0505F4240h
           dd 040406C61h
           dd 045454251h
           dd 0005A4049h
           dd 0473F00C0h
           dd 072477465h
           dd 0406E6565h
           dd 061505F42h
           dd 05140406Ch
           dd 049454542h
           dd 000005A40h
           dd 0473F00C7h
           dd 065527465h
           dd 05F424064h
           dd 0406C6150h
           dd 045425140h
           dd 05A404945h
           dd 000760000h
           dd 042383F3Fh
           dd 06D614E5Fh
           dd 051404065h
           dd 050494542h
           dd 05A404442h
           dd 000D40000h
           dd 04064493Fh
           dd 0614E5F42h
           dd 04F64656Dh
           dd 040406A62h
           dd 041454251h
           dd 05F425642h
           dd 0656D614Eh
           dd 05A584040h
           dd 000F20000h
           dd 074754F3Fh
           dd 057747570h
           dd 032336E69h
           dd 06F727245h
           dd 059404072h
           dd 042505841h
           dd 0005A4044h
           dd 03F3F001Bh
           dd 04E5F4230h
           dd 040656D61h
           dd 045415140h
           dd 0005A5840h
           dd 03F3F0075h
           dd 04E5F4238h
           dd 040656D61h
           dd 045425140h
           dd 056424149h
           dd 05A404030h
           dd 0000B0000h
           dd 042303F3Fh
           dd 06C6F435Fh
           dd 04040726Fh
           dd 040454151h
           dd 000005A58h
           dd 0694C4242h
           dd 0642E6362h
           dd 000006C6Ch
           dd 0423F0000h
           dd 05F44335Fh
           dd 074736172h
           dd 0645F7265h
           dd 063697665h
           dd 033404065h
           dd 042564150h
           dd 05244335Fh
           dd 065747361h
           dd 076654472h
           dd 040656369h
           dd 000004140h
           dd 074736152h
           dd 0642E7265h
           dd 000006C6Ch
           dd 0665F00F1h
           dd 0006C6F74h
           dd 0435F0037h
           dd 070786549h
           dd 0003E0000h
           dd 07349435Fh
           dd 000747271h
           dd 0616D0291h
           dd 0636F6C6Ch
           dd 0003C0000h
           dd 07349435Fh
           dd 000006E69h
           dd 0435F0035h
           dd 0736F6349h
           dd 000100000h
           dd 040333F3Fh
           dd 050584159h
           dd 05A405841h
           dd 001920000h
           dd 07275705Fh
           dd 06C616365h
           dd 00033006Ch
           dd 06149435Fh
           dd 0006E6174h
           dd 0737302B5h
           dd 0666E6163h
           dd 0023C0000h
           dd 0666F7461h
           dd 0023D0000h
           dd 0696F7461h
           dd 0025E0000h
           dd 065657266h
           dd 002C70000h
           dd 074727473h
           dd 000006B6Fh
           dd 03F3F000Fh
           dd 041594032h
           dd 049584150h
           dd 000005A40h
           dd 0615F00A0h
           dd 072657373h
           dd 002550074h
           dd 06F6F6C66h
           dd 002B20072h
           dd 069727073h
           dd 00066746Eh
           dd 04356534Dh
           dd 0642E5452h
           dd 000006C6Ch
           dd 05F5F0055h
           dd 06F6C6C64h
           dd 06978656Eh
           dd 001860074h
           dd 0656E6F5Fh
           dd 000746978h
           dd 0695F010Fh
           dd 07474696Eh
           dd 0006D7265h
           dd 0615F009Dh
           dd 073756A64h
           dd 064665F74h
           dd 000007669h
           dd 06944005Dh
           dd 06C626173h
           dd 072685465h
           dd 04C646165h
           dd 061726269h
           dd 061437972h
           dd 000736C6Ch
           dd 0735F01BFh
           dd 075647274h
           dd 000000070h
           dd 148 dup (0)
           db 000h
           db 000h
           db 000h
           dd 360 dup (?)
           db 1 dup (?)
; Unresolved addresses:
